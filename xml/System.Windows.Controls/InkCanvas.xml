<Type Name="InkCanvas" FullName="System.Windows.Controls.InkCanvas">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42ba86c1dbd2eab3ddd951fe615e1e7a4f36eb6e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30620631" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi InkCanvas extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkCanvas" />
  <TypeSignature Language="VB.NET" Value="Public Class InkCanvas&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class InkCanvas : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4b9a6-101">定义接收和显示墨迹笔划的区域。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b9a6-101">Defines an area that receives and displays ink strokes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-102"><xref:System.Windows.Controls.InkCanvas>是可以用于接收和显示墨迹输入元素。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-102">An <xref:System.Windows.Controls.InkCanvas> is an element that can be used to receive and display ink input.</span></span> <span data-ttu-id="4b9a6-103">这通常可以通过触笔与数字化仪产生墨迹笔画使用触笔或鼠标交互使用。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-103">This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse.</span></span> <span data-ttu-id="4b9a6-104">创建的笔画表示为<xref:System.Windows.Ink.Stroke>对象，并可以以编程方式操作或根据用户输入。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-104">The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input.</span></span> <span data-ttu-id="4b9a6-105"><xref:System.Windows.Controls.InkCanvas>使用户能够修改或删除现有<xref:System.Windows.Ink.Stroke>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-105">The <xref:System.Windows.Controls.InkCanvas> enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="4b9a6-106"><xref:System.Windows.Controls.InkCanvas>可以绑定到数据源。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-106">The <xref:System.Windows.Controls.InkCanvas> can be bound to a data source.</span></span> <span data-ttu-id="4b9a6-107">例如，你可以将绑定<xref:System.Windows.Controls.InkCanvas.Strokes%2A>属性： base 64 编码字符串，该字符串包含的墨迹中墨迹序列化的数据格式 (ISF); 或者甚至到<xref:System.Windows.Controls.InkCanvas.Strokes%2A>另一个属性<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-107">For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-108">此外可以绑定属性，如<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>和<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，到其他数据源。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-108">You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-109">下面的示例演示如何模拟的钢笔和对同一个突出显示使用<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-109">The following example demonstrates how to simulate the use of both a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-110">该示例假定标记语言 (XAML) 文件中的根元素是<xref:System.Windows.Controls.DockPanel>调用`root`。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-110">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="4b9a6-111">它还假定没有<xref:System.Windows.Controls.Button>调用`switchHighlighter`，同时<xref:System.Windows.Controls.Primitives.ButtonBase.Click>和<xref:System.Windows.FrameworkElement.Loaded>事件连接到示例的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-111">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that both the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded> events are connected to the example's event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="4b9a6-112">下面的示例声明了两个<xref:System.Windows.Controls.InkCanvas>XAML 中的对象，并建立它们和其他数据源之间的数据绑定。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-112">The following example declares two <xref:System.Windows.Controls.InkCanvas> objects in XAML and establishes data binding between them and other data sources.</span></span> <span data-ttu-id="4b9a6-113">第一个<xref:System.Windows.Controls.InkCanvas>、 调用`ic`，绑定到两个数据源。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-113">The first <xref:System.Windows.Controls.InkCanvas>, called `ic`, is bound to two data sources.</span></span> <span data-ttu-id="4b9a6-114"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A>和<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>属性`ic`绑定到<xref:System.Windows.Controls.ListBox>，反过来，绑定到在 XAML 中定义的数组的对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-114">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> and <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties on `ic` are bound to <xref:System.Windows.Controls.ListBox> objects, which are, in turn, bound to arrays defined in the XAML.</span></span> <span data-ttu-id="4b9a6-115"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A>， <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>，和<xref:System.Windows.Controls.InkCanvas.Strokes%2A>第二个属性<xref:System.Windows.Controls.InkCanvas>绑定到第一个<xref:System.Windows.Controls.InkCanvas>下面的代码中。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-115">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, and <xref:System.Windows.Controls.InkCanvas.Strokes%2A> properties of the second <xref:System.Windows.Controls.InkCanvas> are bound to the first <xref:System.Windows.Controls.InkCanvas> in the following code.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window1.xaml#1)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InkCanvas();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-116">初始化 InkCanvas 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-116">Initializes a new instance of the InkCanvas class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode ActiveEditingMode { System::Windows::Controls::InkCanvasEditingMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-117">获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-117">Gets the current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-118">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-118">The current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-119"><xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>属性指示当前<xref:System.Windows.Controls.InkCanvasEditingMode>的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-119">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="4b9a6-120">假设<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>和<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-120">Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  <span data-ttu-id="4b9a6-121">中的倒的位置，使用触笔时<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>的值为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-121">When the tablet pen is used in an inverted position, <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> has a value of <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="4b9a6-122">否则，其值是<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-122">Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span>  
  
<a name="dependencyPropertyInfo_ActiveEditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4b9a6-123">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-123">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-124">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-124">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|  
|<span data-ttu-id="4b9a6-125">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4b9a6-125">Metadata properties set to `true`</span></span>|<span data-ttu-id="4b9a6-126">无</span><span class="sxs-lookup"><span data-stu-id="4b9a6-126">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-127">以下示例将报告的值<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>每当发生更改。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-127">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler ActiveEditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveEditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ ActiveEditingModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-128">在当前编辑模式改变时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-128">Occurs when the current editing mode changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-129"><xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>属性更改每当<xref:System.Windows.Controls.InkCanvas>进入新的编辑模式。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-129">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode.</span></span> <span data-ttu-id="4b9a6-130">例如，假设<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>和<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-130">For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="4b9a6-131">当用户更改触笔的笔尖<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged>事件发生。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-131">When the user changes the tip of tablet pen, the <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> event occurs.</span></span>  
  
<a name="routedEventInfo_ActiveEditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="4b9a6-132">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-133">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-133">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|  
|<span data-ttu-id="4b9a6-134">路由策略</span><span class="sxs-lookup"><span data-stu-id="4b9a6-134">Routing strategy</span></span>|<span data-ttu-id="4b9a6-135">冒泡</span><span class="sxs-lookup"><span data-stu-id="4b9a6-135">Bubbling</span></span>|  
|<span data-ttu-id="4b9a6-136">委托</span><span class="sxs-lookup"><span data-stu-id="4b9a6-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-137">以下示例将报告的值<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>每当发生更改。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-137">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ActiveEditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ActiveEditingModeChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-138">标识 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-138">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActiveEditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActiveEditingModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-139">标识 <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-139">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <span data-ttu-id="4b9a6-140">父级中应使用此元素排列自身及其子元素的最终区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-140">The final area within the parent that this element should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-141">定位子元素，并确定 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-141">Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-142">使用的实际大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-142">The actual size used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-143">获取或设置一个 <see cref="T:System.Windows.Media.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-143">Gets or sets a <see cref="T:System.Windows.Media.Brush" />.</span>
          </span>
          <span data-ttu-id="4b9a6-144">画笔用于填充 <see cref="T:System.Windows.Controls.InkCanvas" /> 周围的边框区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-144">The brush is used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-145">一个用于填充 <see cref="T:System.Windows.Media.Brush" /> 周围的边框区域的 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-145">A <see cref="T:System.Windows.Media.Brush" /> used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4b9a6-146">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-146">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-147">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-147">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|  
|<span data-ttu-id="4b9a6-148">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4b9a6-148">Metadata properties set to `true`</span></span>|<span data-ttu-id="4b9a6-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="4b9a6-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-150">下面的示例演示如何设置<xref:System.Windows.Controls.InkCanvas.Background%2A>属性<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-150">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.Background%2A> property on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#37](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#37)]
 [!code-vb[InkCanvasSamples#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-151">标识 <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-151">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Background" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="ILAsm" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Bottom" />
      <MemberSignature Language="VB.NET" Value="see GetBottom, and SetBottom" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BottomProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BottomProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BottomProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BottomProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-152">标识 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-152">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-153">指示剪贴板的内容是否可以粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-153">Indicates whether the contents of the Clipboard can be pasted into the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-154">如果可以粘贴剪贴板的内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-154">
              <see langword="true" /> if the contents of the Clipboard can be pasted in; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-155"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-155">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-156">下面的示例将一个元素复制到剪贴板，并将其粘贴到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-156">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-157">此示例假定名为的元素`rect1`，且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件已连接到在示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-157">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b9a6-158">粘贴到剪贴板的内容的权限<see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-158">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="4b9a6-159">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-159">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UIElementCollection ^ Children { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-160">检索 <see cref="T:System.Windows.Controls.InkCanvas" /> 的子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-160">Retrieves child elements of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-161">位于 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的一个子元素集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-161">A collection of child elements located on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Children"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="4b9a6-162">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="4b9a6-162">XAML Property Element Usage</span></span>  
  
```  
<object>  
  OneOrMoreUIElements  
</object>  
```  
  
<a name="xamlValues_Children"></a>   
## <a name="xaml-values"></a><span data-ttu-id="4b9a6-163">XAML 值</span><span class="sxs-lookup"><span data-stu-id="4b9a6-163">XAML Values</span></span>  
 <span data-ttu-id="4b9a6-164">*OneOrMoreUIElements*</span><span class="sxs-lookup"><span data-stu-id="4b9a6-164">*OneOrMoreUIElements*</span></span>  
 <span data-ttu-id="4b9a6-165">一个或多个<xref:System.Windows.UIElement>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-165">One or more <xref:System.Windows.UIElement> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-166">下面的示例添加<xref:System.Windows.Controls.TextBlock>到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-166">The following example adds a <xref:System.Windows.Controls.TextBlock> to an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[InkCanvasSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySelection">
      <MemberSignature Language="C#" Value="public void CopySelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CopySelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-167">将选定笔画和/或元素复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-167">Copies selected strokes and/or elements to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-168"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-168">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="4b9a6-169">到剪贴板的描边都[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-169">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-170">下面的示例选择两个元素上<xref:System.Windows.Controls.InkCanvas>并将它们复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-170">The following example selects two elements on an <xref:System.Windows.Controls.InkCanvas> and copies them to the Clipboard.</span></span> <span data-ttu-id="4b9a6-171">此示例假定有<xref:System.Windows.Controls.TextBox>调用`textbox1`和<xref:System.Windows.Controls.Button>调用`button1 -`并且 thatboth 的控件的子元素<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-171">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1 -` and thatboth controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkCanvasSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="CutSelection">
      <MemberSignature Language="C#" Value="public void CutSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CutSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CutSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CutSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CutSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-172">删除选定笔画和元素，并将它们复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-172">Deletes the selected strokes and elements, and copies them to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-173"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-173">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="4b9a6-174">到剪贴板的描边都[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-174">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-175">下面的示例选择并将两个元素上的剪切<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-175">The following example selects and cuts two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-176">此示例假定有<xref:System.Windows.Controls.TextBox>调用`textbox1`和<xref:System.Windows.Controls.Button>调用`button1`-这两个控件是子元素和<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-176">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[InkCanvasSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultDrawingAttributes As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::DrawingAttributes ^ DefaultDrawingAttributes { System::Windows::Ink::DrawingAttributes ^ get(); void set(System::Windows::Ink::DrawingAttributes ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-177">获取或设置应用于在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上绘制的新墨迹笔画的绘制特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-177">Gets or sets the drawing attributes that are applied to new ink strokes made on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-178">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的默认绘制特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-178">The default drawing attributes for the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-179">设置此属性会影响仅新的绘制笔画之后设置此属性进行。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-179">Setting this property will affect only new strokes that are made after this property is set.</span></span> <span data-ttu-id="4b9a6-180">将新的绘制特性应用于已创建<xref:System.Windows.Ink.Stroke>对象，访问它们使用单独<xref:System.Windows.Controls.InkCanvas.Strokes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-180">To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultDrawingAttributes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4b9a6-181">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-182">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-182">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|  
|<span data-ttu-id="4b9a6-183">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4b9a6-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="4b9a6-184">无</span><span class="sxs-lookup"><span data-stu-id="4b9a6-184">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-185">下面的示例演示如何使用两个<xref:System.Windows.Ink.DrawingAttributes>对象以模拟使用钢笔和突出显示在相同的体验<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-185">The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate the experience of using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-186">该示例假定标记语言 (XAML) 文件中的根元素是<xref:System.Windows.Controls.DockPanel>调用`root`。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-186">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="4b9a6-187">它还假定没有<xref:System.Windows.Controls.Button>调用`switchHilighter`且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-187">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHilighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="4b9a6-188">下面的示例演示如何将绑定<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>到数据源的属性。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-188">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to a data source.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#3)]  
 [!code-xaml[InkCanvasBindingSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#4)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.Strokes" />
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultDrawingAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultDrawingAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultDrawingAttributesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-189">标识 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-189">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event DefaultDrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::DrawingAttributesReplacedEventHandler ^ DefaultDrawingAttributesReplaced;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-190">在替换 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 属性时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-190">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-191">下面的示例将检查的值<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>属性的新<xref:System.Windows.Ink.DrawingAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-191">The following example checks the value of the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property of the new <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  
  
 [!code-csharp[DrawingAttributes#17](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#17)]
 [!code-vb[DrawingAttributes#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStylusPointDescription">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription DefaultStylusPointDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultStylusPointDescription As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ DefaultStylusPointDescription { System::Windows::Input::StylusPointDescription ^ get(); void set(System::Windows::Input::StylusPointDescription ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-192">获取或设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-192">Gets or sets the stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-193">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-193">The stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-194">默认情况下，<xref:System.Windows.Controls.InkCanvas>仅存储<xref:System.Windows.Input.StylusPointProperties.X>， <xref:System.Windows.Input.StylusPointProperties.Y>，和<xref:System.Windows.Input.StylusPointProperties.NormalPressure>每个属性<xref:System.Windows.Input.StylusPoint>属于笔画。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-194">By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke.</span></span> <span data-ttu-id="4b9a6-195">你可以使用 DefaultStylusPointDescription 属性来存储有关构成上的其他信息<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-195">You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-196">设置此属性会影响仅新的绘制笔画设置该属性后进行。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-196">Setting this property will affect only new strokes that are made after the property is set.</span></span>  
  
<a name="xamlTextUsage_DefaultStylusPointDescription"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="4b9a6-197">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="4b9a6-197">XAML Text Usage</span></span>  
 <span data-ttu-id="4b9a6-198">不能使用此属性在[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-198">You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-199">下面的示例设置<xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A>以便上描边的触笔点<xref:System.Windows.Controls.InkCanvas>包含<xref:System.Windows.Input.StylusPointProperties.X>， <xref:System.Windows.Input.StylusPointProperties.Y>， <xref:System.Windows.Input.StylusPointProperties.NormalPressure>，和<xref:System.Windows.Input.StylusPointProperties.TipButton>属性。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-199">The following example sets the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> so that the stylus points of the strokes on the <xref:System.Windows.Controls.InkCanvas> contain the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, and <xref:System.Windows.Input.StylusPointProperties.TipButton> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b9a6-200">添加到描边<xref:System.Windows.Controls.InkCanvas>后<xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A>被设置为包含其他属性。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-200">Only the strokes that are added to the <xref:System.Windows.Controls.InkCanvas> after the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> is set to contain the additional property.</span></span>  
  
 [!code-csharp[InkCanvasSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[InkCanvasSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPointProperties" />
        <altmember cref="T:System.Windows.Input.StylusPointProperty" />
        <altmember cref="T:System.Windows.Input.StylusPointPropertyInfo" />
      </Docs>
    </Member>
    <Member MemberName="DynamicRenderer">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberSignature Language="VB.NET" Value="Protected Property DynamicRenderer As DynamicRenderer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::DynamicRenderer ^ DynamicRenderer { System::Windows::Input::StylusPlugIns::DynamicRenderer ^ get(); void set(System::Windows::Input::StylusPlugIns::DynamicRenderer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.DynamicRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-201">获取或设置在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-201">Gets or sets the renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-202">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-202">The renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-203">你可以设置<xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>向自定义属性<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>如果你想要自定义墨迹。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-203">You can set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b9a6-204"><xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>为属于<xref:System.Windows.UIElement.StylusPlugIns%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-204">The <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection.</span></span> <span data-ttu-id="4b9a6-205">当你将设置<xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>、<xref:System.Windows.Controls.InkCanvas>中删除旧<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>从<xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>和添加新<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-205">When you set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection.</span></span> <span data-ttu-id="4b9a6-206">这可能会更改的行为<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-206">This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingMode { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-207">获取或设置活动指针设备使用的用户编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-207">Gets or sets the user editing mode used by an active pointing device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-208">当指针设备（如触笔或鼠标）处于活动状态时使用的编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-208">The editing mode used when a pointing device (such as a tablet pen or mouse) is active.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-209">默认的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 为 <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-209">The default <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span> <span data-ttu-id="4b9a6-210">更改<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>清除任何现有的所选内容。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-210">Changing the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> clears any existing selections.</span></span>  
  
 <span data-ttu-id="4b9a6-211"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A>指定指点设备的模式，因为它与交互<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-211">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-212"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 某些数字化仪当"橡皮擦端"的触笔与数字化仪联系时使用。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-212"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the "eraser end" of the stylus contacts the digitizer.</span></span>  
  
<a name="dependencyPropertyInfo_EditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4b9a6-213">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-213">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-214">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-214">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|  
|<span data-ttu-id="4b9a6-215">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4b9a6-215">Metadata properties set to `true`</span></span>|<span data-ttu-id="4b9a6-216">无</span><span class="sxs-lookup"><span data-stu-id="4b9a6-216">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-217">下面的示例创建使用各种类型的编辑模式上的应用程序<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-217">The following example creates an application that uses the various types of editing modes on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[ICEditingModeSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ICEditingModeSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[ICEditingModeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ICEditingModeSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      </Docs>
    </Member>
    <Member MemberName="EditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-218">在 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 对象的 <see cref="T:System.Windows.Controls.InkCanvas" /> 属性更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-218">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-219">此事件发生后编辑模式已更改;更改会反映在<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-219">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="4b9a6-220">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-220">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-221">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-221">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|  
|<span data-ttu-id="4b9a6-222">路由策略</span><span class="sxs-lookup"><span data-stu-id="4b9a6-222">Routing strategy</span></span>|<span data-ttu-id="4b9a6-223">冒泡</span><span class="sxs-lookup"><span data-stu-id="4b9a6-223">Bubbling</span></span>|  
|<span data-ttu-id="4b9a6-224">委托</span><span class="sxs-lookup"><span data-stu-id="4b9a6-224">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-225">下面的示例检查是否<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>或<xref:System.Windows.Controls.InkCanvasEditingMode.Select>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-225">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> or <xref:System.Windows.Controls.InkCanvasEditingMode.Select>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[InkCanvasSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-226">标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-226">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInverted">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingModeInverted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingModeInverted As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingModeInverted { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-227">如果触笔在与 <see cref="T:System.Windows.Controls.InkCanvas" /> 交互时发生反转，则获取或设置用户编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-227">Gets or sets the user editing mode if the stylus is inverted when it interacts with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-228">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的反转编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-228">The inverted editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-229">此属性控制反转触笔时执行的操作。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-229">This property controls the actions that are performed when the stylus is inverted.</span></span>  
  
 <span data-ttu-id="4b9a6-230">同样，<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性控制当触笔位于数字化仪，针对标准的提示下位置执行的操作</span><span class="sxs-lookup"><span data-stu-id="4b9a6-230">Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,</span></span>  
  
<a name="dependencyPropertyInfo_EditingModeInverted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4b9a6-231">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-231">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-232">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-232">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|  
|<span data-ttu-id="4b9a6-233">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4b9a6-233">Metadata properties set to `true`</span></span>|<span data-ttu-id="4b9a6-234">无</span><span class="sxs-lookup"><span data-stu-id="4b9a6-234">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-235">下面的示例演示如何允许用户擦除描边反转触笔的笔尖与部分。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-235">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="4b9a6-236">椭圆光标将出现在<xref:System.Windows.Controls.InkCanvas>用户时清除墨迹。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-236">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeInvertedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeInvertedChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeInvertedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-237">在 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 对象的 <see cref="T:System.Windows.Controls.InkCanvas" /> 属性更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-237">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-238">更改在反转编辑模式后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-238">This event occurs after the inverted editing mode has been changed.</span></span> <span data-ttu-id="4b9a6-239">这些更改会反映在<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-239">These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeInvertedChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="4b9a6-240">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-240">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-241">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-241">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|  
|<span data-ttu-id="4b9a6-242">路由策略</span><span class="sxs-lookup"><span data-stu-id="4b9a6-242">Routing strategy</span></span>|<span data-ttu-id="4b9a6-243">冒泡</span><span class="sxs-lookup"><span data-stu-id="4b9a6-243">Bubbling</span></span>|  
|<span data-ttu-id="4b9a6-244">委托</span><span class="sxs-lookup"><span data-stu-id="4b9a6-244">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-245">下面的示例检查是否<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>或<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-245">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[InkCanvasSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeInvertedChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeInvertedChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-246">标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-246">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeInvertedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeInvertedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-247">标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-247">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-248">标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-248">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EraserShape">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusShape EraserShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StylusShape EraserShape" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberSignature Language="VB.NET" Value="Public Property EraserShape As StylusShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusShape ^ EraserShape { System::Windows::Ink::StylusShape ^ get(); void set(System::Windows::Ink::StylusShape ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-249">获取或设置用来按点擦除 <see cref="T:System.Windows.Ink.StylusShape" /> 中墨迹的 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-249">Gets or sets the <see cref="T:System.Windows.Ink.StylusShape" /> used to point-erase ink from an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-250">与 <see cref="T:System.Windows.Controls.InkCanvas" /> 关联的橡皮擦形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-250">The eraser shape associated with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-251">此形状将用于擦除从墨迹<xref:System.Windows.Controls.InkCanvas>时当前<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-251">This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
 <span data-ttu-id="4b9a6-252">各个属性<xref:System.Windows.Ink.StylusShape>一旦创建形状不能修改。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-252">Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created.</span></span>  
  
 <span data-ttu-id="4b9a6-253">如果你更改<xref:System.Windows.Controls.InkCanvas.EraserShape%2A>上, 呈现的光标<xref:System.Windows.Controls.InkCanvas>将不更新，直至下一个<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>更改。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-253">If you change the <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change.</span></span>  
  
<a name="xamlTextUsage_EraserShape"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="4b9a6-254">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="4b9a6-254">XAML Text Usage</span></span>  
 <span data-ttu-id="4b9a6-255">在不常使用此属性[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-255">This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-256">下面的示例演示如何允许用户擦除描边反转触笔的笔尖与部分。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-256">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="4b9a6-257">椭圆光标将出现在<xref:System.Windows.Controls.InkCanvas>用户时清除墨迹。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-257">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StylusShape" />
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasGestureEventHandler Gesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Gesture As InkCanvasGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasGestureEventHandler ^ Gesture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-258">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 检测到笔势时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-258">Occurs when the <see cref="T:System.Windows.Controls.InkCanvas" /> detects a gesture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Gesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="4b9a6-259">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-259">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-260">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-260">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|  
|<span data-ttu-id="4b9a6-261">路由策略</span><span class="sxs-lookup"><span data-stu-id="4b9a6-261">Routing strategy</span></span>|<span data-ttu-id="4b9a6-262">冒泡</span><span class="sxs-lookup"><span data-stu-id="4b9a6-262">Bubbling</span></span>|  
|<span data-ttu-id="4b9a6-263">委托</span><span class="sxs-lookup"><span data-stu-id="4b9a6-263">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-264">下面的示例演示如何设置<xref:System.Windows.Controls.InkCanvas>来识别应用程序操作。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-264">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-265">标识 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-265">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBottom">
      <MemberSignature Language="C#" Value="public static double GetBottom (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetBottom(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBottom (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetBottom(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-266">要获取其下边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-266">The element of which to get the bottom property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-267">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-267">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-268">依赖项对象的下边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-268">The bottom coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-269">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-269">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#34](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#34)]
 [!code-vb[InkCanvasSamples#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetEnabledGestures" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledGestures () As ReadOnlyCollection(Of ApplicationGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::ApplicationGesture&gt; ^ GetEnabledGestures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-270">返回一个由 <see cref="T:System.Windows.Controls.InkCanvas" /> 识别的应用程序笔势集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-270">Returns a collection of application gestures that are recognized by <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-271">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 识别的笔势集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-271">A collection of gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> recognizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-272">下面的示例演示如何获取从启用的应用程序手势<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-272">The following example demonstrates how to get the enabled application gestures from the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#24)]
 [!code-vb[InkCanvasSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b9a6-273">
            <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-273">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeft">
      <MemberSignature Language="C#" Value="public static double GetLeft (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLeft(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLeft (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLeft(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-274">要获取其左边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-274">The element of which to get the left property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-275">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-275">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-276">依赖项对象的左边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-276">The left coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-277">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-277">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#31](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#31)]
 [!code-vb[InkCanvasSamples#31](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRight">
      <MemberSignature Language="C#" Value="public static double GetRight (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetRight(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRight (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetRight(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-278">要获取其右边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-278">The element of which to get the right property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-279">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-279">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-280">依赖项对象的右边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-280">The right coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-281">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-281">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#32](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#32)]
 [!code-vb[InkCanvasSamples#32](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedElements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt; GetSelectedElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.UIElement&gt; GetSelectedElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedElements () As ReadOnlyCollection(Of UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::UIElement ^&gt; ^ GetSelectedElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-282">检索在 <see cref="T:System.Windows.FrameworkElement" /> 中选定的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-282">Retrieves the <see cref="T:System.Windows.FrameworkElement" /> objects that are selected in the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-283">
            <see cref="T:System.Windows.FrameworkElement" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-283">Array of <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-284">此方法仅返回<xref:System.Windows.FrameworkElement>对象，而不<xref:System.Windows.Ink.Stroke>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-284">This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.</span></span>  
  
 <span data-ttu-id="4b9a6-285">若要检索选定<xref:System.Windows.Ink.Stroke>对象，可调用<xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-285">To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.</span></span>  
  
 <span data-ttu-id="4b9a6-286">如果<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>的<xref:System.Windows.Controls.InkCanvas>设置为<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，用户可以选择<xref:System.Windows.Ink.Stroke>对象和<xref:System.Windows.FrameworkElement>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-286">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="4b9a6-287">或者，选择两种类型的对象可以是使用代码： 只需调用<xref:System.Windows.Controls.InkCanvas.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-287">Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-288">下面的示例将扩大一倍的高度和宽度的每个所选元素上<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-288">The following example doubles the height and width of each selected element on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[InkCanvasSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedStrokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetSelectedStrokes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedStrokes () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetSelectedStrokes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-289">检索一个 <see cref="T:System.Windows.Ink.StrokeCollection" />，它表示 <see cref="T:System.Windows.Ink.Stroke" /> 上选定的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-289">Retrieves a <see cref="T:System.Windows.Ink.StrokeCollection" /> that represents selected <see cref="T:System.Windows.Ink.Stroke" /> objects on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-290">选定笔画的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-290">The collection of selected strokes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-291">此方法返回<xref:System.Windows.Ink.Stroke>对象，仅。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-291">This method returns <xref:System.Windows.Ink.Stroke> objects, only.</span></span> <span data-ttu-id="4b9a6-292">若要检索选定<xref:System.Windows.FrameworkElement>对象，可调用<xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-292">To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.</span></span>  
  
 <span data-ttu-id="4b9a6-293">如果<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>的<xref:System.Windows.Controls.InkCanvas>设置为<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，用户可以选择<xref:System.Windows.Ink.Stroke>对象和<xref:System.Windows.FrameworkElement>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-293">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="4b9a6-294">或者，选择两种类型的对象可以是使用代码： 只需调用<xref:System.Windows.Controls.InkCanvas.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-294">Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-295">下面的示例上的更改的每个所选的描边的颜色<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-295">The following example changes the color of each selected stroke on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[InkCanvasSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetSelectionBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetSelectionBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectionBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectionBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetSelectionBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-296">获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定笔画和元素的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-296">Gets the bounds of the selected strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-297">包围所有选定笔画和元素的最小矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-297">The smallest rectangle that encompasses all selected strokes and elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-298">下面的示例可防止用户做出选择小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-298">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTop">
      <MemberSignature Language="C#" Value="public static double GetTop (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetTop(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTop (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetTop(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-299">要获取其上边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-299">The element of which to get the top property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-300">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-300">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-301">依赖项对象的上边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-301">The top coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-302">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-302">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#33](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#33)]
 [!code-vb[InkCanvasSamples#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4b9a6-303">集合中请求的子元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-303">The zero-based index of the requested child element in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-304">重写 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />，然后从子元素集合返回指定索引处的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-304">Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-305">请求的子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-305">The requested child element.</span>
          </span>
          <span data-ttu-id="4b9a6-306">它不应返回 <see langword="null" />；如果提供的索引超出范围，将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-306">This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParams As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParams" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParams">
          <span data-ttu-id="4b9a6-307">一个对象，指定 <see cref="T:System.Windows.Point" /> 以命中测试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-307">An object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-308">确定给定点是否落在 <see cref="T:System.Windows.Controls.InkCanvas" /> 的呈现边界之内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-308">Determines whether a given point falls within the rendering bounds of an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-309">一个由命中测试中返回的 <see cref="T:System.Windows.Media.Visual" /> 表示的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-309">An object that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::InkCanvasSelectionHitResult HitTestSelection(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionHitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="4b9a6-310">要进行命中测试的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-310">The point to hit test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-311">返回一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-311">Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-312">一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-312">A value that indicates which part of the selection adorner intersects or surrounds a specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-313">使用<xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A>方法来确定的点是否笔画选择的边界内或某个八个句柄。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-313">Use the <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.</span></span>  <span data-ttu-id="4b9a6-314">当执行拖放操作，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-314">This is useful when performing drag and drop operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-315">下面的示例演示如何使用<xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A>来确定是否创建<xref:System.Windows.DataObject>以启动拖放。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-315">The following example demonstrates how use <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> to determine whether to create a <xref:System.Windows.DataObject> to initiate drag and drop.</span></span>  <span data-ttu-id="4b9a6-316">若要实现拖动和删除两个<xref:System.Windows.Controls.InkCanvas>对象，请参阅[How to： 拖放墨迹](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md)。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-316">To implement drag and drop between two <xref:System.Windows.Controls.InkCanvas> objects, see [How to: Drag and Drop Ink](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md).</span></span>  
  
 [!code-csharp[InkDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkDragDrop/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkDragDrop/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkPresenter">
      <MemberSignature Language="C#" Value="protected System.Windows.Controls.InkPresenter InkPresenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.InkPresenter InkPresenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InkPresenter As InkPresenter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Controls::InkPresenter ^ InkPresenter { System::Windows::Controls::InkPresenter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkPresenter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-317">获取在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-317">Gets the ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-318">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-318">The ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGestureRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsGestureRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGestureRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGestureRecognizerAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGestureRecognizerAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-319">获取（确定）笔势识别组件在用户系统上是否可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-319">Gets (determines) whether the gesture recognition component is available on the user's system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-320">如果识别组件可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-320">
              <see langword="true" /> if the recognition component is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-321">下面的示例演示如何配置<xref:System.Windows.Controls.InkCanvas>来识别应用程序操作。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-321">The following example demonstrates how to configure an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="ILAsm" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Left" />
      <MemberSignature Language="VB.NET" Value="see GetLeft, and SetLeft" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-322">标识 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-322">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-323">返回用于逻辑子级的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-323">Returns enumerator to logical children.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="4b9a6-324">此元素可提供给子元素的可用大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-324">The available size that this element can give to child elements.</span>
          </span>
          <span data-ttu-id="4b9a6-325">可指定无穷大作为一个值，该值指示元素将调整到适应内容的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-325">Infinity can be specified as a value to indicate that the element will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-326">测量子元素在布局中所需的大小，并确定 <see cref="System.Windows.Controls.InkCanvas" /> 对象的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-326">Measures the size in layout required for child elements and determines a size for the <see cref="System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b9a6-327">此元素基于其对子元素大小的计算确定它在布局期间所需要的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-327">The size that this element determines it needs during layout, based on its calculations of child element sizes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MoveEnabled">
      <MemberSignature Language="C#" Value="public bool MoveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-328">获取或设置一个布尔值，该值指示是否允许用户移动 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-328">Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-329">如果用户可以移动 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的笔画和/或元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-329">
              <see langword="true" /> if a user can move strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-330">如果此属性设置为`true`，在选中时，墨迹笔画和/或元素周围绘制一个装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-330">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="4b9a6-331">此边框使用户能够移动所选的对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-331">This border enables the user to move the selected objects.</span></span> <span data-ttu-id="4b9a6-332">如果<xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A>是`true`，装饰器使用户能够笔画和/或元素以及调整大小。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-332">If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="4b9a6-333">如果此属性设置为`false`在选择了一个或多个墨迹笔画和/或元素时将从所选对象自动移除装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-333">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-334">下面的示例可以阻止用户移动并调整元素的大小和上描边<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-334">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-335">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-335">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-336">引发 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-336">Raises the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-337">作为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基础结构的一部分，为此控件提供相应的 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-337">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultDrawingAttributesReplaced (e As DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultDrawingAttributesReplaced(System::Windows::Ink::DrawingAttributesReplacedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-338">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-338">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-339">引发 <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-339">Raises the <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-340">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-340">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-341">引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-341">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-342">此事件发生后编辑模式已更改;更改会反映在<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-342">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeInvertedChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeInvertedChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeInvertedChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-343">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-343">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-344">引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-344">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-345">此事件发生后已更改反转的编辑模式;所做的更改反映在<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-345">This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGesture(class System.Windows.Controls.InkCanvasGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGesture (e As InkCanvasGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGesture(System::Windows::Controls::InkCanvasGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-346">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-346">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-347">引发 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-347">Raises the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-348">描述已更改的属性的事件数据（包括旧值和新值）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-348">The event data that describes the property that changed, as well as old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-349">每当更新此 <see cref="T:System.Windows.FrameworkElement" /> 上任何依赖项属性的有效值时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-349">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated.</span>
          </span>
          <span data-ttu-id="4b9a6-350">将在实参形参中报告已更改的特定依赖属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-350">The specific dependency property that changed is reported in the arguments parameter.</span>
          </span>
          <span data-ttu-id="4b9a6-351">重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-351">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-352">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-352">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-353">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-353">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-354">已由用户选择一套墨迹笔画和/或元素，并且已应用所选内容更改后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-354">This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied.</span></span> <span data-ttu-id="4b9a6-355">更改被应用之前，<xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-355">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanging(class System.Windows.Controls.InkCanvasSelectionChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanging (e As InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanging(System::Windows::Controls::InkCanvasSelectionChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-356">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-356">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-357">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-357">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-358">由用户，但在应用更改之前进行新选择的笔画和/或元素时，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-358">This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied.</span></span> <span data-ttu-id="4b9a6-359">在应用更改后，<xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-359">After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoved (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoved(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoved (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoved(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-360">未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-360">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-361">一个事件，通告用户选择并移动了所选笔画和/或元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-361">An event announcing that the user selected and moved a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-362">选定的笔画和/或元素已被移动用户，以及应用更改后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-362">This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied.</span></span> <span data-ttu-id="4b9a6-363">更改被应用之前，<xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-363">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoving(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoving (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoving(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-364">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-364">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-365">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-365">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-366">用户请求，移动选定的笔画和/或元素后，在应用更改之前调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-366">This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied.</span></span> <span data-ttu-id="4b9a6-367">应用更改后，<xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-367">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResized">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-368">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-368">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-369">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-369">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-370">已由用户调整大小的笔画和/或元素选择和应用更改后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-370">This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied.</span></span> <span data-ttu-id="4b9a6-371">更改被应用之前，<xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-371">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResizing(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResizing (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResizing(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-372">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-372">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-373">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-373">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-374">用户请求的笔画和/或元素选择调整大小后，在应用更改之前调用此方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-374">This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied.</span></span> <span data-ttu-id="4b9a6-375">应用更改后，<xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A>将调用方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-375">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStrokeCollected">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeCollected(class System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeCollected (e As InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeCollected(System::Windows::Controls::InkCanvasStrokeCollectedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-376">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-376">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-377">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-377">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-378"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> 完成后调用用户以物理方式描边，例如，通过在移动之后引发触笔从平板电脑。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-378"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.</span></span>  
  
 <span data-ttu-id="4b9a6-379">笔画以编程方式添加<xref:System.Windows.Controls.InkCanvas.Strokes%2A>集合将不会调用<xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-379">A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErased">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErased(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErased (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErased(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-380">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-380">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-381">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-381">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErasing">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErasing(class System.Windows.Controls.InkCanvasStrokeErasingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErasing (e As InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErasing(System::Windows::Controls::InkCanvasStrokeErasingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeErasingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-382">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-382">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-383">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-383">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesReplaced(class System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesReplaced (e As InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesReplaced(System::Windows::Controls::InkCanvasStrokesReplacedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4b9a6-384">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-384">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-385">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-385">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Paste">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-386">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-386">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-387"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-387">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-388">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-388">Pastes the contents of the Clipboard to the top-left corner of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-389"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-389">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-390">下面的示例将一个元素复制到剪贴板，并将其粘贴到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-390">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-391">此示例假定名为的元素`rect1`，且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件已连接到在示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-391">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b9a6-392">用于将从到剪贴板的内容粘贴<see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-392">for pasting content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="4b9a6-393">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-393">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="4b9a6-394">笔画粘贴位置所在的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-394">The point at which to paste the strokes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-395">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的给定点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-395">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" /> at a given point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-396"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-396">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-397">下面的示例将一个元素复制到剪贴板，并将其粘贴到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-397">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-398">此示例假定名为的元素`rect1`，且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件连接到在示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-398">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="4b9a6-399">粘贴到剪贴板的内容的权限<see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-399">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="4b9a6-400">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-400">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="PreferredPasteFormats">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredPasteFormats As IEnumerable(Of InkCanvasClipboardFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ PreferredPasteFormats { System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-401">获取或设置可粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-401">Gets or sets formats that can be pasted onto the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-402">一个枚举值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-402">A collection of enumeration values.</span>
          </span>
          <span data-ttu-id="4b9a6-403">默认值为 <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-403">The default is <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_PreferredPasteFormats"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="4b9a6-404">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="4b9a6-404">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.PreferredPasteFormats>  
    InkCanvasClipboardFormats  
  </object.PreferredPasteFormats>  
</object>  
```  
  
<a name="xamlValues_PreferredPasteFormats"></a>   
## <a name="xaml-values"></a><span data-ttu-id="4b9a6-405">XAML 值</span><span class="sxs-lookup"><span data-stu-id="4b9a6-405">XAML Values</span></span>  
 <span data-ttu-id="4b9a6-406">*InkCanvasClipboardFormats*</span><span class="sxs-lookup"><span data-stu-id="4b9a6-406">*InkCanvasClipboardFormats*</span></span>  
 <span data-ttu-id="4b9a6-407">数组<xref:System.Windows.Controls.InkCanvasClipboardFormat>枚举值。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-407">An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values.</span></span> <span data-ttu-id="4b9a6-408">在 XAML 中指定一个字符串数组需要`x:Array`使用情况。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-408">Specifying an array in XAML requires `x:Array` usage.</span></span> <span data-ttu-id="4b9a6-409">一个枚举值指定为元素声明数组成员需要`x:Static`使用情况。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-409">Specifying an enumeration value as an element that declares an array member requires `x:Static` usage.</span></span> <span data-ttu-id="4b9a6-410">有关详细信息，请参阅[X:array 标记扩展](~/docs/framework/xaml-services/x-array-markup-extension.md)和[X:static 标记扩展](~/docs/framework/xaml-services/x-static-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-410">For more information, see [x:Array Markup Extension](~/docs/framework/xaml-services/x-array-markup-extension.md) and [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-411">下面的示例设置<xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A>以便<xref:System.Windows.Controls.InkCanvas>接受[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-411">The following example sets the <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> to make the <xref:System.Windows.Controls.InkCanvas> accept [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
 [!code-csharp[InkCanvasSamples#26](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#26)]
 [!code-vb[InkCanvasSamples#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#26)]  
  
 <span data-ttu-id="4b9a6-412">下面的示例所示来实现相同的操作中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-412">The following example accomplishes the same thing in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[InkCanvasSamples#38](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window2.xaml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeEnabled">
      <MemberSignature Language="C#" Value="public bool ResizeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResizeEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-413">获取或设置一个布尔值，该值指示用户是否可以调整 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-413">Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-414">如果用户可以调整 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的笔画和/或元素的大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-414">
              <see langword="true" /> if a user can resize strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-415">如果此属性设置为`true`，在选中时，墨迹笔画和/或元素周围绘制一个装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-415">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="4b9a6-416">此边框使用户能够调整所选的对象的大小。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-416">This border enables the user to resize the selected objects.</span></span> <span data-ttu-id="4b9a6-417">如果<xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A>是`true`，装饰器使用户能够移动笔画和/或元素以及。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-417">If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="4b9a6-418">如果此属性设置为`false`装饰器边框在选择了一个或多个墨迹笔画和/或元素时自动删除从所选对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-418">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-419">下面的示例可以阻止用户移动并调整元素的大小和上描边<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-419">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="see GetRight, and SetRight" />
      <MemberSignature Language="ILAsm" Value="see GetRight, and SetRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Right" />
      <MemberSignature Language="VB.NET" Value="see GetRight, and SetRight" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-420">标识 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-420">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached propertyy.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-421">选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象和/或 <see cref="T:System.Windows.FrameworkElement" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-421">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects and/or <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-422"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>以响应用户触笔输入创建的对象和<xref:System.Windows.FrameworkElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-422">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="4b9a6-423">围绕它们一个装饰器，以便于识别和操作，将显示所选的描边。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-423">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="4b9a6-424"><xref:System.Windows.FrameworkElement> 当选中，对象将不会以不同方式显示。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-424"><xref:System.Windows.FrameworkElement> objects will not display differently when selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedElements">
          <span data-ttu-id="4b9a6-425">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-425">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-426">选择一组 <see cref="T:System.Windows.UIElement" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-426">Selects a set of <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-427"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>对象，创建以响应用户触笔输入和<xref:System.Windows.UIElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-427">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="4b9a6-428">所选的笔画显示围绕它们一个装饰器，以便于识别和操作。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-428">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="4b9a6-429"><xref:System.Windows.UIElement> 当选中，对象将不会以不同方式显示。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-429"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="4b9a6-430">如果<xref:System.Windows.UIElement>中`selectedElements`不在子集合，<xref:System.Windows.Controls.InkCanvas.Select%2A>忽略<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-430">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-431">下面的示例选择所有的笔画和两个元素上的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-431">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-432">此示例假定有<xref:System.Windows.Controls.TextBox>调用`textbox1`和<xref:System.Windows.Controls.Button>调用`button1`-这两个控件是子元素和<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-432">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="4b9a6-433">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-433">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-434">选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-434">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-435"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>以响应用户触笔输入创建的对象和<xref:System.Windows.FrameworkElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-435">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="4b9a6-436">所选的笔画显示围绕它们一个装饰器，以便于识别和操作。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-436">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="4b9a6-437"><xref:System.Windows.FrameworkElement> 当选中对象不以不同方式显示。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-437"><xref:System.Windows.FrameworkElement> objects do not display differently when selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-438">下面的示例选择所有的笔画和两个元素上的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-438">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="4b9a6-439">此示例假定有<xref:System.Windows.Controls.TextBox>调用`textbox1`和<xref:System.Windows.Controls.Button>调用`button1`-这两个控件是子元素和<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-439">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b9a6-440">
            <paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-440">One or more strokes in <paramref name="selectedStrokes" /> is not in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection, selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes, System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="4b9a6-441">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-441">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <param name="selectedElements">
          <span data-ttu-id="4b9a6-442">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-442">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-443">选择一个由 <see cref="T:System.Windows.Ink.Stroke" /> 对象与 <see cref="T:System.Windows.UIElement" /> 对象构成的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-443">Selects a combination of <see cref="T:System.Windows.Ink.Stroke" /> and <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-444"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>对象，创建以响应用户触笔输入和<xref:System.Windows.UIElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-444">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="4b9a6-445">围绕它们一个装饰器，以便于识别和操作，将显示所选的描边。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-445">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="4b9a6-446"><xref:System.Windows.UIElement> 当选中，对象将不会以不同方式显示。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-446"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="4b9a6-447">如果<xref:System.Windows.UIElement>中`selectedElements`不在子集合，<xref:System.Windows.Controls.InkCanvas.Select%2A>忽略<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-447">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-448">下面的示例选择所有的笔画和两个元素上的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-448">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="4b9a6-449">此示例假定有<xref:System.Windows.Controls.TextBox>调用`textbox1`和<xref:System.Windows.Controls.Button>调用`button1`-这两个控件是子元素和<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-449">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b9a6-450">
            <paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-450">One or more strokes in <paramref name="selectedStrokes" /> is not included in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-451">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的选择更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-451">Occurs when the selection on the <see cref="T:System.Windows.Controls.InkCanvas" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-452">选择并由用户应用了一套墨迹笔画和/或元素后，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-452">This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.</span></span>  
  
 <span data-ttu-id="4b9a6-453">相反，如果您必须处理选择墨迹笔画和/或元素的一组，然后应用所选内容的请求，添加到事件处理程序<xref:System.Windows.Controls.InkCanvas.SelectionChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-453">If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-454">下面的示例可防止用户做出选择小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-454">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanging As InkCanvasSelectionChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionChangingEventHandler ^ SelectionChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-455">在选择了一组新墨迹笔画和/或元素时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-455">Occurs when a new set of ink strokes and/or elements is being selected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-456"><xref:System.Windows.Controls.InkCanvas.SelectionChanging>由用户的但在应用更改之前选中笔画和/或元素时引发事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-456">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is raised when strokes and/or elements are selected by the user - but before the change is applied.</span></span>  
  
 <span data-ttu-id="4b9a6-457"><xref:System.Windows.Controls.InkCanvas.SelectionChanging>处理事件时<xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler>接收<xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs>对象。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-457">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object.</span></span> <span data-ttu-id="4b9a6-458"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> 提供用于访问方法<xref:System.Windows.FrameworkElement>和<xref:System.Windows.Ink.StrokeCollection>对象后由用户选择它们。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-458"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user.</span></span>  
  
 <span data-ttu-id="4b9a6-459">应用更改后，<xref:System.Windows.Controls.InkCanvas.SelectionChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-459">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b9a6-460"><xref:System.Windows.Controls.InkCanvas.SelectionChanging>事件不会删除所选的笔画时或当<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-460">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-461">下面的示例使所选的笔画皇家蓝色。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-461">The following example makes selected strokes royal blue.</span></span>  
  
 [!code-csharp[InkCanvasSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[InkCanvasSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoved">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionMoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoved As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionMoved;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-462">在用户移动了所选笔画和/或元素之后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-462">Occurs after the user moves a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-463">移动选定的笔画和/或元素，但在描边或元素之前数据进行更新以记录其新位置之后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-463">This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position.</span></span> <span data-ttu-id="4b9a6-464">添加到事件处理程序<xref:System.Windows.Controls.InkCanvas.SelectionMoving>事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-464">Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-465">下面的示例会项上取消选择<xref:System.Windows.Controls.InkCanvas>用户将其移动后。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-465">The following example unselects items on an <xref:System.Windows.Controls.InkCanvas> after the user moves them.</span></span>  
  
 [!code-csharp[InkCanvasSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#19)]
 [!code-vb[InkCanvasSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoving">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoving As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionMoving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-466">在移动选定笔画和元素之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-466">Occurs before selected strokes and elements are moved.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-467">用户请求，将它们移选定的笔画和/或元素之后, 但尚未应用更改之前，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-467">This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.</span></span>  
  
 <span data-ttu-id="4b9a6-468">事件处理程序接收类型的自变量<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs>具有两个属性：<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-468">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="4b9a6-469"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 定义之前移动所选内容的边界和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>定义后移动所选内容的边界。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-469"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.</span></span>  
  
 <span data-ttu-id="4b9a6-470">应用更改后，<xref:System.Windows.Controls.InkCanvas.SelectionMoved>事件发生一次。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-470">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-471">下面的示例可防止用户在垂直移动所选的项<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-471">The following example prevents the user from moving selected items vertically on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[InkCanvasSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResized">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResized" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionResized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-472">在用户调整了所选笔画和/或元素大小时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-472">Occurs when a selection of strokes and/or elements has been resized by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-473">调整大小的笔画和/或元素选择后，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-473">This event is raised after a selection of strokes and/or elements is resized.</span></span>  
  
 <span data-ttu-id="4b9a6-474">相反，如果您必须处理的请求调整选择大小笔画和/或元素调整大小之前，添加到事件处理程序<xref:System.Windows.Controls.InkCanvas.SelectionResizing>事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-474">If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-475">下面的示例会取消选择所有项上<xref:System.Windows.Controls.InkCanvas>在用户调整大小所选内容之后。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-475">The following example unselects all the items on an <xref:System.Windows.Controls.InkCanvas> after the user re-sizes the selection.</span></span>  
  
 [!code-csharp[InkCanvasSamples#23](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#23)]
 [!code-vb[InkCanvasSamples#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResizing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResizing As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionResizing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-476">在调整选定笔画和元素的大小之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-476">Occurs before selected strokes and elements are resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-477">用户请求，选定的笔画和/或元素进行大小调整、 之后但尚未应用更改之前，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-477">This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.</span></span>  
  
 <span data-ttu-id="4b9a6-478">事件处理程序接收类型的自变量<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs>包含两个属性：<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-478">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="4b9a6-479"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 定义的大小调整操作之前所选内容的边界和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>定义的大小调整操作完成后选择的边界。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-479"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.</span></span>  
  
 <span data-ttu-id="4b9a6-480">用新的大小，更新笔画和/或元素后<xref:System.Windows.Controls.InkCanvas.SelectionResized>引发事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-480">After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-481">下面的示例可防止用户做出选择小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-481">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResized" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SetBottom">
      <MemberSignature Language="C#" Value="public static void SetBottom (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBottom(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBottom (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBottom(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-482">要设置其下边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-482">The element on which to set the bottom property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4b9a6-483">
            <c>element</c> 的下边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-483">The bottom coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-484">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-484">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-485">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-485">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#28](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#28)]
 [!code-vb[InkCanvasSamples#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnabledGestures (applicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnabledGestures(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ applicationGestures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">
          <span data-ttu-id="4b9a6-486">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-486">A collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-487">设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-487">Sets the application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-488">下面的示例演示如何设置<xref:System.Windows.Controls.InkCanvas>来识别应用程序操作。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-488">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4b9a6-489">
            <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-489">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLeft">
      <MemberSignature Language="C#" Value="public static void SetLeft (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLeft(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLeft (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLeft(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-490">要设置其左边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-490">The element on which to set the left property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4b9a6-491">
            <c>element</c> 的左边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-491">The left coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-492">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-492">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-493">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-493">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#29](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#29)]
 [!code-vb[InkCanvasSamples#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRight">
      <MemberSignature Language="C#" Value="public static void SetRight (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRight(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetRight (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRight(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-494">要设置其右边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-494">The element on which to set the right property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4b9a6-495">
            <c>element</c> 的右边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-495">The right coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-496">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-496">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-497">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-497">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#30](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#30)]
 [!code-vb[InkCanvasSamples#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTop">
      <MemberSignature Language="C#" Value="public static void SetTop (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTop(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTop (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTop(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4b9a6-498">要设置其上边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-498">The element on which to set the top property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4b9a6-499">
            <c>element</c> 的上边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-499">The top coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-500">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-500">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-501">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-501">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#27](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#27)]
 [!code-vb[InkCanvasSamples#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCollected">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeCollected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeCollected As InkCanvasStrokeCollectedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeCollectedEventHandler ^ StrokeCollected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeCollectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-502">在将用户绘制的笔画添加到 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-502">Occurs when a stroke drawn by the user is added to the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-503">当用户完成笔画使用指针设备时，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-503">This event is raised when a user completes a stroke using a pointing device.</span></span> <span data-ttu-id="4b9a6-504">例如，用户可能来自数字化仪触笔之后抬起完成某移动动作，从而完成笔画。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-504">For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.</span></span>  
  
 <span data-ttu-id="4b9a6-505">事件处理程序接收类型的自变量<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>，它引用的已完成的笔划。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-505">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke.</span></span> <span data-ttu-id="4b9a6-506">笔画还添加到<xref:System.Windows.Controls.InkCanvas.Strokes%2A>属性<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-506">The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 <span data-ttu-id="4b9a6-507">以编程方式添加<xref:System.Windows.Ink.Stroke>对象传递给<xref:System.Windows.Controls.InkCanvas.Strokes%2A>集合不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-507">The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event.</span></span>  
  
<a name="routedEventInfo_StrokeCollected"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="4b9a6-508">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-508">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-509">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-509">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|  
|<span data-ttu-id="4b9a6-510">路由策略</span><span class="sxs-lookup"><span data-stu-id="4b9a6-510">Routing strategy</span></span>|<span data-ttu-id="4b9a6-511">冒泡</span><span class="sxs-lookup"><span data-stu-id="4b9a6-511">Bubbling</span></span>|  
|<span data-ttu-id="4b9a6-512">委托</span><span class="sxs-lookup"><span data-stu-id="4b9a6-512">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-513">下面的示例作为自定义属性节省时间，当用户将添加到笔画<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-513">The following example saves the time as a custom property when a user adds a stroke to the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[InkCanvasSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StrokeCollectedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeCollectedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeCollectedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeCollectedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-514">标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-514">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErased">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler StrokeErased;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler StrokeErased" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErased" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeErased As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ StrokeErased;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-515">在用户擦除笔画时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-515">Occurs when user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-516">用户是否擦除墨迹时发生此事件<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>或<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-516">This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
<a name="routedEventInfo_StrokeErasing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="4b9a6-517">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-517">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-518">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-518">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|  
|<span data-ttu-id="4b9a6-519">路由策略</span><span class="sxs-lookup"><span data-stu-id="4b9a6-519">Routing strategy</span></span>|<span data-ttu-id="4b9a6-520">冒泡</span><span class="sxs-lookup"><span data-stu-id="4b9a6-520">Bubbling</span></span>|  
|<span data-ttu-id="4b9a6-521">委托</span><span class="sxs-lookup"><span data-stu-id="4b9a6-521">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-522">以下示例将报告上的笔画数<xref:System.Windows.Controls.InkCanvas>时<xref:System.Windows.Controls.InkCanvas.StrokeErased>事件发生。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-522">The following example reports the number of strokes that are on an <xref:System.Windows.Controls.InkCanvas> when the <xref:System.Windows.Controls.InkCanvas.StrokeErased> event occurs.</span></span> <span data-ttu-id="4b9a6-523">如果<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>和用户上擦除描边，笔画数中间<xref:System.Windows.Controls.InkCanvas>会增加。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-523">If <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> and the user erases the middle of a stroke, the number of strokes on the <xref:System.Windows.Controls.InkCanvas> increases.</span></span> <span data-ttu-id="4b9a6-524">这是因为两个新笔画替换为旧描边。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-524">This is because the old stroke was replaced by two new strokes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#18)]
 [!code-vb[InkCanvasSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeErasedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeErasedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeErasedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeErasedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-525">标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-525">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErasing" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokeErasing As InkCanvasStrokeErasingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeErasingEventHandler ^ StrokeErasing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeErasingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-526">恰好在用户擦除笔画之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-526">Occurs just before a user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-527">处理此事件，当你想要检查是否应清除笔画时。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-527">Handle this event when you want to check whether a stroke should be erased.</span></span> <span data-ttu-id="4b9a6-528">设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性`true`如果你想要禁止描边擦除。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-528">Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased.</span></span> <span data-ttu-id="4b9a6-529">你可以使用此方法时<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>或<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>或<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-529">You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-530">以下示例将阻止呈现为荧光正在擦除所有描边。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-530">The following example prevents any strokes rendered as highlighters from being erased.</span></span> <span data-ttu-id="4b9a6-531">该示例假定<xref:System.Windows.Controls.InkCanvas>连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-531">The example assumes that the <xref:System.Windows.Controls.InkCanvas> is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#16](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#16)]
 [!code-vb[DrawingAttributes#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Strokes" />
      <MemberSignature Language="VB.NET" Value="Public Property Strokes As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StrokeCollection ^ Strokes { System::Windows::Ink::StrokeCollection ^ get(); void set(System::Windows::Ink::StrokeCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-532">获取或设置 <see cref="T:System.Windows.Ink.Stroke" /> 收集的墨迹 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-532">Gets or sets the collection of ink <see cref="T:System.Windows.Ink.Stroke" /> objects collected by the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-533">包含在 <see cref="T:System.Windows.Ink.Stroke" /> 中的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-533">The collection of <see cref="T:System.Windows.Ink.Stroke" /> objects contained within the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4b9a6-534">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4b9a6-534">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4b9a6-535">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4b9a6-535">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|  
|<span data-ttu-id="4b9a6-536">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4b9a6-536">Metadata properties set to `true`</span></span>|<span data-ttu-id="4b9a6-537">无</span><span class="sxs-lookup"><span data-stu-id="4b9a6-537">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-538">下面的示例演示如何使用两个<xref:System.Windows.Ink.StrokeCollection>对同一对象<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-538">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects for the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-539">在此示例中，一个播放器和播放器 2 每个使用单个"墨迹图面"即使它们共享相同<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-539">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-540">此示例假定 click 事件连接到的事件处理程序中， `switchPlayersButton_Click`。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-540">This example assumes the click event is connected to the event handler, `switchPlayersButton_Click`.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 <span data-ttu-id="4b9a6-541">下面的示例演示如何将绑定<xref:System.Windows.Controls.InkCanvas.Strokes%2A>属性<xref:System.Windows.Controls.InkCanvas>到另一个<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-541">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of an <xref:System.Windows.Controls.InkCanvas> to another <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#2)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StrokeCollection" />
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StrokesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-542">标识 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-542">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesReplaced As InkCanvasStrokesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokesReplacedEventHandler ^ StrokesReplaced;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-543">在替换 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-543">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4b9a6-544">下面的示例演示如何使用两个<xref:System.Windows.Ink.StrokeCollection>共同位于相同的对象<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-544">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects that are co-located on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-545">在此示例中，一个播放器和播放器 2 每个使用单个"墨迹图面"即使它们共享相同<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-545">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-546">此示例假定`switchPlayersButton_Click`事件连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-546">This example assumes that the `switchPlayersButton_Click` event is connected to the event handler.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4b9a6-547">要添加的子对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-547">The child object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-548">将指定的对象添加到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-548">Adds the specified object to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (textData As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ textData) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="4b9a6-549">未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-549">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b9a6-550">添加位于标记内的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-550">Adds the text that within the tags in markup.</span>
          </span>
          <span data-ttu-id="4b9a6-551">始终引发一个 <see cref="T:System.ArgumentException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-551">Always throws an <see cref="T:System.ArgumentException" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="see GetTop, and SetTop" />
      <MemberSignature Language="ILAsm" Value="see GetTop, and SetTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Top" />
      <MemberSignature Language="VB.NET" Value="see GetTop, and SetTop" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-552">标识 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-552">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomCursor">
      <MemberSignature Language="C#" Value="public bool UseCustomCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCustomCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCustomCursor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-553">获取或设置一个布尔值，该值指示是否重写标准的 <see cref="T:System.Windows.Controls.InkCanvas" /> 光标功能以支持自定义光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-553">Gets or sets a Boolean value that indicates whether to override standard <see cref="T:System.Windows.Controls.InkCanvas" /> cursor functionality to support a custom cursor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-554">如果 <see cref="T:System.Windows.Controls.InkCanvas" /> 正在使用自定义光标，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-554">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.InkCanvas" /> is using a custom cursor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9a6-555"><xref:System.Windows.Controls.InkCanvas>将更改以反映当前的游标样式<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>在光标位于的边界内时<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-555">The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="4b9a6-556">如果此行为不想，例如，当<xref:System.Windows.Controls.InkCanvas>使用自定义光标，将此属性设置为`true`，并且光标不会更改与<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-556">If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b9a6-557">下面的示例演示如何使用不同于一个由提供的游标<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="4b9a6-557">The following example demonstrates how to use a cursor that is different than the one supplied by the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[InkCanvasSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b9a6-558">获取此元素内可视子元素的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-558">Gets the number of visual child elements within this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b9a6-559">此元素内可视子元素的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9a6-559">The number of visual child elements for this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      </Docs>
    </Member>
  </Members>
</Type>