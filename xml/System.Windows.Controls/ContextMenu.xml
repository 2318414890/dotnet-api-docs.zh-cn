<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fc8d1b2ad864f2300bdb424f7167e6b800e7c96" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="de6b1-101">表示一个弹出菜单，该弹出菜单使控件能够公开特定于该控件的上下文的功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de6b1-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-102"><xref:System.Windows.Controls.ContextMenu> 是<xref:System.Windows.Controls.ItemsControl>，这意味着它可以包含的任何类型 （如字符串、 图像或面板） 的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="de6b1-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="de6b1-103">有关更多信息，请参见 <xref:System.Windows.Controls.ItemsControl> 类。</span><span class="sxs-lookup"><span data-stu-id="de6b1-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="de6b1-104">属性<xref:System.Windows.Controls.ContextMenu>类用于定义的位置和行为<xref:System.Windows.Controls.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="de6b1-105">A<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>可以<xref:System.Windows.Controls.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="de6b1-106">如果你将分配<xref:System.Windows.Controls.ContextMenu>到<xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>或<xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>属性，<xref:System.Windows.Controls.ContextMenuService>类处理以响应用户交互的上下文菜单操作。</span><span class="sxs-lookup"><span data-stu-id="de6b1-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="de6b1-107">工作的一部分<xref:System.Windows.Controls.ContextMenuService>未正在打开<xref:System.Windows.Controls.ContextMenu>当用户单击鼠标右键按钮控件。</span><span class="sxs-lookup"><span data-stu-id="de6b1-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="de6b1-108">由定义以下属性<xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ContextMenuService>类。</span><span class="sxs-lookup"><span data-stu-id="de6b1-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="de6b1-109">如果上述任一属性上都设置<xref:System.Windows.Controls.ContextMenu>和<xref:System.Windows.Controls.ContextMenuService>，属性值从<xref:System.Windows.Controls.ContextMenuService>使用。</span><span class="sxs-lookup"><span data-stu-id="de6b1-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="de6b1-110">A<xref:System.Windows.Controls.ContextMenu>自动放置在<xref:System.Windows.Controls.Primitives.Popup>控件。</span><span class="sxs-lookup"><span data-stu-id="de6b1-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="de6b1-111">不能更改此行为。</span><span class="sxs-lookup"><span data-stu-id="de6b1-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="de6b1-112">自定义 ContextMenu 控件</span><span class="sxs-lookup"><span data-stu-id="de6b1-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="de6b1-113">若要将相同的属性设置应用于多个<xref:System.Windows.Controls.ContextMenu>控件，使用<xref:System.Windows.FrameworkElement.Style%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="de6b1-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="de6b1-114">你可以修改默认<xref:System.Windows.Controls.ControlTemplate>提供独特外观的控件。</span><span class="sxs-lookup"><span data-stu-id="de6b1-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="de6b1-115">有关创建<xref:System.Windows.Controls.ControlTemplate>，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="de6b1-116">若要查看的部件和特定于状态<xref:System.Windows.Controls.ContextMenu>，请参阅[ContextMenu 样式和模板](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="de6b1-117">对于此控件的依赖项属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="de6b1-117">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="de6b1-118">如果属性设置的默认样式，该属性可能会更改从其默认值，如果控件出现在应用程序中。</span><span class="sxs-lookup"><span data-stu-id="de6b1-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="de6b1-119">桌面主题用应用程序运行时确定的默认样式。</span><span class="sxs-lookup"><span data-stu-id="de6b1-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="de6b1-120">有关详细信息，请参阅[默认 WPF 主题](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-120">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="de6b1-121">设置 visual 属性会仅造成影响该属性是否都存在于<xref:System.Windows.Controls.ContextMenu>控件的默认模板，并通过设置。</span><span class="sxs-lookup"><span data-stu-id="de6b1-121">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ContextMenu> control's default template and is set by using a .</span></span> <span data-ttu-id="de6b1-122">可以在的"更改 Visual 结构的控件"一节中找到的可视属性列表[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-122">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-123">下面的示例创建<xref:System.Windows.Controls.ContextMenu>操作的文本<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-123">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="de6b1-124">该示例演示如何订阅和处理的事件<xref:System.Windows.Controls.MenuItem>中的对象<xref:System.Windows.Controls.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-124">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-125">初始化 <see cref="T:System.Windows.Controls.ContextMenu" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-125">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-126">在 <see cref="T:System.Windows.Controls.ContextMenu" /> 的特定实例关闭时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-126">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="de6b1-127">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-127">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-128">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-128">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="de6b1-129">路由策略</span><span class="sxs-lookup"><span data-stu-id="de6b1-129">Routing strategy</span></span>|<span data-ttu-id="de6b1-130">冒泡</span><span class="sxs-lookup"><span data-stu-id="de6b1-130">Bubbling</span></span>|  
|<span data-ttu-id="de6b1-131">委托</span><span class="sxs-lookup"><span data-stu-id="de6b1-131">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-132">下面的示例演示如何使用<xref:System.Windows.Controls.ContextMenu>事件：<xref:System.Windows.Controls.ContextMenu.Opened>和<xref:System.Windows.Controls.ContextMenu.Closed>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-132">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-133">标识 <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-133">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-134">获取或设置一个回调，该回调指示 <see cref="T:System.Windows.Controls.ContextMenu" /> 应放在屏幕上的什么位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-134">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-135">一个指定 <see cref="T:System.Windows.Controls.ContextMenu" /> 的位置的回调。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-135">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-136"><xref:System.Windows.Controls.ContextMenu.Placement%2A>属性必须设置为<xref:System.Windows.Controls.Primitives.PlacementMode.Custom>为要使用的回调委托。</span><span class="sxs-lookup"><span data-stu-id="de6b1-136">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="de6b1-137"><xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback>委托返回的可能相对于定义的点数组<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-137">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="de6b1-138">当显示上下文菜单时，来最大化量选中了一点<xref:System.Windows.Controls.ToolTip>是可见的窗口。</span><span class="sxs-lookup"><span data-stu-id="de6b1-138">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="de6b1-139">按原样弹出窗口，行为都是相同的。</span><span class="sxs-lookup"><span data-stu-id="de6b1-139">The behavior is the same as it is for the popup.</span></span>  <span data-ttu-id="de6b1-140">有关详细信息，请参阅[如何： 指定的自定义弹出位置](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md)和[弹出窗口放置示例](http://go.microsoft.com/fwlink/?LinkID=160032)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-140">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](http://go.microsoft.com/fwlink/?LinkID=160032).</span></span>  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-141">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-142">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-142">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="de6b1-143">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-144">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-144">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-145">标识 <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-145">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-146">获取一个指示控件是否支持滚动的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-146">Gets a value that indicates whether the control supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-147">总是为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-147">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-148">如果控件具有<xref:System.Windows.Controls.ScrollViewer>其样式和具有自定义键盘滚动行为，<xref:System.Windows.Controls.ListBox.HandlesScrolling%2A>应返回`true`。</span><span class="sxs-lookup"><span data-stu-id="de6b1-148">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-149">获取或设置一个值，该值指示上下文菜单显示时是否有投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-149">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-150">如果上下文菜单显示时有投影，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-150">
              <see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de6b1-151">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-152">当<xref:System.Windows.Controls.ContextMenu>打开时，值设置为的值<xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-152">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="de6b1-153">此属性设置为`true`如果不起作用<xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="de6b1-153">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-154">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-155">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-155">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="de6b1-156">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-157">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-157">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-158">下面的示例演示如何使用 <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="de6b1-158">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-159">标识 <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-159">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-160">获取或设置目标原点与弹出项对齐点之间的水平距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-160">Get or sets the horizontal distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-161">目标原点与弹出项对齐点之间的水平距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-161">The horizontal distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="de6b1-162">有关目标原点和弹出项对齐点的信息，请参阅[弹出项放置行为](~/docs/framework/wpf/controls/popup-placement-behavior.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-162">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="de6b1-163">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-163">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-164">您可以定位<xref:System.Windows.Controls.ContextMenu>通过设置<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>， <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>， <xref:System.Windows.Controls.ContextMenu.Placement%2A>， <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>，和<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>属性。</span><span class="sxs-lookup"><span data-stu-id="de6b1-164">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="de6b1-165">这些属性的行为相同一样<xref:System.Windows.Controls.Primitives.Popup>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-165">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="de6b1-166">有关详细信息，请参阅 [Popup 放置行为](~/docs/framework/wpf/controls/popup-placement-behavior.md)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-166">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-167">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-168">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-168">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="de6b1-169">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-170">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-170">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="de6b1-171">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="de6b1-171">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or –  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="de6b1-172">XAML 值</span><span class="sxs-lookup"><span data-stu-id="de6b1-172">XAML Values</span></span>  
 <span data-ttu-id="de6b1-173">*double*</span><span class="sxs-lookup"><span data-stu-id="de6b1-173">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="de6b1-174">字符串表示形式<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="de6b1-174">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="de6b1-175">它被解释为[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="de6b1-175">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="de6b1-176">字符串不需要显式包括位小数。</span><span class="sxs-lookup"><span data-stu-id="de6b1-176">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="de6b1-177">例如，值的`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="de6b1-177">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="de6b1-178">相同<xref:System.Double>属性值部分中所述的范围限制也适用。</span><span class="sxs-lookup"><span data-stu-id="de6b1-178">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="de6b1-179">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="de6b1-179">*qualifiedDouble*</span></span>  
 <span data-ttu-id="de6b1-180">A *double*该值，上文所述跟以下单位声明字符串之一： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="de6b1-180">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="de6b1-181">`px` （默认值） 是 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="de6b1-181">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="de6b1-182">`in` is inches; 1in==96px</span><span class="sxs-lookup"><span data-stu-id="de6b1-182">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="de6b1-183">`cm` is centimeters; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="de6b1-183">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="de6b1-184">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="de6b1-184">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="de6b1-185">**请注意**在许多情况下一个双精度值可以设置为自动，但<xref:System.Windows.Controls.ContextMenu>如果偏移量设置为 Auto 将不会出现。</span><span class="sxs-lookup"><span data-stu-id="de6b1-185">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-186">下面的示例演示如何使用<xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>属性以使<xref:System.Windows.Controls.ContextMenu>以打开在指定的位置相对于其按钮父级。</span><span class="sxs-lookup"><span data-stu-id="de6b1-186">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-187">标识 <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-187">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-188">获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-188">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-189">如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-189">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de6b1-190">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-190">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-191">当<xref:System.Windows.Controls.ContextMenu.IsOpen%2A>设置为`true`，鼠标捕获设置为<xref:System.Windows.Controls.ContextMenu>及其子树。</span><span class="sxs-lookup"><span data-stu-id="de6b1-191">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-192">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-192">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-193">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-193">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="de6b1-194">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-194">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-195">此示例演示如何通过检查来确定是否<xref:System.Windows.Controls.ContextMenu.IsOpen%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="de6b1-195">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-196">标识 <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-196">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="de6b1-197">
            <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-197">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de6b1-198">在 <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 事件发生时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-198">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-199">为此 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 创建并返回一个 <see cref="T:System.Windows.Controls.ContextMenu" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-199">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de6b1-200">此 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 的 <see cref="T:System.Windows.Controls.ContextMenu" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-200">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="de6b1-201">
            <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-201">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de6b1-202">报告 <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 属性已更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-202">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="de6b1-203">
            <see cref="E:System.Windows.UIElement.KeyDown" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-203">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de6b1-204">在 <see cref="E:System.Windows.ContentElement.KeyDown" /> 中的对象引发 <see cref="T:System.Windows.Controls.ContextMenu" /> 事件时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-204">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="de6b1-205">
            <see cref="E:System.Windows.UIElement.KeyUp" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-205">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de6b1-206">响应 <see cref="E:System.Windows.ContentElement.KeyUp" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-206">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="de6b1-207">
            <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-207">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de6b1-208">在 <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 事件发生时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-208">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="de6b1-209">上下文菜单以前附加到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-209">The object that the context menu was previously attached to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de6b1-210">在上下文菜单的可视父级更改时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-210">Called when a context menu's visual parent changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-211">在上下文菜单的特定实例打开时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-211">Occurs when a particular instance of a context menu opens.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="de6b1-212">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-212">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-213">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-213">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="de6b1-214">路由策略</span><span class="sxs-lookup"><span data-stu-id="de6b1-214">Routing strategy</span></span>|<span data-ttu-id="de6b1-215">冒泡</span><span class="sxs-lookup"><span data-stu-id="de6b1-215">Bubbling</span></span>|  
|<span data-ttu-id="de6b1-216">委托</span><span class="sxs-lookup"><span data-stu-id="de6b1-216">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-217">下面的示例演示如何使用<xref:System.Windows.Controls.ContextMenu>事件：<xref:System.Windows.Controls.ContextMenu.Opened>和<xref:System.Windows.Controls.ContextMenu.Closed>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-217">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-218">标识 <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-218">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-219">获取或设置 <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 的 <see cref="T:System.Windows.Controls.ContextMenu" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-219">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-220">
            <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-220">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span>
          </span>
          <span data-ttu-id="de6b1-221">默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-221">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-222">当<xref:System.Windows.Controls.ContextMenu>分配给<xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>或<xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>属性，<xref:System.Windows.Controls.ContextMenuService>更改此属性的这个值时<xref:System.Windows.Controls.ContextMenu>打开。</span><span class="sxs-lookup"><span data-stu-id="de6b1-222">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="de6b1-223">如果用户打开<xref:System.Windows.Controls.ContextMenu>使用鼠标，<xref:System.Windows.Controls.ContextMenu.Placement%2A>设置为<xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-223">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="de6b1-224">如果用户打开<xref:System.Windows.Controls.ContextMenu>通过使用键盘，<xref:System.Windows.Controls.ContextMenu.Placement%2A>设置为<xref:System.Windows.Controls.Primitives.PlacementMode.Center>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-224">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="de6b1-225">如果你想要更改的位置<xref:System.Windows.Controls.ContextMenu>，将其设置<xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType>属性<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-225">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="de6b1-226">您可以定位<xref:System.Windows.Controls.ContextMenu>通过设置<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>， <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>， <xref:System.Windows.Controls.ContextMenu.Placement%2A>， <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>，和<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>属性。</span><span class="sxs-lookup"><span data-stu-id="de6b1-226">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="de6b1-227">这些属性的行为相同一样<xref:System.Windows.Controls.Primitives.Popup>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-227">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="de6b1-228">有关详细信息，请参阅 [Popup 放置行为](~/docs/framework/wpf/controls/popup-placement-behavior.md)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-228">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-229">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-229">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-230">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-230">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="de6b1-231">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-231">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-232">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-232">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-233">下面的示例演示如何使用<xref:System.Windows.Controls.ContextMenu.Placement%2A>属性和一个要指定的位置的放置模式<xref:System.Windows.Controls.ContextMenu>放置。</span><span class="sxs-lookup"><span data-stu-id="de6b1-233">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-234">标识 <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-234">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-235">获取或设置上下文菜单打开时与其所在位置相对的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-235">Gets or sets the area relative to which the context menu is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-236">定义用于定位上下文菜单的矩形的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-236">The area that defines the rectangle that is used to position the context menu.</span>
          </span>
          <span data-ttu-id="de6b1-237">默认值为 <see cref="P:System.Windows.Rect.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-237">The default is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-238">您可以定位<xref:System.Windows.Controls.ContextMenu>通过设置<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>， <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>， <xref:System.Windows.Controls.ContextMenu.Placement%2A>， <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>，和<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>属性。</span><span class="sxs-lookup"><span data-stu-id="de6b1-238">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="de6b1-239">这些属性的行为相同一样<xref:System.Windows.Controls.Primitives.Popup>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-239">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="de6b1-240">有关详细信息，请参阅 [Popup 放置行为](~/docs/framework/wpf/controls/popup-placement-behavior.md)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-240">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-241">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-241">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-242">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-242">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="de6b1-243">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-243">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-244">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-244">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-245">下面的示例演示如何使用<xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>属性和指定的位置<xref:System.Windows.Controls.ContextMenu>放置。</span><span class="sxs-lookup"><span data-stu-id="de6b1-245">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-246">标识 <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-246">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-247">获取或设置 <see cref="T:System.Windows.UIElement" />，当它打开时相对于它确定 <see cref="T:System.Windows.Controls.ContextMenu" /> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-247">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-248">
            <see cref="T:System.Windows.Controls.ContextMenu" /> 打开时所在位置与之相关的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-248">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span>
          </span>
          <span data-ttu-id="de6b1-249">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-249">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-250">当<xref:System.Windows.Controls.ContextMenu>分配给<xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>或<xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>属性，<xref:System.Windows.Controls.ContextMenuService>更改此属性的这个值为拥有<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>时<xref:System.Windows.Controls.ContextMenu>打开。</span><span class="sxs-lookup"><span data-stu-id="de6b1-250">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="de6b1-251">若要使用不同<xref:System.Windows.UIElement>，将其设置<xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="de6b1-251">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-252">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-252">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-253">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-253">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="de6b1-254">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-254">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-255">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-255">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-256">目标<xref:System.Windows.Controls.ContextMenu>作为其父级。</span><span class="sxs-lookup"><span data-stu-id="de6b1-256">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="de6b1-257">下面的示例演示如何使用<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>要查找的父属性<xref:System.Windows.Controls.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-257">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-258">标识 <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-258">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="de6b1-259">用来显示指定的项的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-259">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="de6b1-260">指定的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-260">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de6b1-261">准备好指定的元素以显示指定的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-261">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-262">元素的准备工作可能涉及应用样式、 设置的绑定，依次类推。</span><span class="sxs-lookup"><span data-stu-id="de6b1-262">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-263">获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否应自动关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-263">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-264">如果该菜单应在 <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 属性更改为 <see langword="true" /> 之前保持打开状态，则为 <see langword="false" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-264">
              <see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de6b1-265">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-265">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-266">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-266">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-267">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-267">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="de6b1-268">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-268">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-269">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-269">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-270">下面的示例使用<xref:System.Windows.Controls.ContextMenu.StaysOpen%2A>属性以使一个的事件发生之前保持打开状态更改上下文菜单<xref:System.Windows.Controls.ContextMenu.IsOpen%2A>属性`false`。</span><span class="sxs-lookup"><span data-stu-id="de6b1-270">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-271">标识 <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-271">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-272">获取或设置目标原点与弹出项对齐点之间的垂直距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-272">Get or sets the vertical distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de6b1-273">目标原点与弹出项对齐点之间的垂直距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-273">The vertical distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="de6b1-274">有关目标原点和弹出项对齐点的信息，请参阅[弹出项放置行为](~/docs/framework/wpf/controls/popup-placement-behavior.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-274">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="de6b1-275">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-275">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de6b1-276">您可以定位<xref:System.Windows.Controls.ContextMenu>通过设置<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>， <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>， <xref:System.Windows.Controls.ContextMenu.Placement%2A>， <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>，和<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>属性。</span><span class="sxs-lookup"><span data-stu-id="de6b1-276">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="de6b1-277">这些属性的行为相同一样<xref:System.Windows.Controls.Primitives.Popup>。</span><span class="sxs-lookup"><span data-stu-id="de6b1-277">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="de6b1-278">有关详细信息，请参阅 [Popup 放置行为](~/docs/framework/wpf/controls/popup-placement-behavior.md)。</span><span class="sxs-lookup"><span data-stu-id="de6b1-278">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de6b1-279">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="de6b1-279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de6b1-280">标识符字段</span><span class="sxs-lookup"><span data-stu-id="de6b1-280">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="de6b1-281">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="de6b1-281">Metadata properties set to `true`</span></span>|<span data-ttu-id="de6b1-282">无</span><span class="sxs-lookup"><span data-stu-id="de6b1-282">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="de6b1-283">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="de6b1-283">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or –  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="de6b1-284">XAML 值</span><span class="sxs-lookup"><span data-stu-id="de6b1-284">XAML Values</span></span>  
 <span data-ttu-id="de6b1-285">*double*</span><span class="sxs-lookup"><span data-stu-id="de6b1-285">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="de6b1-286">字符串表示形式<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="de6b1-286">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="de6b1-287">它被解释为[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="de6b1-287">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="de6b1-288">字符串不需要显式包括位小数。</span><span class="sxs-lookup"><span data-stu-id="de6b1-288">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="de6b1-289">例如，值`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="de6b1-289">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="de6b1-290">相同<xref:System.Double>属性值部分中所述的范围限制也适用。</span><span class="sxs-lookup"><span data-stu-id="de6b1-290">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="de6b1-291">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="de6b1-291">*qualifiedDouble*</span></span>  
 <span data-ttu-id="de6b1-292">A *double*该值，上文所述跟以下单位声明字符串之一： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="de6b1-292">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="de6b1-293">`px` （默认值） 是 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="de6b1-293">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="de6b1-294">`in` is inches; 1in==96px</span><span class="sxs-lookup"><span data-stu-id="de6b1-294">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="de6b1-295">`cm` is centimeters; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="de6b1-295">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="de6b1-296">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="de6b1-296">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="de6b1-297">在许多情况下，双精度可能设置为自动，但<xref:System.Windows.Controls.ContextMenu>未显示如果偏移量设置为 Auto。</span><span class="sxs-lookup"><span data-stu-id="de6b1-297">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de6b1-298">下面的示例演示如何使用<xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A>属性以使<xref:System.Windows.Controls.ContextMenu>以打开在指定的位置相对于其按钮父级。</span><span class="sxs-lookup"><span data-stu-id="de6b1-298">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de6b1-299">标识 <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de6b1-299">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>