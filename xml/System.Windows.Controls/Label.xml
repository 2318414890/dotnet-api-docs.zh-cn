<Type Name="Label" FullName="System.Windows.Controls.Label">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="798f920770e4bce81b155e4b8f1aab67923f98a2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36565939" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Label : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Label extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Label = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Label)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="07886-101">Represents the text label for a control and provides support for access keys.</span>
      <span class="sxs-lookup">
        <span data-stu-id="07886-101">Represents the text label for a control and provides support for access keys.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07886-102">此类提供了访问密钥 （也称为助记键） 的功能和视觉支持。</span><span class="sxs-lookup"><span data-stu-id="07886-102">This class provides both functional and visual support for access keys (also known as mnemonics).</span></span> <span data-ttu-id="07886-103">它经常用于启用对控件进行快速的键盘访问，例如<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="07886-103">It is frequently used to enable quick keyboard access to controls such as a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="07886-104">若要将分配<xref:System.Windows.Controls.Label>到<xref:System.Windows.Controls.Control>，将其设置<xref:System.Windows.Controls.Label.Target%2A>到应在用户按下访问键时获得焦点的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="07886-104">To assign a <xref:System.Windows.Controls.Label> to a <xref:System.Windows.Controls.Control>, set the <xref:System.Windows.Controls.Label.Target%2A> property to the control that should get focus when the user presses the access key.</span></span> <span data-ttu-id="07886-105">设置目标还原因[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]要用作目标控件的名称的标签的文本。</span><span class="sxs-lookup"><span data-stu-id="07886-105">Setting the target also causes [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] to use the text of the label as the name of the targeted control.</span></span> <span data-ttu-id="07886-106">有关详细信息，请参阅[可访问性](~/docs/framework/ui-automation/index.md)。</span><span class="sxs-lookup"><span data-stu-id="07886-106">For more information, see [Accessibility](~/docs/framework/ui-automation/index.md).</span></span>  
  
 <span data-ttu-id="07886-107">若要设置的访问密钥，前面添加下划线应访问密钥的字符。</span><span class="sxs-lookup"><span data-stu-id="07886-107">To set the access key, add an underscore before the character that should be the access key.</span></span> <span data-ttu-id="07886-108">如果内容中有多个下划线字符，只有第一个将转换为访问键;其他下划线显示为普通文本。</span><span class="sxs-lookup"><span data-stu-id="07886-108">If your content has multiple underscore characters, only the first one is converted into an access key; the other underscores appear as normal text.</span></span> <span data-ttu-id="07886-109">如果你想转换的访问密钥为下划线不是第一个下划线，使用两个连续的下划线的任何下划线之前你想要转换的一个。</span><span class="sxs-lookup"><span data-stu-id="07886-109">If the underscore that you want converted to the access key is not the first underscore, use two consecutive underscores for any underscores that precede the one that you want to convert.</span></span> <span data-ttu-id="07886-110">例如，下面的代码包含访问密钥，并将显示为 _Hello**W**orld:</span><span class="sxs-lookup"><span data-stu-id="07886-110">For example, the following code contains an access key and displays as _Hello**W**orld:</span></span>  
  
```  
<Label>__Hello_World</Label>   
```  
  
 <span data-ttu-id="07886-111">由于之前 H 下划线是双精度，W 键将注册为访问密钥。</span><span class="sxs-lookup"><span data-stu-id="07886-111">Because the underscore that precedes H is a double, the W key registers as the access key.</span></span>  
  
 <span data-ttu-id="07886-112">标签不可获得焦点，并且它不是一个制表位。</span><span class="sxs-lookup"><span data-stu-id="07886-112">A label is not focusable, and it is not a tab stop.</span></span> <span data-ttu-id="07886-113">有关详细信息，请参阅[焦点概述](~/docs/framework/wpf/advanced/focus-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="07886-113">For details, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="07886-114">A<xref:System.Windows.Controls.Label>是<xref:System.Windows.Controls.ContentControl>，这意味着，它可以包含任何类型 （如字符串、 一个映像或一个面板） 的单个对象。</span><span class="sxs-lookup"><span data-stu-id="07886-114">A <xref:System.Windows.Controls.Label> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="07886-115">有关更多信息，请参见 <xref:System.Windows.Controls.ContentControl> 类。</span><span class="sxs-lookup"><span data-stu-id="07886-115">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-label-control"></a><span data-ttu-id="07886-116">自定义标签控件</span><span class="sxs-lookup"><span data-stu-id="07886-116">Customizing the Label Control</span></span>  
 <span data-ttu-id="07886-117">若要将相同的属性设置应用于多个<xref:System.Windows.Controls.Label>控件，使用<xref:System.Windows.FrameworkElement.Style%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="07886-117">To apply the same property settings to multiple <xref:System.Windows.Controls.Label> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="07886-118">你可以修改默认<xref:System.Windows.Controls.ControlTemplate>提供独特外观的控件。</span><span class="sxs-lookup"><span data-stu-id="07886-118">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="07886-119">有关创建<xref:System.Windows.Controls.ControlTemplate>，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="07886-119">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="07886-120">若要查看的部件和特定于状态<xref:System.Windows.Controls.Label>，请参阅[标签样式和模板](~/docs/framework/wpf/controls/label-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="07886-120">To see the parts and states that are specific to the <xref:System.Windows.Controls.Label>, see [Label Styles and Templates](~/docs/framework/wpf/controls/label-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="07886-121">对于此控件的依赖项属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="07886-121">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="07886-122">如果属性设置的默认样式，该属性可能会更改从其默认值，如果控件出现在应用程序中。</span><span class="sxs-lookup"><span data-stu-id="07886-122">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="07886-123">桌面主题用应用程序运行时确定的默认样式。</span><span class="sxs-lookup"><span data-stu-id="07886-123">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="07886-124">有关详细信息，请参阅[默认 WPF 主题](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="07886-124">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07886-125">设置 visual 属性会仅造成影响该属性是否都存在于<xref:System.Windows.Controls.Label>控件的默认模板，并通过设置。</span><span class="sxs-lookup"><span data-stu-id="07886-125">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Label> control's default template and is set by using a .</span></span> <span data-ttu-id="07886-126">可以在的"更改 Visual 结构的控件"一节中找到的可视属性列表[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="07886-126">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07886-127">下面的示例演示如何创建<xref:System.Windows.Controls.Label>，使用绑定进行设置目标。</span><span class="sxs-lookup"><span data-stu-id="07886-127">The following example shows how to create a <xref:System.Windows.Controls.Label> that uses a binding to set the target.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 <span data-ttu-id="07886-128">下面的示例演示如何创建<xref:System.Windows.Controls.Label>，它具有访问键，并支持文本换行。</span><span class="sxs-lookup"><span data-stu-id="07886-128">The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping.</span></span>  
  
 [!code-xaml[LabelSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07886-129">Initializes a new instance of the <see cref="T:System.Windows.Controls.Label" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07886-129">Initializes a new instance of the <see cref="T:System.Windows.Controls.Label" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="label.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07886-130">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07886-130">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07886-131">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07886-131">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Label.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Target { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Label.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.NameReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07886-132">Gets or sets the element that receives focus when the user presses the label's access key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07886-132">Gets or sets the element that receives focus when the user presses the label's access key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07886-133">
            <see cref="T:System.Windows.UIElement" /> ，当用户按下访问键时获得焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07886-133">The <see cref="T:System.Windows.UIElement" /> that receives focus when the user presses the access key.</span>
          </span>
          <span data-ttu-id="07886-134">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07886-134">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07886-135">你可以提供不支持向提供的访问键的元素的键盘快捷方式<xref:System.Windows.Controls.Label>访问密钥和设置此属性。</span><span class="sxs-lookup"><span data-stu-id="07886-135">You can provide keyboard shortcuts to elements that don't support access keys by giving a <xref:System.Windows.Controls.Label> an access key and setting this property.</span></span> <span data-ttu-id="07886-136">通过将以下划线字符，它就像访问密钥之前立即放到标签分配访问键。</span><span class="sxs-lookup"><span data-stu-id="07886-136">Assign an access key to a label by placing an underscore immediately before the character that acts as the access key.</span></span> <span data-ttu-id="07886-137">可以在指定的访问密钥<xref:System.Windows.Controls.ContentControl.Content%2A>属性或通过设置<xref:System.Windows.Controls.ContentControl.Content%2A>到<xref:System.Windows.Controls.AccessText>对象。</span><span class="sxs-lookup"><span data-stu-id="07886-137">An access key can be specified in the <xref:System.Windows.Controls.ContentControl.Content%2A> property or by setting <xref:System.Windows.Controls.ContentControl.Content%2A> to an <xref:System.Windows.Controls.AccessText> object.</span></span>  
  
 <span data-ttu-id="07886-138">无法使用此属性来定义<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="07886-138">You cannot use this property to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="07886-139">例如，以下将编译，但不能正常工作： `<object.Target><UIElement../></object.Target>`。</span><span class="sxs-lookup"><span data-stu-id="07886-139">For example, the following compiles but is not functional: `<object.Target><UIElement../></object.Target>`.</span></span> <span data-ttu-id="07886-140">此属性提供对已在你的应用程序中定义的元素的引用。</span><span class="sxs-lookup"><span data-stu-id="07886-140">This property provides a reference to an element that is already defined in your application.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="07886-141">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="07886-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="07886-142">标识符字段</span><span class="sxs-lookup"><span data-stu-id="07886-142">Identifier field</span></span>|<xref:System.Windows.Controls.Label.TargetProperty>|  
|<span data-ttu-id="07886-143">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="07886-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="07886-144">无</span><span class="sxs-lookup"><span data-stu-id="07886-144">None</span></span>|  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="07886-145">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="07886-145">XAML Attribute Usage</span></span>  
  
```  
<Label Target=" nameOfExistingElement"/>  
  
```  
  
<a name="xamlPropertyElementUsage_Target"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="07886-146">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="07886-146">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_Target"></a>   
## <a name="xaml-values"></a><span data-ttu-id="07886-147">XAML 值</span><span class="sxs-lookup"><span data-stu-id="07886-147">XAML Values</span></span>  
 `nameOfExistingElement`  
 <span data-ttu-id="07886-148">名称<xref:System.Windows.UIElement>接收焦点时按下访问键。</span><span class="sxs-lookup"><span data-stu-id="07886-148">The name of <xref:System.Windows.UIElement> that receives focus when the access key is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07886-149">以下示例演示如何设置 <xref:System.Windows.Controls.Label.Target%2A> 的 <xref:System.Windows.Controls.Label> 属性。</span><span class="sxs-lookup"><span data-stu-id="07886-149">The following example shows how to set the <xref:System.Windows.Controls.Label.Target%2A> property of a <xref:System.Windows.Controls.Label>.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Label.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Label.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07886-150">Identifies the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07886-150">Identifies the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>