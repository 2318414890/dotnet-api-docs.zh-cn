<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="961c169ec3b6a9f966aeec699d100a7d5baf2fa7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30620451" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4de29-101">表示一个控件，该控件可用于显示或编辑无格式文本。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4de29-101">Represents a control that can be used to display or edit unformatted text.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-102">A<xref:System.Windows.Controls.TextBox>控件可以包含无格式的文本仅在其<xref:System.Windows.Controls.TextBox.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4de29-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="4de29-103">下图显示的示例<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="4de29-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="4de29-104">![文本框中的屏幕快照](~/add/media/ss-ctl-textbox.gif "文本框中的屏幕快照")</span><span class="sxs-lookup"><span data-stu-id="4de29-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="4de29-105">文本框中的示例</span><span class="sxs-lookup"><span data-stu-id="4de29-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="4de29-106"><xref:System.Windows.Controls.TextBox> 是一个由多个封装组件组成的复合控件。</span><span class="sxs-lookup"><span data-stu-id="4de29-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="4de29-107">因此，某些事件不向上冒泡到包含控件因为它们处理的封装的子元素。</span><span class="sxs-lookup"><span data-stu-id="4de29-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="4de29-108">因此，应用程序开发人员应侦听事件 （由前缀"预览"表示） 的隧道版本。</span><span class="sxs-lookup"><span data-stu-id="4de29-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="4de29-109"><xref:System.Windows.Controls.TextBox> 支持无格式的文本。</span><span class="sxs-lookup"><span data-stu-id="4de29-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="4de29-110">要求支持更丰富内容的应用程序，请参阅<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="4de29-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="4de29-111">对于需要接受密码或其他敏感输入的应用程序，请参阅<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="4de29-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="4de29-112">水平和垂直对齐文本内的<xref:System.Windows.Controls.TextBox>，可使用<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>和<xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4de29-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="4de29-113">对齐<xref:System.Windows.Controls.TextBox>页的布局中，可使用<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>和<xref:System.Windows.FrameworkElement.VerticalAlignment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4de29-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="4de29-114">若要隐藏的边框的最佳方式<xref:System.Windows.Controls.TextBox>设置<xref:System.Windows.Controls.Control.BorderThickness%2A>属性<xref:System.Windows.Controls.TextBox>到`0`。</span><span class="sxs-lookup"><span data-stu-id="4de29-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4de29-115"><xref:System.Windows.Controls.TextBox> 已为冒泡的内置处理<xref:System.Windows.UIElement.MouseUp>和<xref:System.Windows.UIElement.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="4de29-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="4de29-116">因此，自定义事件处理程序，侦听<xref:System.Windows.UIElement.MouseUp>或<xref:System.Windows.UIElement.MouseDown>事件从<xref:System.Windows.Controls.TextBox>将不会调用。</span><span class="sxs-lookup"><span data-stu-id="4de29-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="4de29-117">如果你需要对这些事件做出响应，侦听隧道<xref:System.Windows.UIElement.PreviewMouseUp>和<xref:System.Windows.UIElement.PreviewMouseDown>事件相反，或注册处理程序替换<xref:System.Windows.EventSetter.HandledEventsToo%2A>（后面这个选项才可通过代码） 的自变量。</span><span class="sxs-lookup"><span data-stu-id="4de29-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="4de29-118">不要标记处理除非有意想要禁用的事件<xref:System.Windows.Controls.TextBox>本机处理这些事件，并请注意这产生显著影响控件的[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4de29-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="4de29-119">滚动条上不可见<xref:System.Windows.Controls.TextBox>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="4de29-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="4de29-120">若要使滚动条可见，请设置<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A>和<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A>属性设置为<xref:System.Windows.Controls.ScrollBarVisibility.Visible>或<xref:System.Windows.Controls.ScrollBarVisibility.Auto>。</span><span class="sxs-lookup"><span data-stu-id="4de29-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="4de29-121">通常<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged>用于每当检测到事件中的文本<xref:System.Windows.Controls.TextBox>或<xref:System.Windows.Controls.RichTextBox>而不是更改<xref:System.Windows.UIElement.KeyDown>正如所料。</span><span class="sxs-lookup"><span data-stu-id="4de29-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="4de29-122">请参阅[如何： 在文本框中已更改检测时的文本](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md)有关示例。</span><span class="sxs-lookup"><span data-stu-id="4de29-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="4de29-123">自定义文本框控件</span><span class="sxs-lookup"><span data-stu-id="4de29-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="4de29-124">若要将相同的属性设置应用于多个<xref:System.Windows.Controls.TextBox>控件，使用<xref:System.Windows.FrameworkElement.Style%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4de29-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="4de29-125">你可以修改默认<xref:System.Windows.Controls.ControlTemplate>提供独特外观的控件。</span><span class="sxs-lookup"><span data-stu-id="4de29-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="4de29-126">有关创建<xref:System.Windows.Controls.ControlTemplate>，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="4de29-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="4de29-127">若要查看的部件和特定于状态<xref:System.Windows.Controls.TextBox>，请参阅[文本框中样式和模板](~/docs/framework/wpf/controls/textbox-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="4de29-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="4de29-128">对于此控件的依赖项属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="4de29-128">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="4de29-129">如果属性设置的默认样式，该属性可能会更改从其默认值，如果控件出现在应用程序中。</span><span class="sxs-lookup"><span data-stu-id="4de29-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="4de29-130">桌面主题用应用程序运行时确定的默认样式。</span><span class="sxs-lookup"><span data-stu-id="4de29-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="4de29-131">有关详细信息，请参阅[默认 WPF 主题](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="4de29-131">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4de29-132">设置 visual 属性会仅造成影响该属性是否都存在于<xref:System.Windows.Controls.TextBox>控件的默认模板，并通过设置。</span><span class="sxs-lookup"><span data-stu-id="4de29-132">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.TextBox> control's default template and is set by using a .</span></span> <span data-ttu-id="4de29-133">可以在的"更改 Visual 结构的控件"一节中找到的可视属性列表[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="4de29-133">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4de29-134">此示例演示如何使用文本属性设置的 TextBox 控件的初始文本内容。</span><span class="sxs-lookup"><span data-stu-id="4de29-134">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4de29-135">虽然可以使用该示例的可扩展应用程序标记语言 (XAML) 版本\<TextBox.Text > 标记放置在每个按钮的文本框中内容的文本两侧，则没有必要因为文本框中应用 ContentPropertyAttribute属性设为 Text 属性。</span><span class="sxs-lookup"><span data-stu-id="4de29-135">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="4de29-136">有关其他示例，请参阅本文档的 4.0 版本：[文本框中类](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx)。</span><span class="sxs-lookup"><span data-stu-id="4de29-136">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4de29-137">初始化 <see cref="T:System.Windows.Controls.TextBox" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-138">获取或设置插入符号的插入位置索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-138">Gets or sets the insertion position index of the caret.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-139">插入符号的从零开始的插入位置索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-139">The zero-based insertion position index of the caret.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-140">获取此属性将返回插入当前位置索引的插入符号 (请参阅<xref:System.Windows.Documents.TextPointer>有关"插入位置"等术语的信息)。</span><span class="sxs-lookup"><span data-stu-id="4de29-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="4de29-141">设置此属性将插入符号移动到指定的插入位置。</span><span class="sxs-lookup"><span data-stu-id="4de29-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="4de29-142">字符或元素标记之间的插入位置。</span><span class="sxs-lookup"><span data-stu-id="4de29-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-143">获取或设置向文本框中手动输入字符时如何确定字符的大小写格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-143">Gets or sets how characters are cased when they are manually entered into the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-144">
            <see cref="T:System.Windows.Controls.CharacterCasing" /> 值之一，指定如何确定手动输入字符的大小写格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span>
          </span>
          <span data-ttu-id="4de29-145">默认值为 <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-146">此属性不会影响以编程方式添加的字符。</span><span class="sxs-lookup"><span data-stu-id="4de29-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-147">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-148">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="4de29-149">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="4de29-150">无</span><span class="sxs-lookup"><span data-stu-id="4de29-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4de29-151">下面的示例演示如何使用<xref:System.Windows.Controls.TextBox.CharacterCasing%2A>属性要转换为大写的文本框中的所有手动输入的字符。</span><span class="sxs-lookup"><span data-stu-id="4de29-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-152">标识 <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4de29-153">清除文本框中的所有内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-153">Clears all the content from the text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4de29-154">要为其检索初始字符索引的行的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-154">The zero-based index of the line to retrieve the initial character index for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-155">返回指定行中第一个字符的从零开始的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-155">Returns the zero-based character index for the first character in the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-156">指定行中第一个字符的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-156">The zero-based index for the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="4de29-157">
            <see cref="T:System.Windows.Controls.TextBox" /> 坐标空间中一个要为其返回索引的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span>
          </span>
        </param>
        <param name="snapToText">
          <span data-ttu-id="4de29-158">如果指定点处没有字符，则 <see langword="true" /> 将返回最近的索引，<see langword="false" /> 将返回 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-158">
              <see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return –1 if there is no character at the specified point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-159">返回最接近指定点的字符的索引，该索引从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-159">Returns the zero-based index of the character that is closest to the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-160">最接近指定点的字符的索引；如果找不到有效的索引，则为 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-160">The index of the character that is closest to the specified point, or –1 if no valid index can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4de29-161">返回文本框中当前可见的第一行的行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-161">Returns the line index for the first line that is currently visible in the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-162">文本框中第一个可见行的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-162">The zero-based index for the first visible line in the text box.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4de29-163">返回文本框中当前可见的最后一行的行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-163">Returns the line index for the last line that is currently visible in the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-164">文本框中最后一个可见行的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-164">The zero-based index for the last visible line in the text box.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4de29-165">要为其检索关联的行索引的从零开始的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-165">The zero-based character index for which to retrieve the associated line index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-166">返回包含指定字符索引的行的从零开始的行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-166">Returns the zero-based line index for the line that contains the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-167">包含指定字符索引的行的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-167">The zero-based index for the line that contains the specified character index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4de29-168">要为其返回字符计数的从零开始的行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-168">The zero-based line index for which to return a character count.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-169">返回指定行中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-169">Returns the number of characters in the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-170">指定行中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-170">The number of characters in the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4de29-171">要为其检索当前显示的文本的行的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-171">The zero-based line index for which to retrieve the currently displayed text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-172">返回当前显示在指定的行的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-172">Returns the text that is currently displayed on the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-173">一个字符串，包含当前在指定行上显示的文本的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-173">A string containing a copy of the text currently visible on the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4de29-174">从零开始的字符索引，指示要从其开始搜索下一个拼写错误的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-174">The zero-based character index indicating a position from which to search for the next spelling error.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="4de29-175">
            <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，该值指定从指定 <c>charIndex</c> 开始搜索下一个拼写错误的方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <c>charIndex</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-176">返回文本框的内容中下一个拼写错误的起始字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-177">文本框的内容中下一个拼写错误的起始位置的字符索引；或者，如果不存在下一个拼写错误，则为 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-177">The character index for the beginning of the next spelling error in the contents of the text box, or –1 if no next spelling error exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-178">返回指定索引处字符的某个边缘的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-178">Returns the rectangle for an edge of the character at the specified index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4de29-179">要检索其边框的字符的字符索引，该索引从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-179">The zero-based character index of the character for which to retrieve the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-180">返回指定索引处字符的前边缘的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-180">Returns the rectangle for the leading edge of the character at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-181">指定字符索引处字符的前边缘的边框；如果无法确定边框，则为 <see cref="P:System.Windows.Rect.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-182">因为此方法将返回一个表示字符的边矩形，矩形的宽度为 0。</span><span class="sxs-lookup"><span data-stu-id="4de29-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4de29-183">要检索其边框的字符的字符索引，该索引从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-183">The zero-based character index of the character for which to retrieve the rectangle.</span>
          </span>
        </param>
        <param name="trailingEdge">
          <span data-ttu-id="4de29-184">如果获取字符的后边缘，则为 <see langword="true" />；如果获取字符的前边缘，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-184">
              <see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-185">返回指定索引处字符的前边缘或后边缘的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-186">指定字符索引处字符某个边缘的边框；如果无法确定边框，则为 <see cref="P:System.Windows.Rect.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-187">因为此方法将返回一个表示字符的边矩形，矩形的宽度为 0。</span><span class="sxs-lookup"><span data-stu-id="4de29-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4de29-188">
            <paramref name="charIndex" /> 为负，或大于内容的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-188">
              <paramref name="charIndex" /> is negative or is greater than the length of the content.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4de29-189">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-189">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-190">返回与指定字符索引处的任何拼写错误相关联的 <see cref="T:System.Windows.Controls.SpellingError" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-191">一个 <see cref="T:System.Windows.Controls.SpellingError" /> 对象，其中包含在由 <paramref name="charIndex" /> 指示的字符处发现的拼写错误的详细信息；如果指定字符处没有拼写错误，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4de29-192">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-192">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-193">返回包括指定字符的任何拼写错误的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-193">Returns the length of any spelling error that includes the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-194">包括由 charIndex 所指定字符的任何拼写错误的长度；或者，如果指定字符不属于某个拼写错误，则为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4de29-195">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-195">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-196">返回包括指定字符的任何拼写错误的起始字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-196">Returns the beginning character index for any spelling error that includes the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-197">包括由 <paramref name="charIndex" /> 所指定字符的任何拼写错误的起始字符索引；或者，如果指定字符不是某个拼写错误的一部分，则为 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or –1 if the specified character is not part of a spelling error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-198">获取文本框中的总行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-198">Gets the total number of lines in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-199">文本框中的总行数；如果布局信息不可用，则为 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-199">The total number of lines in the text box, or –1 if layout information is not available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-200">如果启用了文本换行，则更改文本框的宽度可能更改此值。</span><span class="sxs-lookup"><span data-stu-id="4de29-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="4de29-201">返回的值是在文本框中，无论多少是当前可见的行的总数。</span><span class="sxs-lookup"><span data-stu-id="4de29-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-202">获取 <see cref="T:System.Windows.Controls.TextBox" /> 的逻辑子元素的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-203">
            <see cref="T:System.Windows.Controls.TextBox" /> 的逻辑子元素的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-204"><xref:System.Windows.Controls.TextBox.LogicalChildren%2A>属性返回一个包含集合的枚举数<xref:System.String>，它等于<xref:System.Windows.Controls.TextBox.Text%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4de29-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-205">获取或设置可在文本框中手动输入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-206">可在文本框中手动输入的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-206">The maximum number of characters that can be manually entered into the text box.</span>
          </span>
          <span data-ttu-id="4de29-207">默认值为 0，指示没有限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-207">The default is 0, which indicates no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-208">此属性可用于将文本输入控件中的值，例如邮政编码和电话号码的长度限制。</span><span class="sxs-lookup"><span data-stu-id="4de29-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="4de29-209">此属性还可用于将输入数据时，使文本框控件中输入的文本不会超过数据库中的对应字段的最大长度要存储在数据库中的文本的长度限制。</span><span class="sxs-lookup"><span data-stu-id="4de29-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="4de29-210">此属性不会影响以编程方式添加的字符。</span><span class="sxs-lookup"><span data-stu-id="4de29-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="4de29-211">当此属性设置为 0 时，可以在控件中输入的文本的最大长度是仅受可用内存限制。</span><span class="sxs-lookup"><span data-stu-id="4de29-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-212">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-213">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="4de29-214">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="4de29-215">无</span><span class="sxs-lookup"><span data-stu-id="4de29-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4de29-216">下面的示例演示如何创建<xref:System.Windows.Controls.TextBox>与<xref:System.Windows.Controls.TextBox.MaxLength%2A>的 500 个字符。</span><span class="sxs-lookup"><span data-stu-id="4de29-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-217">标识 <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-218">获取或设置最大可见行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-218">Gets or sets the maximum number of visible lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-219">最大可见行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-219">The maximum number of visible lines.</span>
          </span>
          <span data-ttu-id="4de29-220">默认值为 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-220">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-221">获取此属性将返回的当前值<xref:System.Windows.Controls.TextBox.MaxLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="4de29-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="4de29-222">设置此属性将导致文本框中，若要调整大小如果可见行的数目超过指定的限制<xref:System.Windows.Controls.TextBox.MaxLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="4de29-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="4de29-223">此属性仅适用于可见的行，并不限制的实际行数。</span><span class="sxs-lookup"><span data-stu-id="4de29-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="4de29-224">具体取决于其配置中，在文本框中可能包含滚动是可访问的其他非可见的行。</span><span class="sxs-lookup"><span data-stu-id="4de29-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="4de29-225">如果<xref:System.Windows.FrameworkElement.Height%2A>属性显式设置上<xref:System.Windows.Controls.TextBox>、<xref:System.Windows.Controls.TextBox.MaxLines%2A>和<xref:System.Windows.Controls.TextBox.MinLines%2A>属性值将被忽略。</span><span class="sxs-lookup"><span data-stu-id="4de29-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-226">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-227">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="4de29-228">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4de29-229">下面的示例演示如何创建<xref:System.Windows.Controls.TextBox>与<xref:System.Windows.Controls.TextBox.MaxLines%2A>值为 5。</span><span class="sxs-lookup"><span data-stu-id="4de29-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4de29-230">
            <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 小于 <see cref="P:System.Windows.Controls.TextBox.MinLines" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-230">
              <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-231">标识 <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="4de29-232">一个 <see cref="T:System.Windows.Size" /> 结构，该结构指定针对文本框大小的约束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-233">按其内容设置文本框的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-233">Sizes the text box to its content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-234">一个 <see cref="T:System.Windows.Size" /> 结构，指示文本框的新大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-235">重写此方法以实现自定义调整大小行为。</span><span class="sxs-lookup"><span data-stu-id="4de29-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-236">获取或设置最小可见行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-236">Gets or sets the minimum number of visible lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-237">最小可见行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-237">The minimum number of visible lines.</span>
          </span>
          <span data-ttu-id="4de29-238">默认值为 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-238">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-239">获取此属性将返回的当前值<xref:System.Windows.Controls.TextBox.MinLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="4de29-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="4de29-240">设置此属性将导致文本框中，若要调整大小的可见的行数是否小于指定值<xref:System.Windows.Controls.TextBox.MinLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="4de29-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="4de29-241">如果<xref:System.Windows.FrameworkElement.Height%2A>属性显式设置上<xref:System.Windows.Controls.TextBox>、<xref:System.Windows.Controls.TextBox.MaxLines%2A>和<xref:System.Windows.Controls.TextBox.MinLines%2A>属性值将被忽略。</span><span class="sxs-lookup"><span data-stu-id="4de29-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-242">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-243">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="4de29-244">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4de29-245">下面的示例演示如何创建<xref:System.Windows.Controls.TextBox>与<xref:System.Windows.Controls.TextBox.MinLines%2A>值为 1。</span><span class="sxs-lookup"><span data-stu-id="4de29-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4de29-246">
            <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 大于 <see cref="P:System.Windows.Controls.TextBox.MaxLines" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-246">
              <see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-247">标识 <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4de29-248">为文本框创建并返回一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-249">文本框的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-250">此方法重写 <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4de29-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4de29-251">关联事件的自变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-251">Arguments for the associated event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-252">当存在于元素上的一个或多个依赖属性的有效值更改时被调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-253">此方法重写 <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4de29-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4de29-254">要滚动到视图中的行的从零开始的行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-254">The zero-based line index of the line to scroll into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-255">将指定行索引处的行滚动到视图中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-255">Scrolls the line at the specified line index into view.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-256">此方法使文本框中，通过将指定的行放入完整的视图所需的最小数量来滚动。</span><span class="sxs-lookup"><span data-stu-id="4de29-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="4de29-257">所做选择中第一个字符的从零开始的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-257">The zero-based character index of the first character in the selection.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4de29-258">选定内容的长度（以字符为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-258">The length of the selection, in characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-259">选择文本框中的文本范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-259">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4de29-260">
            <paramref name="start" /> 或 <paramref name="length" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-260">
              <paramref name="start" /> or <paramref name="length" /> is negative.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-261">获取或设置文本框中当前选择的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-261">Gets or sets the content of the current selection in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-262">文本框中当前选定的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-262">The currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-263">获取此属性返回字符串副本的当前选定的文本。</span><span class="sxs-lookup"><span data-stu-id="4de29-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="4de29-264">设置此属性使用指定的字符串来替换当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="4de29-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-265">获取或设置一个值，该值指示文本框中当前选择的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-266">文本框中当前选择的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-266">The number of characters in the current selection in the text box.</span>
          </span>
          <span data-ttu-id="4de29-267">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-267">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-268">获取此属性返回当前所选内容中的字符数。</span><span class="sxs-lookup"><span data-stu-id="4de29-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="4de29-269">将此属性设置调整为指定的值，固定所选内容的起始位置保持当前所选内容的长度。</span><span class="sxs-lookup"><span data-stu-id="4de29-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="4de29-270">一般情况下，当指定选择内容长度使所选内容，结束于某个无效的位置 （例如，之间回车和换行字符，或在标记），选择长度自动调整，以便获得的选择启动并结束在有效位置。</span><span class="sxs-lookup"><span data-stu-id="4de29-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4de29-271">
            <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> 设置为一个负值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-271">
              <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-272">获取或设置当前选择的起始位置的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-272">Gets or sets a character index for the beginning of the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-273">当前选择的起始位置的字符索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-273">The character index for the beginning of the current selection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-274">在其中指定选择内容长度将导致所做选择止回车和换行字符之间的情况下，选择长度自动增加 1，以便获得的选择跨越整个行结束标记。</span><span class="sxs-lookup"><span data-stu-id="4de29-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4de29-275">
            <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> 设置为一个负值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-275">
              <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="4de29-276">此对象的序列化服务管理器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-276">A serialization service manager object for this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-277">返回一个值，该值指示在序列化 <see cref="P:System.Windows.Controls.TextBox.Text" /> 对象期间，是否应对 <see cref="T:System.Windows.Controls.TextBox" /> 属性的有效值进行序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4de29-278">如果 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性应被序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-278">
              <see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="4de29-279">
            <paramref name="manager" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-279">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4de29-280">要作为子级添加的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-280">An object to add as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-281">在所有情况下均引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-281">Throws an exception in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-282"><xref:System.Windows.Controls.TextBox> 接受只会通过将文本<xref:System.Windows.Markup.IAddChild>接口。</span><span class="sxs-lookup"><span data-stu-id="4de29-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4de29-283">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-283">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4de29-284">在所有其他情况下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-284">In all other cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="4de29-285">要添加到该对象的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-285">A string to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4de29-286">将节点的文本内容添加到对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-286">Adds the text content of a node to the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-287">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4de29-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4de29-288">它只能在 <xref:System.Windows.Controls.TextBox> 实例强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4de29-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-289">获取或设置文本框的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-289">Gets or sets the text contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-290">包含此文本框的文本内容的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-290">A string containing the text contents of the text box.</span>
          </span>
          <span data-ttu-id="4de29-291">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-291">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-292">获取此属性返回字符串副本的文本框中的内容。</span><span class="sxs-lookup"><span data-stu-id="4de29-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="4de29-293">设置此属性与指定的字符串替换文本框中的内容。</span><span class="sxs-lookup"><span data-stu-id="4de29-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="4de29-294">此属性不支持动画。</span><span class="sxs-lookup"><span data-stu-id="4de29-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="4de29-295">当使用数据绑定方案中，此属性使用的默认更新行为<xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4de29-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="4de29-296">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="4de29-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-297">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-298">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="4de29-299">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="4de29-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="4de29-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-301">获取或设置文本框内容的水平对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-301">Gets or sets the horizontal alignment of the contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-302">
            <see cref="T:System.Windows.TextAlignment" /> 值之一，该值指定文本框内容的水平对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span>
          </span>
          <span data-ttu-id="4de29-303">默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-304">获取此属性返回当前对齐方式。</span><span class="sxs-lookup"><span data-stu-id="4de29-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="4de29-305">将此属性设置调整以反映指定的对齐方式的文本框的内容。</span><span class="sxs-lookup"><span data-stu-id="4de29-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="4de29-306">此属性的优先级高于<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4de29-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-307">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-308">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="4de29-309">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="4de29-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="4de29-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4de29-311">下面的示例演示如何创建<xref:System.Windows.Controls.TextBox>与<xref:System.Windows.Controls.TextBox.TextAlignment%2A>的<xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4de29-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-312">标识 <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-313">获取要应用到文本框的文本修饰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-313">Gets the text decorations to apply to the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-314">一个 <see cref="T:System.Windows.TextDecorationCollection" /> 集合，它包含应用于文本框的文本修饰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span>
          </span>
          <span data-ttu-id="4de29-315">默认值为 <see langword="null" />（不应用任何文本修饰）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-315">The default is <see langword="null" /> (no text decorations applied).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-316">A<xref:System.Windows.TextDecoration>对象是你可以将其添加到文本的视觉装饰。</span><span class="sxs-lookup"><span data-stu-id="4de29-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="4de29-317">文本修饰的四种类型： 下划线、 基线、 删除线和上划线。</span><span class="sxs-lookup"><span data-stu-id="4de29-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="4de29-318">文本修饰的详细信息，请参阅[如何： 创建文本效果](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md)。</span><span class="sxs-lookup"><span data-stu-id="4de29-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-319">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-320">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="4de29-321">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4de29-322">下面的示例演示如何设置<xref:System.Windows.Documents.Inline.TextDecorations%2A>属性，使用<xref:System.Windows.Documents.Run>作为示例元素。</span><span class="sxs-lookup"><span data-stu-id="4de29-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="4de29-323">下图显示了此示例的呈现效果。</span><span class="sxs-lookup"><span data-stu-id="4de29-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="4de29-324">![屏幕快照： 具有默认删除线效果的文本](~/add/media/inline-textdec-strike.png "屏幕快照： 具有默认删除线效果的文本")</span><span class="sxs-lookup"><span data-stu-id="4de29-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="4de29-325">下图显示了<xref:System.Windows.TextDecorations.OverLine%2A>， <xref:System.Windows.TextDecorations.Baseline%2A>，和<xref:System.Windows.TextDecorations.Underline%2A>修饰呈现，分别。</span><span class="sxs-lookup"><span data-stu-id="4de29-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="4de29-326">![屏幕快照： 上划线划线 TextDecorator](~/add/media/inline-textdec-over.png "屏幕快照： 上划线划线 TextDecorator")</span><span class="sxs-lookup"><span data-stu-id="4de29-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="4de29-327">![屏幕快照： 默认基线效果文本](~/add/media/inline-textdec-base.png "屏幕快照： 默认基线效果文本")</span><span class="sxs-lookup"><span data-stu-id="4de29-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="4de29-328">![屏幕快照： 具有默认下划线效果的文本](~/add/media/inline-textdec-under.png "屏幕快照： 具有默认下划线效果的文本")</span><span class="sxs-lookup"><span data-stu-id="4de29-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="4de29-329">下面的示例演示如何设置<xref:System.Windows.Documents.Inline.TextDecorations%2A>属性以编程方式。</span><span class="sxs-lookup"><span data-stu-id="4de29-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-330">标识 <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-331"><xref:System.Windows.Controls.TextBox.TextDecorations%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="4de29-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-332">标识 <see cref="P:System.Windows.Controls.TextBox.Text" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-333">获取或设置文本框中文本的换行方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-333">Gets or sets how the text box should wrap text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-334">
            <see cref="T:System.Windows.TextWrapping" /> 值之一，指示文本框对文本进行换行的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span>
          </span>
          <span data-ttu-id="4de29-335">默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-336">设置<xref:System.Windows.Controls.TextBox.TextWrapping%2A>属性设为<xref:System.Windows.TextWrapping.Wrap>会导致输入的文本换行到一个新行时的边缘<xref:System.Windows.Controls.TextBox>达到控件时，自动扩展的高度<xref:System.Windows.Controls.TextBox>控件为留出空间新行，如有必要。</span><span class="sxs-lookup"><span data-stu-id="4de29-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4de29-337">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="4de29-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4de29-338">标识符字段</span><span class="sxs-lookup"><span data-stu-id="4de29-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="4de29-339">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="4de29-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="4de29-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="4de29-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4de29-341">下面的示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="4de29-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-342">标识 <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-343"><xref:System.Windows.Controls.TextBox.TextWrapping%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="4de29-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4de29-344">获取文本框的文本内容的当前有效版式变体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-344">Gets the currently effective typography variations for the text contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4de29-345">一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span>
          </span>
          <span data-ttu-id="4de29-346">有关默认版式值的列表，请参见 <see cref="T:System.Windows.Documents.Typography" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4de29-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4de29-347"><xref:System.Windows.Documents.FlowDocument.Typography%2A>属性是仅适用于[!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)]字体。</span><span class="sxs-lookup"><span data-stu-id="4de29-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="4de29-348">版式变体不起上不支持该变体的字体。</span><span class="sxs-lookup"><span data-stu-id="4de29-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="4de29-349">有关此主题的详细信息，请参阅[WPF 中的版式](~/docs/framework/wpf/advanced/typography-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="4de29-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4de29-350">下面的示例演示如何设置<xref:System.Windows.Documents.TextElement.Typography%2A>属性，使用<xref:System.Windows.Documents.Paragraph>作为示例元素。</span><span class="sxs-lookup"><span data-stu-id="4de29-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="4de29-351">下图显示了此示例的呈现效果。</span><span class="sxs-lookup"><span data-stu-id="4de29-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="4de29-352">![屏幕快照： 改变版式的文本](~/add/media/textelement-typog.png "屏幕快照： 改变版式的文本")</span><span class="sxs-lookup"><span data-stu-id="4de29-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="4de29-353">与此相反，下图显示了一个具有默认版式属性的类似示例的呈现效果。</span><span class="sxs-lookup"><span data-stu-id="4de29-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="4de29-354">![屏幕快照： 改变版式的文本](~/add/media/textelement-typog-default.png "屏幕快照： 改变版式的文本")</span><span class="sxs-lookup"><span data-stu-id="4de29-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="4de29-355">下面的示例演示如何设置<xref:System.Windows.Controls.TextBox.Typography%2A>属性以编程方式。</span><span class="sxs-lookup"><span data-stu-id="4de29-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>