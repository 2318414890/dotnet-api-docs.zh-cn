<Type Name="StickyNoteControl" FullName="System.Windows.Controls.StickyNoteControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f772b88ddd0dfd2ed871022702de1de70c0bf8c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619741" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StickyNoteControl : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed StickyNoteControl extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StickyNoteControl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StickyNoteControl&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class StickyNoteControl sealed : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CloseButton", Type=typeof(System.Windows.Controls.Button))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_TitleThumb", Type=typeof(System.Windows.Controls.Primitives.Thumb))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ResizeBottomRightThumb", Type=typeof(System.Windows.Controls.Primitives.Thumb))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentControl", Type=typeof(System.Windows.Controls.ContentControl))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_IconButton", Type=typeof(System.Windows.Controls.Button))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CopyMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_PasteMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_InkMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_SelectMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_EraseMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示一个控件，该控件允许用户在文档中附加键入的文本或手写的批注。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 手写便笺提供其内容是独立于文本、 图像或其他材料注意定位到的矩形区域。  
  
 <xref:System.Windows.Controls.StickyNoteControl>类及其成员都是公开的以便它可以设置样式，但没有公共构造函数。  与创建实例<xref:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand>和<xref:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand>的<xref:System.Windows.Annotations.AnnotationService>类。  
  
 手写便笺创建时，它被指定为两种类型之一：  
  
-   **文本**粘滞便笺有<xref:System.Windows.Controls.RichTextBox>内容可以编写和编辑任何其他格式文本区域等区域。 用户可以在其中键入和还可以剪切、 复制和粘贴注意内部和之间注意和其他应用程序。 此外可将图像粘贴到注释中。 常见的多格式文本键盘快捷方式，还提供。  
  
-   **墨迹**粘滞便笺有<xref:System.Windows.Controls.InkCanvas>内容可编辑区域和它，如其他墨迹 canvasses。 例如，可以擦除笔划。 平板电脑或其他合适的硬件，用户可以输入手写的便笺。  
  
 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的<xref:System.Windows.Controls.StickyNoteControl>使它成为更强大的方法添加批注比标记硬拷贝或使用物理手写的便笺的材料。  它也是比只需将添加到，或通过文档的文本中深刻更灵活。  
  
-   可以调整大小粘滞便笺。  
  
-   可以最小化到一个图标和展开粘滞便笺。  
  
-   最大化时，手写便笺可以拖动到窗口中的新位置而不更改其定位点的位置。  
  
-   应用手写便笺的确切内容是突出显示，并用括号标出。  
  
-   两个或多个粘滞便笺可以应用到相同的内容或重叠的内容。  
  
-   当手写便笺定位到的文档内容发生变化时，手写便笺的位置将在相对于绑定到的内容的位置。  
  
-   使用文本手写便笺，将自动换行。 如果注释的大小调整，根据需要将重新换行。 如果内容延伸以下注释的底部，将显示垂直滚动条。  
  
-   使用墨迹手写便笺内容超出其中值得注意的边界时，将显示垂直和水平滚动条。  
  
   
  
## Examples  
 下面的示例演示菜单中的命令<xref:System.Windows.Controls.DocumentViewer>可以配置为执行<xref:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand>和<xref:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand>的<xref:System.Windows.Annotations.AnnotationService>类。 该示例演示如何读取[!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)]文档到<xref:System.Windows.Controls.DocumentViewer>控制，然后启用支持将添加用户创建粘滞便笺。  
  
 [!code-xaml[DocViewerAnnotationsXps#CreateDeleteAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml#createdeleteannotations)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Annotations.AnnotationService" />
  </Docs>
  <Members>
    <Member MemberName="AnchorInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Annotations.IAnchorInfo AnchorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Annotations.IAnchorInfo AnchorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.AnchorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnchorInfo As IAnchorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Annotations::IAnchorInfo ^ AnchorInfo { System::Windows::Annotations::IAnchorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.IAnchorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个提供有关批注对象的信息的对象。</summary>
        <value>一个提供有关批注对象的信息的 <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使您以匹配手写便笺与相应的带批注对象。  
  
 <xref:System.Windows.Controls.StickyNoteControl.AnchorInfo%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.Author" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取手写便笺创建者的姓名。</summary>
        <value>手写便笺创建者的姓名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Author"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.AuthorProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AuthorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AuthorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.AuthorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AuthorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AuthorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily CaptionFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily CaptionFontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamily ^ CaptionFontFamily { System::Windows::Media::FontFamily ^ get(); void set(System::Windows::Media::FontFamily ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题的字体系列。</summary>
        <value>控件标题的 <see cref="T:System.Drawing.FontFamily" />。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，读取或直接写入此属性。 应使用此属性仅在样式中<xref:System.Windows.Controls.StickyNoteControl>s。  
  
<a name="dependencyPropertyInfo_CaptionFontFamily"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontFamilyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontFamilyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontSize">
      <MemberSignature Language="C#" Value="public double CaptionFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CaptionFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CaptionFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的字号。</summary>
        <value>表示字号的 <see cref="T:System.Double" />。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，读取或直接写入此属性。 应使用此属性仅在样式中<xref:System.Windows.Controls.StickyNoteControl>s。  
  
<a name="dependencyPropertyInfo_CaptionFontSize"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontSizeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStretch">
      <MemberSignature Language="C#" Value="public System.Windows.FontStretch CaptionFontStretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStretch CaptionFontStretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontStretch As FontStretch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStretch CaptionFontStretch { System::Windows::FontStretch get(); void set(System::Windows::FontStretch value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的拉伸程度。</summary>
        <value>一个 <see cref="T:System.Windows.FontStretch" /> 结构，它表示与字体的正常纵横比相比拉伸的程度。 默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，读取或直接写入此属性。 应使用此属性仅在样式中<xref:System.Windows.Controls.StickyNoteControl>s。  
  
<a name="dependencyPropertyInfo_CaptionFontStretch"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStretchProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontStretchProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontStretchProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontStretchProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontStretchProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStyle">
      <MemberSignature Language="C#" Value="public System.Windows.FontStyle CaptionFontStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStyle CaptionFontStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontStyle As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStyle CaptionFontStyle { System::Windows::FontStyle get(); void set(System::Windows::FontStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的样式。</summary>
        <value>一个 <see cref="T:System.Windows.FontStyle" /> 结构，它表示标题的样式，如正常体、斜体或倾斜。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，读取或直接写入此属性。 应使用此属性仅在样式中<xref:System.Windows.Controls.StickyNoteControl>s。  
  
<a name="dependencyPropertyInfo_CaptionFontStyle"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontStyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontWeight">
      <MemberSignature Language="C#" Value="public System.Windows.FontWeight CaptionFontWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontWeight CaptionFontWeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontWeight As FontWeight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontWeight CaptionFontWeight { System::Windows::FontWeight get(); void set(System::Windows::FontWeight value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontWeight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题使用的字体的粗细。</summary>
        <value>一个 <see cref="T:System.Windows.FontWeight" /> 结构，它表示字体的粗细，如粗、超粗或超细。 默认为 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，读取或直接写入此属性。 应使用此属性仅在样式中<xref:System.Windows.Controls.StickyNoteControl>s。  
  
<a name="dependencyPropertyInfo_CaptionFontWeight"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontWeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontWeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontWeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontWeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontWeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNoteCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand DeleteNoteCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand DeleteNoteCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.DeleteNoteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteNoteCommand As RoutedCommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::RoutedCommand ^ DeleteNoteCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示一个命令，该命令的 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 方法删除一个 <see cref="T:System.Windows.Controls.StickyNoteControl" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InkCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand InkCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand InkCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.InkCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkCommand As RoutedCommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::RoutedCommand ^ InkCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示一个命令，该命令的 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 方法将墨迹手写便笺中的光标切换到几种可能的模式之一，包括绘制和擦除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用时，<xref:System.Windows.Controls.StickyNoteControl.InkCommand>采用类型的参数<xref:System.Windows.Controls.InkCanvasEditingMode>。 该命令<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法会将光标置于由参数指定的模式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkSchemaName">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName InkSchemaName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName InkSchemaName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.InkSchemaName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkSchemaName As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ InkSchemaName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取墨迹手写便笺批注的 XML 类型。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 是否处于活动状态。</summary>
        <value>
          如果该控件处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，直接读取此属性。  
  
<a name="dependencyPropertyInfo_IsActive"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.IsActiveProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsActive" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.IsActive%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 是否已展开。</summary>
        <value>
          如果该控件已展开，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，读取或直接写入此属性。  
  
<a name="dependencyPropertyInfo_IsExpanded"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.IsExpandedProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.IsExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsExpandedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsExpanded" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 标识符<xref:System.Windows.Controls.StickyNoteControl.IsExpanded%2A>依赖项属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverAnchor">
      <MemberSignature Language="C#" Value="public bool IsMouseOverAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOverAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOverAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOverAnchor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示鼠标光标是否位于 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 的定位标记上。</summary>
        <value>
          如果鼠标光标位于定位标记上，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，直接读取此属性。  
  
<a name="dependencyPropertyInfo_IsMouseOverAnchor"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverAnchorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverAnchorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverAnchorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverAnchorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverAnchorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>注册模板的所有子项的事件处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.OnApplyTemplate%2A> 自动应用后，执行控件墨迹或文本手写便笺模板到控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (args As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (args As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">To be added.</param>
        <param name="newTemplate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenWidth">
      <MemberSignature Language="C#" Value="public double PenWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.PenWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property PenWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PenWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置墨迹 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 的笔宽。</summary>
        <value>一个 <see cref="T:System.Double" />，它表示笔宽。 默认为 <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，读取或直接写入此属性。 应使用此属性仅在样式中<xref:System.Windows.Controls.StickyNoteControl>s。  
  
<a name="dependencyPropertyInfo_PenWidth"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.PenWidthProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>,<br /><br /> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.PenWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenWidthProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StickyNoteType">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StickyNoteType StickyNoteType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.StickyNoteType StickyNoteType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StickyNoteType As StickyNoteType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StickyNoteType StickyNoteType { System::Windows::Controls::StickyNoteType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StickyNoteType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示手写便笺是文本还是墨迹。</summary>
        <value>指示批注类型的 <see cref="T:System.Windows.Controls.StickyNoteType" /> 值。 默认值为 <see cref="F:System.Windows.Controls.StickyNoteType.Text" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 墨迹<xref:System.Windows.Controls.StickyNoteControl>可以用于在平板电脑或其他支持手写的输入的硬件的手写便笺。  
  
 我们建议你不尝试获取对实例的引用<xref:System.Windows.Controls.StickyNoteControl>且未，因此，直接读取此属性。 应使用此属性仅在样式中<xref:System.Windows.Controls.StickyNoteControl>s。  
  
<a name="dependencyPropertyInfo_StickyNoteType"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StickyNoteTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StickyNoteTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StickyNoteTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StickyNoteTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StickyNoteTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.StickyNoteType%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSchemaName">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName TextSchemaName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName TextSchemaName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.TextSchemaName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextSchemaName As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ TextSchemaName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文本手写便笺批注的 XML 类型。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>