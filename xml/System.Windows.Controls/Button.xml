<Type Name="Button" FullName="System.Windows.Controls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f27703fa71f05b80e008d54392bbc3de2d605ac" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52599079" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Button extends System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Controls::Primitives::ButtonBase" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e6013-101">表示 Windows 按钮控件，该按钮对 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件做出反应。</span><span class="sxs-lookup"><span data-stu-id="e6013-101">Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6013-102"><xref:System.Windows.Controls.Button>直接从类继承<xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="e6013-102">The <xref:System.Windows.Controls.Button> class inherits directly from the <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="e6013-103">**内容模型：** <xref:System.Windows.Controls.Button>是<xref:System.Windows.Controls.ContentControl>。</span><span class="sxs-lookup"><span data-stu-id="e6013-103">**Content Model:** <xref:System.Windows.Controls.Button> is a <xref:System.Windows.Controls.ContentControl>.</span></span> <span data-ttu-id="e6013-104">它的内容属性是<xref:System.Windows.Controls.ContentControl.Content%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6013-104">Its content property is <xref:System.Windows.Controls.ContentControl.Content%2A>.</span></span>  
  
 <span data-ttu-id="e6013-105">处理<xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType>事件来响应用户单击时<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="e6013-105">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> event to respond when the user clicks a <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="e6013-106"><xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>方法标记<xref:System.Windows.UIElement.MouseLeftButtonDown>为已处理的事件。</span><span class="sxs-lookup"><span data-stu-id="e6013-106">The <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled.</span></span> <span data-ttu-id="e6013-107">若要响应<xref:System.Windows.UIElement.MouseLeftButtonDown>事件，将附加到事件处理程序<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>事件或调用<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>与`handledEventsToo`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="e6013-107">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-button-control"></a><span data-ttu-id="e6013-108">自定义按钮控件</span><span class="sxs-lookup"><span data-stu-id="e6013-108">Customizing the Button Control</span></span>  
 <span data-ttu-id="e6013-109">若要将相同的属性设置应用到多个<xref:System.Windows.Controls.Button>控件，使用<xref:System.Windows.FrameworkElement.Style%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e6013-109">To apply the same property settings to multiple <xref:System.Windows.Controls.Button> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="e6013-110">可以修改默认<xref:System.Windows.Controls.ControlTemplate>为控件提供唯一外观。</span><span class="sxs-lookup"><span data-stu-id="e6013-110">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="e6013-111">有关创建的详细信息<xref:System.Windows.Controls.ControlTemplate>，请参阅[通过创建 ControlTemplate 自定义现有控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="e6013-111">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="e6013-112">若要查看的部件和状态的特定于<xref:System.Windows.Controls.Button>，请参阅[Button 样式和模板](~/docs/framework/wpf/controls/button-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="e6013-112">To see the parts and states that are specific to the <xref:System.Windows.Controls.Button>, see [Button Styles and Templates](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="e6013-113">该控件的依赖关系属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="e6013-113">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="e6013-114">如果属性设置为默认样式，该属性可能会更改从其默认值时该控件将出现在应用程序中。</span><span class="sxs-lookup"><span data-stu-id="e6013-114">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="e6013-115">桌面主题使用应用程序运行时确定的默认样式。</span><span class="sxs-lookup"><span data-stu-id="e6013-115">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="e6013-116">有关详细信息，请参阅[默认 WPF 主题](https://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="e6013-116">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6013-117">Visual 属性设置才会影响该属性是否都存在于<xref:System.Windows.Controls.Button>控件的默认模板，并使用设置。</span><span class="sxs-lookup"><span data-stu-id="e6013-117">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Button> control's default template and is set by using a .</span></span> <span data-ttu-id="e6013-118">可以在中的"更改可视结构控制"部分中找到的视觉对象属性列表[通过创建 ControlTemplate 自定义现有控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="e6013-118">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6013-119">下面的示例显示了三种不同方式响应的单击的三个按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-119">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="e6013-120">悬停： 第一个按钮时用户将鼠标悬停在按钮上改变颜色。</span><span class="sxs-lookup"><span data-stu-id="e6013-120">Hover: the first button changes colors when the user hovers with the mouse over the button.</span></span>  
  
-   <span data-ttu-id="e6013-121">按下： 第二个按钮要求当鼠标指针在按钮上时按下鼠标。</span><span class="sxs-lookup"><span data-stu-id="e6013-121">Press: the second button requires that the mouse be pressed while the mouse pointer is over the button.</span></span>  
  
-   <span data-ttu-id="e6013-122">版本： 第三个不会重置按钮的背景色，直到按下鼠标并将其释放的按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-122">Release: the third does not reset the background color of the buttons until the mouse is pressed and released on the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="e6013-123">WPF 控件库示例</span><span class="sxs-lookup"><span data-stu-id="e6013-123">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6013-124">初始化 <see cref="T:System.Windows.Controls.Button" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e6013-124">Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancel">
      <MemberSignature Language="C#" Value="public bool IsCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsCancel" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCancel : bool with get, set" Usage="System.Windows.Controls.Button.IsCancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6013-125">获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Button" /> 是否是一个“取消”按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-125">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is a Cancel button.</span></span> <span data-ttu-id="e6013-126">用户可以通过按 ESC 键来激活 Cancel 按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-126">A user can activate the Cancel button by pressing the ESC key.</span></span></summary>
        <value><span data-ttu-id="e6013-127">如果 <see cref="T:System.Windows.Controls.Button" /> 是“取消”按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e6013-127"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is a Cancel button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e6013-128">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e6013-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6013-129">当您将设置<xref:System.Windows.Controls.Button.IsCancel%2A>到按钮的属性`true`，创建<xref:System.Windows.Controls.Button>向注册<xref:System.Windows.Input.AccessKeyManager>。</span><span class="sxs-lookup"><span data-stu-id="e6013-129">When you set the <xref:System.Windows.Controls.Button.IsCancel%2A> property of a button to `true`, you create a <xref:System.Windows.Controls.Button> that is registered with the <xref:System.Windows.Input.AccessKeyManager>.</span></span> <span data-ttu-id="e6013-130">当用户按 ESC 键时激活该按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-130">The button is then activated when a user presses the ESC key.</span></span>  
  
<a name="dependencyPropertyInfo_IsCancel"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6013-131">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="e6013-131">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6013-132">标识符字段</span><span class="sxs-lookup"><span data-stu-id="e6013-132">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsCancelProperty>|  
|<span data-ttu-id="e6013-133">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="e6013-133">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6013-134">无</span><span class="sxs-lookup"><span data-stu-id="e6013-134">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6013-135">下面的示例演示如何使用此属性可以创建一个取消按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-135">The following example shows how to use this property to create a Cancel button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCancelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCancelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsCancelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCancelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCancelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCancelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsCancelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6013-136">标识 <see cref="P:System.Windows.Controls.Button.IsCancel" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="e6013-136">Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Windows.Controls.Button.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6013-137">获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Button" /> 是否是一个默认按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-137">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the default button.</span></span> <span data-ttu-id="e6013-138">用户可以通过按 ENTER 键调用默认按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-138">A user invokes the default button by pressing the ENTER key.</span></span></summary>
        <value><span data-ttu-id="e6013-139">如果 <see cref="T:System.Windows.Controls.Button" /> 是默认按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e6013-139"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is the default button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e6013-140">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e6013-140">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6013-141">当您将设置<xref:System.Windows.Controls.Button.IsDefault%2A>到按钮的属性`true`，注册与按钮<xref:System.Windows.Input.AccessKeyManager>，以便用户可以通过按 ENTER 键来调用该按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-141">When you set the <xref:System.Windows.Controls.Button.IsDefault%2A> property of a button to `true`, you register the button with the <xref:System.Windows.Input.AccessKeyManager> so that a user can invoke the button by pressing the ENTER key.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefault"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6013-142">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="e6013-142">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6013-143">标识符字段</span><span class="sxs-lookup"><span data-stu-id="e6013-143">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultProperty>|  
|<span data-ttu-id="e6013-144">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="e6013-144">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6013-145">无</span><span class="sxs-lookup"><span data-stu-id="e6013-145">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6013-146">下面的示例演示如何指定为默认按钮的按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-146">The following example shows how to specify a button as the default button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaulted">
      <MemberSignature Language="C#" Value="public bool IsDefaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaulted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaulted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaulted : bool" Usage="System.Windows.Controls.Button.IsDefaulted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6013-147">获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Button" /> 是否是在用户按下 ENTER 键时所激活的按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-147">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the button that is activated when a user presses ENTER.</span></span></summary>
        <value><span data-ttu-id="e6013-148">如果在用户按下 ENTER 键时激活该按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e6013-148"><see langword="true" /> if the button is activated when the user presses ENTER; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e6013-149">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e6013-149">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6013-150"><xref:System.Windows.Controls.Button.IsDefaulted%2A>属性是`true`时<xref:System.Windows.Controls.Button.IsDefault%2A>属性设置为`true`和具有焦点的控件不接受 enter 键作为输入。</span><span class="sxs-lookup"><span data-stu-id="e6013-150">The <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` when the <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true` and the control that has focus does not accept ENTER as input.</span></span>  <span data-ttu-id="e6013-151">例如，在**运行**对话框中，**确定**按钮是默认按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-151">For example, in the **Run** dialog box, the **OK** button is the default button.</span></span> <span data-ttu-id="e6013-152">当焦点位于文本框中，<xref:System.Windows.Controls.Button.IsDefaulted%2A>上**确定**按钮是`true`因为用户可以通过按 enter 键激活该按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-152">When focus is on the text box, <xref:System.Windows.Controls.Button.IsDefaulted%2A> on the **OK** button is `true` because a user can activate the button by pressing ENTER.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6013-153">如果默认按钮有焦点，<xref:System.Windows.Controls.Button.IsDefaulted%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="e6013-153">If the default button has focus, <xref:System.Windows.Controls.Button.IsDefaulted%2A> is `false`.</span></span> <span data-ttu-id="e6013-154">这是因为<xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A>方法处理 enter 键，并没有必要<xref:System.Windows.Controls.Button.IsDefaulted%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="e6013-154">This is because the <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> method handles ENTER, and it is not necessary for <xref:System.Windows.Controls.Button.IsDefaulted%2A> to be set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefaulted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6013-155">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="e6013-155">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6013-156">标识符字段</span><span class="sxs-lookup"><span data-stu-id="e6013-156">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultedProperty>|  
|<span data-ttu-id="e6013-157">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="e6013-157">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6013-158">无</span><span class="sxs-lookup"><span data-stu-id="e6013-158">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6013-159">下面的示例演示如何确定是否<xref:System.Windows.Controls.Button.IsDefaulted%2A>属性是`true`默认按钮。</span><span class="sxs-lookup"><span data-stu-id="e6013-159">The following example shows how to determine whether the <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` for a default button.</span></span>  
  
 [!code-csharp[ButtonProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml.cs#3)]
 [!code-vb[ButtonProps_snip#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ButtonProps_snip/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDefaultedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6013-160">标识 <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="e6013-160">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDefaultProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6013-161">标识 <see cref="P:System.Windows.Controls.Button.IsDefault" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="e6013-161">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick();" />
      <MemberSignature Language="F#" Value="override this.OnClick : unit -&gt; unit" Usage="button.OnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6013-162">单击 <see cref="T:System.Windows.Controls.Button" /> 时调用。</span><span class="sxs-lookup"><span data-stu-id="e6013-162">Called when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="button.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6013-163">为此控件创建一个适当的 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />，作为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基础结构的一部分。</span><span class="sxs-lookup"><span data-stu-id="e6013-163">Creates an appropriate <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="e6013-164">该控件的 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="e6013-164">A <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>