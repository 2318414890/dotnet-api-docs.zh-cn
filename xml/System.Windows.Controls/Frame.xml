<Type Name="Frame" FullName="System.Windows.Controls.Frame">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72d3016656e748b569c77bb8087b5058a7f6ca39" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694810" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Frame : System.Windows.Controls.ContentControl, System.Windows.Markup.IAddChild, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Frame extends System.Windows.Controls.ContentControl implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Frame" />
  <TypeSignature Language="VB.NET" Value="Public Class Frame&#xA;Inherits ContentControl&#xA;Implements IAddChild, IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class Frame : System::Windows::Controls::ContentControl, System::Windows::Markup::IAddChild, System::Windows::Markup::IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Navigated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Source")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_FrameCP", Type=typeof(System.Windows.Controls.ContentPresenter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>框架是一种支持导航的内容控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame> 是提供能够导航到并显示内容的内容控件。 <xref:System.Windows.Controls.Frame> 可以与其他控件和元素承载于其他内容。  
  
> [!CAUTION]
>  当<xref:System.Windows.Controls.Frame>控件导航到 HTML 内容<xref:System.Windows.Controls.Frame>控件内部实例化本机 WebBrowser ActiveX 控件。 WPF 通过将功能控制应用于的 WebBrowser ActiveX 控件中启用安全功能。 应用的功能控件不同于 Xbap 和独立应用程序。 某些应用程序应该应用附加功能控制以防止运行恶意内容。 有关详细信息，请参阅中的"web 浏览器控件和功能控件"一节[安全性 (WPF)](~/docs/framework/wpf/security-wpf.md)和[WebBrowser 控件概述和教程](http://go.microsoft.com/fwlink/?LinkId=179388)。  
  
 内容可以是任何类型的.NET Framework 对象和 HTML 文件。 一般情况下，但是，页面是首选导航的包内容的方式 (请参阅<xref:System.Windows.Controls.Page>)。  
  
 通过设置情况下，内容可以导航到<xref:System.Windows.Controls.Frame.Source%2A>的所需内容的 uri 的属性。 此外，内容可以导航到使用的以下重载之一<xref:System.Windows.Controls.Frame.Navigate%2A>方法：  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Uri%29>  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Uri%2CSystem.Object%29>  
  
 通过 URI，导航到内容<xref:System.Windows.Controls.Frame>返回包含内容的对象。 或者，内容可以导航到使用之一<xref:System.Windows.Controls.Frame.Navigate%2A>接受对象的方法重载：  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Object%29>  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Object%2CSystem.Object%29>  
  
 导航的生存期可以跟踪通过以下事件：  
  
-   <xref:System.Windows.Controls.Frame.Navigating>  
  
-   <xref:System.Windows.Controls.Frame.Navigated>  
  
-   <xref:System.Windows.Controls.Frame.NavigationProgress>  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed>  
  
-   <xref:System.Windows.Controls.Frame.NavigationStopped>  
  
-   <xref:System.Windows.Controls.Frame.LoadCompleted>  
  
-   <xref:System.Windows.Controls.Frame.FragmentNavigation>  
  
 并非所有事件都引发发生导航; 每次（取消、 已停止，或失败），将由导航发生 （内容或内容片段） 和如何完成导航的类型确定的一套引发的事件。  
  
 下图说明了这些事件的激发顺序的序列：  
  
 ![页面导航流程图](~/add/media/navigationoverviewfigure11.png "页面导航流程图")  
  
 期间或之后导航窗格中，<xref:System.Windows.Controls.Frame>提供信息，其中包括要导航到内容的 URI 导航目标的内容 (<xref:System.Windows.Controls.Frame.Source%2A>)，当前内容的 URI (<xref:System.Windows.Controls.Frame.CurrentSource%2A>)，并包含的对象导航到的内容 (<xref:System.Windows.Controls.ContentControl.Content%2A>)。  
  
 在内容导航到时,<xref:System.Windows.Controls.Frame>导航历史记录中记录为条目的导航。 添加一个条目后退导航历史记录，新导航时，通过调用<xref:System.Windows.Controls.Frame.Navigate%2A>方法，或通过导航到前进导航历史记录中的项通过调用<xref:System.Windows.Controls.Frame.GoForward%2A>。 条目添加到前进导航历史记录上，通过导航到条目后退导航历史记录，通过调用<xref:System.Windows.Controls.Frame.GoBack%2A>。 <xref:System.Windows.Controls.Frame.CanGoBack%2A> 和<xref:System.Windows.Controls.Frame.CanGoForward%2A>报告是否存在条目后退和前进导航历史记录，分别。  
  
 第一次一段的内容导航到另一段内容，从<xref:System.Windows.Controls.Frame>会自动显示导航用户界面，使用户能够向后导航并前进导航历史记录。 你可以配置导航 UI 会在显示时通过设置<xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A>属性。  
  
 默认情况下，<xref:System.Windows.Controls.Frame>仅当父导航器将使用其自己的导航历史记录 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 无法找到其自己的导航历史记录。 这意味着，帧的导航历史记录条目混合在一起导航历史记录条目与为父导航器。 若要指定<xref:System.Windows.Controls.Frame>管理其自己导航历史记录中，设置<xref:System.Windows.Controls.Frame.JournalOwnership%2A>属性<xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>。  
  
 最新条目后退导航历史记录可能会通过调用<xref:System.Windows.Controls.Frame.RemoveBackEntry%2A>。  
  
 <xref:System.Windows.Controls.Frame> 不导航历史记录中存储内容的对象的实例。 相反，<xref:System.Windows.Controls.Frame>创建使用导航历史记录导航到每次的内容对象的新实例。 此行为旨在时较大数字和大片的内容要导航到避免过多的内存消耗。 因此，内容的状态将不会保留从一个导航到下一步。 但是，WPF 提供了几种方法，使您可以导航历史记录中存储的一段内容的状态。  
  
 使用<xref:System.Windows.Controls.Frame.AddBackEntry%2A>，您还可以保留多个集的单个页面实例的状态。  
  
## <a name="customizing-the-frame-control"></a>自定义框架控件  
 若要将相同的属性设置应用于多个<xref:System.Windows.Controls.Frame>控件，使用<xref:System.Windows.FrameworkElement.Style%2A>属性。 你可以修改默认<xref:System.Windows.Controls.ControlTemplate>提供独特外观的控件。 有关创建<xref:System.Windows.Controls.ControlTemplate>，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  若要查看的部件和特定于状态<xref:System.Windows.Controls.Frame>，请参阅[框架样式和模板](~/docs/framework/wpf/controls/frame-styles-and-templates.md)。  
  
 对于此控件的依赖项属性可能由控件的默认样式设置。  如果属性设置的默认样式，该属性可能会更改从其默认值，如果控件出现在应用程序中。 桌面主题用应用程序运行时确定的默认样式。  有关详细信息，请参阅[默认 WPF 主题](http://go.microsoft.com/fwlink/?LinkID=158252)。  
  
> [!NOTE]
>  设置 visual 属性会仅造成影响该属性是否都存在于<xref:System.Windows.Controls.Frame>控件的默认模板，并通过设置。 可以在的"更改 Visual 结构的控件"一节中找到的可视属性列表[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  
  
   
  
## Examples  
 下面的示例演示如何创建一个简单<xref:System.Windows.Controls.Frame>控件并指定要加载从 URI 使用的初始源内容<xref:System.Windows.Controls.Frame.Source%2A>属性。  
  
 [!code-xaml[FrameSnippets#SetFrameSourceXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml1)]  
[!code-xaml[FrameSnippets#SetFrameSourceXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml2)]  
[!code-xaml[FrameSnippets#SetFrameSourceXAML3](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Frame ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Frame();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.Frame" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigator.AddBackEntry(System.Windows.Navigation.CustomContentState)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，该对象表示与特定内容片段关联的应用程序定义的状态。</param>
        <summary>向包含 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象的后退导航历史记录中添加一个条目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> 为 <see langword="null" />，并且未从 <see cref="T:System.Windows.Navigation.CustomContentState" /> 返回一个 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> 对象。</exception>
        <altmember cref="M:System.Windows.Controls.Frame.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected override void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddChild(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要添加的子对象。</param>
        <summary>添加子对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法被重写，因为<xref:System.Windows.Controls.Frame>不允许子级。 请改用<xref:System.Windows.Controls.ContentControl.Content%2A>属性来设置内容。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected override void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要添加到对象的文本。</param>
        <summary>将节点的文本内容添加到对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重写此方法以防止<xref:System.Windows.Controls.Frame>从添加文本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable BackStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable BackStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.BackStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackStack As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ BackStack { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.AppModel.INavigator.BackStack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返回一个 <see cref="T:System.Collections.IEnumerable" />，用于枚举 <see cref="T:System.Windows.Controls.Frame" /> 的后退导航历史记录中的条目。</summary>
        <value>
          如果至少向后退导航历史记录中添加了一个条目，则为 <see cref="T:System.Collections.IEnumerable" />。 如果没有条目，或者 <see cref="T:System.Windows.Controls.Frame" /> 没有自己的导航历史记录，则 <see cref="P:System.Windows.Controls.Frame.BackStack" /> 为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过返回的条目<xref:System.Windows.Controls.Frame.BackStack%2A>包括整个内容、 片段导航和自定义状态。  
  
<a name="dependencyPropertyInfo_FrameBackStack"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.BackStackProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
        <altmember cref="T:System.Windows.Navigation.CustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="BackStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.BackStackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackStackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackStackProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.BackStack" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.BackStack%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="protected virtual Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Frame" /> 的基 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Frame" /> 控件的基 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.BaseUri%2A> 可以设置以帮助解决方法的相对[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]进一步导航。  
  
 要获取或设置[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]的<xref:System.Windows.Controls.Frame>控制，请使用<xref:System.Windows.Controls.Frame.Source%2A>属性。  
  
 这是受保护的虚拟属性，不能直接使用，虽然可以在派生类中使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Markup.IUriContext.BaseUri" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.AppModel.INavigator.CanGoBack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示后退导航历史记录中是否至少有一个条目。</summary>
        <value>
          如果后退导航历史记录中至少有一个条目，则为 <see langword="true" />；如果后退导航历史记录中没有条目，或者 <see cref="T:System.Windows.Controls.Frame" /> 没有自己的导航历史记录，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A?displayProperty=nameWithType>。  
  
<a name="dependencyPropertyInfo_FrameCanGoBack"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.CanGoBackProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Frame.GoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
        <altmember cref="M:System.Windows.Controls.Frame.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoBackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoBackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.CanGoBackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanGoBackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CanGoBackProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.CanGoBack%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.AppModel.INavigator.CanGoForward</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示前进导航历史记录中是否至少有一个条目。</summary>
        <value>
          如果前进导航历史记录中至少有一个条目，则为 <see langword="true" />；如果前进导航历史记录中没有条目，或者 <see cref="T:System.Windows.Controls.Frame" /> 没有自己的导航历史记录，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Controls.Frame.CanGoForward%2A>。  
  
<a name="dependencyPropertyInfo_FrameCanGoForward"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.CanGoForwardProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Frame.GoForward" />
        <altmember cref="M:System.Windows.Controls.Frame.GoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoForwardProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoForwardProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.CanGoForwardProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanGoForwardProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CanGoForwardProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.CanGoForward%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.IDownloader.ContentRendered</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在呈现了 <see cref="T:System.Windows.Controls.Frame" /> 内容之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Controls.Frame>没有任何内容，则不会引发此事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.AppModel.INavigatorBase.CurrentSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上次导航到的内容的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</summary>
        <value>A<see cref="T:System.Uri" />内容的最后导航到，如果导航到使用 URI; 否则为<see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ForwardStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ForwardStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.ForwardStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForwardStack As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ ForwardStack { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.AppModel.INavigator.ForwardStack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Collections.IEnumerable" />，用于枚举 <see cref="T:System.Windows.Controls.Frame" /> 的前进导航历史记录中的条目。</summary>
        <value>如果前进导航历史记录中至少添加了一个条目，则为 <see cref="T:System.Collections.IEnumerable" /> 对象；如果没有条目，或者 <see cref="T:System.Windows.Controls.Frame" /> 没有自己的导航历史记录，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过返回的条目<xref:System.Windows.Controls.Frame.ForwardStack%2A>包括整个内容、 片段导航和自定义状态。  
  
<a name="dependencyPropertyInfo_FrameForwardStack"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.ForwardStackProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForwardStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForwardStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.ForwardStackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForwardStackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForwardStackProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.ForwardStack" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.ForwardStack%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.INavigatorBase.FragmentNavigation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当开始导航到某个内容片段时发生，如果所需片段位于当前内容中，它会立即发生；或者，如果所需片段位于不同内容中，它会在加载了源 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 内容之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GoBack();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigator.GoBack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果 <see cref="T:System.Windows.Controls.Frame" /> 管理自己的导航历史记录，则导航到后退导航历史记录中最近的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果由父导航器管理某个帧的导航历史记录 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)，则`GoBack`该导航器的方法或关联<xref:System.Windows.Navigation.NavigationService>必须调用对象：  
  
-   <xref:System.Windows.Controls.Frame.GoBack%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.GoBack%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          在调用 <see cref="M:System.Windows.Controls.Frame.GoBack" /> 时后退导航历史记录中没有条目。</exception>
        <altmember cref="P:System.Windows.Controls.Frame.CanGoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
        <altmember cref="M:System.Windows.Controls.Frame.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GoForward();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigator.GoForward</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果 <see cref="T:System.Windows.Controls.Frame" /> 管理自己的导航历史记录，则导航到前进导航历史记录中最近的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果由父导航器管理某个帧的导航历史记录 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)，则`GoForward`该导航器的方法或关联<xref:System.Windows.Navigation.NavigationService>必须调用对象：  
  
-   <xref:System.Windows.Controls.Frame.GoForward%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.GoForward%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.GoForward%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          在调用 <see cref="M:System.Windows.Controls.Frame.GoForward" /> 时后退导航历史记录中没有条目。</exception>
        <altmember cref="P:System.Windows.Controls.Frame.CanGoBack" />
        <altmember cref="M:System.Windows.Controls.Frame.GoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
      </Docs>
    </Member>
    <Member MemberName="JournalOwnership">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalOwnership JournalOwnership { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Navigation.JournalOwnership JournalOwnership" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.JournalOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Property JournalOwnership As JournalOwnership" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::JournalOwnership JournalOwnership { System::Windows::Navigation::JournalOwnership get(); void set(System::Windows::Navigation::JournalOwnership value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalOwnership</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Frame" /> 是负责管理自己的导航历史记录，还是将导航历史记录的管理工作交给父导航器 (<see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" />) 负责。</summary>
        <value>一个 <see cref="T:System.Windows.Navigation.JournalOwnership" /> 值，该值指定 <see cref="T:System.Windows.Controls.Frame" /> 是否管理自己的日记。 默认值为 <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Windows.Controls.Frame>仅当父导航主机将使用其自己的导航历史记录 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 找不到与它自己的日志 (例如，如果<xref:System.Windows.Controls.Frame>由承载的内容中承载<xref:System.Windows.Window>)。 若要强制<xref:System.Windows.Controls.Frame>要管理其自己的导航历史记录，将设置<xref:System.Windows.Controls.Frame.JournalOwnership%2A>到<xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>。  
  
<a name="dependencyPropertyInfo_FrameJournalOwnership"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.JournalOwnershipProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Controls.Frame>配置为使用其自己的导航历史记录。  
  
 [!code-xaml[FrameJournalOwnershipSnippetSample#SetJournalOwnershipProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameJournalOwnershipSnippetSample/CS/HomePage.xaml#setjournalownershipproperty)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JournalOwnershipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty JournalOwnershipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty JournalOwnershipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.JournalOwnershipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly JournalOwnershipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ JournalOwnershipProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.JournalOwnership%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.INavigatorBase.LoadCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当已加载、分析并开始呈现目标导航内容时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>异步导航到指定的源内容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (content As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Navigate(System::Object ^ content);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigatorBase.Navigate(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">一个 <see cref="T:System.Object" />，其中包含要导航到的内容。</param>
        <summary>异步导航到包含在某个对象中的内容。</summary>
        <returns>
          如果未取消导航，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的示例演示如何导航到包含在某个对象的内容。  
  
 [!code-csharp[HOWTONavigationSnippets#NavigateToPageObjCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopageobjcode)]
 [!code-vb[HOWTONavigationSnippets#NavigateToPageObjCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopageobjcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Navigate(Uri ^ source);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigatorBase.Navigate(System.Uri)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">使用所需内容的 URI 初始化的 <see cref="T:System.Uri" /> 对象。</param>
        <summary>异步导航到由[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 指定的内容。</summary>
        <returns>
          如果未取消导航，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)] 可以是相对或绝对。 有关详细信息，请参阅 [WPF 中的 Pack URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Windows.Controls.Frame.Navigate%2A>方法可导航到[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。  
  
 [!code-csharp[HOWTONavigationSnippets#NavigateToPageNavCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagenavcode)]
 [!code-vb[HOWTONavigationSnippets#NavigateToPageNavCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagenavcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (content As Object, extraData As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Navigate(System::Object ^ content, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigatorBase.Navigate(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">一个 <see cref="T:System.Object" />，其中包含要导航到的内容。</param>
        <param name="extraData">一个 <see cref="T:System.Object" />，其中包含要在导航过程中进行处理的数据。</param>
        <summary>异步导航到包含在某个对象中的内容，并传递一个对象，该对象包含要在导航过程中进行处理的数据。</summary>
        <returns>
          如果未取消导航，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, extraData As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Navigate(Uri ^ source, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigatorBase.Navigate(System.Uri,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">使用所需内容的 URI 初始化的 <see cref="T:System.Uri" /> 对象。</param>
        <param name="extraData">一个 <see cref="T:System.Object" />，其中包含要在导航过程中进行处理的数据。</param>
        <summary>异步导航到位于某个 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 的源内容，并传递一个对象，该对象包含要在导航过程中进行处理的数据。</summary>
        <returns>
          如果未取消导航，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.INavigatorBase.Navigated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>找到导航的目标内容且可通过 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性得到这些内容时发生，即使尚未加载完毕也是如此。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Navigated?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.INavigatorBase.Navigating</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>请求新导航时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.INavigatorBase.NavigationFailed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在导航到所需内容的同时遇到错误时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.INavigatorBase.NavigationProgress</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在下载过程中定期发生，用于提供定位进度信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationService">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationService NavigationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.NavigationService NavigationService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.NavigationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationService As NavigationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::NavigationService ^ NavigationService { System::Windows::Navigation::NavigationService ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.AppModel.IJournalNavigationScopeHost.NavigationService</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Windows.Navigation.NavigationService" /> 用来提供导航服务的 <see cref="T:System.Windows.Controls.Frame" />。</summary>
        <value>一个 <see cref="T:System.Windows.Controls.Frame" /> 对象，它表示此 <see cref="T:System.Windows.Navigation.NavigationService" /> 使用的 <see cref="T:System.Windows.Controls.Frame" />（如果有）。 否则将返回 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame> 使用<xref:System.Windows.Navigation.NavigationService>为托管内容导航提供支持。 <xref:System.Windows.Controls.Frame.NavigationService%2A> 可用于承载代码可<xref:System.Windows.Controls.Frame>获取对引用<xref:System.Windows.Navigation.NavigationService>。 由承载的内容<xref:System.Windows.Controls.Frame>，如<xref:System.Windows.Controls.Page>，应使用<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>或<xref:System.Windows.Controls.Page.NavigationService%2A>获取对引用<xref:System.Windows.Navigation.NavigationService>。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame.NavigationService%2A> 不返回对相同的引用<xref:System.Windows.Controls.Frame.NavigationService%2A>与调用<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>并传递<xref:System.Windows.Controls.Frame>未。 前者返回<xref:System.Windows.Controls.Frame.NavigationService%2A>由拥有<xref:System.Windows.Controls.Frame>而后者返回<xref:System.Windows.Controls.Frame.NavigationService%2A>导航到在其中的内容导航主机<xref:System.Windows.Controls.Frame>承载。 下面的代码演示了差异。  
  
 [!code-csharp[NSGNSvsFNSSnippets#NSFrameDiffCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGNSvsFNSSnippets/CSharp/Window1.xaml.cs#nsframediffcode1)]
 [!code-vb[NSGNSvsFNSSnippets#NSFrameDiffCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGNSvsFNSSnippets/visualbasic/window1.xaml.vb#nsframediffcode1)]  
[!code-csharp[NSGNSvsFNSSnippets#NSFrameDiffCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGNSvsFNSSnippets/CSharp/Window1.xaml.cs#nsframediffcode2)]
[!code-vb[NSGNSvsFNSSnippets#NSFrameDiffCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGNSvsFNSSnippets/visualbasic/window1.xaml.vb#nsframediffcode2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:MS.Internal.AppModel.INavigatorBase.NavigationStopped</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在调用 <see cref="M:System.Windows.Controls.Frame.StopLoading" /> 方法时发生，或者在当前导航正处于进行过程中时又请求一个新导航时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationUIVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationUIVisibility NavigationUIVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Navigation.NavigationUIVisibility NavigationUIVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.NavigationUIVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigationUIVisibility As NavigationUIVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::NavigationUIVisibility NavigationUIVisibility { System::Windows::Navigation::NavigationUIVisibility get(); void set(System::Windows::Navigation::NavigationUIVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationUIVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Frame" /> 何时可以显示其导航 UI。</summary>
        <value>A<see cref="T:System.Windows.Navigation.NavigationUIVisibility" />值，该值指定当<see cref="T:System.Windows.Controls.Frame" />可以显示其导航用户界面。 默认值为 <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Windows.Controls.Frame>自动显示其导航用户界面时的第一个条目添加到导航历史记录。 导航用户界面随后保持可见，并会后退或向前导航按钮变得相应地启用或禁用以反映的项数后退和前进导航历史记录。  
  
 你可以确保导航 UI 始终可见通过设置：  
  
1.  <xref:System.Windows.Navigation.NavigationUIVisibility> 至 <xref:System.Windows.Navigation.NavigationUIVisibility.Visible>  
  
2.  <xref:System.Windows.Controls.Frame.JournalOwnership%2A> 至 <xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>  
  
 你设置<xref:System.Windows.Navigation.NavigationUIVisibility>到<xref:System.Windows.Navigation.NavigationUIVisibility.Hidden>如果你想要隐藏导航用户界面。 这可能是这种情况，当导航用户界面不会从显示的内容的意义上<xref:System.Windows.Controls.Frame>，或者是因为你要提供自己导航用户界面。  
  
<a name="dependencyPropertyInfo_FrameJournalNavigationUIVisibility"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.NavigationUIVisibilityProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何确保的导航镶边<xref:System.Windows.Controls.Frame>将始终显示通过设置<xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A>到<xref:System.Windows.Navigation.NavigationUIVisibility.Visible>。  
  
 [!code-csharp[FrameNavigationUIVisibilitySnippets#SetNavigationUIVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/CSharp/Window1.xaml.cs#setnavigationuivisibility)]
 [!code-vb[FrameNavigationUIVisibilitySnippets#SetNavigationUIVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/visualbasic/window1.xaml.vb#setnavigationuivisibility)]
 [!code-xaml[FrameNavigationUIVisibilitySnippets#SetNavigationUIVisibility](~/samples/snippets/xaml/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/XAML/Window1.xaml#setnavigationuivisibility)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationUIVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NavigationUIVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NavigationUIVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NavigationUIVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NavigationUIVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在为可视化树创建模板生成时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Controls.Frame.ContentRendered" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.OnContentRendered%2A> 引发 <xref:System.Windows.Controls.Frame.ContentRendered> 事件。  
  
 派生自类型<xref:System.Windows.Controls.Frame>可能会重写<xref:System.Windows.Controls.Frame.OnContentRendered%2A>。 重写的方法必须调用<xref:System.Windows.Controls.Frame.OnContentRendered%2A>基本类如果<xref:System.Windows.Controls.Frame.ContentRendered>需要引发。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为此 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 创建并返回一个 <see cref="T:System.Windows.Controls.Frame" /> 对象。</summary>
        <returns>此 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 的 <see cref="T:System.Windows.Controls.Frame" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写 <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Refresh();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigatorBase.Refresh</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重新加载当前内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Refresh%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigator.RemoveBackEntry</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除后退历史记录中的最新日记条目。</summary>
        <returns>后退导航历史记录中的最新 <see cref="T:System.Windows.Navigation.JournalEntry" />（如果有）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContent">
      <MemberSignature Language="C#" Value="public bool SandboxExternalContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxExternalContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.SandboxExternalContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SandboxExternalContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SandboxExternalContent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Frame" /> 是否在一个部分信任的安全沙盒（具有默认的 <see langword="Internet" /> 权限集）中隔离外部 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 内容。</summary>
        <value>
          如果在一个部分信任的安全沙盒中隔离内容，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 外部内容是[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]未附随一个应用程序作为资源文件或内容文件的内容 (请参阅[WPF 应用程序资源、 内容和数据文件](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md))。  
  
 当<xref:System.Windows.Controls.Frame.SandboxExternalContent%2A>是`true`，和内容的源<xref:System.Windows.Controls.Frame>是外部[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]文件时，内容加载到仅限于默认值的部分信任安全沙盒`Internet`权限集。 外部内容随后加载到单独的进程。 因此，外部的内容将被隔离，不能应用程序范围内的资源，例如资源字典的访问 (请参阅<xref:System.Windows.ResourceDictionary>)。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame> 将仅包含外部内容时<xref:System.Windows.Controls.Frame.Source%2A>属性设置为[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]为外部[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]文件。 <xref:System.Windows.Controls.Frame> 使用提供的内容<xref:System.Windows.Controls.ContentControl.Content%2A>属性被视为内部内容，并随后，不会被隔离。  
  
<a name="dependencyPropertyInfo_FrameSandboxExternalContent"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.SandboxExternalContent%2A>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          当应用程序在部分信任的环境中执行时，将设置 <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SandboxExternalContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SandboxExternalContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.SandboxExternalContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SandboxExternalContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SandboxExternalContentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Frame.SandboxExternalContent%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContent">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.ShouldSerializeContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeContent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerializeContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>允许派生类确定 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的序列化行为。</summary>
        <returns>
          如果内容应序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:MS.Internal.AppModel.INavigatorBase.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前内容的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]，或当前正在导航到的新内容的 URI。</summary>
        <value>A <see cref="T:System.Uri" /> ，其中包含当前的内容，或当前导航到的内容 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.Source%2A?displayProperty=nameWithType>。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)] 可以是相对或绝对。 有关详细信息，请参阅 [WPF 中的 Pack URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)。  
  
<a name="dependencyPropertyInfo_FrameSource"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Frame.SourceProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## Examples  
 下面的示例演示如何导航到[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]通过设置<xref:System.Windows.Controls.Frame.Source%2A>属性。  
  
 [!code-csharp[HOWTONavigationSnippets#NavigateToPageSrcCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagesrccode)]
 [!code-vb[HOWTONavigationSnippets#NavigateToPageSrcCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagesrccode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.SourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SourceProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Frame.Source" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopLoading();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.AppModel.INavigatorBase.StopLoading</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止为当前导航请求下载更多内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请参阅 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.Frame.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System.Windows.Markup.IUriContext.BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
        <value>当前上下文的基 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Windows.Controls.Frame> 实例强制转换为 <xref:System.Windows.Markup.IUriContext> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Frame.BaseUri" />
      </Docs>
    </Member>
  </Members>
</Type>