<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CanExecuteRoutedEventHandler.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac540314ee81839ebd0b1ef25f5f831b2e68f2b0ad5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40314ee81839ebd0b1ef25f5f831b2e68f2b0ad5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The command target that is invoking the handler.</source>
          <target state="translated">调用处理程序的命令目标。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> event.</source>
          <target state="translated">表示用来处理 <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> 事件的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> determines if the command associated with the event source is able to execute on the command target.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph>确定是否可以对命令目标执行与事件源关联的命令。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>If the command has a command source that specifies a target, then the target information can be obtained through <ph id="ph1">`sender`</ph>.</source>
          <target state="translated">如果该命令具有命令源指定一个目标，则可以通过获取目标信息<ph id="ph1">`sender`</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;</ph> is not set, the element with keyboard focus is the target, and can also be obtained through <ph id="ph2">`sender`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;</ph>未设置，具有键盘焦点的元素是目标、 和也可以通过获取<ph id="ph2">`sender`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>If it is determined that the command can execute on the target, then the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType&gt;</ph> property should be set to <ph id="ph2">`true`</ph>; otherwise, set it to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果确定此命令可执行对目标，则<ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType&gt;</ph>属性应设置为<ph id="ph2">`true`</ph>; 否则为将其设置为<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>You do not need to rely on event data to determine the command, source, and target.</source>
          <target state="translated">不需要依赖于事件数据，以确定命令、 源和目标。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>You can limit the usage of the handler to known possible command invocations, although this is more difficult to accomplish if your command structure relies extensively on the command routing to execute the same command on successive potential targets in an event route.</source>
          <target state="translated">虽然这是更难完成如果命令结构进行了广泛依赖于要在后续事件中的潜在目标上执行同一命令的命令路由，可以限制可能所知的命令调用的处理程序的使用情况路由。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventHandler">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> that sets <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph>设置<ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph>到<ph id="ph3">`true`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>