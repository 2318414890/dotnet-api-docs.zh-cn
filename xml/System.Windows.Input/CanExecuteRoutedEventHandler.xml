<Type Name="CanExecuteRoutedEventHandler" FullName="System.Windows.Input.CanExecuteRoutedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void CanExecuteRoutedEventHandler(object sender, CanExecuteRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CanExecuteRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CanExecuteRoutedEventHandler(sender As Object, e As CanExecuteRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CanExecuteRoutedEventHandler(System::Object ^ sender, CanExecuteRoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="55583-101">调用处理程序的命令目标。</span><span class="sxs-lookup"><span data-stu-id="55583-101">The command target that is invoking the handler.</span></span></param>
    <param name="e"><span data-ttu-id="55583-102">事件数据。</span><span class="sxs-lookup"><span data-stu-id="55583-102">The event data.</span></span></param>
    <summary><span data-ttu-id="55583-103">表示用来处理 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="55583-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55583-104"><xref:System.Windows.Input.CanExecuteRoutedEventHandler>确定是否可以对命令目标执行与事件源关联的命令。</span><span class="sxs-lookup"><span data-stu-id="55583-104">The <xref:System.Windows.Input.CanExecuteRoutedEventHandler> determines if the command associated with the event source is able to execute on the command target.</span></span> <span data-ttu-id="55583-105">如果该命令具有命令源指定一个目标，则可以通过获取目标信息`sender`。</span><span class="sxs-lookup"><span data-stu-id="55583-105">If the command has a command source that specifies a target, then the target information can be obtained through `sender`.</span></span> <span data-ttu-id="55583-106">如果<xref:System.Windows.Input.ICommandSource.CommandTarget%2A>未设置，具有键盘焦点的元素是目标、 和也可以通过获取`sender`。</span><span class="sxs-lookup"><span data-stu-id="55583-106">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set, the element with keyboard focus is the target, and can also be obtained through `sender`.</span></span>  <span data-ttu-id="55583-107">如果确定此命令可执行对目标，则<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType>属性应设置为`true`; 否则为将其设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="55583-107">If it is determined that the command can execute on the target, then the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> property should be set to `true`; otherwise, set it to `false`.</span></span>  
  
 <span data-ttu-id="55583-108">不需要依赖于事件数据，以确定命令、 源和目标。</span><span class="sxs-lookup"><span data-stu-id="55583-108">You do not need to rely on event data to determine the command, source, and target.</span></span> <span data-ttu-id="55583-109">虽然这是更难完成如果命令结构进行了广泛依赖于要在后续事件中的潜在目标上执行同一命令的命令路由，可以限制可能所知的命令调用的处理程序的使用情况路由。</span><span class="sxs-lookup"><span data-stu-id="55583-109">You can limit the usage of the handler to known possible command invocations, although this is more difficult to accomplish if your command structure relies extensively on the command routing to execute the same command on successive potential targets in an event route.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55583-110">下面的示例演示<xref:System.Windows.Input.CanExecuteRoutedEventHandler>设置<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="55583-110">The following example shows a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> that sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  </Docs>
</Type>