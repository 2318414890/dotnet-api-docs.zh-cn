<Type Name="Manipulation" FullName="System.Windows.Input.Manipulation">
  <TypeSignature Language="C#" Value="public static class Manipulation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Manipulation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulation" />
  <TypeSignature Language="VB.NET" Value="Public Class Manipulation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Manipulation abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="54b70-101">包含用于获取和更新有关操作的信息的方法。</span><span class="sxs-lookup"><span data-stu-id="54b70-101">Contains methods to get and update information about a manipulation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54b70-102">触摸解释为应用于对象的实际操作时，将发生一次操作。</span><span class="sxs-lookup"><span data-stu-id="54b70-102">A manipulation occurs when touch is interpreted as a physical action that is applied to an object.</span></span> <span data-ttu-id="54b70-103">在 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 中，操作事件将输入解释为转换、扩展或旋转操作。</span><span class="sxs-lookup"><span data-stu-id="54b70-103">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation.</span></span> <span data-ttu-id="54b70-104">通常与通过定义的操作事件的操作交互<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="54b70-104">You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="54b70-105">但是，<xref:System.Windows.Input.Manipulation>类定义可以使用与操作进行交互的静态方法。</span><span class="sxs-lookup"><span data-stu-id="54b70-105">However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.</span></span>  
  
 <span data-ttu-id="54b70-106">有关操作的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="54b70-106">For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span> <span data-ttu-id="54b70-107">响应操作的应用程序的示例，请参阅[演练： 创建你的第一个 Touch 应用](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="54b70-107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddManipulator">
      <MemberSignature Language="C#" Value="public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-108">与该操控器关联的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-108">The element to associate the manipulator with.</span></span></param>
        <param name="manipulator"><span data-ttu-id="54b70-109">提供输入位置的对象，该输入创建操作或被添加到操作中。</span><span class="sxs-lookup"><span data-stu-id="54b70-109">The object that provides the position of the input that creates or is added to a manipulation.</span></span></param>
        <summary><span data-ttu-id="54b70-110">将 <see cref="T:System.Windows.Input.IManipulator" /> 对象与指定的元素关联。</span><span class="sxs-lookup"><span data-stu-id="54b70-110">Associates a <see cref="T:System.Windows.Input.IManipulator" /> object with the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54b70-111">如果`element`已经具有与之关联，操作`manipulator`添加到现有的操作。</span><span class="sxs-lookup"><span data-stu-id="54b70-111">If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation.</span></span> <span data-ttu-id="54b70-112">否则，创建新的操作。</span><span class="sxs-lookup"><span data-stu-id="54b70-112">Otherwise, a new manipulation is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54b70-113"><paramref name="element" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54b70-113"><paramref name="element" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="54b70-114">或</span><span class="sxs-lookup"><span data-stu-id="54b70-114">-or-</span></span>  
  
 <span data-ttu-id="54b70-115"><paramref name="manipulator" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54b70-115"><paramref name="manipulator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54b70-116">元素的 <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> 属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54b70-116">The <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> property on element is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public static void CompleteManipulation (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteManipulation(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompleteManipulation (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompleteManipulation(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-117">要对其完成操作的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-117">The element on which to complete manipulation.</span></span></param>
        <summary><span data-ttu-id="54b70-118">对指定元素完成活动操作。</span><span class="sxs-lookup"><span data-stu-id="54b70-118">Completes the active manipulation on the specified element.</span></span> <span data-ttu-id="54b70-119">调用时，将不再跟踪操作输入，并且指定元素的惯性将停止。</span><span class="sxs-lookup"><span data-stu-id="54b70-119">When called, manipulation input is no longer tracked and inertia on the specified element stops.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54b70-120">当<xref:System.Windows.Input.Manipulation.CompleteManipulation%2A>调用方法时，<xref:System.Windows.UIElement.ManipulationCompleted>引发事件。</span><span class="sxs-lookup"><span data-stu-id="54b70-120">When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetManipulationContainer(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationContainer (element As UIElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetManipulationContainer(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-121">存在活动操作的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-121">The element on which there is an active manipulation.</span></span></param>
        <summary><span data-ttu-id="54b70-122">获取定义操作坐标的容器。</span><span class="sxs-lookup"><span data-stu-id="54b70-122">Gets the container that defines the coordinates for the manipulation.</span></span></summary>
        <returns><span data-ttu-id="54b70-123">定义坐标空间的容器。</span><span class="sxs-lookup"><span data-stu-id="54b70-123">The container that defines the coordinate space.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ManipulationModes GetManipulationMode(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationMode (element As UIElement) As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationModes GetManipulationMode(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-124">要获取其操作模式的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-124">The element for which to get the manipulation mode.</span></span></param>
        <summary><span data-ttu-id="54b70-125">获取指定元素的 <see cref="T:System.Windows.Input.ManipulationModes" />。</span><span class="sxs-lookup"><span data-stu-id="54b70-125">Gets the <see cref="T:System.Windows.Input.ManipulationModes" /> for the specified element.</span></span></summary>
        <returns><span data-ttu-id="54b70-126">枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="54b70-126">One of the enumeration values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationPivot">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.ManipulationPivot GetManipulationPivot(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationPivot (element As UIElement) As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationPivot ^ GetManipulationPivot(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-127">存在操作的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-127">The element on which there is a manipulation.</span></span></param>
        <summary><span data-ttu-id="54b70-128">返回描述如何通过一个用户输入点发生旋转的对象。</span><span class="sxs-lookup"><span data-stu-id="54b70-128">Returns an object that describes how a rotation occurs with one point of user input.</span></span></summary>
        <returns><span data-ttu-id="54b70-129">描述如何使用一个用户输入点发生旋转的对象。</span><span class="sxs-lookup"><span data-stu-id="54b70-129">An object that describes how a rotation occurs with one point of user input.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationActive">
      <MemberSignature Language="C#" Value="public static bool IsManipulationActive (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsManipulationActive(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsManipulationActive (element As UIElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsManipulationActive(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-130">要检查的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-130">The element to check.</span></span></param>
        <summary><span data-ttu-id="54b70-131">获取一个值，该值指示操作是否与指定元素相关联。</span><span class="sxs-lookup"><span data-stu-id="54b70-131">Gets a value that indicates whether a manipulation is associated with the specified element.</span></span></summary>
        <returns>
          <span data-ttu-id="54b70-132">如果操作与指定元素关联，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54b70-132"><see langword="true" /> if a manipulation is associated with the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveManipulator">
      <MemberSignature Language="C#" Value="public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-133">要从其中移除关联的操控器的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-133">The element to remove the associated manipulator from.</span></span></param>
        <param name="manipulator"><span data-ttu-id="54b70-134">提供输入位置的对象。</span><span class="sxs-lookup"><span data-stu-id="54b70-134">The object that provides the position of the input.</span></span></param>
        <summary><span data-ttu-id="54b70-135">删除指定的 <see cref="T:System.Windows.Input.IManipulator" /> 对象与该元素之间的关联。</span><span class="sxs-lookup"><span data-stu-id="54b70-135">Removes the association between the specified <see cref="T:System.Windows.Input.IManipulator" /> object and the element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationContainer">
      <MemberSignature Language="C#" Value="public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationContainer(class System.Windows.UIElement element, class System.Windows.IInputElement container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationContainer (element As UIElement, container As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationContainer(System::Windows::UIElement ^ element, System::Windows::IInputElement ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="container" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-136">与操作关联的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-136">The element with which the manipulation is associated.</span></span></param>
        <param name="container"><span data-ttu-id="54b70-137">定义坐标空间的容器。</span><span class="sxs-lookup"><span data-stu-id="54b70-137">The container that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="54b70-138">设置元素，该元素定义指定元素的操作的坐标。</span><span class="sxs-lookup"><span data-stu-id="54b70-138">Sets the element that defines the coordinates for the manipulation of the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationMode">
      <MemberSignature Language="C#" Value="public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationMode(class System.Windows.UIElement element, valuetype System.Windows.Input.ManipulationModes mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationMode (element As UIElement, mode As ManipulationModes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationMode(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationModes mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="mode" Type="System.Windows.Input.ManipulationModes" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-139">要对其设置操作模式的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-139">The element on which to set the manipulation mode.</span></span></param>
        <param name="mode"><span data-ttu-id="54b70-140">新的操作模式。</span><span class="sxs-lookup"><span data-stu-id="54b70-140">The new manipulation mode.</span></span></param>
        <summary><span data-ttu-id="54b70-141">设置指定元素的操作模式。</span><span class="sxs-lookup"><span data-stu-id="54b70-141">Sets the mode of manipulation for the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationParameter(class System.Windows.UIElement element, class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationParameter (element As UIElement, parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationParameter(System::Windows::UIElement ^ element, System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-142">具有添加了参数的操作的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-142">The element that has the manipulation that the parameter is added to.</span></span></param>
        <param name="parameter"><span data-ttu-id="54b70-143">要添加的参数。</span><span class="sxs-lookup"><span data-stu-id="54b70-143">The parameter to add.</span></span></param>
        <summary><span data-ttu-id="54b70-144">将参数添加到指定元素的操作中。</span><span class="sxs-lookup"><span data-stu-id="54b70-144">Adds parameters to the manipulation of the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationPivot">
      <MemberSignature Language="C#" Value="public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationPivot(class System.Windows.UIElement element, class System.Windows.Input.ManipulationPivot pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationPivot (element As UIElement, pivot As ManipulationPivot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationPivot(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationPivot ^ pivot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="pivot" Type="System.Windows.Input.ManipulationPivot" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-145">具有活动操作的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-145">The element that has an active manipulation.</span></span></param>
        <param name="pivot"><span data-ttu-id="54b70-146">一个描述轴的对象。</span><span class="sxs-lookup"><span data-stu-id="54b70-146">An object that describes the pivot.</span></span></param>
        <summary><span data-ttu-id="54b70-147">设置指定元素的单点操作的轴。</span><span class="sxs-lookup"><span data-stu-id="54b70-147">Sets the pivot of the single-point manipulation of the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public static void StartInertia (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartInertia(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartInertia (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartInertia(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="54b70-148">要对其开始发生惯性的元素。</span><span class="sxs-lookup"><span data-stu-id="54b70-148">The element on which to begin inertia.</span></span></param>
        <summary><span data-ttu-id="54b70-149">停止操作并开始对指定元素发生惯性。</span><span class="sxs-lookup"><span data-stu-id="54b70-149">Stops the manipulation and begins inertia on the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>