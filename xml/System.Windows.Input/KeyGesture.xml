<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyGesture.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50502ad4878935fe7a08def19c5e36b616ab6ce52.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0502ad4878935fe7a08def19c5e36b616ab6ce52</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyGesture">
          <source>Defines a keyboard combination that can be used to invoke a command.</source>
          <target state="translated">定义可用来调用命令的组合键。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">在大多数情况下，<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>必须与一个或多个相关联<ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">此规则的例外是功能键和数字键盘键，可以是一个有效<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>For example, you can create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by using only the F12 key, but to use the X key in a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> it must be paired with a modifier key.</source>
          <target state="translated">例如，你可以创建<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>通过使用仅 F12 键，但若要使用 X 键中<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>具有修饰符键必须成对出现。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>In general, you can</source>
          <target state="translated">一般情况下，你可以</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>You can use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to an <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, so that the command is invoked when the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> occurs.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>绑定<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>到<ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>，以便调用此命令时<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>时发生。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usages, the property that is generally set in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>, in cases where the gesture represents both a standard key and a modifier key.</source>
          <target state="translated">有关<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph><ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>用法，通常在中设置的属性<ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>是<ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>，在某些情况下，笔势的标准键和修改键。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>You can also set the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> property to be just a function key, or just a modifier key combination.</source>
          <target state="translated">你还可以设置<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph>属性是只需的功能键或只需修饰符密钥组合。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>However, it is more common to set the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> property if the intended command binding is a function key with no modifiers, or <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> if the intended command binding is for modifier keys only.</source>
          <target state="translated">但是，它是更常见的是设置<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>属性预期的命令绑定是否具有任何修饰符的函数键或<ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>如果预期的命令绑定适用于仅修改键。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 属性用法</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>XAML Values</source>
          <target state="translated">XAML 值</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</source>
          <target state="translated">单个密钥值，该值必须是一个功能键 (F1-12) 或数字小键盘键。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>One or more modifier keys, defined by the <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> enumeration, delimited with a "+" character.</source>
          <target state="translated">一个或多个定义的修改键<ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>枚举，用"+"字符分隔。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>A single key value.</source>
          <target state="translated">单个密钥值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>The following example shows how to bind the <ph id="ph1">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph> command to a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> using a <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何将绑定<ph id="ph1">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph>命令<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>使用<ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>中<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>Note that the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage does not directly declare a <ph id="ph2">`&lt;KeyGesture&gt;`</ph> element.</source>
          <target state="translated">请注意，<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>用法不直接声明<ph id="ph2">`&lt;KeyGesture&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>That object element usage is not possible because <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> does not expose a public default constructor.</source>
          <target state="translated">对象元素用法不可能因为<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>未公开公共默认构造函数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyGesture">
          <source>Instead, the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage uses the typeconverter behavior to declare an entire <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> inline as the <ph id="ph3">`Gesture`</ph> attribute value.</source>
          <target state="translated">相反，<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>用法使用 typeconverter 行为来声明整个<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>作为内联<ph id="ph3">`Gesture`</ph>属性值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyGesture">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The key associated with this gesture.</source>
          <target state="translated">与此笔势关联的键。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 初始化 <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">在大多数情况下，<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>必须与一个或多个相关联<ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">此规则的例外是功能键和数字键盘键，可以是一个有效<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The following example shows how to use this constructor to create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and associate it with a <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用此构造函数创建<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>并将其与关联<ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> is then added to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>随后添加到<ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph>的<ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The key associated with the gesture.</source>
          <target state="translated">与笔势关联的键。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The modifier keys associated with the gesture.</source>
          <target state="translated">与笔势关联的修改键。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> 初始化 <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">在大多数情况下，<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>必须与一个或多个相关联<ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">此规则的例外是功能键和数字键盘键，可以是一个有效<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The following example shows how to use this constructor to create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and associate it with a <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用此构造函数创建<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>并将其与关联<ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> is then added to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph>随后添加到<ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph>的<ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> and <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> do not form a valid <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> 没有形成有效的 <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>The key associated with the gesture.</source>
          <target state="translated">与笔势关联的键。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>The modifier keys associated with the gesture.</source>
          <target state="translated">与笔势关联的修改键。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>A string representation of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>, and display string.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> 和显示字符串初始化 <ph id="ph3">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.DisplayString%2A&gt;</ph> property is set to the <ph id="ph2">`displayString`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.DisplayString%2A&gt;</ph>属性设置为<ph id="ph2">`displayString`</ph>参数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="modifiers" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="displayString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="displayString" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> and <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> do not form a valid <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="modifiers" /&gt;</ph> 没有形成有效的 <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>Gets a string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>The display string for this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 的显示字符串。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>If a display string was not set in the constructor, an empty string is returned.</source>
          <target state="translated">如果未在构造函数中设置了显示字符串，则返回空字符串。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.DisplayString">
          <source>If this property is empty, the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A&gt;</ph> method returns a string created from the <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph>.</source>
          <target state="translated">如果此属性为空，<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A&gt;</ph>方法返回的字符串创建从<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>The culture specific information.</source>
          <target state="translated">区域性特定信息。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>Returns a string that can be used to display the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">返回可用于显示 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 的字符串。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>The string to display</source>
          <target state="translated">要显示的字符串</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
          <source>If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph> with any necessary conversions being governed by the specified <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">如果显示字符串所设置的构造函数，则返回字符串;否则，将字符串创建从<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph>进行控制的任何必要的转换与由指定<ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>Gets the key associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 关联的键。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>The key associated with the gesture.</source>
          <target state="translated">与笔势关联的键。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">在大多数情况下，<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>必须与一个或多个相关联<ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Key">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">此规则的例外是功能键和数字键盘键，可以是一个有效<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>The target.</source>
          <target state="translated">目标。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>The input event data to compare this gesture to.</source>
          <target state="translated">要将此笔势与之比较的输入事件数据。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>Determines whether this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> matches the input associated with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.InputEventArgs" /&gt;</ph> object.</source>
          <target state="translated">确定此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 是否和与指定的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.InputEventArgs" /&gt;</ph> 对象关联的输入匹配。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event data matches this <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果事件数据与此 <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 匹配，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source><ph id="ph1">`targetElement`</ph> can be used to make a more specific decision on whether a command should be invoked on a specific element.</source>
          <target state="translated"><ph id="ph1">`targetElement`</ph> 可用来做出更具体决定是否应调用命令上的特定元素。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>The following example shows how to test whether a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> matches the input associated with an instance of an <ph id="ph2">&lt;xref:System.Windows.Input.InputEventArgs&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何测试是否<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>与实例关联的输入匹配<ph id="ph2">&lt;xref:System.Windows.Input.InputEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> event handler is created that compares the event data with the <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by using the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Matches%2A&gt;</ph> method.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph>比较将事件数据与创建事件处理程序<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>使用<ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture.Matches%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>Gets the modifier keys associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> 关联的修改键。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>The modifier keys associated with the gesture.</source>
          <target state="translated">与笔势关联的修改键。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>In most cases, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must be associated with one or more <ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">在大多数情况下，<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>必须与一个或多个相关联<ph id="ph2">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by themselves.</source>
          <target state="translated">此规则的例外是功能键和数字键盘键，可以是一个有效<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyGesture.Modifiers">
          <source>For example, you can create a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> by using only the F12 key, but to use the X key in a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> it must be paired with a modifier key.</source>
          <target state="translated">例如，你可以创建<ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>通过使用仅 F12 键，但若要使用 X 键中<ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>具有修饰符键必须成对出现。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>