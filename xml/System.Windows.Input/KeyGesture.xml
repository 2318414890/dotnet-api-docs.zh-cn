<Type Name="KeyGesture" FullName="System.Windows.Input.KeyGesture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0502ad4878935fe7a08def19c5e36b616ab6ce52" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGesture : System::Windows::Input::InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5ab98-101">定义可用来调用命令的组合键。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ab98-101">Defines a keyboard combination that can be used to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-102">在大多数情况下，<xref:System.Windows.Input.KeyGesture>必须与一个或多个相关联<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-102">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="5ab98-103">此规则的例外是功能键和数字键盘键，可以是一个有效<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="5ab98-103">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="5ab98-104">例如，你可以创建<xref:System.Windows.Input.KeyGesture>通过使用仅 F12 键，但若要使用 X 键中<xref:System.Windows.Input.KeyGesture>具有修饰符键必须成对出现。</span><span class="sxs-lookup"><span data-stu-id="5ab98-104">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 <span data-ttu-id="5ab98-105">一般情况下，你可以</span><span class="sxs-lookup"><span data-stu-id="5ab98-105">In general, you can</span></span>  
  
 <span data-ttu-id="5ab98-106">你可以使用<xref:System.Windows.Input.KeyBinding>绑定<xref:System.Windows.Input.KeyGesture>到<xref:System.Windows.Input.ICommand>，以便调用此命令时<xref:System.Windows.Input.KeyGesture>时发生。</span><span class="sxs-lookup"><span data-stu-id="5ab98-106">You can use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to an <xref:System.Windows.Input.ICommand>, so that the command is invoked when the <xref:System.Windows.Input.KeyGesture> occurs.</span></span>  
  
 <span data-ttu-id="5ab98-107">有关<xref:System.Windows.Input.KeyGesture>[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]用法，通常在中设置的属性[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是<xref:System.Windows.Input.KeyBinding.Gesture%2A>，在某些情况下，笔势的标准键和修改键。</span><span class="sxs-lookup"><span data-stu-id="5ab98-107">For <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.KeyBinding.Gesture%2A>, in cases where the gesture represents both a standard key and a modifier key.</span></span> <span data-ttu-id="5ab98-108">你还可以设置<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性是只需的功能键或只需修饰符密钥组合。</span><span class="sxs-lookup"><span data-stu-id="5ab98-108">You can also set the <xref:System.Windows.Input.KeyBinding.Gesture%2A> property to be just a function key, or just a modifier key combination.</span></span> <span data-ttu-id="5ab98-109">但是，它是更常见的是设置<xref:System.Windows.Input.KeyBinding.Key%2A>属性预期的命令绑定是否具有任何修饰符的函数键或<xref:System.Windows.Input.KeyBinding.Modifiers%2A>如果预期的命令绑定适用于仅修改键。</span><span class="sxs-lookup"><span data-stu-id="5ab98-109">However, it is more common to set the <xref:System.Windows.Input.KeyBinding.Key%2A> property if the intended command binding is a function key with no modifiers, or <xref:System.Windows.Input.KeyBinding.Modifiers%2A> if the intended command binding is for modifier keys only.</span></span>  
  
<a name="xamlAttributeUsage_KeyGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5ab98-110">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="5ab98-110">XAML Attribute Usage</span></span>  
  
```  
<object property="oneOrMoreModifierKeys+key"/>  
- or -  
<object property="functionKey"/>  
```  
  
<a name="xamlValues_KeyGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5ab98-111">XAML 值</span><span class="sxs-lookup"><span data-stu-id="5ab98-111">XAML Values</span></span>  
 `functionKey`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="5ab98-112">单个密钥值，该值必须是一个功能键 (F1-12) 或数字小键盘键。</span><span class="sxs-lookup"><span data-stu-id="5ab98-112">A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="5ab98-113">一个或多个定义的修改键<xref:System.Windows.Input.ModifierKeys>枚举，用"+"字符分隔。</span><span class="sxs-lookup"><span data-stu-id="5ab98-113">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 `key`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="5ab98-114">单个密钥值。</span><span class="sxs-lookup"><span data-stu-id="5ab98-114">A single key value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ab98-115">下面的示例演示如何将绑定<xref:System.Windows.Input.ApplicationCommands.Close%2A>命令<xref:System.Windows.Input.KeyGesture>使用<xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-115">The following example shows how to bind the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command to a <xref:System.Windows.Input.KeyGesture> using a <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 <span data-ttu-id="5ab98-116">下面的示例演示如何使用<xref:System.Windows.Input.KeyGesture>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="5ab98-116">The following example shows how to use <xref:System.Windows.Input.KeyGesture> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="5ab98-117">请注意，[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]用法不直接声明`<KeyGesture>`元素。</span><span class="sxs-lookup"><span data-stu-id="5ab98-117">Note that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage does not directly declare a `<KeyGesture>` element.</span></span> <span data-ttu-id="5ab98-118">对象元素用法不可能因为<xref:System.Windows.Input.KeyGesture>未公开公共默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="5ab98-118">That object element usage is not possible because <xref:System.Windows.Input.KeyGesture> does not expose a public default constructor.</span></span> <span data-ttu-id="5ab98-119">相反，[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]用法使用 typeconverter 行为来声明整个<xref:System.Windows.Input.KeyGesture>作为内联`Gesture`属性值。</span><span class="sxs-lookup"><span data-stu-id="5ab98-119">Instead, the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage uses the typeconverter behavior to declare an entire <xref:System.Windows.Input.KeyGesture> inline as the `Gesture` attribute value.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ab98-120">初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-120">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5ab98-121">与此笔势关联的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-121">The key associated with this gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ab98-122">使用指定的 <see cref="T:System.Windows.Input.KeyGesture" /> 初始化 <see cref="T:System.Windows.Input.Key" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-123">在大多数情况下，<xref:System.Windows.Input.KeyGesture>必须与一个或多个相关联<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-123">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="5ab98-124">此规则的例外是功能键和数字键盘键，可以是一个有效<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="5ab98-124">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ab98-125">下面的示例演示如何使用此构造函数创建<xref:System.Windows.Input.KeyGesture>并将其与关联<xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-125">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span>  <span data-ttu-id="5ab98-126"><xref:System.Windows.Input.KeyBinding>随后添加到<xref:System.Windows.Input.InputBindingCollection>的<xref:System.Windows.Window>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-126">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithnomodifier)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithnomodifier)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="5ab98-127">
            <paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.Key" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-127">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5ab98-128">
            <paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.KeyGesture" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-128">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5ab98-129">与笔势关联的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-129">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="5ab98-130">与笔势关联的修改键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-130">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ab98-131">使用指定的 <see cref="T:System.Windows.Input.KeyGesture" /> 和 <see cref="T:System.Windows.Input.Key" /> 初始化 <see cref="T:System.Windows.Input.ModifierKeys" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-131">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-132">在大多数情况下，<xref:System.Windows.Input.KeyGesture>必须与一个或多个相关联<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-132">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="5ab98-133">此规则的例外是功能键和数字键盘键，可以是一个有效<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="5ab98-133">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ab98-134">下面的示例演示如何使用此构造函数创建<xref:System.Windows.Input.KeyGesture>并将其与关联<xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-134">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span> <span data-ttu-id="5ab98-135"><xref:System.Windows.Input.KeyBinding>随后添加到<xref:System.Windows.Input.InputBindingCollection>的<xref:System.Windows.Window>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-135">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="5ab98-136">
            <paramref name="modifiers" /> 不是有效的 <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-136">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          </span>
          <span data-ttu-id="5ab98-137">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-137">-or-</span>
          </span>
          <span data-ttu-id="5ab98-138">
            <paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.Key" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-138">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5ab98-139">
            <paramref name="key" /> 和 <paramref name="modifiers" /> 没有形成有效的 <see cref="T:System.Windows.Input.KeyGesture" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-139">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers, string displayString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers, string displayString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers, System::String ^ displayString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
        <Parameter Name="displayString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="5ab98-140">与笔势关联的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-140">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="5ab98-141">与笔势关联的修改键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-141">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <param name="displayString">
          <span data-ttu-id="5ab98-142">
            <see cref="T:System.Windows.Input.KeyGesture" /> 的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-142">A string representation of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ab98-143">使用指定的 <see cref="T:System.Windows.Input.KeyGesture" />、<see cref="T:System.Windows.Input.Key" /> 和显示字符串初始化 <see cref="T:System.Windows.Input.ModifierKeys" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-143">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" />, and display string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-144"><xref:System.Windows.Input.KeyGesture.DisplayString%2A>属性设置为`displayString`参数。</span><span class="sxs-lookup"><span data-stu-id="5ab98-144">The <xref:System.Windows.Input.KeyGesture.DisplayString%2A> property is set to the `displayString` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="5ab98-145">
            <paramref name="modifiers" /> 不是有效的 <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-145">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          </span>
          <span data-ttu-id="5ab98-146">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-146">-or-</span>
          </span>
          <span data-ttu-id="5ab98-147">
            <paramref name="key" /> 不是有效的 <see cref="T:System.Windows.Input.Key" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-147">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5ab98-148">
            <paramref name="displayString" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-148">
              <paramref name="displayString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5ab98-149">
            <paramref name="key" /> 和 <paramref name="modifiers" /> 没有形成有效的 <see cref="T:System.Windows.Input.KeyGesture" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-149">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="DisplayString">
      <MemberSignature Language="C#" Value="public string DisplayString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.DisplayString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ab98-150">获取此 <see cref="T:System.Windows.Input.KeyGesture" /> 的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-150">Gets a string representation of this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ab98-151">此 <see cref="T:System.Windows.Input.KeyGesture" /> 的显示字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-151">The display string for this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="5ab98-152">默认值为 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-152">The default value is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-153">如果未在构造函数中设置了显示字符串，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="5ab98-153">If a display string was not set in the constructor, an empty string is returned.</span></span>  
  
 <span data-ttu-id="5ab98-154">如果此属性为空，<xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A>方法返回的字符串创建从<xref:System.Windows.Input.KeyGesture.Key%2A>和<xref:System.Windows.Input.KeyGesture.Modifiers%2A>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-154">If this property is empty, the <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> method returns a string created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayStringForCulture">
      <MemberSignature Language="C#" Value="public string GetDisplayStringForCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDisplayStringForCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDisplayStringForCulture (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDisplayStringForCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="5ab98-155">区域性特定信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-155">The culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ab98-156">返回可用于显示 <see cref="T:System.Windows.Input.KeyGesture" /> 的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-156">Returns a string that can be used to display the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ab98-157">要显示的字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-157">The string to display</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-158">如果显示字符串所设置的构造函数，则返回字符串;否则，将字符串创建从<xref:System.Windows.Input.KeyGesture.Key%2A>和<xref:System.Windows.Input.KeyGesture.Modifiers%2A>进行控制的任何必要的转换与由指定<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="5ab98-158">If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A> with any necessary conversions being governed by the specified <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ab98-159">获取与此 <see cref="T:System.Windows.Input.KeyGesture" /> 关联的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-159">Gets the key associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ab98-160">与笔势关联的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-160">The key associated with the gesture.</span>
          </span>
          <span data-ttu-id="5ab98-161">默认值为 <see cref="F:System.Windows.Input.Key.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-161">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-162">在大多数情况下，<xref:System.Windows.Input.KeyGesture>必须与一个或多个相关联<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-162">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="5ab98-163">此规则的例外是功能键和数字键盘键，可以是一个有效<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="5ab98-163">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement">
          <span data-ttu-id="5ab98-164">目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-164">The target.</span>
          </span>
        </param>
        <param name="inputEventArgs">
          <span data-ttu-id="5ab98-165">要将此笔势与之比较的输入事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-165">The input event data to compare this gesture to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ab98-166">确定此 <see cref="T:System.Windows.Input.KeyGesture" /> 是否和与指定的 <see cref="T:System.Windows.Input.InputEventArgs" /> 对象关联的输入匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-166">Determines whether this <see cref="T:System.Windows.Input.KeyGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ab98-167">如果事件数据与此 <see cref="T:System.Windows.Input.KeyGesture" /> 匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-167">
              <see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.KeyGesture" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-168">`targetElement` 可用来做出更具体决定是否应调用命令上的特定元素。</span><span class="sxs-lookup"><span data-stu-id="5ab98-168">`targetElement` can be used to make a more specific decision on whether a command should be invoked on a specific element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ab98-169">下面的示例演示如何测试是否<xref:System.Windows.Input.KeyGesture>与实例关联的输入匹配<xref:System.Windows.Input.InputEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-169">The following example shows how to test whether a <xref:System.Windows.Input.KeyGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="5ab98-170">A<xref:System.Windows.UIElement.KeyDown>比较将事件数据与创建事件处理程序<xref:System.Windows.Input.KeyGesture>使用<xref:System.Windows.Input.KeyGesture.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5ab98-170">A <xref:System.Windows.UIElement.KeyDown> event handler is created that compares the event data with the <xref:System.Windows.Input.KeyGesture> by using the <xref:System.Windows.Input.KeyGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlerkeygesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlerkeygesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ab98-171">获取与此 <see cref="T:System.Windows.Input.KeyGesture" /> 关联的修改键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-171">Gets the modifier keys associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ab98-172">与笔势关联的修改键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-172">The modifier keys associated with the gesture.</span>
          </span>
          <span data-ttu-id="5ab98-173">默认值为 <see cref="F:System.Windows.Input.ModifierKeys.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ab98-173">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ab98-174">在大多数情况下，<xref:System.Windows.Input.KeyGesture>必须与一个或多个相关联<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="5ab98-174">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="5ab98-175">此规则的例外是功能键和数字键盘键，可以是一个有效<xref:System.Windows.Input.KeyGesture>本身。</span><span class="sxs-lookup"><span data-stu-id="5ab98-175">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="5ab98-176">例如，你可以创建<xref:System.Windows.Input.KeyGesture>通过使用仅 F12 键，但若要使用 X 键中<xref:System.Windows.Input.KeyGesture>具有修饰符键必须成对出现。</span><span class="sxs-lookup"><span data-stu-id="5ab98-176">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
  </Members>
</Type>