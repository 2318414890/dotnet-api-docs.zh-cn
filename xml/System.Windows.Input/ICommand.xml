<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICommand.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ea5eff6a81bd27b0ab5ad70e628f1d59b7ee7f56.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea5eff6a81bd27b0ab5ad70e628f1d59b7ee7f56</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ICommand">
          <source>Defines a command.</source>
          <target state="translated">定义一个命令。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.RoutedUICommand&gt;</ph> are two implementations of the <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface in <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> 和<ph id="ph2">&lt;xref:System.Windows.Input.RoutedUICommand&gt;</ph>是两个实现的<ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>接口中<ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>ICommand in Windows Runtime apps</source>
          <target state="translated">ICommand 在 Windows 运行时应用</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph>接口是.NET for Windows Runtime 应用中编写的命令的代码协定。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML <ph id="ph1">`Button`</ph> and in particular an <ph id="ph2">`AppBarButton`</ph>.</source>
          <target state="translated">这些命令提供的 UI 元素，例如 Windows 运行时 XAML 的命令行为<ph id="ph1">`Button`</ph>，尤其<ph id="ph2">`AppBarButton`</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</source>
          <target state="translated">如果你要定义 Windows 运行时应用的命令你基本上使用相同的技术将用于定义.NET 应用程序的命令。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>Implement the command by defining a class that implements <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> and specifically implement the <ph id="ph2">&lt;xref:System.Windows.Input.ICommand.Execute%2A&gt;</ph> method.</source>
          <target state="translated">通过定义一个实现类中实现该命令<ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph>和专门实现<ph id="ph2">&lt;xref:System.Windows.Input.ICommand.Execute%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>XAML for Windows Runtime does not support x<ph id="ph1">`:Static`</ph>, so don't attempt to use the <ph id="ph2">`x:Static`</ph> markup extension if the command is used from Windows Runtime XAML.</source>
          <target state="translated">XAML 的 Windows 运行时不支持 x<ph id="ph1">`:Static`</ph>，因此不尝试使用<ph id="ph2">`x:Static`</ph>如果该命令用于从 Windows 运行时 XAML 的标记扩展。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</source>
          <target state="translated">此外，Windows 运行时没有任何预定义的命令库，因此此处所示的 XAML 语法不真正适用于这种情况，你在此实现该接口，并定义用于在 Windows 运行时使用的命令。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 属性用法</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName<ept id="p2">*</ept>"/&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName<ept id="p2">*</ept>"/&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName.predefinedCommandName<ept id="p2">*</ept>"/&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="<bpt id="p2">*</bpt>predefinedCommandName.predefinedCommandName<ept id="p2">*</ept>"/&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="{ <bpt id="p2">*</bpt>customClassName.customCommandName<ept id="p2">*</ept>}"/&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object property<ept id="p1">*</ept>="{ <bpt id="p2">*</bpt>customClassName.customCommandName<ept id="p2">*</ept>}"/&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>XAML Values</source>
          <target state="translated">XAML 值</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>predefinedClassName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>predefinedClassName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>One of the predefined command classes.</source>
          <target state="translated">预定义的命令类之一。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>predefinedCommandName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>predefinedCommandName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>One of the predefined commands.</source>
          <target state="translated">预定义的命令之一。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>customClassName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>customClassName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>A custom class that contains the custom command.</source>
          <target state="translated">一个包含自定义命令的自定义类。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>Custom classes generally require an <ph id="ph1">`xlmns`</ph> prefix mapping; see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.</source>
          <target state="translated">自定义类通常需要<ph id="ph1">`xlmns`</ph>的前缀映射; 请参阅<bpt id="p1">[</bpt>XAML 命名空间和 WPF XAML Namespace 映射<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source><bpt id="p1">*</bpt>customCommandName<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>customCommandName<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ICommand">
          <source>A custom command.</source>
          <target state="translated">自定义命令。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>Data used by the command.</source>
          <target state="translated">此命令使用的数据。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>If the command does not require data to be passed, this object can be set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果此命令不需要传递数据，则该对象可以设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>Defines the method that determines whether the command can execute in its current state.</source>
          <target state="translated">定义确定此命令是否可在其当前状态下执行的方法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this command can be executed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以执行此命令，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <source>Typically, a command source calls the <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph> method when the <ph id="ph2">&lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</ph> event is raised.</source>
          <target state="translated">通常情况下，调用命令源<ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph>方法时<ph id="ph2">&lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.ICommand.CanExecuteChanged">
          <source>Occurs when changes occur that affect whether or not the command should execute.</source>
          <target state="translated">当出现影响是否应执行该命令的更改时发生。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.ICommand.CanExecuteChanged">
          <source>Normally, a command source calls <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph> on the command when this event occurs.</source>
          <target state="translated">通常情况下，调用命令源<ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</ph>命令时将发生此事件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.ICommand.CanExecuteChanged">
          <source>Normally, if the command cannot execute, the command source disables itself.</source>
          <target state="translated">通常情况下，如果无法执行该命令，命令源禁用其自身。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.Execute(System.Object)">
          <source>Data used by the command.</source>
          <target state="translated">此命令使用的数据。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.Execute(System.Object)">
          <source>If the command does not require data to be passed, this object can be set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果此命令不需要传递数据，则该对象可以设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.ICommand.Execute(System.Object)">
          <source>Defines the method to be called when the command is invoked.</source>
          <target state="translated">定义在调用此命令时要调用的方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>