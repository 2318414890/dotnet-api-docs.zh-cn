<Type Name="CommandBinding" FullName="System.Windows.Input.CommandBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1da3a84af0b95449d1d9cdbf7be9006f58878991" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649371" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dbcba-101">将 <see cref="T:System.Windows.Input.RoutedCommand" /> 绑定到实现该命令的事件处理程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dbcba-101">Binds a <see cref="T:System.Windows.Input.RoutedCommand" /> to the event handlers that implement the command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbcba-102">A<xref:System.Windows.Input.CommandBinding>将与命令关联<xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed>和<xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute>事件实现并确定命令的状态。</span><span class="sxs-lookup"><span data-stu-id="dbcba-102">A <xref:System.Windows.Input.CommandBinding> associates a command with the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> and <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events which implement and determine the status of the command.</span></span>  
  
 <span data-ttu-id="dbcba-103">当<xref:System.Windows.Input.RoutedCommand.Execute%2A>或<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>方法<xref:System.Windows.Input.RoutedCommand>调用时， <xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed>或<xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute>对命令目标引发事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-103">When the <xref:System.Windows.Input.RoutedCommand.Execute%2A> or <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> or the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events are raised on the command target.</span></span>  <span data-ttu-id="dbcba-104">如果对命令目标有<xref:System.Windows.Input.CommandBinding>对于命令，调用相应的处理程序。</span><span class="sxs-lookup"><span data-stu-id="dbcba-104">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the appropriate handlers are called.</span></span>  <span data-ttu-id="dbcba-105">如果命令目标没有<xref:System.Windows.Input.CommandBinding>对于命令，事件路由通过元素树具有的元素，直到<xref:System.Windows.Input.CommandBinding>找到。</span><span class="sxs-lookup"><span data-stu-id="dbcba-105">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the events are routed through the element tree until an element that has a <xref:System.Windows.Input.CommandBinding> is found.</span></span>  
  
 <span data-ttu-id="dbcba-106">A<xref:System.Windows.Input.CommandBinding>具有有限的使用与<xref:System.Windows.Input.ICommand>不<xref:System.Windows.Input.RoutedCommand>。</span><span class="sxs-lookup"><span data-stu-id="dbcba-106">A <xref:System.Windows.Input.CommandBinding> has limited use with an <xref:System.Windows.Input.ICommand> that is not a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="dbcba-107">这是因为<xref:System.Windows.Input.CommandBinding>绑定到命令<xref:System.Windows.Input.ExecutedRoutedEventHandler>和<xref:System.Windows.Input.CanExecuteRoutedEventHandler>其侦听<xref:System.Windows.Input.CommandManager.Executed>和<xref:System.Windows.Input.CommandManager.CanExecute>路由事件时引发<xref:System.Windows.Input.RoutedCommand.Execute%2A>和<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>方法<xref:System.Windows.Input.RoutedCommand>调用。</span><span class="sxs-lookup"><span data-stu-id="dbcba-107">This is because a <xref:System.Windows.Input.CommandBinding> binds the command to the <xref:System.Windows.Input.ExecutedRoutedEventHandler> and the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which listen to the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> routed events which are raised when the <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of the <xref:System.Windows.Input.RoutedCommand> are called.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dbcba-108">初始化 <see cref="T:System.Windows.Input.CommandBinding" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-108">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dbcba-109">初始化 <see cref="T:System.Windows.Input.CommandBinding" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-109">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="dbcba-110">新的 <see cref="T:System.Windows.Input.RoutedCommand" /> 所基于的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-110">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dbcba-111">使用指定的 <see cref="T:System.Windows.Input.CommandBinding" /> 初始化 <see cref="T:System.Windows.Input.ICommand" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-111">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="dbcba-112">新的 <see cref="T:System.Windows.Input.RoutedCommand" /> 所基于的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-112">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <param name="executed">
          <span data-ttu-id="dbcba-113">新 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 上的 <see cref="T:System.Windows.Input.RoutedCommand" /> 事件的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-113">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dbcba-114">使用指定的 <see cref="T:System.Windows.Input.CommandBinding" /> 和指定的 <see cref="T:System.Windows.Input.ICommand" /> 事件处理程序初始化 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-114">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed, System.Windows.Input.CanExecuteRoutedEventHandler canExecute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed, class System.Windows.Input.CanExecuteRoutedEventHandler canExecute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler, canExecute As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed, System::Windows::Input::CanExecuteRoutedEventHandler ^ canExecute);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
        <Parameter Name="canExecute" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="dbcba-115">新的 <see cref="T:System.Windows.Input.RoutedCommand" /> 所基于的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-115">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span>
          </span>
        </param>
        <param name="executed">
          <span data-ttu-id="dbcba-116">新 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 上的 <see cref="T:System.Windows.Input.RoutedCommand" /> 事件的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-116">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <param name="canExecute">
          <span data-ttu-id="dbcba-117">新 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 上的 <see cref="T:System.Windows.Input.RoutedCommand" /> 事件的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-117">The handler for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dbcba-118">使用指定的 <see cref="T:System.Windows.Input.CommandBinding" /> 和指定的 <see cref="T:System.Windows.Input.ICommand" /> 及 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件处理程序初始化 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-118">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event handlers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler CanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler CanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.CanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event CanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ CanExecute;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbcba-119">在与此 <see cref="T:System.Windows.Input.CommandBinding" /> 关联的命令开始检查能否对命令目标执行该命令时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-119">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbcba-120">当<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>方法<xref:System.Windows.Input.RoutedCommand>调用时，<xref:System.Windows.Input.CommandBinding.PreviewCanExecute>对命令目标引发事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-120">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target.</span></span>  <span data-ttu-id="dbcba-121">如果不处理该事件，<xref:System.Windows.Input.CommandBinding.CanExecute>引发事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-121">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  <span data-ttu-id="dbcba-122">如果对命令目标有<xref:System.Windows.Input.CommandBinding>对于命令，<xref:System.Windows.Input.CommandBinding.CanExecute>处理程序<xref:System.Windows.Input.CommandBinding>调用。</span><span class="sxs-lookup"><span data-stu-id="dbcba-122">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="dbcba-123">如果命令目标没有<xref:System.Windows.Input.CommandBinding>对于命令，<xref:System.Windows.Input.CommandBinding.CanExecute>事件气泡搜索具有的元素，在元素树中向上<xref:System.Windows.Input.CommandBinding>与命令关联。</span><span class="sxs-lookup"><span data-stu-id="dbcba-123">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  
  
<a name="routedEventInfo_CanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dbcba-124">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="dbcba-124">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dbcba-125">标识符字段</span><span class="sxs-lookup"><span data-stu-id="dbcba-125">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.CanExecuteEvent>|  
|<span data-ttu-id="dbcba-126">路由策略</span><span class="sxs-lookup"><span data-stu-id="dbcba-126">Routing strategy</span></span>|<span data-ttu-id="dbcba-127">冒泡</span><span class="sxs-lookup"><span data-stu-id="dbcba-127">Bubbling</span></span>|  
|<span data-ttu-id="dbcba-128">委托</span><span class="sxs-lookup"><span data-stu-id="dbcba-128">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="dbcba-129">对应的隧道事件<xref:System.Windows.Input.CommandBinding.PreviewCanExecute>。</span><span class="sxs-lookup"><span data-stu-id="dbcba-129">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbcba-130">下面的示例创建<xref:System.Windows.Input.CommandBinding>映射<xref:System.Windows.Input.ExecutedRoutedEventHandler>和<xref:System.Windows.Input.CanExecuteRoutedEventArgs>处理程序<xref:System.Windows.Input.ApplicationCommands.Open%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="dbcba-130">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="dbcba-131">如下所示<xref:System.Windows.Input.CanExecuteRoutedEventHandler>哪些集<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="dbcba-131">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbcba-132">获取或设置与此 <see cref="T:System.Windows.Input.CommandBinding" /> 关联的 <see cref="T:System.Windows.Input.ICommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-132">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dbcba-133">与此绑定关联的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-133">The command associated with this binding.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dbcba-134">下面的示例创建<xref:System.Windows.Input.CommandBinding>映射<xref:System.Windows.Input.ExecutedRoutedEventHandler>和<xref:System.Windows.Input.CanExecuteRoutedEventArgs>处理程序<xref:System.Windows.Input.ApplicationCommands.Open%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="dbcba-134">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="dbcba-135">如下所示<xref:System.Windows.Input.CanExecuteRoutedEventHandler>哪些集<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="dbcba-135">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 <span data-ttu-id="dbcba-136">如下所示<xref:System.Windows.Input.ExecutedRoutedEventHandler>这将创建<xref:System.Windows.MessageBox>时执行此命令。</span><span class="sxs-lookup"><span data-stu-id="dbcba-136">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Executed">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler Executed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler Executed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.Executed" />
      <MemberSignature Language="VB.NET" Value="Public Event Executed As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ Executed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbcba-137">执行与此 <see cref="T:System.Windows.Input.CommandBinding" /> 相关联的命令时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-137">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbcba-138">当<xref:System.Windows.Input.RoutedCommand>执行，它会发出<xref:System.Windows.Input.CommandBinding.PreviewExecuted>命令目标上的事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-138">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="dbcba-139">如果<xref:System.Windows.Input.CommandBinding.PreviewExecuted>不处理事件，<xref:System.Windows.Input.CommandBinding.Executed>对命令目标引发事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-139">If the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on the command target.</span></span>  <span data-ttu-id="dbcba-140">如果对命令目标有<xref:System.Windows.Input.CommandBinding>的特定命令，<xref:System.Windows.Input.CommandBinding.Executed>处理程序<xref:System.Windows.Input.CommandBinding>调用。</span><span class="sxs-lookup"><span data-stu-id="dbcba-140">If the command target has a <xref:System.Windows.Input.CommandBinding> for the specific command, the <xref:System.Windows.Input.CommandBinding.Executed> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="dbcba-141">如果命令目标没有<xref:System.Windows.Input.CommandBinding>该特定命令<xref:System.Windows.Input.CommandBinding.Executed>事件气泡搜索具有的元素，在元素树中向上<xref:System.Windows.Input.CommandBinding>与命令关联。</span><span class="sxs-lookup"><span data-stu-id="dbcba-141">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for that specific command the <xref:System.Windows.Input.CommandBinding.Executed> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="dbcba-142">如果<xref:System.Windows.Input.CommandBinding>未找到，则该命令未处理。</span><span class="sxs-lookup"><span data-stu-id="dbcba-142">If a <xref:System.Windows.Input.CommandBinding> is not found, the command is not handled.</span></span>  
  
<a name="routedEventInfo_Executed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dbcba-143">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="dbcba-143">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dbcba-144">标识符字段</span><span class="sxs-lookup"><span data-stu-id="dbcba-144">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.ExecutedEvent>|  
|<span data-ttu-id="dbcba-145">路由策略</span><span class="sxs-lookup"><span data-stu-id="dbcba-145">Routing strategy</span></span>|<span data-ttu-id="dbcba-146">冒泡</span><span class="sxs-lookup"><span data-stu-id="dbcba-146">Bubbling</span></span>|  
|<span data-ttu-id="dbcba-147">委托</span><span class="sxs-lookup"><span data-stu-id="dbcba-147">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="dbcba-148">对应的隧道事件<xref:System.Windows.Input.CommandBinding.PreviewExecuted>。</span><span class="sxs-lookup"><span data-stu-id="dbcba-148">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbcba-149">下面的示例创建<xref:System.Windows.Input.CommandBinding>映射<xref:System.Windows.Input.ExecutedRoutedEventHandler>和<xref:System.Windows.Input.CanExecuteRoutedEventArgs>处理程序<xref:System.Windows.Input.ApplicationCommands.Open%2A>命令。</span><span class="sxs-lookup"><span data-stu-id="dbcba-149">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="dbcba-150">如下所示<xref:System.Windows.Input.ExecutedRoutedEventHandler>这将创建<xref:System.Windows.MessageBox>时执行此命令。</span><span class="sxs-lookup"><span data-stu-id="dbcba-150">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewCanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewCanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewCanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ PreviewCanExecute;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbcba-151">当与该 <see cref="T:System.Windows.Input.CommandBinding" /> 关联的命令启动检查以确定是否可以在当前命令目标上执行此命令时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-151">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the current command target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbcba-152">当<xref:System.Windows.Input.RoutedCommand.CanExecute%2A>方法<xref:System.Windows.Input.RoutedCommand>调用时，<xref:System.Windows.Input.CommandBinding.PreviewCanExecute>事件引发对命令目标，如果对命令目标有<xref:System.Windows.Input.CommandBinding>命令。</span><span class="sxs-lookup"><span data-stu-id="dbcba-152">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target if the command target has a <xref:System.Windows.Input.CommandBinding> for the command.</span></span> <span data-ttu-id="dbcba-153">则<xref:System.Windows.Input.CommandBinding.CanExecute>处理程序<xref:System.Windows.Input.CommandBinding>调用。</span><span class="sxs-lookup"><span data-stu-id="dbcba-153">Then the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="dbcba-154">如果命令目标没有<xref:System.Windows.Input.CommandBinding>对于命令，<xref:System.Windows.Input.CommandBinding.CanExecute>事件气泡搜索具有的元素，在元素树中向上<xref:System.Windows.Input.CommandBinding>与命令关联。</span><span class="sxs-lookup"><span data-stu-id="dbcba-154">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="dbcba-155">如果不处理该事件，<xref:System.Windows.Input.CommandBinding.CanExecute>引发事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-155">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  
  
<a name="routedEventInfo_PreviewCanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dbcba-156">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="dbcba-156">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dbcba-157">标识符字段</span><span class="sxs-lookup"><span data-stu-id="dbcba-157">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|  
|<span data-ttu-id="dbcba-158">路由策略</span><span class="sxs-lookup"><span data-stu-id="dbcba-158">Routing strategy</span></span>|<span data-ttu-id="dbcba-159">隧道</span><span class="sxs-lookup"><span data-stu-id="dbcba-159">Tunneling</span></span>|  
|<span data-ttu-id="dbcba-160">委托</span><span class="sxs-lookup"><span data-stu-id="dbcba-160">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="dbcba-161">对应的冒泡事件<xref:System.Windows.Input.CommandBinding.CanExecute>。</span><span class="sxs-lookup"><span data-stu-id="dbcba-161">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.CanExecute>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewExecuted">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewExecuted As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ PreviewExecuted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbcba-162">执行与此 <see cref="T:System.Windows.Input.CommandBinding" /> 相关联的命令时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbcba-162">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbcba-163">当<xref:System.Windows.Input.RoutedCommand>执行，它会发出<xref:System.Windows.Input.CommandBinding.PreviewExecuted>命令目标上的事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-163">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="dbcba-164">如果对命令目标有<xref:System.Windows.Input.CommandBinding>命令<xref:System.Windows.Input.CommandBinding.PreviewExecuted>处理程序<xref:System.Windows.Input.CommandBinding>调用。</span><span class="sxs-lookup"><span data-stu-id="dbcba-164">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="dbcba-165">如果命令目标没有<xref:System.Windows.Input.CommandBinding>命令<xref:System.Windows.Input.CommandBinding.PreviewExecuted>事件隧道向下搜索具有的元素，在元素树<xref:System.Windows.Input.CommandBinding>与命令关联。</span><span class="sxs-lookup"><span data-stu-id="dbcba-165">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event tunnels down the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="dbcba-166">如果不处理预览事件，<xref:System.Windows.Input.CommandBinding.Executed>命令目标引发事件。</span><span class="sxs-lookup"><span data-stu-id="dbcba-166">If the preview event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on command target.</span></span>  
  
<a name="routedEventInfo_PreviewExecuted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dbcba-167">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="dbcba-167">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dbcba-168">标识符字段</span><span class="sxs-lookup"><span data-stu-id="dbcba-168">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|  
|<span data-ttu-id="dbcba-169">路由策略</span><span class="sxs-lookup"><span data-stu-id="dbcba-169">Routing strategy</span></span>|<span data-ttu-id="dbcba-170">隧道</span><span class="sxs-lookup"><span data-stu-id="dbcba-170">Tunneling</span></span>|  
|<span data-ttu-id="dbcba-171">委托</span><span class="sxs-lookup"><span data-stu-id="dbcba-171">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="dbcba-172">对应的冒泡事件<xref:System.Windows.Input.CommandBinding.Executed>。</span><span class="sxs-lookup"><span data-stu-id="dbcba-172">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.Executed>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>