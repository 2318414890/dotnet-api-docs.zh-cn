<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommandBinding.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51da3a84af0b95449d1d9cdbf7be9006f58878991.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1da3a84af0b95449d1d9cdbf7be9006f58878991</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CommandBinding">
          <source>Binds a <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> to the event handlers that implement the command.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> 绑定到实现该命令的事件处理程序。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CommandBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associates a command with the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph><ph id="ph3">/</ph><ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph><ph id="ph6">/</ph><ph id="ph7">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> events which implement and determine the status of the command.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>将与命令关联<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> <ph id="ph3">/</ph> <ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph> <ph id="ph6">/</ph> <ph id="ph7">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>事件实现并确定命令的状态。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CommandBinding">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is called, the <ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph><ph id="ph5">/</ph><ph id="ph6">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> or the <ph id="ph7">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph><ph id="ph8">/</ph><ph id="ph9">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> events are raised on the command target.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>调用时， <ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> <ph id="ph5">/</ph> <ph id="ph6">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>或<ph id="ph7">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph> <ph id="ph8">/</ph> <ph id="ph9">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>对命令目标引发事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CommandBinding">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the appropriate handlers are called.</source>
          <target state="translated">如果对命令目标有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>对于命令，调用相应的处理程序。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CommandBinding">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the events are routed through the element tree until an element that has a <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is found.</source>
          <target state="translated">如果命令目标没有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>对于命令，事件路由通过元素树具有的元素，直到<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>找到。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CommandBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> has limited use with an <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is not a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>具有有限的使用与<ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph>不<ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CommandBinding">
          <source>This is because a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> binds the command to the <ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> which listen to the <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph> routed events which are raised when the <ph id="ph6">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method of the <ph id="ph8">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> are called.</source>
          <target state="translated">这是因为<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>绑定到命令<ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph>其侦听<ph id="ph4">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph>路由事件时引发<ph id="ph6">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph>和<ph id="ph7">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph>方法<ph id="ph8">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CommandBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)">
          <source>The command to base the new <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> on.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> 所基于的命令。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 初始化 <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)">
          <source>The command to base the new <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> on.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> 所基于的命令。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)">
          <source>The handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> event on the new <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> 上的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> 事件的处理程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> event handler.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 和指定的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> 事件处理程序初始化 <ph id="ph3">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)">
          <source>The command to base the new <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> on.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> 所基于的命令。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)">
          <source>The handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> event on the new <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> 上的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> 事件的处理程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)">
          <source>The handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> event on the new <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> 上的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> 事件的处理程序。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> and <ph id="ph4">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> event handlers.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 和指定的 <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> 及 <ph id="ph3">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> 事件处理程序初始化 <ph id="ph4">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> initiates a check to determine whether the command can be executed on the command target.</source>
          <target state="translated">在与此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 关联的命令开始检查能否对命令目标执行该命令时发生。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is called, the <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph> event is raised on the command target.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>调用时，<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph>对命令目标引发事件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>If the event is not handled, the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event is raised.</source>
          <target state="translated">如果不处理该事件，<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> handler for that <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
          <target state="translated">如果对命令目标有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>对于命令，<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>处理程序<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event bubbles up the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
          <target state="translated">如果命令目标没有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>对于命令，<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>事件气泡搜索具有的元素，在元素树中向上<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>与命令关联。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>Routed Event Information</source>
          <target state="translated">路由事件信息</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>Identifier field</source>
          <target state="translated">标识符字段</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>Routing strategy</source>
          <target state="translated">路由策略</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>Bubbling</source>
          <target state="translated">冒泡</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>Delegate</source>
          <target state="translated">委托</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>The corresponding tunneling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph>.</source>
          <target state="translated">对应的隧道事件<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> that maps an <ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph> handler to the <ph id="ph4">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph> command.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>映射<ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph>处理程序<ph id="ph4">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph>命令。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.CanExecute">
          <source>The following shows the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> which sets <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如下所示<ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph>哪些集<ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph>到<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.CommandBinding.Command">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph>.</source>
          <target state="translated">获取或设置与此 <ph id="ph2">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CommandBinding.Command">
          <source>The command associated with this binding.</source>
          <target state="translated">与此绑定关联的命令。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CommandBinding.Command">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> that maps an <ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph> handler to the <ph id="ph4">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph> command.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>映射<ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph>处理程序<ph id="ph4">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph>命令。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CommandBinding.Command">
          <source>The following shows the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> which sets <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如下所示<ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph>哪些集<ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph>到<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CommandBinding.Command">
          <source>The following shows the <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> which creates a <ph id="ph2">&lt;xref:System.Windows.MessageBox&gt;</ph> when the command is executed.</source>
          <target state="translated">如下所示<ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph>这将创建<ph id="ph2">&lt;xref:System.Windows.MessageBox&gt;</ph>时执行此命令。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> executes.</source>
          <target state="translated">执行与此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 相关联的命令时发生。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> executes, it raises the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event on the command target.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>执行，它会发出<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>命令目标上的事件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event is not handled, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> event is raised on the command target.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>不处理事件，<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>对命令目标引发事件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the specific command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> handler for that <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
          <target state="translated">如果对命令目标有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>的特定命令，<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>处理程序<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for that specific command the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> event bubbles up the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
          <target state="translated">如果命令目标没有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>该特定命令<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>事件气泡搜索具有的元素，在元素树中向上<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>与命令关联。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is not found, the command is not handled.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>未找到，则该命令未处理。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>Routed Event Information</source>
          <target state="translated">路由事件信息</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>Identifier field</source>
          <target state="translated">标识符字段</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>Routing strategy</source>
          <target state="translated">路由策略</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>Bubbling</source>
          <target state="translated">冒泡</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>Delegate</source>
          <target state="translated">委托</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>The corresponding tunneling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>.</source>
          <target state="translated">对应的隧道事件<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> that maps an <ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph> handler to the <ph id="ph4">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph> command.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>映射<ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph>处理程序<ph id="ph4">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph>命令。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.Executed">
          <source>The following shows the <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> which creates a <ph id="ph2">&lt;xref:System.Windows.MessageBox&gt;</ph> when the command is executed.</source>
          <target state="translated">如下所示<ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph>这将创建<ph id="ph2">&lt;xref:System.Windows.MessageBox&gt;</ph>时执行此命令。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> initiates a check to determine whether the command can be executed on the current command target.</source>
          <target state="translated">当与该 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 关联的命令启动检查以确定是否可以在当前命令目标上执行此命令时发生。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is called, the <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph> event is raised on the command target if the command target has a <ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>调用时，<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph>事件引发对命令目标，如果对命令目标有<ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>命令。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>Then the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> handler for that <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
          <target state="translated">则<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>处理程序<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event bubbles up the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
          <target state="translated">如果命令目标没有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>对于命令，<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>事件气泡搜索具有的元素，在元素树中向上<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>与命令关联。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>If the event is not handled, the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event is raised.</source>
          <target state="translated">如果不处理该事件，<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>Routed Event Information</source>
          <target state="translated">路由事件信息</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>Identifier field</source>
          <target state="translated">标识符字段</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>Routing strategy</source>
          <target state="translated">路由策略</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>Tunneling</source>
          <target state="translated">隧道</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>Delegate</source>
          <target state="translated">委托</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewCanExecute">
          <source>The corresponding bubbling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>.</source>
          <target state="translated">对应的冒泡事件<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> executes.</source>
          <target state="translated">执行与此 <ph id="ph1">&lt;see cref="T:System.Windows.Input.CommandBinding" /&gt;</ph> 相关联的命令时发生。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> executes, it raises the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event on the command target.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>执行，它会发出<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>命令目标上的事件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> handler for that <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
          <target state="translated">如果对命令目标有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>命令<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>处理程序<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event tunnels down the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
          <target state="translated">如果命令目标没有<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>命令<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>事件隧道向下搜索具有的元素，在元素树<ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>与命令关联。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>If the preview event is not handled, the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> event is raised on command target.</source>
          <target state="translated">如果不处理预览事件，<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>命令目标引发事件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>Routed Event Information</source>
          <target state="translated">路由事件信息</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>Identifier field</source>
          <target state="translated">标识符字段</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>Routing strategy</source>
          <target state="translated">路由策略</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>Tunneling</source>
          <target state="translated">隧道</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>Delegate</source>
          <target state="translated">委托</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Input.CommandBinding.PreviewExecuted">
          <source>The corresponding bubbling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>.</source>
          <target state="translated">对应的冒泡事件<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>