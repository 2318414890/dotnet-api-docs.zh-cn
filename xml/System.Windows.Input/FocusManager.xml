<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6b2e6e8506664e988d0903f088eee03bf709264" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9decb-101">提供一组静态方法、附加属性和事件，用于确定和设置焦点范围以及设置该范围内具有焦点的元素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9decb-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9decb-102">在[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]有关于焦点的两个概念： 键盘焦点和逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-102">In [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="9decb-103">与当前正在接收键盘输入的元素有关键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="9decb-104">可以仅有一个元素具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="9decb-105">此元素具有键盘焦点具有<xref:System.Windows.IInputElement.IsKeyboardFocused%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="9decb-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> 返回具有键盘焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="9decb-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="9decb-107">逻辑焦点与<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>特定焦点范围内。</span><span class="sxs-lookup"><span data-stu-id="9decb-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="9decb-108">焦点作用域是一个容器元素，用于跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>在其范围内。</span><span class="sxs-lookup"><span data-stu-id="9decb-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="9decb-109">默认情况下，<xref:System.Windows.Window>类是焦点的作用域允许进行<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>类。</span><span class="sxs-lookup"><span data-stu-id="9decb-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="9decb-110">这是焦点作用域的元素具有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="9decb-111">可以有多个元素具有逻辑焦点，但只能有一个具有单个焦点范围内的逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="9decb-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="9decb-112">具有逻辑焦点的元素不一定具有键盘焦点，但具有键盘焦点的元素将具有逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="9decb-113">可定义焦点范围内的焦点作用域。</span><span class="sxs-lookup"><span data-stu-id="9decb-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="9decb-114">在此例中，父焦点作用域和子焦点作用域可以有<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9decb-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9decb-115">以下情况揭示了如何键盘焦点和逻辑焦点改变，[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]具有应用程序<xref:System.Windows.Window>与<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.Menu>具有<xref:System.Windows.Controls.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="9decb-115">The following scenario illustrates how keyboard focus and logical focus change in a [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="9decb-116">从键盘焦点更改时<xref:System.Windows.Controls.TextBox>到<xref:System.Windows.Controls.MenuItem>、<xref:System.Windows.Controls.TextBox>失去键盘焦点，但保留逻辑焦点提供给<xref:System.Windows.Window>焦点范围。</span><span class="sxs-lookup"><span data-stu-id="9decb-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="9decb-117"><xref:System.Windows.Controls.MenuItem>键盘焦点，并且获得逻辑焦点的<xref:System.Windows.Controls.Menu>焦点范围。</span><span class="sxs-lookup"><span data-stu-id="9decb-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="9decb-118">当键盘焦点返回到根<xref:System.Windows.Window>中的元素<xref:System.Windows.Window>焦点范围内具有逻辑焦点将获取键盘焦点时，在这种情况下即<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9decb-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="9decb-119"><xref:System.Windows.Controls.TextBox>现在具有键盘焦点和逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="9decb-120"><xref:System.Windows.Controls.MenuItem>失去键盘焦点，但会保留逻辑焦点提供给<xref:System.Windows.Controls.Menu>焦点范围。</span><span class="sxs-lookup"><span data-stu-id="9decb-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="9decb-121">默认值<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上<xref:System.Windows.Window>， <xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ToolBar>，和<xref:System.Windows.Controls.ContextMenu>是`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="9decb-122">焦点的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)和[焦点概述](~/docs/framework/wpf/advanced/focus-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9decb-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-123">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="9decb-124">要添加的事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-124">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-125">为 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件添加处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-126">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="9decb-127">要添加的事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-127">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-128">为 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件添加处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9decb-129">标识 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-129">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-130">在指定焦点范围内具有逻辑焦点的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-130">The element with logical focus in the specified focus scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-131">获取在指定焦点范围内具有逻辑焦点的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-131">Gets the element with logical focus within the specified focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9decb-132">在指定焦点范围内具有逻辑焦点的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-132">The element in the specified focus scope with logical focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9decb-133"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是具有特定焦点作用域的逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="9decb-133">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="9decb-134">此对象可能或可能不具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-134">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="9decb-135">键盘焦点引用接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="9decb-135">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="9decb-136">焦点、 键盘焦点和逻辑焦点的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9decb-136">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="9decb-137">如果`element`不是一个焦点作用域，此方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="9decb-137">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="9decb-138">使用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>，可以指定的元素具有指定的焦点作用域内的逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-138">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9decb-139">下面的示例使用的设置的元素具有逻辑焦点<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>和它获取具有逻辑焦点的元素使用<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="9decb-139">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9decb-140">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-140">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-141">要获取其最接近的焦点范围的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-141">The element to get the closest focus scope for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-142">确定指定元素的 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 设置为 <see langword="true" /> 的最接近的上级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-142">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9decb-143">指定元素的焦点范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-143">The focus scope for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9decb-144">默认值<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上<xref:System.Windows.Window>， <xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ToolBar>，<xref:System.Windows.Controls.ContextMenu>是`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-144">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="9decb-145">焦点作用域是一个容器元素，用于跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>在其范围内。</span><span class="sxs-lookup"><span data-stu-id="9decb-145">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="9decb-146">默认情况下，<xref:System.Windows.Window>类是焦点的作用域允许进行<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>类。</span><span class="sxs-lookup"><span data-stu-id="9decb-146">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="9decb-147">这是焦点作用域的元素具有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-147">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="9decb-148">焦点、 键盘焦点和逻辑焦点的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9decb-148">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9decb-149">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-149">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-150">从中读取附加属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-150">The element from which to read the attached property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-151">确定指定的 <see cref="T:System.Windows.DependencyObject" /> 是否为焦点范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-151">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9decb-152">如果指定元素上的 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 设置为 <see langword="true" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-152">
              <see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9decb-153">焦点作用域是一个容器元素，用于跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>在其范围内。</span><span class="sxs-lookup"><span data-stu-id="9decb-153">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="9decb-154">默认情况下，<xref:System.Windows.Window>类是焦点的作用域允许进行<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>类。</span><span class="sxs-lookup"><span data-stu-id="9decb-154">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="9decb-155">这是焦点作用域的元素具有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-155">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="9decb-156">焦点、 键盘焦点和逻辑焦点的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9decb-156">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9decb-157">标识 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-157">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9decb-158">标识 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-158">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9decb-159">默认值<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>上<xref:System.Windows.Window>， <xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ToolBar>，<xref:System.Windows.Controls.ContextMenu>是`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-159">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="9decb-160">焦点作用域是一个容器元素，用于跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>在其范围内。</span><span class="sxs-lookup"><span data-stu-id="9decb-160">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="9decb-161">默认情况下，<xref:System.Windows.Window>类是焦点的作用域允许进行<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>类。</span><span class="sxs-lookup"><span data-stu-id="9decb-161">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="9decb-162">这是焦点作用域的元素具有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-162">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="9decb-163">焦点、 键盘焦点和逻辑焦点的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9decb-163">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9decb-164">标识 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-164">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-165">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-165">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="9decb-166">要删除的事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-166">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-167">移除 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-167">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-168">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-168">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="9decb-169">要删除的事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-169">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-170">移除 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-170">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-171">焦点范围，将使指定元素成为该范围内的 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-171">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9decb-172">要获得逻辑焦点的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-172">The element to give logical focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-173">对指定元素设置逻辑焦点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-173">Sets logical focus on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9decb-174"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是具有特定焦点作用域的逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="9decb-174">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="9decb-175">此对象可能或可能不具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-175">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="9decb-176">键盘焦点引用接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="9decb-176">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="9decb-177">焦点、 键盘焦点和逻辑焦点的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9decb-177">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="9decb-178">它是可以指定焦点作用域，则元素将位于的焦点作用域的祖先。</span><span class="sxs-lookup"><span data-stu-id="9decb-178">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="9decb-179">例如，如果<xref:System.Windows.Controls.StackPanel>是焦点作用域，并且其父<xref:System.Windows.Window>是焦点的范围，<xref:System.Windows.Controls.TextBox>子级<xref:System.Windows.Controls.StackPanel>可以指定<xref:System.Windows.Window>作为焦点作用域时调用<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="9decb-179">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="9decb-180"><xref:System.Windows.Controls.TextBox>然后<xref:System.Windows.Input.FocusManager.FocusedElement%2A>两个<xref:System.Windows.Window>焦点范围和<xref:System.Windows.Controls.StackPanel>焦点范围。</span><span class="sxs-lookup"><span data-stu-id="9decb-180">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="9decb-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 将指定的焦点作用域中指定的元素逻辑焦点，并且将尝试提供元素键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="9decb-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9decb-182">下面的示例使用的设置的元素具有逻辑焦点<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>和它获取具有逻辑焦点的元素使用<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="9decb-182">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9decb-183">要成为焦点范围的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-183">The element to make a focus scope.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9decb-184">如果 <c>element</c> 是焦点范围，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-184">
              <see langword="true" /> if <c>element</c> is a focus scope; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9decb-185">将指定的 <see cref="T:System.Windows.DependencyObject" /> 设置为焦点范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9decb-185">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9decb-186">焦点作用域是一个容器元素，用于跟踪的<xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>在其范围内。</span><span class="sxs-lookup"><span data-stu-id="9decb-186">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="9decb-187">默认情况下，<xref:System.Windows.Window>类是焦点的作用域允许进行<xref:System.Windows.Controls.Menu>， <xref:System.Windows.Controls.ContextMenu>，和<xref:System.Windows.Controls.ToolBar>类。</span><span class="sxs-lookup"><span data-stu-id="9decb-187">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="9decb-188">这是焦点作用域的元素具有<xref:System.Windows.Input.FocusManager.IsFocusScope%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="9decb-188">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="9decb-189">焦点、 键盘焦点和逻辑焦点的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9decb-189">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9decb-190">下面的示例通过使用使某个元素焦点范围<xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="9decb-190">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>