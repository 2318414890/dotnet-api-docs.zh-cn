<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfe044e6246f3488392cc43580452b6a0c27114f" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224028" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7d002-101">提供一个应用程序级服务，该服务处理来自操作系统的多点触控输入并引发 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="7d002-101">Provides an application-level service that processes multitouch input from the operating system and raises the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d002-102"><xref:System.Windows.Input.Touch.FrameReported>中包含事件[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]以支持与 Silverlight 兼容性。</span><span class="sxs-lookup"><span data-stu-id="7d002-102">The <xref:System.Windows.Input.Touch.FrameReported> event is included in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] to support compatibility with Silverlight.</span></span> <span data-ttu-id="7d002-103">如果不需要确保与 Silverlight 兼容性，使用触控事件，如<xref:System.Windows.UIElement.TouchDown>并<xref:System.Windows.UIElement.TouchMove>，然后在<xref:System.Windows.UIElement>， <xref:System.Windows.UIElement3D>，或<xref:System.Windows.ContentElement>。</span><span class="sxs-lookup"><span data-stu-id="7d002-103">If you do not have to ensure compatibility with Silverlight, use the touch events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>, on <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, or <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7d002-104"><xref:System.Windows.Input.Touch.FrameReported>事件不使用相同的事件模型与其他 WPF 输入事件，如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。</span><span class="sxs-lookup"><span data-stu-id="7d002-104">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other WPF input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="7d002-105">而不是公开为通过对象树的一个 UI，可能会路由的特定于元素的事件<xref:System.Windows.Input.Touch.FrameReported>事件是在应用程序级别处理单个事件。</span><span class="sxs-lookup"><span data-stu-id="7d002-105">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="7d002-106">因此，不能使用`sender`事件处理程序，以确定涉及哪些元素的参数。</span><span class="sxs-lookup"><span data-stu-id="7d002-106">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
 <span data-ttu-id="7d002-107">使用<xref:System.Windows.Input.TouchFrameEventArgs>若要获取<xref:System.Windows.Input.TouchPoint>触摸事件与相关的值。</span><span class="sxs-lookup"><span data-stu-id="7d002-107">Use the <xref:System.Windows.Input.TouchFrameEventArgs> to get the <xref:System.Windows.Input.TouchPoint> values that are relevant to the touch event.</span></span> <span data-ttu-id="7d002-108">从<xref:System.Windows.Input.TouchPoint>，可以获取<xref:System.Windows.Input.TouchPoint.Position%2A>的触摸屏输入，并确定是否<xref:System.Windows.Input.TouchAction>已<xref:System.Windows.Input.TouchAction.Down>， <xref:System.Windows.Input.TouchAction.Move>，或<xref:System.Windows.Input.TouchAction.Up>操作。</span><span class="sxs-lookup"><span data-stu-id="7d002-108">From the <xref:System.Windows.Input.TouchPoint>, you can get the <xref:System.Windows.Input.TouchPoint.Position%2A> of the touch and determine whether the <xref:System.Windows.Input.TouchAction> was a <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, or <xref:System.Windows.Input.TouchAction.Up> action.</span></span> <span data-ttu-id="7d002-109">此外可以使用<xref:System.Windows.Input.TouchPoint>若要获取<xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="7d002-109">You can also use the <xref:System.Windows.Input.TouchPoint> to get the <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="7d002-110">从<xref:System.Windows.Input.TouchDevice>，可以确定设备<xref:System.Windows.Input.TouchDevice.Id%2A>和获取有关访问时的元素的信息。</span><span class="sxs-lookup"><span data-stu-id="7d002-110">From the <xref:System.Windows.Input.TouchDevice>, you can determine the device <xref:System.Windows.Input.TouchDevice.Id%2A> and get information about the element that is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d002-111">以下示例使您能够在创建简单的模式<xref:System.Windows.Controls.Canvas>通过拖动两根手指在触摸屏。</span><span class="sxs-lookup"><span data-stu-id="7d002-111">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen.</span></span> <span data-ttu-id="7d002-112">表示每次触摸<xref:System.Windows.Input.TouchDevice>。该模式创建的收尾工作了所提供的触摸点之间绘制一条线。</span><span class="sxs-lookup"><span data-stu-id="7d002-112">Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches.</span></span> <span data-ttu-id="7d002-113">此示例需要 Windows 兼容触摸屏幕。</span><span class="sxs-lookup"><span data-stu-id="7d002-113">This example requires a Windows Touch-compatible screen.</span></span>  
  
 <span data-ttu-id="7d002-114">下面的标记创建用户界面，其中包括<xref:System.Windows.Controls.Canvas>在中居中<xref:System.Windows.Controls.Grid>。</span><span class="sxs-lookup"><span data-stu-id="7d002-114">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.</span></span>  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="7d002-115">下面的代码处理<xref:System.Windows.Input.Touch.FrameReported>事件。</span><span class="sxs-lookup"><span data-stu-id="7d002-115">The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="7d002-116">当触摸屏输入按下上<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice>捕获到<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="7d002-116">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="7d002-117">当提升触控时，<xref:System.Windows.Input.TouchDevice>发布。</span><span class="sxs-lookup"><span data-stu-id="7d002-117">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="7d002-118">触摸屏输入时移过<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice.Id%2A>检查。</span><span class="sxs-lookup"><span data-stu-id="7d002-118">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="7d002-119">如果移动来自第一次触摸，记录其位置。</span><span class="sxs-lookup"><span data-stu-id="7d002-119">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="7d002-120">如果移动来自第二个触摸，行是从第一次触摸的位置绘制第二个触摸的位置。</span><span class="sxs-lookup"><span data-stu-id="7d002-120">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d002-121">在发送触摸消息时发生。</span><span class="sxs-lookup"><span data-stu-id="7d002-121">Occurs when a touch message is sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d002-122">框架是一个在一系列的多点触控消息或触摸点。</span><span class="sxs-lookup"><span data-stu-id="7d002-122">A frame is one in a series of multitouch messages or touch points.</span></span> <span data-ttu-id="7d002-123">您可以通过处理响应触摸<xref:System.Windows.Input.Touch.FrameReported>事件和访问的详细信息<xref:System.Windows.Input.TouchPoint>从<xref:System.Windows.Input.TouchFrameEventArgs>事件数据。</span><span class="sxs-lookup"><span data-stu-id="7d002-123">You can respond to touches by handling the <xref:System.Windows.Input.Touch.FrameReported> event and accessing the details of the <xref:System.Windows.Input.TouchPoint> from the <xref:System.Windows.Input.TouchFrameEventArgs> event data.</span></span>  
  
 <span data-ttu-id="7d002-124"><xref:System.Windows.Input.Touch.FrameReported>事件不与其他使用相同的事件模型[!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)]输入事件，例如<xref:System.Windows.UIElement.TouchDown>和<xref:System.Windows.UIElement.TouchMove>。</span><span class="sxs-lookup"><span data-stu-id="7d002-124">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="7d002-125">而不是公开为通过对象树的一个 UI，可能会路由的特定于元素的事件<xref:System.Windows.Input.Touch.FrameReported>事件是在应用程序级别处理单个事件。</span><span class="sxs-lookup"><span data-stu-id="7d002-125">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="7d002-126">因此，不能使用`sender`事件处理程序，以确定涉及哪些元素的参数。</span><span class="sxs-lookup"><span data-stu-id="7d002-126">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d002-127">下面的示例处理<xref:System.Windows.Input.Touch.FrameReported>事件。</span><span class="sxs-lookup"><span data-stu-id="7d002-127">The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="7d002-128">当触摸屏输入按下上<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice>捕获到<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="7d002-128">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="7d002-129">当提升触控时，<xref:System.Windows.Input.TouchDevice>发布。</span><span class="sxs-lookup"><span data-stu-id="7d002-129">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="7d002-130">触摸屏输入时移过<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice.Id%2A>检查。</span><span class="sxs-lookup"><span data-stu-id="7d002-130">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="7d002-131">如果移动来自第一次触摸，记录其位置。</span><span class="sxs-lookup"><span data-stu-id="7d002-131">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="7d002-132">如果移动来自第二个触摸，行是从第一次触摸的位置绘制第二个触摸的位置。</span><span class="sxs-lookup"><span data-stu-id="7d002-132">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="7d002-133">此示例摘自现已推出一个更大示例<xref:System.Windows.Input.Touch>类概述。</span><span class="sxs-lookup"><span data-stu-id="7d002-133">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>