<Type Name="ManipulationStartingEventArgs" FullName="System.Windows.Input.ManipulationStartingEventArgs">
  <TypeSignature Language="C#" Value="public sealed class ManipulationStartingEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationStartingEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationStartingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationStartingEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationStartingEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1db5a-101">为 <see cref="E:System.Windows.UIElement.ManipulationStarting" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="1db5a-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationStarting" />, event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db5a-102"><xref:System.Windows.Input.ManipulationStartingEventArgs>使您能够指定操作的行为。</span><span class="sxs-lookup"><span data-stu-id="1db5a-102">The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.</span></span>  <span data-ttu-id="1db5a-103">使用<xref:System.Windows.Input.ManipulationStartingEventArgs>以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="1db5a-103">Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:</span></span>  
  
-   <span data-ttu-id="1db5a-104">指定位置应为相对于元素通过设置<xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1db5a-104">Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="1db5a-105">指定是否通过设置启用单指操作<xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1db5a-105">Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1db5a-106">指定哪些类型的操作启用通过设置<xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType>属性<xref:System.Windows.Input.ManipulationModes>枚举。</span><span class="sxs-lookup"><span data-stu-id="1db5a-106">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="1db5a-107">通过设置指定单指旋转中心的<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1db5a-107">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1db5a-108">通过设置来取消操作<xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="1db5a-108">Cancel the manipulation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 <span data-ttu-id="1db5a-109">有关操作的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-109">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1db5a-110">响应操作的应用程序的示例，请参阅[演练： 创建你的第一个 Touch 应用](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-110">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1db5a-111">取消操作并将触摸提升为鼠标事件。</span><span class="sxs-lookup"><span data-stu-id="1db5a-111">Cancels the manipulation and promotes touch to mouse events.</span></span></summary>
        <returns>
          <span data-ttu-id="1db5a-112">如果触摸成功提升为鼠标事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1db5a-112"><see langword="true" /> if touch was successfully promoted to mouse events, otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db5a-113">如果方法成功，则默认<xref:System.Windows.Input.TouchDevice>发送以前向下触控事件作为鼠标按下事件，且不发生未来操作事件。</span><span class="sxs-lookup"><span data-stu-id="1db5a-113">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleTouchEnabled">
      <MemberSignature Language="C#" Value="public bool IsSingleTouchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleTouchEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSingleTouchEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSingleTouchEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db5a-114">获取或设置一个手指是否可以开始操作。</span><span class="sxs-lookup"><span data-stu-id="1db5a-114">Gets or sets whether one finger can start a manipulation.</span></span></summary>
        <value>
          <span data-ttu-id="1db5a-115">如果一个手指可以开始操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1db5a-115"><see langword="true" /> one finger can start a manipulation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1db5a-116">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="1db5a-116">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db5a-117">有关操作的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-117">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1db5a-118">响应操作的应用程序的示例，请参阅[演练： 创建你的第一个 Touch 应用](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-118">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db5a-119">获取或设置所有操作事件和计算都与之相关的容器。</span><span class="sxs-lookup"><span data-stu-id="1db5a-119">Gets or sets the container that all manipulation events and calculations are relative to.</span></span></summary>
        <value><span data-ttu-id="1db5a-120">所有操作事件和计算都与之相关的容器。</span><span class="sxs-lookup"><span data-stu-id="1db5a-120">The container that all manipulation events and calculations are relative to.</span></span> <span data-ttu-id="1db5a-121">默认值为发生事件的元素。</span><span class="sxs-lookup"><span data-stu-id="1db5a-121">The default is the element on which the event occurred.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db5a-122">你可以指定位置应为相对于另一个元素通过设置<xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1db5a-122">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="1db5a-123">例如，你可以使操作位置相对于接收操作事件的元素的父级。</span><span class="sxs-lookup"><span data-stu-id="1db5a-123">For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events.</span></span> <span data-ttu-id="1db5a-124"><xref:System.Windows.UIElement.ManipulationStarting>事件处理程序是唯一的地方，你可以在其中设置<xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>。</span><span class="sxs-lookup"><span data-stu-id="1db5a-124">The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.</span></span>  
  
 <span data-ttu-id="1db5a-125">有关操作的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-125">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1db5a-126">响应操作的应用程序的示例，请参阅[演练： 创建你的第一个 Touch 应用](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-126">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db5a-127">获取表示操作的触摸触点的对象集合。</span><span class="sxs-lookup"><span data-stu-id="1db5a-127">Gets a collection of objects that represents the touch contacts for the manipulation.</span></span></summary>
        <value><span data-ttu-id="1db5a-128">一个由表示操作的触摸触点的对象组成的集合。</span><span class="sxs-lookup"><span data-stu-id="1db5a-128">A collection of objects that represents the touch contacts for the manipulation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationModes Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ManipulationModes Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationModes Mode { System::Windows::Input::ManipulationModes get(); void set(System::Windows::Input::ManipulationModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db5a-129">获取或设置可能的操作的类型。</span><span class="sxs-lookup"><span data-stu-id="1db5a-129">Gets or sets which types of manipulations are possible.</span></span></summary>
        <value><span data-ttu-id="1db5a-130">枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1db5a-130">One of the enumeration values.</span></span> <span data-ttu-id="1db5a-131">默认值为 <see cref="F:System.Windows.Input.ManipulationModes.All" />。</span><span class="sxs-lookup"><span data-stu-id="1db5a-131">The default is <see cref="F:System.Windows.Input.ManipulationModes.All" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db5a-132">有关操作的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-132">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1db5a-133">响应操作的应用程序的示例，请参阅[演练： 创建你的第一个 Touch 应用](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-133">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1db5a-134">该属性设置为一个或多个 <see cref="T:System.Windows.Input.ManipulationModes" /> 枚举值之外的值。</span><span class="sxs-lookup"><span data-stu-id="1db5a-134">The property is set to a value other than one or more of the <see cref="T:System.Windows.Input.ManipulationModes" /> enumerations value</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationPivot Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationPivot Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationPivot ^ Pivot { System::Windows::Input::ManipulationPivot ^ get(); void set(System::Windows::Input::ManipulationPivot ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db5a-135">获取或设置一个描述单点操作的轴的对象。</span><span class="sxs-lookup"><span data-stu-id="1db5a-135">Gets or sets an object that describes the pivot for a single-point manipulation.</span></span></summary>
        <value><span data-ttu-id="1db5a-136">一个描述单点操作的轴的对象。</span><span class="sxs-lookup"><span data-stu-id="1db5a-136">An object that describes the pivot for a single-point manipulation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db5a-137">当你将设置<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A>属性，当用户在操作过程中使用一个手指，操作将包含旋转数据。</span><span class="sxs-lookup"><span data-stu-id="1db5a-137">When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.</span></span>  <span data-ttu-id="1db5a-138">这是为了模拟现实世界的情况下，你可以使用一个手指旋转的对象，例如一张纸上表。</span><span class="sxs-lookup"><span data-stu-id="1db5a-138">This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.</span></span>  <span data-ttu-id="1db5a-139">如果<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A>是`null`，用户必须使用双指导致旋转。</span><span class="sxs-lookup"><span data-stu-id="1db5a-139">If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation.</span></span>  
  
 <span data-ttu-id="1db5a-140">有关操作的详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-140">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="1db5a-141">响应操作的应用程序的示例，请参阅[演练： 创建你的第一个 Touch 应用](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)。</span><span class="sxs-lookup"><span data-stu-id="1db5a-141">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1db5a-142">下面的示例演示的事件处理程序<xref:System.Windows.UIElement.ManipulationStarting>事件和集<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1db5a-142">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1db5a-143">若要测试此示例中，按照中的步骤[演练： 创建你的第一个 Touch 应用](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)和在步骤 4 中的代码替换此代码。</span><span class="sxs-lookup"><span data-stu-id="1db5a-143">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 4 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationPivot](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#manipulationpivot)]
 [!code-vb[BasicManipulation#ManipulationPivot](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#manipulationpivot)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public void SetManipulationParameter (System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetManipulationParameter(class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetManipulationParameter (parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetManipulationParameter(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="1db5a-144">要添加的参数。</span><span class="sxs-lookup"><span data-stu-id="1db5a-144">The parameter to add.</span></span></param>
        <summary><span data-ttu-id="1db5a-145">将参数添加到指定元素的当前操作中。</span><span class="sxs-lookup"><span data-stu-id="1db5a-145">Adds parameters to the current manipulation of the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db5a-146">通常不需要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="1db5a-146">You typically do not need to call this method.</span></span>  <span data-ttu-id="1db5a-147">使用上的属性<xref:System.Windows.Input.ManipulationStartingEventArgs>相反。</span><span class="sxs-lookup"><span data-stu-id="1db5a-147">Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>