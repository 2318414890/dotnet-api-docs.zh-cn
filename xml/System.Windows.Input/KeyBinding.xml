<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75d0a8febbde12a538aa8f3a75dd36c3555615da" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52232742" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="79060-101">将 <see cref="T:System.Windows.Input.KeyGesture" /> 绑定到 <see cref="T:System.Windows.Input.RoutedCommand" />（或另一个 <see cref="T:System.Windows.Input.ICommand" /> 实现）。</span><span class="sxs-lookup"><span data-stu-id="79060-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79060-102">一个<xref:System.Windows.Input.KeyBinding>相关联<xref:System.Windows.Input.KeyGesture>与<xref:System.Windows.Input.ICommand>，如<xref:System.Windows.Input.RoutedCommand>。</span><span class="sxs-lookup"><span data-stu-id="79060-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="79060-103"><xref:System.Windows.Input.RoutedCommand> 是的主要实现<xref:System.Windows.Input.ICommand>接口[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]命令系统中。</span><span class="sxs-lookup"><span data-stu-id="79060-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="79060-104">一般说来，当<xref:System.Windows.Input.KeyGesture>执行调用命令时，尽管命令行为进一步会受到特定于命令的因素如<xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>值。</span><span class="sxs-lookup"><span data-stu-id="79060-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="79060-105">有关命令的详细信息，请参阅[命令概述](~/docs/framework/wpf/advanced/commanding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="79060-105">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="79060-106">功能键和一个有效的数字键盘键除外<xref:System.Windows.Input.KeyGesture>必须正好包含一个<xref:System.Windows.Input.Key>和一个或多个<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="79060-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="79060-107">功能键和数字键盘键是否不需要修改键才能为有效<xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="79060-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="79060-108">可以指定了一个无效<xref:System.Windows.Input.KeyGesture>和一个<xref:System.Windows.Input.KeyBinding>具有无效的关联笔势，通过[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]或代码。</span><span class="sxs-lookup"><span data-stu-id="79060-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="79060-109">例如，没有任何验证，避免创建和绑定<xref:System.Windows.Input.KeyGesture>包含仅非功能键，或仅修饰符但没有键。</span><span class="sxs-lookup"><span data-stu-id="79060-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="79060-110">此类<xref:System.Windows.Input.KeyBinding>将永远不会尝试调用其关联的命令。</span><span class="sxs-lookup"><span data-stu-id="79060-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="79060-111">定义时<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]有两种方法来指定<xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="79060-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="79060-112">第一种方法来建立<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是定义<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性的<xref:System.Windows.Input.KeyBinding>元素，这允许一语法，可作为单个字符串，例如"CTRL + P"指定密钥和修饰符。</span><span class="sxs-lookup"><span data-stu-id="79060-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="79060-113">第二种方法是定义<xref:System.Windows.Input.KeyBinding.Key%2A>属性和<xref:System.Windows.Input.KeyBinding.Modifiers%2A>的属性<xref:System.Windows.Input.KeyBinding>元素。</span><span class="sxs-lookup"><span data-stu-id="79060-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="79060-114">这两种设置<xref:System.Windows.Input.KeyGesture>是等效的和修改相同的基础对象，但存在冲突，如果同时使用。</span><span class="sxs-lookup"><span data-stu-id="79060-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="79060-115">在这种情况时<xref:System.Windows.Input.KeyBinding.Key%2A>， <xref:System.Windows.Input.KeyBinding.Modifiers%2A>，并<xref:System.Windows.Input.KeyBinding.Gesture%2A>特性都将设置，最后将为使用的属性定义<xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="79060-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="79060-116">其中例如可能具有的情况下<xref:System.Windows.Input.KeyBinding.Key%2A>集上一次将覆盖只是前一个笔势的密钥组件，但保持该笔势的修饰符不变。</span><span class="sxs-lookup"><span data-stu-id="79060-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="79060-117">一般情况下，建议您仅使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性从[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; 这将避免多义性，提供最简化的语法并提供用于序列化的最简单的表示形式。</span><span class="sxs-lookup"><span data-stu-id="79060-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="79060-118">一个<xref:System.Windows.Input.KeyBinding>可以通过注册对特定对象或类级别定义<xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>上<xref:System.Windows.Input.CommandManager>类。</span><span class="sxs-lookup"><span data-stu-id="79060-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="79060-119">若要定义的最常见方式<xref:System.Windows.Input.KeyBinding>是在控件模板中，设置<xref:System.Windows.UIElement.InputBindings%2A>属性中的[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]通过声明一个或多个<xref:System.Windows.Input.MouseBinding>或<xref:System.Windows.Input.KeyBinding>元素。</span><span class="sxs-lookup"><span data-stu-id="79060-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79060-120">下面的示例创建<xref:System.Windows.Input.KeyBinding>并将其添加到<xref:System.Windows.Input.InputBindingCollection>的根窗口中。</span><span class="sxs-lookup"><span data-stu-id="79060-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79060-121">初始化 <see cref="T:System.Windows.Input.KeyBinding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="79060-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79060-122">初始化 <see cref="T:System.Windows.Input.KeyBinding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="79060-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="79060-123">要与 <paramref name="gesture" /> 关联的命令。</span><span class="sxs-lookup"><span data-stu-id="79060-123">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="79060-124">要与 <paramref name="command" /> 关联的键组合。</span><span class="sxs-lookup"><span data-stu-id="79060-124">The key combination to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="79060-125">使用指定的 <see cref="T:System.Windows.Input.KeyBinding" /> 和 <see cref="T:System.Windows.Input.ICommand" /> 初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="79060-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="79060-126"><paramref name="command" /> 或 <paramref name="gesture" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="79060-126"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="79060-127">要调用的命令。</span><span class="sxs-lookup"><span data-stu-id="79060-127">The command to invoke.</span></span></param>
        <param name="key"><span data-ttu-id="79060-128">要与 <paramref name="command" /> 关联的键。</span><span class="sxs-lookup"><span data-stu-id="79060-128">The key to be associated with <paramref name="command" />.</span></span></param>
        <param name="modifiers"><span data-ttu-id="79060-129">要与 <paramref name="command" /> 关联的修饰符。</span><span class="sxs-lookup"><span data-stu-id="79060-129">The modifiers to be associated with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="79060-130">使用指定的 <see cref="T:System.Windows.Input.KeyBinding" /> 以及将要转换为 <see cref="T:System.Windows.Input.ICommand" /> 的指定的 <see cref="T:System.Windows.Input.Key" /> 和 <see cref="T:System.Windows.Input.ModifierKeys" /> 初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="79060-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79060-131">创建 <see cref="T:System.Windows.Input.KeyBinding" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="79060-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <returns><span data-ttu-id="79060-132">新对象。</span><span class="sxs-lookup"><span data-stu-id="79060-132">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79060-133">获取或设置与此 <see cref="T:System.Windows.Input.KeyBinding" /> 关联的笔势。</span><span class="sxs-lookup"><span data-stu-id="79060-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="79060-134">键序列。</span><span class="sxs-lookup"><span data-stu-id="79060-134">The key sequence.</span></span> <span data-ttu-id="79060-135">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="79060-135">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79060-136">功能键和数字键盘键除外<xref:System.Windows.Input.KeyGesture>必须包含<xref:System.Windows.Input.Key>和一个或多个<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="79060-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79060-137">下面的示例演示如何将绑定<xref:System.Windows.Input.KeyGesture>到<xref:System.Windows.Input.RoutedCommand>使用<xref:System.Windows.Input.KeyBinding>（标记和代码示例指定不同的密钥，而是否则等效）。</span><span class="sxs-lookup"><span data-stu-id="79060-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="79060-138"><paramref name="gesture" /> 将要设置为的值不是 <see cref="T:System.Windows.Input.KeyGesture" />。</span><span class="sxs-lookup"><span data-stu-id="79060-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79060-139">获取或设置与此 <see cref="T:System.Windows.Input.Key" /> 关联的 <see cref="T:System.Windows.Input.KeyGesture" /> 的 <see cref="T:System.Windows.Input.KeyBinding" />。</span><span class="sxs-lookup"><span data-stu-id="79060-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="79060-140"><see cref="T:System.Windows.Input.KeyGesture" /> 的键部分。</span><span class="sxs-lookup"><span data-stu-id="79060-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span> <span data-ttu-id="79060-141">默认值为 <see cref="F:System.Windows.Input.Key.None" />。</span><span class="sxs-lookup"><span data-stu-id="79060-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79060-142">功能键和数字键盘键除外<xref:System.Windows.Input.KeyGesture>必须包含<xref:System.Windows.Input.Key>和一个或多个<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="79060-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="79060-143">定义时<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]有两种方法来指定<xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="79060-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="79060-144">第一种方法来建立<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是定义<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性的<xref:System.Windows.Input.KeyBinding>元素，这允许一语法，可作为单个字符串，例如"CTRL + P"指定密钥和修饰符。</span><span class="sxs-lookup"><span data-stu-id="79060-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="79060-145">第二种方法是定义<xref:System.Windows.Input.KeyBinding.Key%2A>属性和<xref:System.Windows.Input.KeyBinding.Modifiers%2A>的属性<xref:System.Windows.Input.KeyBinding>元素。</span><span class="sxs-lookup"><span data-stu-id="79060-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="79060-146">这两种设置<xref:System.Windows.Input.KeyGesture>是等效的和修改相同的基础对象，但存在冲突，如果同时使用。</span><span class="sxs-lookup"><span data-stu-id="79060-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="79060-147">在这种情况时<xref:System.Windows.Input.KeyBinding.Key%2A>， <xref:System.Windows.Input.KeyBinding.Modifiers%2A>，并<xref:System.Windows.Input.KeyBinding.Gesture%2A>特性都将设置，最后将为使用的属性定义<xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="79060-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="79060-148">其中例如可能具有的情况下<xref:System.Windows.Input.KeyBinding.Key%2A>集上一次将覆盖只是前一个笔势的密钥组件，但保持该笔势的修饰符不变。</span><span class="sxs-lookup"><span data-stu-id="79060-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="79060-149">一般情况下，建议您仅使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性从[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; 这将避免多义性，提供最简化的语法并提供用于序列化的最简单的表示形式。</span><span class="sxs-lookup"><span data-stu-id="79060-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79060-150">标识 <see cref="P:System.Windows.Input.KeyBinding.Key" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="79060-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79060-151">获取或设置与此 <see cref="T:System.Windows.Input.ModifierKeys" /> 关联的 <see cref="T:System.Windows.Input.KeyGesture" /> 的 <see cref="T:System.Windows.Input.KeyBinding" />。</span><span class="sxs-lookup"><span data-stu-id="79060-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="79060-152"><see cref="T:System.Windows.Input.KeyGesture" /> 的修改键。</span><span class="sxs-lookup"><span data-stu-id="79060-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span>  <span data-ttu-id="79060-153">默认值为 <see cref="F:System.Windows.Input.ModifierKeys.None" />。</span><span class="sxs-lookup"><span data-stu-id="79060-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79060-154">功能键和数字键盘键除外<xref:System.Windows.Input.KeyGesture>必须包含<xref:System.Windows.Input.Key>和一个或多个<xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="79060-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="79060-155">定义时<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]有两种方法来指定<xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="79060-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="79060-156">第一种方法来建立<xref:System.Windows.Input.KeyBinding>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是定义<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性的<xref:System.Windows.Input.KeyBinding>元素，这允许一语法，可作为单个字符串，例如"CTRL + P"指定密钥和修饰符。</span><span class="sxs-lookup"><span data-stu-id="79060-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="79060-157">第二种方法是定义<xref:System.Windows.Input.KeyBinding.Key%2A>属性和<xref:System.Windows.Input.KeyBinding.Modifiers%2A>的属性<xref:System.Windows.Input.KeyBinding>元素。</span><span class="sxs-lookup"><span data-stu-id="79060-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="79060-158">这两种设置<xref:System.Windows.Input.KeyGesture>是等效的和修改相同的基础对象，但存在冲突，如果同时使用。</span><span class="sxs-lookup"><span data-stu-id="79060-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="79060-159">在这种情况时<xref:System.Windows.Input.KeyBinding.Key%2A>， <xref:System.Windows.Input.KeyBinding.Modifiers%2A>，并<xref:System.Windows.Input.KeyBinding.Gesture%2A>特性都将设置，最后将为使用的属性定义<xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="79060-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="79060-160">其中例如可能具有的情况下<xref:System.Windows.Input.KeyBinding.Key%2A>集上一次将覆盖只是前一个笔势的密钥组件，但保持该笔势的修饰符不变。</span><span class="sxs-lookup"><span data-stu-id="79060-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="79060-161">一般情况下，建议您仅使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性从[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; 这将避免多义性，提供最简化的语法并提供用于序列化的最简单的表示形式。</span><span class="sxs-lookup"><span data-stu-id="79060-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="79060-162">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="79060-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="79060-163">XAML 值</span><span class="sxs-lookup"><span data-stu-id="79060-163">XAML Values</span></span>  
 <span data-ttu-id="79060-164">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="79060-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="79060-165">一个或多个定义的修改键<xref:System.Windows.Input.ModifierKeys>枚举，用"+"字符分隔。</span><span class="sxs-lookup"><span data-stu-id="79060-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79060-166">标识 <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="79060-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>