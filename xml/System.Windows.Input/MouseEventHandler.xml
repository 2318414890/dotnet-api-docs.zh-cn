<Type Name="MouseEventHandler" FullName="System.Windows.Input.MouseEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f088e557442bd4cee3dc8a5bc9a8bc53917909ef" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36505820" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void MouseEventHandler(object sender, MouseEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MouseEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub MouseEventHandler(sender As Object, e As MouseEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void MouseEventHandler(System::Object ^ sender, MouseEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type MouseEventHandler = delegate of obj * MouseEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="0414b-101">事件处理程序附加到的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0414b-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="0414b-102">事件数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0414b-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="0414b-103">表示将处理与鼠标相关且不具体涉及鼠标按钮或鼠标滚轮的路由事件（如 <see cref="E:System.Windows.UIElement.MouseMove" />）的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0414b-103">Represents the method that will handle mouse related routed events that do not specifically involve mouse buttons or the mouse wheel; for example, <see cref="E:System.Windows.UIElement.MouseMove" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0414b-104">此委托与下列附加事件一起使用：</span><span class="sxs-lookup"><span data-stu-id="0414b-104">This delegate is used with the following attached events:</span></span>  
  
-   <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType>  
  
 <span data-ttu-id="0414b-105">此委托用于以下路由事件。</span><span class="sxs-lookup"><span data-stu-id="0414b-105">This delegate is used with the following routed events.</span></span> <span data-ttu-id="0414b-106">这些路由的事件转发之前列出的附加的事件，以使它们更容易访问中的常规元素模型[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0414b-106">These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span>  
  
-   <xref:System.Windows.UIElement.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseEnter?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseLeave?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseMove?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=nameWithType>  
  
 <span data-ttu-id="0414b-107">附加的事件和基元素路由事件共享其事件数据，和的冒泡和隧道的路由事件的版本也共享事件数据。</span><span class="sxs-lookup"><span data-stu-id="0414b-107">The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data.</span></span> <span data-ttu-id="0414b-108">路由事件过程，这可能会影响该事件的处理的特征。</span><span class="sxs-lookup"><span data-stu-id="0414b-108">This can affect the handled characteristics of the event as it travels the event route.</span></span> <span data-ttu-id="0414b-109">有关详细信息，请参阅[输入概述](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0414b-109">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="0414b-110">除<xref:System.Windows.RoutedEventArgs>相关的所有路由事件，最感兴趣的属性的属性<xref:System.Windows.Input.MouseEventArgs>，可能会在使用<xref:System.Windows.Input.MouseEventHandler>实现是公开的当前的按钮状态，例如的几个属性<xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>和<xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>。</span><span class="sxs-lookup"><span data-stu-id="0414b-110">Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of <xref:System.Windows.Input.MouseEventArgs> that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state, such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A> and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>.</span></span> <span data-ttu-id="0414b-111"><xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> 很有用，特别是因为你可以检查<xref:System.Windows.Input.MouseDevice.Captured%2A>在其上。</span><span class="sxs-lookup"><span data-stu-id="0414b-111"><xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it.</span></span>  
  
 <span data-ttu-id="0414b-112">请注意，专门处理鼠标按钮事件的事件使用不同的委托， <xref:System.Windows.Input.MouseButtonEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="0414b-112">Note that events that specifically deal with mouse button events use a different delegate, <xref:System.Windows.Input.MouseButtonEventHandler>.</span></span> <span data-ttu-id="0414b-113">鼠标按钮属性都位于<xref:System.Windows.Input.MouseEventArgs>以防输入的模式或涉及按钮，即使您正处理非按钮事件的交互。</span><span class="sxs-lookup"><span data-stu-id="0414b-113">The mouse button properties are available on <xref:System.Windows.Input.MouseEventArgs> in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
</Type>