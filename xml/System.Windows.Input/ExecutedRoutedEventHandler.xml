<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExecutedRoutedEventHandler.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55e7060feb6bd9cc789b91cd51b75c1f71d708b5f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e7060feb6bd9cc789b91cd51b75c1f71d708b5f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The object where the event handler is attached.</source>
          <target state="translated">事件处理程序附加到的对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> and <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /&gt;</ph> routed events, as well as related attached events.</source>
          <target state="translated">表示将处理 <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /&gt;</ph> 路由事件以及相关附加事件的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate contains the implementation logic for a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">此委托包含的实现逻辑<ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</source>
          <target state="translated">将实施逻辑分离命令中允许的命令从不同源和类型，调用，并且允许的命令逻辑集中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate is also used for <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>, which are attached events on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class that implements much of the commanding infrastructure.</source>
          <target state="translated">此委托还用于<ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>，这是上附加事件<ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>实现很多命令的基础结构的类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>But most practical handlers will handle the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.</source>
          <target state="translated">但大多数实际的处理程序将处理<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>从特定的事件<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>，而不是在工作<ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>级别。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Within <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph>，以下属性通常是感兴趣的编写事件处理程序为执行命令的结果的路由事件时：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> reports the target where the command was executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> 报告执行了该命令的目标。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Once the command is executed, you can also think of the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> more generally in routed event terms, as the object that raised a routed event.</source>
          <target state="translated">一旦执行该命令，你可以认为的<ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph>的详细信息通常在路由事件条款引发路由的事件的对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> reports the command that executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> 报告执行的命令。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</source>
          <target state="translated">如果使用命令绑定，并且您编写可能处理多个命令的处理程序，此属性很有用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> reports any command-specific parameters that were passed by the executing command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> 报告正在执行的命令传递的任何特定于命令的参数。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Not all commands use or expect command-specific parameters.</source>
          <target state="translated">并非所有命令都使用或需要特定于命令的参数。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> 报告是否由路由不同元素已进行处理源于执行命令的路由的事件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">对于路由的事件处理程序，它是建议的做法，能够处理设置的事件时执行有意义的工作的处理程序<ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph>到<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This prevents typical handlers for the event from handling the event again further along the route.</source>
          <target state="translated">这将阻止事件再次沿路由的处理事件的典型处理。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For more information on handling routed events, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">处理路由的事件的详细信息，请参阅<bpt id="p1">[</bpt>标记作为 Handled，和类处理的路由事件<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate also represents handlers for <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType&gt;</ph>, which are attached events on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class that implements much of the commanding infrastructure.</source>
          <target state="translated">此委托还表示处理程序<ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType&gt;</ph>，这是上附加事件<ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>实现很多命令的基础结构的类。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>But most practical handlers will handle the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.</source>
          <target state="translated">但大多数实际的处理程序将处理<ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>从特定的事件<ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>，而不是在工作<ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>级别。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For more information on commanding, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">有关命令的详细信息，请参阅<bpt id="p1">[</bpt>命令概述<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This example creates an <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> that sets a visual property on the target when the command is executed.</source>
          <target state="translated">此示例将创建<ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph>执行命令时在目标系统上设置 visual 属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The example also includes the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> for the same command.</source>
          <target state="translated">该示例还包括<ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph>相同命令。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>