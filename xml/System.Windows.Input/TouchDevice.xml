<Type Name="TouchDevice" FullName="System.Windows.Input.TouchDevice">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02aaa12543d8a54c37b2f81f7653c7ccf215d571" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48709125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TouchDevice : System.Windows.Input.InputDevice, System.Windows.Input.IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TouchDevice extends System.Windows.Input.InputDevice implements class System.Windows.Input.IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TouchDevice&#xA;Inherits InputDevice&#xA;Implements IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchDevice abstract : System::Windows::Input::InputDevice, System::Windows::Input::IManipulator" />
  <TypeSignature Language="F#" Value="type TouchDevice = class&#xA;    inherit InputDevice&#xA;    interface IManipulator" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.IManipulator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="00942-101">表示触摸屏上的一个手指产生的单个触控输入。</span>
      <span class="sxs-lookup">
        <span data-stu-id="00942-101">Represents a single touch input produced by a finger on a touchscreen.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-102">通常，可以访问<xref:System.Windows.Input.TouchDevice>通过使用<xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="00942-102">You typically access a <xref:System.Windows.Input.TouchDevice> by using the <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="00942-103">一个<xref:System.Windows.Input.TouchDevice>表示单个触摸屏幕上的。</span><span class="sxs-lookup"><span data-stu-id="00942-103">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="00942-104">如果存在多个触控，使用<xref:System.Windows.Input.TouchDevice.Id%2A>属性来区分它们。</span><span class="sxs-lookup"><span data-stu-id="00942-104">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00942-105">此类包含在类级别应用于所有成员继承要求。</span><span class="sxs-lookup"><span data-stu-id="00942-105">This class contains an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="00942-106">一个<xref:System.Security.SecurityException>派生的类不具有完全信任权限时引发。</span><span class="sxs-lookup"><span data-stu-id="00942-106">A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission.</span></span> <span data-ttu-id="00942-107">有关安全要求的详细信息，请参阅[链接需求](~/docs/framework/misc/link-demands.md)并[继承需求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="00942-107">For more information about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00942-108">以下示例使您能够在创建简单的模式<xref:System.Windows.Controls.Canvas>通过拖动两根手指触摸屏上。</span><span class="sxs-lookup"><span data-stu-id="00942-108">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers on a touchscreen.</span></span> <span data-ttu-id="00942-109">表示每次触摸<xref:System.Windows.Input.TouchDevice>在<xref:System.Windows.Input.TouchEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="00942-109">Each touch is represented by a <xref:System.Windows.Input.TouchDevice> in the <xref:System.Windows.Input.TouchEventArgs>.</span></span> <span data-ttu-id="00942-110">该模式创建的收尾工作了提供的触摸点之间绘制一条线。</span><span class="sxs-lookup"><span data-stu-id="00942-110">The pattern is created by drawing a line between the touch points that are provided by the touches.</span></span> <span data-ttu-id="00942-111">此示例需要 Windows 触摸兼容屏幕。</span><span class="sxs-lookup"><span data-stu-id="00942-111">This example requires a Windows Touch–compatible screen.</span></span>  
  
 <span data-ttu-id="00942-112">下面的标记创建用户界面，其中包括<xref:System.Windows.Controls.Canvas>的网格中居中，并将附加触控事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="00942-112">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a grid, and attaches the event handlers for the touch events.</span></span>  
  
 [!code-xaml[TouchEventsSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="00942-113">下面的代码处理触控事件。</span><span class="sxs-lookup"><span data-stu-id="00942-113">The following code handles the touch events.</span></span> <span data-ttu-id="00942-114">触摸屏输入按下时<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice>捕获到<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="00942-114">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="00942-115">当提升触控时，<xref:System.Windows.Input.TouchDevice>发布。</span><span class="sxs-lookup"><span data-stu-id="00942-115">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="00942-116">当一个触摸移<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice.Id%2A>检查。</span><span class="sxs-lookup"><span data-stu-id="00942-116">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="00942-117">如果移动来自第一次触摸，记录其位置。</span><span class="sxs-lookup"><span data-stu-id="00942-117">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="00942-118">如果移动来自第二个触摸，行是从第一次触摸的位置绘制第二个触摸的位置。</span><span class="sxs-lookup"><span data-stu-id="00942-118">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchEventsSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchEventsSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="00942-119">为从此类派生。</span>
      <span class="sxs-lookup">
        <span data-stu-id="00942-119">for deriving from this class.</span>
      </span>
      <span data-ttu-id="00942-120">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="00942-120">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="00942-121">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="00942-121">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TouchDevice (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (deviceId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TouchDevice(int deviceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TouchDevice : int -&gt; System.Windows.Input.TouchDevice" Usage="new System.Windows.Input.TouchDevice deviceId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId">
          <span data-ttu-id="00942-122">触摸设备的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-122">A unique identifier for the touch device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-123">从派生类中的构造函数中调用，用于初始化 <see cref="T:System.Windows.Input.TouchDevice" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-123">Called from constructors in derived classes to initialize the <see cref="T:System.Windows.Input.TouchDevice" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="00942-124">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-124">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="00942-125">部分受信任的或透明代码不能使用此类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-125">This class cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="touchDevice.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00942-126">将 <see cref="T:System.Windows.Input.TouchDevice" /> 添加到输入消息系统中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-126">Adds the <see cref="T:System.Windows.Input.TouchDevice" /> to the input messaging system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-127">继承的类<xref:System.Windows.Input.TouchDevice>应调用此方法以激活当前的设备。</span><span class="sxs-lookup"><span data-stu-id="00942-127">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to activate the current device.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00942-128">设备已激活。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-128">The device is already activated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-129">将 <see cref="T:System.Windows.Input.TouchDevice" /> 添加到输入消息传送系统时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-129">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is added to the input messaging system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Activate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveSource : System.Windows.PresentationSource" Usage="System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-130">获取报告此设备的输入的 <see cref="T:System.Windows.PresentationSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-130">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-131">报告此设备的输入的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-131">The source that is reporting input for this device.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00942-132">在指定元素上捕获触摸屏输入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-132">Captures a touch to the specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement -&gt; bool" Usage="touchDevice.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="00942-133">捕获触摸屏输入的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-133">The element that captures the touch input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-134">使用 <see cref="F:System.Windows.Input.CaptureMode.Element" /> 捕获模式将触摸屏输入捕获到指定元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-134">Captures a touch to the specified element by using the <see cref="F:System.Windows.Input.CaptureMode.Element" /> capture mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-135">如果元素能够捕获触摸屏输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-135">
              <see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-136">一个<xref:System.Windows.Input.TouchDevice>如果它已被捕获到另一个元素不能捕获到的元素。</span><span class="sxs-lookup"><span data-stu-id="00942-136">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00942-137">下面的示例处理<xref:System.Windows.UIElement.TouchDown>发生的事件<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="00942-137">The following example handles the <xref:System.Windows.UIElement.TouchDown> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="00942-138">触摸屏输入按下时<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice>捕获到<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="00942-138">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 <span data-ttu-id="00942-139">此示例摘自现已推出一个更大示例<xref:System.Windows.Input.TouchDevice>类概述。</span><span class="sxs-lookup"><span data-stu-id="00942-139">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchEventsSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00942-140">
            <paramref name="element" /> 不是 <see cref="T:System.Windows.UIElement" />、<see cref="T:System.Windows.UIElement3D" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-140">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="touchDevice.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="00942-141">捕获触摸屏输入的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-141">The element that captures the touch.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="00942-142">要使用的捕获策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-142">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-143">使用指定的 <see cref="T:System.Windows.Input.CaptureMode" /> 将触摸屏输入捕获到指定元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-143">Captures a touch to the specified element by using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-144">如果元素能够捕获触摸屏输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-144">
              <see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-145">一个<xref:System.Windows.Input.TouchDevice>如果它已被捕获到另一个元素不能捕获到的元素。</span><span class="sxs-lookup"><span data-stu-id="00942-145">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00942-146">
            <paramref name="element" /> 不是 <see cref="T:System.Windows.UIElement" />、<see cref="T:System.Windows.UIElement3D" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-146">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-147">获取捕获了 <see cref="T:System.Windows.Input.TouchDevice" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-147">Gets the element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-148">捕获了 <see cref="T:System.Windows.Input.TouchDevice" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-148">The element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00942-149">下面的示例处理<xref:System.Windows.UIElement.TouchUp>发生的事件<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="00942-149">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="00942-150">它会检查<xref:System.Windows.Input.TouchDevice.Captured%2A>属性以验证设备引发事件捕获到<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="00942-150">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="00942-151">如果是，<xref:System.Windows.Input.TouchDevice>发布。</span><span class="sxs-lookup"><span data-stu-id="00942-151">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="00942-152">此示例摘自现已推出一个更大示例<xref:System.Windows.Input.TouchDevice>类概述。</span><span class="sxs-lookup"><span data-stu-id="00942-152">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CaptureMode CaptureMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.CaptureMode CaptureMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaptureMode As CaptureMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CaptureMode CaptureMode { System::Windows::Input::CaptureMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CaptureMode : System.Windows.Input.CaptureMode" Usage="System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CaptureMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-153">获取 <see cref="T:System.Windows.Input.TouchDevice" /> 的捕获策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-153">Gets the capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-154">
            <see cref="T:System.Windows.Input.TouchDevice" /> 的捕获策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-154">The capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Deactivate();" />
      <MemberSignature Language="F#" Value="member this.Deactivate : unit -&gt; unit" Usage="touchDevice.Deactivate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00942-155">从输入消息系统中移除 <see cref="T:System.Windows.Input.TouchDevice" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-155">Removes the <see cref="T:System.Windows.Input.TouchDevice" /> from the input messaging system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-156">继承的类<xref:System.Windows.Input.TouchDevice>应调用此方法来停用当前的设备。</span><span class="sxs-lookup"><span data-stu-id="00942-156">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to deactivate the current device.</span></span>  
  
 <span data-ttu-id="00942-157">一个<xref:System.Windows.UIElement.TouchLeave>事件引发而无需相应<xref:System.Windows.UIElement.TouchUp>事件。</span><span class="sxs-lookup"><span data-stu-id="00942-157">A <xref:System.Windows.UIElement.TouchLeave> event is raised without the corresponding <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00942-158">设备未激活。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-158">The device is not activated.</span>
          </span>
        </exception>
        <altmember cref="E:System.Windows.ContentElement.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement3D.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement.TouchLeave" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-159">从输入消息系统移除 <see cref="T:System.Windows.Input.TouchDevice" /> 时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-159">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is removed from the input messaging system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-160">获取位于触摸触点正下方的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-160">Gets the element that the touch contact point is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-161">位于触摸触点正下方的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-161">The element that the touch contact point is directly over.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetIntermediateTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchDevice.GetIntermediateTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="00942-162">用于定义坐标空间的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-162">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-163">在派生类中重写时，返回在最近触摸事件与上一个触摸事件之间收集到的所有触点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-163">When overridden in a derived class, returns all touch points that are collected between the most recent and previous touch events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-164">在最近触摸事件与上一个触摸事件之间收集到的所有触点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-164">All touch points that were collected between the most recent and previous touch events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchDevice.GetTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="00942-165">用于定义坐标空间的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-165">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-166">返回触摸设备相对于指定元素的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-166">Returns the current position of the touch device relative to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-167">触摸设备相对于指定元素的当前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-167">The current position of the touch device relative to the specified element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Windows.Input.TouchDevice.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-168">获取由操作系统提供的 <see cref="T:System.Windows.Input.TouchDevice" /> 的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-168">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />, as provided by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-169">
            <see cref="T:System.Windows.Input.TouchDevice" /> 的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-169">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-170">一个<xref:System.Windows.Input.TouchDevice>表示单个触摸屏幕上的。</span><span class="sxs-lookup"><span data-stu-id="00942-170">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="00942-171">如果存在多个触控，使用<xref:System.Windows.Input.TouchDevice.Id%2A>属性来区分它们。</span><span class="sxs-lookup"><span data-stu-id="00942-171">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00942-172">下面的示例处理<xref:System.Windows.UIElement.TouchMove>发生的事件<xref:System.Windows.Controls.Canvas>。</span><span class="sxs-lookup"><span data-stu-id="00942-172">The following example handles the <xref:System.Windows.UIElement.TouchMove> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="00942-173">当一个触摸移<xref:System.Windows.Controls.Canvas>，则<xref:System.Windows.Input.TouchDevice.Id%2A>检查。</span><span class="sxs-lookup"><span data-stu-id="00942-173">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="00942-174">如果移动来自第一次触摸，记录其位置。</span><span class="sxs-lookup"><span data-stu-id="00942-174">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="00942-175">如果移动来自第二个触摸，行是从第一次触摸的位置绘制第二个触摸的位置。</span><span class="sxs-lookup"><span data-stu-id="00942-175">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="00942-176">此示例摘自一个更大的示例中提供<xref:System.Windows.Input.TouchDevice>类概述。</span><span class="sxs-lookup"><span data-stu-id="00942-176">This example is part of a larger example available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchEventsSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Input.TouchDevice.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-177">获取一个值，该值指示设备是否为活动设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-177">Gets a value that indicates whether the device is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-178">如果设备是活动的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-178">
              <see langword="true" /> if the device is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnCapture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCapture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCapture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="abstract member OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit&#xA;override this.OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit" Usage="touchDevice.OnCapture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="00942-179">捕获触摸屏输入的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-179">The element that captures the touch input.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="00942-180">捕获策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-180">The capture policy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-181">在元素上捕获触摸屏输入时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-181">Called when a touch is captured to an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-182"><xref:System.Windows.Input.TouchDevice.OnCapture%2A>方法具有默认实现。</span><span class="sxs-lookup"><span data-stu-id="00942-182">The <xref:System.Windows.Input.TouchDevice.OnCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="00942-183">它可以在执行任何操作时捕获触摸屏输入所需的派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="00942-183">It can be overridden in a derived class to perform any actions that are required when the touch input is captured.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationEnded">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationEnded(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationEnded : bool -&gt; unit&#xA;override this.OnManipulationEnded : bool -&gt; unit" Usage="touchDevice.OnManipulationEnded cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="00942-184">要取消操作时为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-184">
              <see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-185">在操作结束后调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-185">Called when a manipulation has ended.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : unit -&gt; unit&#xA;override this.OnManipulationStarted : unit -&gt; unit" Usage="touchDevice.OnManipulationStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00942-186">在操作开始后调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-186">Called when a manipulation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-187"><xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A>方法具有默认实现。</span><span class="sxs-lookup"><span data-stu-id="00942-187">The <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="00942-188">它可以在执行任何触控操作开始时所需的操作的派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="00942-188">It can be overridden in a derived class to perform any actions that are required when touch manipulation is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationStarted" />
      </Docs>
    </Member>
    <Member MemberName="ReportDown">
      <MemberSignature Language="C#" Value="protected bool ReportDown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportDown" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportDown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportDown();" />
      <MemberSignature Language="F#" Value="member this.ReportDown : unit -&gt; bool" Usage="touchDevice.ReportDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00942-189">报告对元素按下了触摸屏输入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-189">Reports that a touch is pressed on an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-190">如果处理过 <see cref="E:System.Windows.UIElement.TouchDown" /> 事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-190">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchDown" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-191">继承的类<xref:System.Windows.Input.TouchDevice>应调用此方法来引发<xref:System.Windows.UIElement.TouchDown>事件。</span><span class="sxs-lookup"><span data-stu-id="00942-191">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="00942-192">一个<xref:System.Windows.UIElement.TouchEnter>前引发<xref:System.Windows.UIElement.TouchDown>事件。</span><span class="sxs-lookup"><span data-stu-id="00942-192">A <xref:System.Windows.UIElement.TouchEnter> event is raised before the <xref:System.Windows.UIElement.TouchDown> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchDown" />
        <altmember cref="E:System.Windows.UIElement3D.TouchDown" />
        <altmember cref="E:System.Windows.UIElement.TouchDown" />
      </Docs>
    </Member>
    <Member MemberName="ReportMove">
      <MemberSignature Language="C#" Value="protected bool ReportMove ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportMove" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportMove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportMove();" />
      <MemberSignature Language="F#" Value="member this.ReportMove : unit -&gt; bool" Usage="touchDevice.ReportMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00942-193">报告触摸屏输入跨元素移动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-193">Reports that a touch is moving across an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-194">如果处理过 <see cref="E:System.Windows.UIElement.TouchMove" /> 事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-194">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchMove" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-195">继承的类<xref:System.Windows.Input.TouchDevice>应调用此方法来引发<xref:System.Windows.UIElement.TouchMove>事件。</span><span class="sxs-lookup"><span data-stu-id="00942-195">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchMove> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchMove" />
        <altmember cref="E:System.Windows.UIElement3D.TouchMove" />
        <altmember cref="E:System.Windows.UIElement.TouchMove" />
      </Docs>
    </Member>
    <Member MemberName="ReportUp">
      <MemberSignature Language="C#" Value="protected bool ReportUp ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportUp" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportUp () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportUp();" />
      <MemberSignature Language="F#" Value="member this.ReportUp : unit -&gt; bool" Usage="touchDevice.ReportUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00942-196">报告触摸屏输入已从元素移开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-196">Reports that a touch was lifted from an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-197">如果处理过 <see cref="E:System.Windows.UIElement.TouchUp" /> 事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-197">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchUp" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-198">继承的类<xref:System.Windows.Input.TouchDevice>应调用此方法来引发<xref:System.Windows.UIElement.TouchUp>事件。</span><span class="sxs-lookup"><span data-stu-id="00942-198">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="00942-199">一个<xref:System.Windows.UIElement.TouchLeave>后引发<xref:System.Windows.UIElement.TouchUp>事件。</span><span class="sxs-lookup"><span data-stu-id="00942-199">A <xref:System.Windows.UIElement.TouchLeave> event is raised after the <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchUp" />
        <altmember cref="E:System.Windows.UIElement3D.TouchUp" />
        <altmember cref="E:System.Windows.UIElement.TouchUp" />
      </Docs>
    </Member>
    <Member MemberName="SetActiveSource">
      <MemberSignature Language="C#" Value="protected void SetActiveSource (System.Windows.PresentationSource activeSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetActiveSource(class System.Windows.PresentationSource activeSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetActiveSource (activeSource As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetActiveSource(System::Windows::PresentationSource ^ activeSource);" />
      <MemberSignature Language="F#" Value="member this.SetActiveSource : System.Windows.PresentationSource -&gt; unit" Usage="touchDevice.SetActiveSource activeSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="activeSource">
          <span data-ttu-id="00942-200">报告该设备的输入的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-200">The source that reports input for this device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-201">设置报告此设备的输入的 <see cref="T:System.Windows.PresentationSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-201">Sets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberSignature Language="F#" Value="member this.Synchronize : unit -&gt; unit" Usage="touchDevice.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00942-202">强制 <see cref="T:System.Windows.Input.TouchDevice" /> 将用户界面与基础触点同步。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-202">Forces the <see cref="T:System.Windows.Input.TouchDevice" /> to synchronize the user interface with underlying touch points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-203">与基础触摸位置同步的用户界面可能会导致<xref:System.Windows.UIElement.TouchMove>要在引发事件。</span><span class="sxs-lookup"><span data-stu-id="00942-203">Synchronizing the user interface with the underlying touch positions might cause <xref:System.Windows.UIElement.TouchMove> events to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.GetPosition">
      <MemberSignature Language="C#" Value="System.Windows.Point IManipulator.GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Point System.Windows.Input.IManipulator.GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Function GetPosition (relativeTo As IInputElement) As Point Implements IManipulator.GetPosition" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Point System.Windows.Input.IManipulator.GetPosition(System::Windows::IInputElement ^ relativeTo) = System::Windows::Input::IManipulator::GetPosition;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="00942-204">在计算 <see cref="T:System.Windows.Input.IManipulator" /> 的位置时要用作参照框架的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-204">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-205">返回 <see cref="T:System.Windows.Input.IManipulator" /> 对象的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-205">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00942-206">
            <see cref="T:System.Windows.Input.IManipulator" /> 对象的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-206">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-207">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="00942-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00942-208">它只能在 <xref:System.Windows.Input.TouchDevice> 实例强制转换为 <xref:System.Windows.Input.IManipulator> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="00942-208">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.Id">
      <MemberSignature Language="C#" Value="int System.Windows.Input.IManipulator.Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Id As Integer Implements IManipulator.Id" />
      <MemberSignature Language="C++ CLI" Value="property int System::Windows::Input::IManipulator::Id { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Input.IManipulator.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-209">获取由操作系统提供的 <see cref="T:System.Windows.Input.TouchDevice" /> 的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-209">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" /> as provided by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-210">
            <see cref="T:System.Windows.Input.TouchDevice" /> 的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-210">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-211">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="00942-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00942-212">它只能在 <xref:System.Windows.Input.TouchDevice> 实例强制转换为 <xref:System.Windows.Input.IManipulator> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="00942-212">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.ManipulationEnded">
      <MemberSignature Language="C#" Value="void IManipulator.ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub ManipulationEnded (cancel As Boolean) Implements IManipulator.ManipulationEnded" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) = System::Windows::Input::IManipulator::ManipulationEnded;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="00942-213">要取消操作时为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-213">
              <see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00942-214">在操作结束后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-214">Occurs when a manipulation has ended.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00942-215">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="00942-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00942-216">它只能在 <xref:System.Windows.Input.TouchDevice> 实例强制转换为 <xref:System.Windows.Input.IManipulator> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="00942-216">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-217">获取从 <see cref="T:System.Windows.Input.TouchDevice" /> 中接收输入的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-217">Gets the element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00942-218">从 <see cref="T:System.Windows.Input.TouchDevice" /> 中接收输入的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-218">The element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Event Updated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler " Usage="member this.Updated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.IManipulator.Updated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00942-219">在发送触摸消息时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00942-219">Occurs when a touch message is sent.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>