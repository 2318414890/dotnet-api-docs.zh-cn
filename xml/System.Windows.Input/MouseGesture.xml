<Type Name="MouseGesture" FullName="System.Windows.Input.MouseGesture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb0d07b6ec4ae5cb33c388ce29faaf98f0d5186e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36505918" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseGesture : System::Windows::Input::InputGesture" />
  <TypeSignature Language="F#" Value="type MouseGesture = class&#xA;    inherit InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.MouseGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.MouseGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a99b-101">Defines a mouse input gesture that can be used to invoke a command.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a99b-101">Defines a mouse input gesture that can be used to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a99b-102">与不同<xref:System.Windows.Input.KeyGesture>、<xref:System.Windows.Input.MouseAction>没有成对使用<xref:System.Windows.Input.ModifierKeys>才能有效<xref:System.Windows.Input.MouseGesture>。</span><span class="sxs-lookup"><span data-stu-id="6a99b-102">Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> to be a valid <xref:System.Windows.Input.MouseGesture>.</span></span>  
  
 <span data-ttu-id="6a99b-103">A<xref:System.Windows.Input.MouseGesture>可以绑定到<xref:System.Windows.Input.RoutedCommand>(或其他<xref:System.Windows.Input.ICommand>实现) 通过<xref:System.Windows.Input.MouseBinding>以便调用此命令时<xref:System.Windows.Input.MouseGesture>时发生。</span><span class="sxs-lookup"><span data-stu-id="6a99b-103">A <xref:System.Windows.Input.MouseGesture> can be bound to a <xref:System.Windows.Input.RoutedCommand> (or other <xref:System.Windows.Input.ICommand> implementations) through a <xref:System.Windows.Input.MouseBinding> so that the command is invoked when the <xref:System.Windows.Input.MouseGesture> occurs.</span></span>  
  
 <span data-ttu-id="6a99b-104">有关<xref:System.Windows.Input.MouseGesture>[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]特性用法，通常在中设置的属性[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]是<xref:System.Windows.Input.MouseBinding.Gesture%2A>，在其中的笔势可以表示鼠标操作和一个或多个修改键的情况下。</span><span class="sxs-lookup"><span data-stu-id="6a99b-104">For <xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.MouseBinding.Gesture%2A>, in cases where the gesture can represent both a mouse action and one or more modifier key.</span></span> <span data-ttu-id="6a99b-105">你还可以设置<xref:System.Windows.Input.MouseBinding.Gesture%2A>属性为只表示鼠标操作。</span><span class="sxs-lookup"><span data-stu-id="6a99b-105">You can also set the <xref:System.Windows.Input.MouseBinding.Gesture%2A> property to be just a mouse action.</span></span> <span data-ttu-id="6a99b-106">一般情况下，建议你仅使用<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性从[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，而不是设置<xref:System.Windows.Input.MouseBinding.MouseAction%2A>，即使未指定修饰符。</span><span class="sxs-lookup"><span data-stu-id="6a99b-106">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than setting <xref:System.Windows.Input.MouseBinding.MouseAction%2A>, even if you do not specify modifiers.</span></span> <span data-ttu-id="6a99b-107">这将避免多义性，提供的最简单的语法，并提供序列化的最直接表示形式。</span><span class="sxs-lookup"><span data-stu-id="6a99b-107">This will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="6a99b-108"><xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 对象元素用法不可能但不常见，因为你通常可以设置<xref:System.Windows.Input.MouseBinding.Gesture%2A>属性<xref:System.Windows.Input.MouseBinding>而不使用属性元素语法的内联。</span><span class="sxs-lookup"><span data-stu-id="6a99b-108"><xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] object element usages are possible but uncommon, because you can ordinarily set the <xref:System.Windows.Input.MouseBinding.Gesture%2A> property of <xref:System.Windows.Input.MouseBinding> inline without the use of property element syntax.</span></span>  
  
<a name="xamlAttributeUsage_MouseGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6a99b-109">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="6a99b-109">XAML Attribute Usage</span></span>  
  
```  
<object property="mouseAction"/>  
- or -  
<object property="oneOrMoreModifierKeys+mouseAction"/>  
```  
  
<a name="xamlValues_MouseGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6a99b-110">XAML 值</span><span class="sxs-lookup"><span data-stu-id="6a99b-110">XAML Values</span></span>  
 `mouseAction`  
 <xref:System.Windows.Input.MouseAction>  
  
 <span data-ttu-id="6a99b-111">单次鼠标操作。</span><span class="sxs-lookup"><span data-stu-id="6a99b-111">A single mouse action.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="6a99b-112">一个或多个定义的修改键<xref:System.Windows.Input.ModifierKeys>枚举。</span><span class="sxs-lookup"><span data-stu-id="6a99b-112">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration.</span></span> <span data-ttu-id="6a99b-113">如果提供多个修改键，则以"+"字符分隔每个修改键。</span><span class="sxs-lookup"><span data-stu-id="6a99b-113">If more than one modifier key is provided, each modifier key is delimited with a "+" character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a99b-114">下面的示例说明了如何创建<xref:System.Windows.Input.MouseGesture>并将其与关联<xref:System.Windows.Input.RoutedCommand>通过<xref:System.Windows.Input.MouseBinding>。</span><span class="sxs-lookup"><span data-stu-id="6a99b-114">The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.</span></span>  <span data-ttu-id="6a99b-115">当单击鼠标滚轮时<xref:System.Windows.Input.ModifierKeys.Control>按下键，<xref:System.Windows.Input.ApplicationCommands.Open%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="6a99b-115">When the mouse wheel is clicked while the <xref:System.Windows.Input.ModifierKeys.Control> key is pressed, the <xref:System.Windows.Input.ApplicationCommands.Open%2A> is invoked.</span></span>  
  
 [!code-xaml[commandlibrarysnippets#MouseBindingMouseGestureXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#mousebindingmousegesturexaml)]  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a99b-116">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-116">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a99b-117">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-117">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseGesture : System.Windows.Input.MouseAction -&gt; System.Windows.Input.MouseGesture" Usage="new System.Windows.Input.MouseGesture mouseAction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
      </Parameters>
      <Docs>
        <param name="mouseAction">
          <span data-ttu-id="6a99b-118">The action associated with this gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-118">The action associated with this gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a99b-119">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class using the specified <see cref="T:System.Windows.Input.MouseAction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-119">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class using the specified <see cref="T:System.Windows.Input.MouseAction" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="6a99b-120">
            <paramref name="mouseAction" /> is not a valid <see cref="T:System.Windows.Input.MouseAction" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-120">
              <paramref name="mouseAction" /> is not a valid <see cref="T:System.Windows.Input.MouseAction" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseGesture : System.Windows.Input.MouseAction * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.MouseGesture" Usage="new System.Windows.Input.MouseGesture (mouseAction, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="mouseAction">
          <span data-ttu-id="6a99b-121">The action associated with this gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-121">The action associated with this gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="6a99b-122">The modifiers associated with this gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-122">The modifiers associated with this gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a99b-123">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class using the specified <see cref="T:System.Windows.Input.MouseAction" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-123">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture" /> class using the specified <see cref="T:System.Windows.Input.MouseAction" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="6a99b-124">
            <paramref name="mouseAction" /> is not a valid <see cref="T:System.Windows.Input.MouseAction" /> value  -or-  <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-124">
              <paramref name="mouseAction" /> is not a valid <see cref="T:System.Windows.Input.MouseAction" /> value  -or-  <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberSignature Language="F#" Value="override this.Matches : obj * System.Windows.Input.InputEventArgs -&gt; bool" Usage="mouseGesture.Matches (targetElement, inputEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement">
          <span data-ttu-id="6a99b-125">The target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-125">The target.</span>
          </span>
        </param>
        <param name="inputEventArgs">
          <span data-ttu-id="6a99b-126">The input event data to compare with this gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-126">The input event data to compare with this gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a99b-127">Determines whether <see cref="T:System.Windows.Input.MouseGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-127">Determines whether <see cref="T:System.Windows.Input.MouseGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a99b-128">
            <see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.MouseGesture" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-128">
              <see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.MouseGesture" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a99b-129">下面的示例演示如何测试是否<xref:System.Windows.Input.MouseGesture>与实例关联的输入匹配<xref:System.Windows.Input.InputEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="6a99b-129">The following example shows how to test whether a <xref:System.Windows.Input.MouseGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="6a99b-130">A<xref:System.Windows.UIElement.MouseDown>事件处理程序将与事件数据进行比较<xref:System.Windows.Input.MouseGesture>使用<xref:System.Windows.Input.MouseGesture.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6a99b-130">A <xref:System.Windows.UIElement.MouseDown> event handler compares the event data with the <xref:System.Windows.Input.MouseGesture> by using the <xref:System.Windows.Input.MouseGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlermousegesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlermousegesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.MouseGesture.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a99b-131">Gets or sets the modifier keys associated with this <see cref="T:System.Windows.Input.MouseGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-131">Gets or sets the modifier keys associated with this <see cref="T:System.Windows.Input.MouseGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a99b-132">修改键与此笔势关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-132">The modifier keys associated with this gesture.</span>
          </span>
          <span data-ttu-id="6a99b-133">默认值为 <see cref="F:System.Windows.Input.ModifierKeys.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-133">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a99b-134">与不同<xref:System.Windows.Input.KeyGesture>、<xref:System.Windows.Input.MouseAction>没有成对使用<xref:System.Windows.Input.ModifierKeys>才能有效<xref:System.Windows.Input.MouseGesture>。</span><span class="sxs-lookup"><span data-stu-id="6a99b-134">Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> in order to be a valid <xref:System.Windows.Input.MouseGesture>.</span></span>  
  
 <span data-ttu-id="6a99b-135"><xref:System.Windows.Input.ModifierKeys> 是一个位字段枚举，因此很可能要同时按下的多个修改键。</span><span class="sxs-lookup"><span data-stu-id="6a99b-135"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span> <span data-ttu-id="6a99b-136">使用位运算，以确定修改键的准确集合已按下。</span><span class="sxs-lookup"><span data-stu-id="6a99b-136">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6a99b-137">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="6a99b-137">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6a99b-138">XAML 值</span><span class="sxs-lookup"><span data-stu-id="6a99b-138">XAML Values</span></span>  
 <span data-ttu-id="6a99b-139">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="6a99b-139">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="6a99b-140">一个或多个定义的修改键<xref:System.Windows.Input.ModifierKeys>枚举，用"+"字符分隔。</span><span class="sxs-lookup"><span data-stu-id="6a99b-140">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a99b-141">下面的示例说明了如何创建<xref:System.Windows.Input.MouseGesture>并将其与关联<xref:System.Windows.Input.RoutedCommand>通过<xref:System.Windows.Input.MouseBinding>。</span><span class="sxs-lookup"><span data-stu-id="6a99b-141">The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="MouseAction">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseAction MouseAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseAction MouseAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.MouseAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseAction As MouseAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseAction MouseAction { System::Windows::Input::MouseAction get(); void set(System::Windows::Input::MouseAction value); };" />
      <MemberSignature Language="F#" Value="member this.MouseAction : System.Windows.Input.MouseAction with get, set" Usage="System.Windows.Input.MouseGesture.MouseAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a99b-142">Gets or sets the <see cref="T:System.Windows.Input.MouseAction" /> associated with this gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-142">Gets or sets the <see cref="T:System.Windows.Input.MouseAction" /> associated with this gesture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a99b-143">与此手势关联的鼠标操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-143">The mouse action associated with this gesture.</span>
          </span>
          <span data-ttu-id="6a99b-144">默认值为 <see cref="F:System.Windows.Input.MouseAction.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a99b-144">The default value is <see cref="F:System.Windows.Input.MouseAction.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a99b-145">与不同<xref:System.Windows.Input.KeyGesture>、<xref:System.Windows.Input.MouseAction>没有成对使用<xref:System.Windows.Input.ModifierKeys>才能有效<xref:System.Windows.Input.MouseGesture>。</span><span class="sxs-lookup"><span data-stu-id="6a99b-145">Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> in order to be a valid <xref:System.Windows.Input.MouseGesture>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a99b-146">下面的示例说明了如何创建<xref:System.Windows.Input.MouseGesture>并将其与关联<xref:System.Windows.Input.RoutedCommand>通过<xref:System.Windows.Input.MouseBinding>。</span><span class="sxs-lookup"><span data-stu-id="6a99b-146">The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>