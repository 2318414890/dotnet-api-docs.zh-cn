<Type Name="ProjectItemInstance" FullName="Microsoft.Build.Execution.ProjectItemInstance">
  <TypeSignature Language="C#" Value="public class ProjectItemInstance : Microsoft.Build.Framework.ITaskItem2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectItemInstance extends System.Object implements class Microsoft.Build.Framework.ITaskItem, class Microsoft.Build.Framework.ITaskItem2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectItemInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectItemInstance&#xA;Implements ITaskItem2" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectItemInstance : Microsoft::Build::Framework::ITaskItem2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskItem2</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} #DirectMetadata={DirectMetadataCount})")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9bf5-101">包装计算项以进行生成。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-101">Wraps an evaluated item for build purposes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-102">不存储项元素信息，因为已经执行所有计算和验证。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-102">Does not store item element information, because all evaluation and verification has already been performed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectMetadataCount">
      <MemberSignature Language="C#" Value="public int DirectMetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirectMetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirectMetadataCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-103">获取此项的元数据的条数。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-103">Gets the number of pieces of metadata on this item.</span></span></summary>
        <value><span data-ttu-id="c9bf5-104">返回此项的元数据的条数。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-104">Returns the number of pieces of metadata on this item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedInclude">
      <MemberSignature Language="C#" Value="public string EvaluatedInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property EvaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedInclude { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-105">获取计算的 Include 特性值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-105">Gets the evaluated Include attribute value.</span></span></summary>
        <value><span data-ttu-id="c9bf5-106">返回计算的 Include 特性值，该值可能为空字符串。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-106">Returns the evaluated Include attribute value, which may be empty string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectMetadataInstance GetMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectMetadataInstance GetMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata (name As String) As ProjectMetadataInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectMetadataInstance ^ GetMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem`1.GetMetadata(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectMetadataInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c9bf5-107">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-107">The name of the metadata.</span></span></param>
        <summary><span data-ttu-id="c9bf5-108">获取具有给定名称的元数据（包括从项定义继承的元数据）。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-108">Get the metadata with the given name, including metadata inherited from item definitions.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-109">返回具有给定名称的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-109">Returns the metadata with the given name.</span></span> <span data-ttu-id="c9bf5-110">如果不存在具有该名称的元数据，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-110">Returns null if no metadata exists with that name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-111">不包括任何内置的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-111">Does not include any built-in metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValue">
      <MemberSignature Language="C#" Value="public string GetMetadataValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMetadataValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetMetadataValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem.GetMetadataValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c9bf5-112">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-112">The name of the metadata.</span></span></param>
        <summary><span data-ttu-id="c9bf5-113">获取具有给定名称的元数据（包括从项定义继承的元数据）的值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-113">Gets the value of the metadata with the given name, including metadata inherited from item definitions.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-114">获取具有给定名称的元数据（包括从项定义继承的元数据）的值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-114">Gets the value of the metadata with the given name, including metadata inherited from item definitions.</span></span> <span data-ttu-id="c9bf5-115">如果不存在具有该名称的元数据，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-115">Returns an empty string if no metadata exists with that name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-116">包括内置的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-116">Includes built-in metadata.</span></span>  
  
 <span data-ttu-id="c9bf5-117">若要确定是否实际存在一种元数据，但具有空值，请使用<xref:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-117">To determine whether a piece of metadata is actually present but with an empty value, use <xref:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMetadata">
      <MemberSignature Language="C#" Value="public bool HasMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c9bf5-118">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-118">The name of the metadata.</span></span></param>
        <summary><span data-ttu-id="c9bf5-119">确定是否在此项上定义了具有给定名称的元数据（即使其值是空字符串）。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-119">Determines whether the metadata with the given name is defined on this item (even if its value is empty string).</span></span></summary>
        <returns><span data-ttu-id="c9bf5-120">如果在此项上定义了具有给定名称的元数据（即使其值是空字符串），则返回 true；否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-120">Returns true if the metadata with the given name is defined on this item (even if its value is empty string); false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-121">这会搜索内置的元数据和元数据从项定义，因为此方法使用对于批处理，其中并不重要的元数据的出处。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-121">This searches built-in metadata and metadata from item definitions, because this method is used for batching, where it doesn't matter where the metadata originated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-122">获取项类型，例如“Compile”。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-122">Gets the item type, for example "Compile".</span></span></summary>
        <value><span data-ttu-id="c9bf5-123">返回项类型，例如“Compile”。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-123">Returns the item type, for example "Compile".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-124">无法对此进行设置，因为它用作到项目的项表中的键。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-124">This cannot be set, as it is used as the key into the project's items table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectMetadataInstance&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectMetadataInstance&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IEnumerable(Of ProjectMetadataInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectMetadataInstance ^&gt; ^ Metadata { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectMetadataInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectMetadataInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-125">获取可枚举此项的计算元数据的枚举器。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-125">Gets an enumerator over the evaluated metadata of the item.</span></span> <span data-ttu-id="c9bf5-126">这是一个只读集合。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-126">This is a read-only collection.</span></span></summary>
        <value><span data-ttu-id="c9bf5-127">返回可枚举此项的计算元数据的枚举器。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-127">Returns an enumerator over the evaluated metadata of the item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-128">不包括内置的元数据或从项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-128">Does not include built-in metadata or metadata from item definitions.</span></span>  
  
 <span data-ttu-id="c9bf5-129">若要修改的元数据，使用<xref:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-129">To modify the metadata, use <xref:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataCount">
      <MemberSignature Language="C#" Value="public int MetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.MetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskItem.MetadataCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-130">获取元数据项（包括从项定义继承的元数据）的数目。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-130">Gets the number of metadata entries, including metadata inherited from item definitions.</span></span></summary>
        <value><span data-ttu-id="c9bf5-131">返回元数据项（包括从项定义继承的元数据）的数目。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-131">Returns the number of metadata entries, including metadata inherited from item definitions</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-132">包括自定义和内置的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-132">Includes both custom and built-in metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; MetadataNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; MetadataNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.MetadataNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataNames As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ MetadataNames { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-133">获取此项的所有元数据名称（包括从项定义继承的元数据）。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-133">Gets all metadata names of this item, including metadata inherited from item definitions.</span></span></summary>
        <value><span data-ttu-id="c9bf5-134">返回此项的所有元数据名称（包括从项定义继承的元数据）。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-134">Returns all metadata names of this item, including metadata inherited from item definitions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-135">包括内置的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-135">Includes names of built-in metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary ITaskItem.CloneCustomMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionary Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata" />
      <MemberSignature Language="VB.NET" Value="Function CloneCustomMetadata () As IDictionary Implements ITaskItem.CloneCustomMetadata" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionary ^ Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata() = Microsoft::Build::Framework::ITaskItem::CloneCustomMetadata;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem.CloneCustomMetadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9bf5-136">ITaskItem 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-136">ITaskItem implementation.</span></span> <span data-ttu-id="c9bf5-137">获取自定义元数据的集合。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-137">Gets the collection of custom metadata.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-138">自定义元数据的集合。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-138">The collection of custom metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="c9bf5-139">不包括内置的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-139">Does not include built-in metadata.</span></span>  
  
-   <span data-ttu-id="c9bf5-140">此方法应返回的元数据的克隆。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-140">This method should return a clone of the metadata.</span></span>  
  
-   <span data-ttu-id="c9bf5-141">写入到此字典应不会反映在基础的项。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-141">Writing to this dictionary should not be reflected in the underlying item.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem.CopyMetadataTo">
      <MemberSignature Language="C#" Value="void ITaskItem.CopyMetadataTo (Microsoft.Build.Framework.ITaskItem destinationItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(class Microsoft.Build.Framework.ITaskItem destinationItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyMetadataTo (destinationItem As ITaskItem) Implements ITaskItem.CopyMetadataTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(Microsoft::Build::Framework::ITaskItem ^ destinationItem) = Microsoft::Build::Framework::ITaskItem::CopyMetadataTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationItem" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="destinationItem"><span data-ttu-id="c9bf5-142">元数据项要复制到的项。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-142">The item to copy the metadata entries to.</span></span></param>
        <summary><span data-ttu-id="c9bf5-143">ITaskItem 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-143">ITaskItem implementation.</span></span> <span data-ttu-id="c9bf5-144">将自定义的元数据项复制到另一个项。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-144">Copies the custom metadata entries to another item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-145">当应遵循以下原则实现此方法。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-145">Follow the guidelines below when implementing this method.</span></span>  
  
-   <span data-ttu-id="c9bf5-146">不会覆盖<xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-146">Do not overwrite the <xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A> property.</span></span>  
  
-   <span data-ttu-id="c9bf5-147">不会覆盖现有的元数据条目。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-147">Do not overwrite existing metadata entries.</span></span>  
  
-   <span data-ttu-id="c9bf5-148">不要复制元数据条目的没有意义上的目标项。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-148">Do not copy metadata entries that do not make sense on the destination item.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem.GetMetadata">
      <MemberSignature Language="C#" Value="string ITaskItem.GetMetadata (string metadataName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Microsoft.Build.Framework.ITaskItem.GetMetadata(string metadataName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetMetadata (metadataName As String) As String Implements ITaskItem.GetMetadata" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Microsoft.Build.Framework.ITaskItem.GetMetadata(System::String ^ metadataName) = Microsoft::Build::Framework::ITaskItem::GetMetadata;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem.GetMetadata(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadataName"><span data-ttu-id="c9bf5-149">元数据项的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-149">The name of the metadata entry.</span></span></param>
        <summary><span data-ttu-id="c9bf5-150">ITaskItem 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-150">ITaskItem implementation.</span></span> <span data-ttu-id="c9bf5-151">获取指定元数据项的值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-151">Gets the value of the specified metadata entry.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-152"><paramref name="attributeName" /> 元数据的值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-152">The value of the <paramref name="attributeName" /> metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-153">不应返回元数据不存在的情况下为 null。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-153">Should not return null if metadata is not present.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem.ItemSpec">
      <MemberSignature Language="C#" Value="string Microsoft.Build.Framework.ITaskItem.ItemSpec { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.Build.Framework.ITaskItem.ItemSpec" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec" />
      <MemberSignature Language="VB.NET" Value=" Property ItemSpec As String Implements ITaskItem.ItemSpec" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ Microsoft.Build.Framework.ITaskItem.ItemSpec { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskItem.ItemSpec</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-154">ITaskItem 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-154">ITaskItem implementation.</span></span> <span data-ttu-id="c9bf5-155">获取或设置项规范。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-155">Gets or sets the item specification.</span></span></summary>
        <value><span data-ttu-id="c9bf5-156">项规范。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-156">The item specification.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-157">项规范是一个任意字符串。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-157">The item specification is an arbitrary string.</span></span> <span data-ttu-id="c9bf5-158">如果该项表示磁盘上的文件，项规范将该文件的路径。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-158">If the item represents a file on disk, the item specification will be the path of that file.</span></span>  
  
 <span data-ttu-id="c9bf5-159"><xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A>文件是一个项目中的以下项声明`File.cs`。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-159">The <xref:Microsoft.Build.Framework.ITaskItem.ItemSpec%2A> for the following item declaration in a project file is `File.cs`.</span></span>  
  
```  
<ItemGroup>  
    <Compile Include="File.cs"/>  
</ItemGroup>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9bf5-160">下面的示例演示创建一个或多个目录的任务的代码。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-160">The following example shows the code for a task that creates one or more directories.</span></span>  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem.MetadataNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection Microsoft.Build.Framework.ITaskItem.MetadataNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Microsoft.Build.Framework.ITaskItem.MetadataNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MetadataNames As ICollection Implements ITaskItem.MetadataNames" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ Microsoft.Build.Framework.ITaskItem.MetadataNames { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskItem.MetadataNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-161">ITaskItem 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-161">ITaskItem implementation.</span></span> <span data-ttu-id="c9bf5-162">获取与该项关联的元数据项的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-162">Gets the names of the metadata entries associated with the item.</span></span></summary>
        <value><span data-ttu-id="c9bf5-163">与该项关联的元数据项的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-163">The names of the metadata entries associated with the item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem.SetMetadata">
      <MemberSignature Language="C#" Value="void ITaskItem.SetMetadata (string metadataName, string metadataValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Build.Framework.ITaskItem.SetMetadata(string metadataName, string metadataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetMetadata (metadataName As String, metadataValue As String) Implements ITaskItem.SetMetadata" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Build.Framework.ITaskItem.SetMetadata(System::String ^ metadataName, System::String ^ metadataValue) = Microsoft::Build::Framework::ITaskItem::SetMetadata;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem.SetMetadata(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataName" Type="System.String" />
        <Parameter Name="metadataValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadataName"><span data-ttu-id="c9bf5-164">要添加或更改的元数据名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-164">Metadata name to be added or changed.</span></span></param>
        <param name="metadataValue"><span data-ttu-id="c9bf5-165">要添加或更改的元数据值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-165">Metadata value to be added or changed.</span></span></param>
        <summary><span data-ttu-id="c9bf5-166">ITaskItem 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-166">ITaskItem implementation.</span></span> <span data-ttu-id="c9bf5-167">在项中添加或更改自定义元数据项。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-167">Adds or changes a custom metadata entry to the item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary ITaskItem2.CloneCustomMetadataEscaped ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionary Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped" />
      <MemberSignature Language="VB.NET" Value="Function CloneCustomMetadataEscaped () As IDictionary Implements ITaskItem2.CloneCustomMetadataEscaped" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionary ^ Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped() = Microsoft::Build::Framework::ITaskItem2::CloneCustomMetadataEscaped;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem2.CloneCustomMetadataEscaped</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9bf5-168">ITaskItem2 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-168">ITaskItem2 implementation.</span></span> <span data-ttu-id="c9bf5-169">返回此对象的元数据的克隆。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-169">Returns a clone of the metadata on this object.</span></span>  <span data-ttu-id="c9bf5-170">返回的值采用其原始的转义形式。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-170">Values returned are in their original escaped form.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-171">返回克隆的元数据，并保留值的转义。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-171">Returns the cloned metadata, with values' escaping preserved.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped">
      <MemberSignature Language="C#" Value="string Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped" />
      <MemberSignature Language="VB.NET" Value=" Property EvaluatedIncludeEscaped As String Implements ITaskItem2.EvaluatedIncludeEscaped" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskItem2.EvaluatedIncludeEscaped</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-172">ITaskItem2 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-172">ITaskItem2 implementation.</span></span> <span data-ttu-id="c9bf5-173">计算的包含值，将根据需要进行转义。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-173">Evaluated include value, escaped as necessary.</span></span> <span data-ttu-id="c9bf5-174">可能为空字符串。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-174">May be empty string.</span></span> <span data-ttu-id="c9bf5-175">获取或设置项包含值，例如对于基于磁盘的项，这将是文件路径。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-175">Gets or sets the item include value e.g. for disk-based items this would be the file path.</span></span></summary>
        <value><span data-ttu-id="c9bf5-176">返回包含值的项。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-176">Returns the item include value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-177">利用此机会将修复属性名称中，尽管这不会明显是项规范的改进。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-177">Taking the opportunity to fix the property name, although this doesn't make it obvious it's an improvement on ItemSpec.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="string ITaskItem2.GetMetadataValueEscaped (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetMetadataValueEscaped (name As String) As String Implements ITaskItem2.GetMetadataValueEscaped" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(System::String ^ name) = Microsoft::Build::Framework::ITaskItem2::GetMetadataValueEscaped;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem2.GetMetadataValueEscaped(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c9bf5-178">要查询的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-178">The metadata to be queried.</span></span></param>
        <summary><span data-ttu-id="c9bf5-179">ITaskItem2 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-179">ITaskItem2 implementation.</span></span> <span data-ttu-id="c9bf5-180">允许查询此项的元数据的值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-180">Allows the values of metadata on the item to be queried.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-181">返回转义元数据值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-181">Returns the escaped metadata value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-182">利用此机会将修复属性名称中，尽管这不会明显很 GetMetadata 的改进。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-182">Taking the opportunity to fix the property name, although this doesn't make it obvious it's an improvement on GetMetadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral">
      <MemberSignature Language="C#" Value="void ITaskItem2.SetMetadataValueLiteral (string metadataName, string metadataValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(string metadataName, string metadataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetMetadataValueLiteral (metadataName As String, metadataValue As String) Implements ITaskItem2.SetMetadataValueLiteral" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(System::String ^ metadataName, System::String ^ metadataValue) = Microsoft::Build::Framework::ITaskItem2::SetMetadataValueLiteral;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem2.SetMetadataValueLiteral(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataName" Type="System.String" />
        <Parameter Name="metadataValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadataName"><span data-ttu-id="c9bf5-183">元数据名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-183">The metadata name.</span></span></param>
        <param name="metadataValue"><span data-ttu-id="c9bf5-184">元数据的值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-184">The metadata value.</span></span></param>
        <summary><span data-ttu-id="c9bf5-185">ITaskItem2 实现。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-185">ITaskItem2 implementation.</span></span> <span data-ttu-id="c9bf5-186">允许在此项上设置一段自定义元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-186">Allows a piece of custom metadata to be set on the item.</span></span> <span data-ttu-id="c9bf5-187">假定传入的值未转义，并根据需要将值进行转义以维护其值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-187">Assumes that the value passed in is unescaped, and escapes the value as necessary in order to maintain its value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-188">利用此机会将修复属性名称中，尽管这不会明显很 SetMetadata 的改进。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-188">Taking the opportunity to fix the property name, although this doesn't make it obvious it's an improvement on SetMetadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Execution.ProjectInstance Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectItemInstance.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Execution::ProjectInstance ^ Project { Microsoft::Build::Execution::ProjectInstance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9bf5-189">获取所属项目。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-189">Gets the owning project.</span></span></summary>
        <value><span data-ttu-id="c9bf5-190">返回所属项目。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-190">Returns the owning project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadata">
      <MemberSignature Language="C#" Value="public void RemoveMetadata (string metadataName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveMetadata(string metadataName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveMetadata (metadataName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveMetadata(System::String ^ metadataName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskItem.RemoveMetadata(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadataName"><span data-ttu-id="c9bf5-191">元数据名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-191">The metadata name.</span></span></param>
        <summary><span data-ttu-id="c9bf5-192">移除具有给定名称的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-192">Removes metadata with the given name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9bf5-193">TaskItem 使用此方法。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-193">This method is used by TaskItem.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetMetadata">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9bf5-194">添加具有给定名称和值的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-194">Adds metadata with the given names and values.</span></span> <span data-ttu-id="c9bf5-195">覆盖集合中已有的任何同名元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-195">Overwrites any metadata with the same name already in the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public void SetMetadata (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadataDictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMetadata(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadataDictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMetadata (metadataDictionary As IEnumerable(Of KeyValuePair(Of String, String)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMetadata(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadataDictionary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataDictionary" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="metadataDictionary"><span data-ttu-id="c9bf5-196">要添加的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-196">The metadata to add.</span></span></param>
        <summary><span data-ttu-id="c9bf5-197">添加具有给定名称和值的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-197">Adds metadata with the given names and values.</span></span> <span data-ttu-id="c9bf5-198">覆盖集合中已有的任何同名元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-198">Overwrites any metadata with the same name already in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectMetadataInstance SetMetadata (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectMetadataInstance SetMetadata(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadata (name As String, evaluatedValue As String) As ProjectMetadataInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectMetadataInstance ^ SetMetadata(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectMetadataInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c9bf5-199">要添加的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-199">The name of the metadata to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="c9bf5-200">要添加的元数据的计算值。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-200">The evaluated value of the metadata to add.</span></span></param>
        <summary><span data-ttu-id="c9bf5-201">添加具有给定名称和值的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-201">Add metadata with the given name and value.</span></span> <span data-ttu-id="c9bf5-202">覆盖集合中已有的任何同名元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-202">Overwrites any metadata with the same name already in the collection.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-203">返回新的元数据。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-203">Returns the new metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectItemInstance.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9bf5-204">获取表示当前项的字符串。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-204">Gets a String that represents the current item.</span></span></summary>
        <returns><span data-ttu-id="c9bf5-205">返回表示当前项的字符串。</span><span class="sxs-lookup"><span data-stu-id="c9bf5-205">Returns a String that represents the current item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>