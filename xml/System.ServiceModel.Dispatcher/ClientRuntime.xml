<Type Name="ClientRuntime" FullName="System.ServiceModel.Dispatcher.ClientRuntime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abd0e51d076dcce2483387833049fc88097405fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientRuntime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ClientRuntime" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientRuntime" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRuntime sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ClientRuntimeCompatBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="xamarinandroid-7.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="254b5-101">Represents the insertion point for classes that extend the functionality of Windows Communication Foundation (WCF) client objects for all messages handled by a client application.</span>
      <span class="sxs-lookup">
        <span data-stu-id="254b5-101">Represents the insertion point for classes that extend the functionality of Windows Communication Foundation (WCF) client objects for all messages handled by a client application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]<span data-ttu-id="254b5-102"> 客户端应用程序使用 <xref:System.ServiceModel.ClientBase%601> 客户端对象（无论是 <xref:System.ServiceModel.IClientChannel> 的扩展还是 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 的扩展）来将方法调用转换为出站消息，以及将传入消息转换为对象，然后将它们传递到客户端方法的结果。</span><span class="sxs-lookup"><span data-stu-id="254b5-102"> client objects, whether an extension of <xref:System.ServiceModel.ClientBase%601> or of <xref:System.ServiceModel.IClientChannel>, are used by [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client applications to convert method calls into outbound messages and convert incoming messages to objects and pass them to the results of client methods.</span></span>  
  
 <span data-ttu-id="254b5-103"><xref:System.ServiceModel.Dispatcher.ClientRuntime> 类是一个扩展点，您可以将截获消息并在所有操作中扩展客户端行为的扩展对象添加到该扩展点。</span><span class="sxs-lookup"><span data-stu-id="254b5-103">The <xref:System.ServiceModel.Dispatcher.ClientRuntime> class is an extensibility point to which you can add extension objects that intercept messages and extend client behavior across all operations.</span></span> <span data-ttu-id="254b5-104">截获对象可以在特定的约定中处理所有消息，仅处理特定操作的消息，执行自定义通道初始化，以及实现其他自定义客户端应用程序行为。</span><span class="sxs-lookup"><span data-stu-id="254b5-104">Interception objects can process all messages in a particular contract, process only messages for particular operations, perform custom channel initialization, and implement other custom client application behavior.</span></span> <span data-ttu-id="254b5-105">客户端体系结构的概述，请参阅[WCF 客户端体系结构](~/docs/framework/wcf/feature-details/client-architecture.md)。</span><span class="sxs-lookup"><span data-stu-id="254b5-105">For an overview of client architecture, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md).</span></span> <span data-ttu-id="254b5-106">有关客户端编程的详细信息，请参阅[使用 WCF 客户端访问服务](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)。</span><span class="sxs-lookup"><span data-stu-id="254b5-106">For more information about client programming, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span></span> <span data-ttu-id="254b5-107">有关自定义项以及如何执行它们的详细信息，请参阅[扩展客户端](~/docs/framework/wcf/extending/extending-clients.md)。</span><span class="sxs-lookup"><span data-stu-id="254b5-107">For details about customizations and how to perform them, see [Extending Clients](~/docs/framework/wcf/extending/extending-clients.md).</span></span>  
  
-   <span data-ttu-id="254b5-108"><xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> 属性返回服务启动的回调操作的调度运行时对象。</span><span class="sxs-lookup"><span data-stu-id="254b5-108">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property returns the dispatch run-time object for service-initiated callback operations.</span></span>  
  
-   <span data-ttu-id="254b5-109"><xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> 属性接受使用自定义操作选择器对象来控制客户端消息的路由。</span><span class="sxs-lookup"><span data-stu-id="254b5-109">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> property accepts a custom operation selector object to control the routing of client messages.</span></span>  
  
-   <span data-ttu-id="254b5-110">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> 属性可以添加检查或修改客户端通道的通道初始值设定项。</span><span class="sxs-lookup"><span data-stu-id="254b5-110">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> property enables the addition of a channel initializer that can inspect or modify the client channel.</span></span>  
  
-   <span data-ttu-id="254b5-111"><xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A> 属性可用于显示可视化提示，使用户可以在打开通道前选择凭据。</span><span class="sxs-lookup"><span data-stu-id="254b5-111">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A> property can be used to display a visual prompt to enable a user to select credentials prior to opening the channel.</span></span>  
  
-   <span data-ttu-id="254b5-112"><xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> 属性获取 <xref:System.ServiceModel.Dispatcher.ClientOperation> 对象的集合，您可以将提供特定于该操作的消息的功能的自定义消息拦截器添加到该集合。</span><span class="sxs-lookup"><span data-stu-id="254b5-112">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property gets a collection of <xref:System.ServiceModel.Dispatcher.ClientOperation> objects to which you can add custom message interceptors that provide functionality specific to the messages of that operation.</span></span>  
  
-   <span data-ttu-id="254b5-113">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> 属性，应用程序可以关闭某些自动寻址标头来直接控制寻址。</span><span class="sxs-lookup"><span data-stu-id="254b5-113">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property enables an application to turn off some automatic addressing headers to directly control addressing.</span></span>  
  
-   <span data-ttu-id="254b5-114">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> 属性，客户端可以限制客户端接受的错误消息的大小。</span><span class="sxs-lookup"><span data-stu-id="254b5-114">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> property enables the client to limit the size of fault messages that the client accepts.</span></span>  
  
-   <span data-ttu-id="254b5-115"><xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> 属性获取 <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> 对象的集合，您可以将通过客户端的所有消息的自定义消息拦截器添加到这些对象。</span><span class="sxs-lookup"><span data-stu-id="254b5-115">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property gets a collection of <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> objects to which you can add custom message interceptors for all messages traveling through a client.</span></span>  
  
-   <span data-ttu-id="254b5-116"><xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> 属性返回意外消息被传递到的操作。</span><span class="sxs-lookup"><span data-stu-id="254b5-116">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> property returns the operation to which unexpected messages are passed.</span></span>  
  
-   <span data-ttu-id="254b5-117"><xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> 属性通知系统它是否应确认标记为 `MustUnderstand` 的 SOAP 标头是否确实已被理解。</span><span class="sxs-lookup"><span data-stu-id="254b5-117">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> property informs the system whether it should confirm that SOAP headers marked as `MustUnderstand` have, in fact, been understood.</span></span>  
  
-   <span data-ttu-id="254b5-118"><xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> 属性设置传输级别的消息的目标的值，来支持中介以及其他方案。</span><span class="sxs-lookup"><span data-stu-id="254b5-118">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> property sets the value of the destination of the message at the transport level to support intermediaries and other scenarios.</span></span>  
  
 <span data-ttu-id="254b5-119">另外，还有其他多个属性可以检索客户端协定信息：</span><span class="sxs-lookup"><span data-stu-id="254b5-119">In addition, there are a number of other properties that retrieve the client contract information:</span></span>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractName%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType%2A>  
  
 <span data-ttu-id="254b5-120">如果客户端是双工客户端，以下属性还可以检索客户端回调类型以及运行时：</span><span class="sxs-lookup"><span data-stu-id="254b5-120">If the client is a duplex client, the following properties also retrieve the client callback type and runtime:</span></span>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A>  
  
   
  
## Examples  
 <span data-ttu-id="254b5-121">在下面的代码示例中，<xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> 通过将 <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> 添加到 <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> 属性，从而将它插入到客户端运行时中。</span><span class="sxs-lookup"><span data-stu-id="254b5-121">In the following code example an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> inserts a <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> into the client runtime by adding it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 <span data-ttu-id="254b5-122">下面的代码示例演示将终结点行为加载到客户端终结点的配置文件。</span><span class="sxs-lookup"><span data-stu-id="254b5-122">The following code example shows a configuration file that loads the endpoint behavior into the client endpoint.</span></span>  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CallbackClientType">
      <MemberSignature Language="C#" Value="public Type CallbackClientType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackClientType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackClientType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackClientType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-123">Gets or sets the type of the callback contract associated with a duplex client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-123">Gets or sets the type of the callback contract associated with a duplex client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-124">表示与双工客户端关联的回调协定的 <see cref="T:System.Type" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-124">A <see cref="T:System.Type" /> object that represents the callback contract associated with a duplex client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackDispatchRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchRuntime CallbackDispatchRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchRuntime CallbackDispatchRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackDispatchRuntime As DispatchRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchRuntime ^ CallbackDispatchRuntime { System::ServiceModel::Dispatcher::DispatchRuntime ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-125">Gets the dispatch run-time that dispatches service-initiated operations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-125">Gets the dispatch run-time that dispatches service-initiated operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-126">一个 <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-126">A <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</span>
          </span>
          <span data-ttu-id="254b5-127">如果协定是双工协定，则调度行为包含服务启动的操作；否则调度行为不包含任何操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-127">If the contract is a duplex contract, the dispatch behavior contains service-initiated operations; otherwise the dispatch behavior contains no operations.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-128">Gets a collection of channel initializer objects used to customize the channel associated with a client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-128">Gets a collection of channel initializer objects used to customize the channel associated with a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-129">
            <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> 实现的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-129">A collection of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> implementations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-130">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> 属性来添加自定义 <xref:System.ServiceModel.Dispatcher.IChannelInitializer> 对象，该对象可以检查创建时与客户端关联的通道，在通道上注册事件，以及使用 <xref:System.ServiceModel.IExtension%601> 将状态与该通道相关联。</span><span class="sxs-lookup"><span data-stu-id="254b5-130">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> property to add a custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> object that can inspect the channel that is associated with a client on creation, register for events on the channel, and associate state with the channel by using <xref:System.ServiceModel.IExtension%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientMessageInspectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt; ClientMessageInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.IClientMessageInspector&gt; ClientMessageInspectors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientMessageInspectors As ICollection(Of IClientMessageInspector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ ClientMessageInspectors { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-131">Gets a collection of message inspector objects used to view or modify messages of a particular service operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-131">Gets a collection of message inspector objects used to view or modify messages of a particular service operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-132">用于查看或修改的特定服务操作的消息的消息检查器对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-132">A collection of message inspector objects used to view or modify messages of a particular service operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-133">ClientMessateInspectors 是线程安全集合。</span><span class="sxs-lookup"><span data-stu-id="254b5-133">ClientMessateInspectors is a thread safe collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientOperations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.ClientOperation&gt; ClientOperations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.ClientOperation&gt; ClientOperations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientOperations As ICollection(Of ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ ClientOperations { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.ClientOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-134">Gets a collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-134">Gets a collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-135">用于附加扩展对象，检查或修改消息和特定服务操作行为的客户端操作对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-135">A collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-136">ClientOperations 是线程安全集合。</span><span class="sxs-lookup"><span data-stu-id="254b5-136">ClientOperations is a thread safe collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractClientType">
      <MemberSignature Language="C#" Value="public Type ContractClientType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractClientType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContractClientType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractClientType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-137">Gets or sets the type of the contract associated with a client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-137">Gets or sets the type of the contract associated with a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-138">表示与此客户端关联的协定的 <see cref="T:System.Type" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-138">The <see cref="T:System.Type" /> object that represents the contract associated with this client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-139">Gets the name of the contract associated with a client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-139">Gets the name of the contract associated with a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-140">客户端的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-140">The contract name for a client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractNamespace">
      <MemberSignature Language="C#" Value="public string ContractNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-141">Gets the namespace of the contract associated with a client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-141">Gets the namespace of the contract associated with a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-142">与客户端关联的协定的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-142">The namespace of the contract associated with a client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteractiveChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt; InteractiveChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt; InteractiveChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InteractiveChannelInitializers As SynchronizedCollection(Of IInteractiveChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInteractiveChannelInitializer ^&gt; ^ InteractiveChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInteractiveChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-143">Gets a collection of an interactive channel initializer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-143">Gets a collection of an interactive channel initializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-144">类型为 <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> 的同步集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-144">A synchronized collection of type <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-145">有关如何使用交互式通道初始值设定项的详细信息，请参阅[使用 WCF 客户端访问服务](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)。</span><span class="sxs-lookup"><span data-stu-id="254b5-145">For details about how to use interactive channel initializers, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="254b5-146">下面的代码示例演示了利用插入的交互式通道初始值设定项的终结点行为。</span><span class="sxs-lookup"><span data-stu-id="254b5-146">The following code example shows the use of an endpoint behavior to insert an interactive channel initializer.</span></span>  
  
 [!code-csharp[IInteractiveChannelInitializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/iinteractivechannelinitializer/cs/insertingbehaviors.cs#10)]
 [!code-vb[IInteractiveChannelInitializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/iinteractivechannelinitializer/vb/insertingbehaviors.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-147">Gets or sets a value that indicates whether the client adds addressing headers to request-reply messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-147">Gets or sets a value that indicates whether the client adds addressing headers to request-reply messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-148">如果客户端不添加任何寻址标头，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-148">
              <see langword="true" /> if the client does not add any addressing headers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="254b5-149">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-149">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-150">如果要防止客户端将“消息 ID”和“答复”寻址标头添加到请求/响应消息，请将 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> 属性设置为 `true`，以便您的应用程序可以控制这些标头。</span><span class="sxs-lookup"><span data-stu-id="254b5-150">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and Reply-To addressing headers to request/response messages so that your application can control these headers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="254b5-151">如果 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> 为 `true`，则客户端不支持双工通道上的请求-回复操作。</span><span class="sxs-lookup"><span data-stu-id="254b5-151">If <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> is `true`, the client does not support request-reply operations over a duplex channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxFaultSize">
      <MemberSignature Language="C#" Value="public int MaxFaultSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxFaultSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFaultSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxFaultSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-152">Gets or sets the maximum fault size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-152">Gets or sets the maximum fault size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-153">一个表示错误的最大大小的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-153">An integer representing the maximum fault size.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-154">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> 属性来限制客户端运行时接受的错误消息的大小。</span><span class="sxs-lookup"><span data-stu-id="254b5-154">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> property to limit the size of fault messages accepted by the client runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageInspectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt; MessageInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IClientMessageInspector&gt; MessageInspectors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageInspectors As SynchronizedCollection(Of IClientMessageInspector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ MessageInspectors { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-155">Gets a collection of message inspector implementations for a client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-155">Gets a collection of message inspector implementations for a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-156">
            <see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" /> 实现的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-156">A collection of <see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" /> implementations.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-157">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> 属性可以附加自定义 <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> 实现，以检查或修改流过客户端的所有消息。</span><span class="sxs-lookup"><span data-stu-id="254b5-157">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property to attach custom <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> implementations to inspect or modify all messages that flow through the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="254b5-158">在下面的代码示例中，<xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> 通过将 <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> 添加到 <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> 属性，从而将它插入到客户端运行时中。</span><span class="sxs-lookup"><span data-stu-id="254b5-158">In the following code example an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> inserts a <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> into the client runtime by adding it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 <span data-ttu-id="254b5-159">下面的代码示例演示将终结点行为加载到客户端终结点的配置文件。</span><span class="sxs-lookup"><span data-stu-id="254b5-159">The following code example shows a configuration file that loads the endpoint behavior into the client endpoint.</span></span>  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersionNoneFaultsEnabled">
      <MemberSignature Language="C#" Value="public bool MessageVersionNoneFaultsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MessageVersionNoneFaultsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersionNoneFaultsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MessageVersionNoneFaultsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-160">Gets or sets a value that indicates whether the MessageVersionNoneFaultsEnabled property is set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-160">Gets or sets a value that indicates whether the MessageVersionNoneFaultsEnabled property is set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-161">
            <see langword="true" /> 如果 MessageVersionNoneFaultsEnabled 属性设置;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-161">
              <see langword="true" /> if the MessageVersionNoneFaultsEnabled property is set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedKeyedCollection&lt;string,System.ServiceModel.Dispatcher.ClientOperation&gt; Operations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedKeyedCollection`2&lt;string, class System.ServiceModel.Dispatcher.ClientOperation&gt; Operations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operations As SynchronizedKeyedCollection(Of String, ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ Operations { System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedKeyedCollection&lt;System.String,System.ServiceModel.Dispatcher.ClientOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-162">Gets a collection of client operations for a client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-162">Gets a collection of client operations for a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-163">
            <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 对象的同步集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-163">A synchronized collection of <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-164">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> 属性可以获取此客户端的、可用于附加扩展对象的所有操作的集合，而这些扩展对象可以检查或修改局限于特定操作的消息和行为。</span><span class="sxs-lookup"><span data-stu-id="254b5-164">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property to get a collection of all client operations for this client that you can use to attach extension objects that inspect or modify messages and behavior scoped to a particular operation.</span></span> <span data-ttu-id="254b5-165">有关详细信息，请参阅<xref:System.ServiceModel.Dispatcher.ClientOperation>。</span><span class="sxs-lookup"><span data-stu-id="254b5-165">For details, see <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="254b5-166">在下面的代码示例中，<xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> 通过将 <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> 添加到 <xref:System.ServiceModel.Dispatcher.ClientOperation> 属性中的每个 <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>，从而将它插入到客户端运行时中。</span><span class="sxs-lookup"><span data-stu-id="254b5-166">In the following code example an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> inserts a <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> into the client runtime by adding it to each <xref:System.ServiceModel.Dispatcher.ClientOperation> in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationSelector">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.IClientOperationSelector OperationSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.IClientOperationSelector OperationSelector" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property OperationSelector As IClientOperationSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::IClientOperationSelector ^ OperationSelector { System::ServiceModel::Dispatcher::IClientOperationSelector ^ get(); void set(System::ServiceModel::Dispatcher::IClientOperationSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IClientOperationSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-167">Gets or sets an <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> implementation that can be used to select a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-167">Gets or sets an <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> implementation that can be used to select a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-168">选择 <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> 的 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-168">An <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> object that selects a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-169">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> 属性在客户端调用特定方法时修改操作的选择。</span><span class="sxs-lookup"><span data-stu-id="254b5-169">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> property to modify the selection of an operation when a client invokes a particular method.</span></span> <span data-ttu-id="254b5-170">默认的算法是将操作方法的 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 的名称用作关键字，在 <xref:System.ServiceModel.Dispatcher.ClientOperation> 集合中查找 <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>。</span><span class="sxs-lookup"><span data-stu-id="254b5-170">The default algorithm is to use the name of the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> of the operation method as a key to find the <xref:System.ServiceModel.Dispatcher.ClientOperation> in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> collection.</span></span> <span data-ttu-id="254b5-171">如果找不到匹配的 <xref:System.ServiceModel.Dispatcher.ClientOperation> 对象，则调用将被调度到 <xref:System.ServiceModel.Dispatcher.ClientOperation> 属性返回的 <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> 对象。</span><span class="sxs-lookup"><span data-stu-id="254b5-171">If no matching <xref:System.ServiceModel.Dispatcher.ClientOperation> object is found, the invocation is dispatched to the <xref:System.ServiceModel.Dispatcher.ClientOperation> object returned from the <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledClientOperation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ClientOperation UnhandledClientOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ClientOperation UnhandledClientOperation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledClientOperation As ClientOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ClientOperation ^ UnhandledClientOperation { System::ServiceModel::Dispatcher::ClientOperation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ClientOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-172">Gets the client operation for methods that do not have a corresponding <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-172">Gets the client operation for methods that do not have a corresponding <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-173">一个 <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />，它表示当操作选择器找不到与消息匹配的操作时，当前消息内容被路由到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-173">A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents the method to which the current message contents are routed when the operation selector cannot find an operation that matches the message.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMustUnderstand">
      <MemberSignature Language="C#" Value="public bool ValidateMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateMustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateMustUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-174">Gets or sets a value that specifies whether the system or the application enforces SOAP <see langword="MustUnderstand" /> header processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-174">Gets or sets a value that specifies whether the system or the application enforces SOAP <see langword="MustUnderstand" /> header processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-175">如果由系统执行 SOAP 标头 <see langword="true" /> 处理，则为 <see langword="MustUnderstand" />，否则为 <see langword="false" />，这表示由应用程序执行此处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-175">
              <see langword="true" /> if the system is to perform SOAP header <see langword="MustUnderstand" /> processing; otherwise <see langword="false" />, which indicates that the application performs this processing.</span>
          </span>
          <span data-ttu-id="254b5-176">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-176">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-177">使用 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> 属性来关闭对到达的消息头强制执行验证。</span><span class="sxs-lookup"><span data-stu-id="254b5-177">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> property to turn off the enforced validation of arriving message headers.</span></span> <span data-ttu-id="254b5-178">在正常执行过程中，将消息头与 <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> 属性进行比较，来确认是否由服务显式处理到达的消息。</span><span class="sxs-lookup"><span data-stu-id="254b5-178">In normal execution, message headers are compared against the <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> property to confirm that arriving headers are explicitly handled by the service.</span></span> <span data-ttu-id="254b5-179">将此属性设置为 `false` 可以禁用此检查。</span><span class="sxs-lookup"><span data-stu-id="254b5-179">Set this to `false` to disable this checking.</span></span> <span data-ttu-id="254b5-180">当设置为 `false` 时，应用程序必须检查有 MustUnderstand="true" 标记的标头，如果其中一个或多个标头没有被理解，则返回错误。</span><span class="sxs-lookup"><span data-stu-id="254b5-180">When set to `false`, the application must check for headers marked with MustUnderstand="true" and return a fault if one or more of them were not understood.</span></span> <span data-ttu-id="254b5-181">当应用程序应接受任何返回的 SOAP 消息（例如，使用类型化消息或非类型化消息）以及执行自定义标头处理时，这将很有用。</span><span class="sxs-lookup"><span data-stu-id="254b5-181">This is useful when the application is supposed to accept any returned SOAP messages (for example, when using typed or untyped messages) and perform custom header processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.Via" />
      <MemberSignature Language="VB.NET" Value="Public Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="254b5-182">Gets or sets the transport address that is used to send messages through the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-182">Gets or sets the transport address that is used to send messages through the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="254b5-183">
            <see cref="T:System.Uri" />，它是传输的目标地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-183">A <see cref="T:System.Uri" /> that is the destination address for the transport.</span>
          </span>
          <span data-ttu-id="254b5-184">默认值为客户端的 <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="254b5-184">The default value is the <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> value of the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="254b5-185">当消息的直接目标不是客户端的 <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> 时，设置 <xref:System.ServiceModel.EndpointAddress.Uri%2A> 属性来指定消息的传输地址。</span><span class="sxs-lookup"><span data-stu-id="254b5-185">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> property to specify a transport address for messages when the immediate destination of messages is not the client's <xref:System.ServiceModel.EndpointAddress.Uri%2A>.</span></span> <span data-ttu-id="254b5-186">这使您可以指定 SOAP 中介，以及处理客户端的 <xref:System.ServiceModel.EndpointAddress.Uri%2A> 属性的值不是逻辑名称的情况。</span><span class="sxs-lookup"><span data-stu-id="254b5-186">This enables you to specify SOAP intermediaries and handle scenarios in which the value of the <xref:System.ServiceModel.EndpointAddress.Uri%2A> property of the client is a logical name.</span></span>  
  
 <span data-ttu-id="254b5-187"><xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType> 在配置文件中设置的就是这个值。</span><span class="sxs-lookup"><span data-stu-id="254b5-187">It is this value that the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType> sets from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>