<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ChannelDispatcherBase.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c981febf306d296c8e0662e36557df9458314557.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c981febf306d296c8e0662e36557df9458314557</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</source>
          <target state="translated">接受通道并可将通道与服务相关联的通道调度程序的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>This is used by developers who want to keep the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> programming model but replace the system-provided runtime.</source>
          <target state="translated">供既想保留 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 编程模型同时又要替换系统提供的运行时的开发人员使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</source>
          <target state="translated">此类应用程序会将消息从通道中拉取出来，然后直接使用用户定义的调度程序来处理它们。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>To use <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> , create a class derived from it, extend <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and override <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;</ph>, adding instances of your class derived from <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> to <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph>.</source>
          <target state="translated">若要使用 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>，则请创建从它派生的类，扩展 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 并重写 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;</ph>，将从 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 派生的类的实例添加到 <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, associated with the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> object are available for inspection or modification through the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> respectively.</source>
          <target state="translated">与 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 对象关联的 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 可以分别通过 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;</ph> 和 <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> 来检查和修改。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> methods when adding or removing a <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> item from its <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated">当在 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 集合中添加或移除 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> 项时，<ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> 调用 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 或 <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;</ph> during shutdown before closing InstanceContexts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 调用<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;</ph>期间关闭 InstanceContexts 前关闭。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 使用此调用来关闭数据报通道，并等待所有的消息可用于访问 InstanceContext。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> for the service.</source>
          <target state="translated">该服务的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>When overridden in a derived class, attaches the channel dispatcher to a specific host.</source>
          <target state="translated">在派生类中重写时，将通道调度程序附加到特定主机。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>This method can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated">只有当 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> 的实例处于 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状态时才可以设置此方法，因为该状态是唯一一个可变且不被释放的状态。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is added to its <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated">当将 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 集合时，<ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 会调用此方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>This gives the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to hook events and inspect the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, and provides the value that should be returned from the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> property.</source>
          <target state="translated">这使 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 有机会挂钩事件并检查 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>，以及提供应从 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> 属性返回的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;paramref name="host" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state or the host is already set.</source>
          <target state="translated">通信对象处于 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状态，或者主机已设置。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">通信对象处于 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状态。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">通信对象处于 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状态。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source>When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</source>
          <target state="translated">在派生类中重写时，移除与通道调度程序关联的终结点调度程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method during shutdown to give the dispatcher a chance to drain messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 在关闭让调度程序有机会排出消息过程中调用此方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> uses this call to close datagram channels.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> 使用此调用来关闭数据报通道。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>When overridden in a derived class, detaches the channel dispatcher from a specific host.</source>
          <target state="translated">在派生类中重写时，将通道调度程序与特定主机分离。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> can only be detached when the instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated">只有当 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> 的实例处于 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> 状态时才可以分离 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>，因为该状态是唯一一个可变且不被释放的状态。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>Should set the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> associated with the channel dispatcher to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">应将与通道调度程序关联的 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> 设置为 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is removed from its <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated">当从 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 集合中删除 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 时，<ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 会调用此方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>This gives the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to unhook events and inspect the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
          <target state="translated">这使 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 有机会解除挂钩事件并检查 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;paramref name="host" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state or the host is already set.</source>
          <target state="translated">通信对象处于 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状态，或者主机已设置。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">通信对象处于 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状态。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">通信对象处于 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状态。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>When overridden in a derived class, gets the service host associated with the channel dispatcher.</source>
          <target state="translated">在派生类中重写时，获取与通道调度程序关联的服务主机。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> for the service associated with the dispatcher.</source>
          <target state="translated">与调度程序关联的服务的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> for that service.</source>
          <target state="translated">每个 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 对象都可以拥有多个 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> 对象，这多个对象每个都可与该服务的不同 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 相关联。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>The host keeps a list of these <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated">该主机在 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 集合中保留有这些 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 对象的列表。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</source>
          <target state="translated">在派生类中重写时，获取与通道调度程序关联的通道侦听程序。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener" /&gt;</ph> associated with the channel dispatcher.</source>
          <target state="translated">与通道调度程序关联的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> associates an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> whose channels and messages this <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is dispatching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> 与此 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 正在调度其通道和消息的 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 相关联。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>