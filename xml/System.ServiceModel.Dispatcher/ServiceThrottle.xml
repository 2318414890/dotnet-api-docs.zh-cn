<Type Name="ServiceThrottle" FullName="System.ServiceModel.Dispatcher.ServiceThrottle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ba67903ec29aa489adfdeae484c83bcaf8904f2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceThrottle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceThrottle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceThrottle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceThrottle sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="98dd5-101">控制服务的吞吐量以优化可用性和性能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="98dd5-101">Controls the throughput of a service to optimize availability and performance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98dd5-102">使用 <xref:System.ServiceModel.Dispatcher.ServiceThrottle> 以优化服务的性能特征。</span><span class="sxs-lookup"><span data-stu-id="98dd5-102">Use the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> to tune the performance characteristics of a service.</span></span> <span data-ttu-id="98dd5-103">为服务配置 <xref:System.ServiceModel.Dispatcher.ServiceThrottle> 的最简单的方法是使用 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>，特别是从应用程序配置文件。</span><span class="sxs-lookup"><span data-stu-id="98dd5-103">The easiest way to configure the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.</span></span>  
  
 <span data-ttu-id="98dd5-104"><xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> 属性指定 <xref:System.ServiceModel.ServiceHost> 对象中的所有调度程序对象的最大活动处理消息数。</span><span class="sxs-lookup"><span data-stu-id="98dd5-104">The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.</span></span>  
  
 <span data-ttu-id="98dd5-105"><xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> 属性指定服务中 <xref:System.ServiceModel.InstanceContext> 对象的最大数目。</span><span class="sxs-lookup"><span data-stu-id="98dd5-105">The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.</span></span>  
  
 <span data-ttu-id="98dd5-106"><xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> 属性指定单个 <xref:System.ServiceModel.ServiceHost> 可接受的最大会话数。</span><span class="sxs-lookup"><span data-stu-id="98dd5-106">The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98dd5-107">第一次调用时，会记录跟踪，且 <xref:System.ServiceModel.InstanceContext> 或会话会被插入等待队列。</span><span class="sxs-lookup"><span data-stu-id="98dd5-107">A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist.</span></span> <span data-ttu-id="98dd5-108">第一个跟踪将记录为警告。</span><span class="sxs-lookup"><span data-stu-id="98dd5-108">The first trace is written as a warning.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98dd5-109">下面的代码示例通过引用应用程序配置文件中的 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>，演示了 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> 的典型用法。</span><span class="sxs-lookup"><span data-stu-id="98dd5-109">The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file.</span></span> <span data-ttu-id="98dd5-110">在这种情况下，对于一个到 <xref:System.ServiceModel.InstanceContext> 的连接，指定的值一次最多只能建立一个消息处理。</span><span class="sxs-lookup"><span data-stu-id="98dd5-110">In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>.</span></span> <span data-ttu-id="98dd5-111">实际的用法必须根据经验确定。</span><span class="sxs-lookup"><span data-stu-id="98dd5-111">Real-world usage must be determined through experience.</span></span>  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="MaxConcurrentCalls">
      <MemberSignature Language="C#" Value="public int MaxConcurrentCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentCalls" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentCalls As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentCalls { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98dd5-112">获取或设置 <see cref="T:System.ServiceModel.ServiceHost" /> 中所有调度程序对象的最大活动处理消息数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-112">Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <see cref="T:System.ServiceModel.ServiceHost" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98dd5-113">服务中活动消息的上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-113">The upper limit of active messages in the service.</span>
          </span>
          <span data-ttu-id="98dd5-114">默认值为 16 \* 计算机中的处理器数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-114">The default is 16 \* number of processors in the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98dd5-115"><xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> 属性指定 <xref:System.ServiceModel.ServiceHost> 对象中的所有调度程序对象的最大活动处理消息数。</span><span class="sxs-lookup"><span data-stu-id="98dd5-115">The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.</span></span> <span data-ttu-id="98dd5-116">每个通道都可以有一个挂起消息，在 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> 开始处理该消息之前，该挂起消息不会影响 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 的值。</span><span class="sxs-lookup"><span data-stu-id="98dd5-116">Each channel can have one pending message that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> until [!INCLUDE[indigo1](~/includes/indigo1-md.md)] begins to process it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98dd5-117">此属性的值超出限制一次，就会记录一个跟踪。</span><span class="sxs-lookup"><span data-stu-id="98dd5-117">A trace is written every time the value of this property is exceeded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98dd5-118">下面的代码示例通过引用应用程序配置文件中的 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>，演示了 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> 的典型用法。</span><span class="sxs-lookup"><span data-stu-id="98dd5-118">The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file.</span></span> <span data-ttu-id="98dd5-119">在这种情况下，对于一个到 <xref:System.ServiceModel.InstanceContext> 的连接，指定的值一次最多只能建立一个消息处理。</span><span class="sxs-lookup"><span data-stu-id="98dd5-119">In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>.</span></span> <span data-ttu-id="98dd5-120">实际的用法必须根据经验确定。</span><span class="sxs-lookup"><span data-stu-id="98dd5-120">Real-world usage must be determined through experience.</span></span>  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentInstances">
      <MemberSignature Language="C#" Value="public int MaxConcurrentInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentInstances" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentInstances { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98dd5-121">获取或设置一次可执行的最大服务对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-121">Gets or sets the maximum number of service objects that can execute at one time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98dd5-122">服务中一次可执行的最大 <see cref="T:System.ServiceModel.InstanceContext" /> 对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-122">The maximum number of <see cref="T:System.ServiceModel.InstanceContext" /> objects in the service at one time.</span>
          </span>
          <span data-ttu-id="98dd5-123">默认值等于最大并发调用数 + 最大并发会话数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-123">The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98dd5-124"><xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> 属性指定服务中 <xref:System.ServiceModel.InstanceContext> 对象的最大数目。</span><span class="sxs-lookup"><span data-stu-id="98dd5-124">The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.</span></span> <span data-ttu-id="98dd5-125">牢记 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> 属性和 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 属性之间的关系是很重要。</span><span class="sxs-lookup"><span data-stu-id="98dd5-125">It is important to keep in mind the relationship between the <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property.</span></span> <span data-ttu-id="98dd5-126">如果<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>是<xref:System.ServiceModel.InstanceContextMode.PerSession>生成的值为总会话数。</span><span class="sxs-lookup"><span data-stu-id="98dd5-126">If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerSession> the resulting value is the total number of sessions.</span></span> <span data-ttu-id="98dd5-127">如果 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 为 <xref:System.ServiceModel.InstanceContextMode.PerCall>，则结果值将为并发调用的数量。</span><span class="sxs-lookup"><span data-stu-id="98dd5-127">If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerCall>, the resulting value is the number of concurrent calls.</span></span> <span data-ttu-id="98dd5-128">如果消息到达时，<xref:System.ServiceModel.InstanceContext> 对象的数目已经达到最大数量，则将保存该消息，直至有 <xref:System.ServiceModel.InstanceContext> 对象关闭。</span><span class="sxs-lookup"><span data-stu-id="98dd5-128">If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98dd5-129">此属性的值超出限制一次，就会记录一个跟踪。</span><span class="sxs-lookup"><span data-stu-id="98dd5-129">A trace is written every time the value of this property is exceeded.</span></span> <span data-ttu-id="98dd5-130">第一个跟踪将记录为警告。</span><span class="sxs-lookup"><span data-stu-id="98dd5-130">The first trace is written as a warning.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98dd5-131">下面的代码示例通过引用应用程序配置文件中的 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>，演示了 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> 的典型用法。</span><span class="sxs-lookup"><span data-stu-id="98dd5-131">The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file.</span></span> <span data-ttu-id="98dd5-132">在这种情况下，对于一个到 <xref:System.ServiceModel.InstanceContext> 的连接，指定的值一次最多只能建立一个消息处理。</span><span class="sxs-lookup"><span data-stu-id="98dd5-132">In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>.</span></span> <span data-ttu-id="98dd5-133">实际的用法必须根据经验确定。</span><span class="sxs-lookup"><span data-stu-id="98dd5-133">Real-world usage must be determined through experience.</span></span>  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentSessions">
      <MemberSignature Language="C#" Value="public int MaxConcurrentSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentSessions { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98dd5-134">获取或设置一个指定 <see cref="T:System.ServiceModel.ServiceHost" /> 对象可一次接受的最大会话数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-134">Gets or sets a value that specifies the maximum number of sessions a <see cref="T:System.ServiceModel.ServiceHost" /> object can accept at one time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98dd5-135">服务主机可接受的最大会话数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-135">The maximum number of sessions a service host accepts.</span>
          </span>
          <span data-ttu-id="98dd5-136">默认值为 100 \* 的计算机中的处理器数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="98dd5-136">The default is 100 \* number of processors in the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98dd5-137"><xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> 属性指定 <xref:System.ServiceModel.ServiceHost> 可接受的最大通道数。</span><span class="sxs-lookup"><span data-stu-id="98dd5-137">The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept.</span></span> <span data-ttu-id="98dd5-138">每个侦听器对象都可以有一个挂起通道，在 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> 接受该通道并开始处理其上的消息之前，该挂起通道不会影响 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 的值。</span><span class="sxs-lookup"><span data-stu-id="98dd5-138">Each listener object can have one pending channel that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> until [!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts the channel and begins processing messages on it.</span></span> <span data-ttu-id="98dd5-139">在使用会话的方案中，此属性是最有用的。</span><span class="sxs-lookup"><span data-stu-id="98dd5-139">This property is most useful in scenarios that make use of sessions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98dd5-140">此属性的值超出限制一次，就会记录一个跟踪。</span><span class="sxs-lookup"><span data-stu-id="98dd5-140">A trace is written every time the value of this property is exceeded.</span></span> <span data-ttu-id="98dd5-141">第一个跟踪将记录为警告。</span><span class="sxs-lookup"><span data-stu-id="98dd5-141">The first trace is written as a warning.</span></span>  
  
 <span data-ttu-id="98dd5-142">有关会话的详细信息，请参阅[使用会话](~/docs/framework/wcf/using-sessions.md)。</span><span class="sxs-lookup"><span data-stu-id="98dd5-142">For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
 <span data-ttu-id="98dd5-143">通常，此属性是通过使用 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=nameWithType> 属性来设置的。</span><span class="sxs-lookup"><span data-stu-id="98dd5-143">Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98dd5-144">下面的代码示例通过引用应用程序配置文件中的 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>，演示了 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> 的典型用法。</span><span class="sxs-lookup"><span data-stu-id="98dd5-144">The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file.</span></span> <span data-ttu-id="98dd5-145">在这种情况下，对于一个到 <xref:System.ServiceModel.InstanceContext> 的连接，指定的值一次最多只能建立一个消息处理。</span><span class="sxs-lookup"><span data-stu-id="98dd5-145">In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>.</span></span> <span data-ttu-id="98dd5-146">实际的用法必须根据经验确定。</span><span class="sxs-lookup"><span data-stu-id="98dd5-146">Real-world usage must be determined through experience.</span></span>  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>