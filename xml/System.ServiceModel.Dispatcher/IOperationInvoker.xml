<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOperationInvoker.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53b0a2f00ea9c6966297f977571140e1f0ed068b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b0a2f00ea9c6966297f977571140e1f0ed068b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.IOperationInvoker">
          <source>Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.</source>
          <target state="translated">声明方法，这些方法使用从消息提取的对象以及参数数组，并利用这些参数对该对象调用方法，然后返回该方法的返回值和输出参数。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IOperationInvoker">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker&gt;</ph> interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker&gt;</ph> 接口可以对从非类型化对象和参数数组到对该对象的强类型方法调用的转换进行控制。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IOperationInvoker">
          <source>It has a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A&gt;</ph> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object.</source>
          <target state="translated">该接口拥有一个同步 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A&gt;</ph> 方法，该方法使用一个实例和类型对象的输入的集合，然后返回一个对象和类型对象的输出的集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IOperationInvoker">
          <source>It also has a <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A&gt;</ph> variant.</source>
          <target state="translated">该接口还拥有 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A&gt;</ph> 变量。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IOperationInvoker">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A&gt;</ph> property specifies whether the synchronous or asynchronous method should be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A&gt;</ph> 属性指定应使用同步方法还是异步方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of parameter objects.</source>
          <target state="translated">返回参数对象的 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
          <source>The parameters that are to be used as arguments to the operation.</source>
          <target state="translated">要用作操作的自变量的参数。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
          <source>Implement this to return an array of parameters for the operation.</source>
          <target state="translated">实现此接口可以返回操作的参数的数组。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
          <source>This array is filled by the formatter and passed back to the invoker when <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A&gt;</ph> is called.</source>
          <target state="translated">此数组由格式化程序填充，然后会在调用 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A&gt;</ph> 时传递回调用程序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
          <source>An implementation of this method must allocate the input array on every call.</source>
          <target state="translated">此方法的实现必须分配每次调用的输入的数组。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
          <source>Returning the same array for multiple calls can result in unpredictable behavior.</source>
          <target state="translated">返回多个调用的相同数组可能导致不可预知的行为。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
          <source>The object to be invoked.</source>
          <target state="translated">要调用的对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
          <source>The inputs to the method.</source>
          <target state="translated">方法的输入。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
          <source>The outputs from the method.</source>
          <target state="translated">方法的输出。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
          <source>Returns an object and a set of output objects from an instance and set of input objects.</source>
          <target state="translated">从一个实例和输入对象的集合返回一个对象和输出对象的集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
          <source>The return value.</source>
          <target state="translated">返回值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
          <source>The object to be invoked.</source>
          <target state="translated">要调用的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
          <source>The inputs to the method.</source>
          <target state="translated">方法的输入。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
          <source>The asynchronous callback object.</source>
          <target state="translated">异步回调对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
          <source>Associated state data.</source>
          <target state="translated">关联的状态数据。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
          <source>An asynchronous implementation of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /&gt;</ph> 方法的异步实现。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> used to complete the asynchronous call.</source>
          <target state="translated">用来完成异步调用的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
          <source>The object invoked.</source>
          <target state="translated">调用的对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
          <source>The outputs from the method.</source>
          <target state="translated">方法的输出。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
          <source>The asynchronous end method.</source>
          <target state="translated">异步结束方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
          <source>The return value.</source>
          <target state="translated">返回值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous">
          <source>Gets a value that specifies whether the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method is called by the dispatcher.</source>
          <target state="translated">获取一个值，该值指定调度程序是调用 <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /&gt;</ph> 方法还是调用 <ph id="ph2">&lt;see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dispatcher invokes the synchronous operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果调度程序调用同步操作，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous">
          <source>The default invoker dispatches messages to the synchronous operation by default.</source>
          <target state="translated">默认情况下，默认的调用程序会将消息调度到同步操作。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous">
          <source>This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker&gt;</ph>.</source>
          <target state="translated">该调度程序会缓存此值，因此在实现 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IOperationInvoker&gt;</ph> 的对象的生存期内，此值不会改变。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>