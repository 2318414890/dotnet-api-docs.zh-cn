<Type Name="XPathMessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;TFilterData&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="496511d6035fa223f532d7835c9bb069c6b2ef8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30520501" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XPathMessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XPathMessageFilterTable`1&lt;TFilterData&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable, class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData)), IMessageFilterTable(Of TFilterData)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public ref class XPathMessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TFilterData">
      <span data-ttu-id="01462-101">与表中每个筛选器关联的筛选数据的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01462-101">The type of the filter data associated with each filter in the table.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="01462-102">保存筛选器/数据对以进行高效匹配。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01462-102">Holds a collection of filter/data pairs for efficient matching.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-103"><xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> 实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 接口。</span><span class="sxs-lookup"><span data-stu-id="01462-103">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface.</span></span> <span data-ttu-id="01462-104">此筛选器表针对声明性 XPath 筛选器进行了优化，因此表键为 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>。</span><span class="sxs-lookup"><span data-stu-id="01462-104">This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span></span>  
  
 <span data-ttu-id="01462-105"><xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> 类针对 XPath 的子集优化了匹配，该类适用于大多数消息处理方案，同时支持完整的 XPath 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="01462-105">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar.</span></span> <span data-ttu-id="01462-106">该类具有适合于高效并行匹配的优化算法。</span><span class="sxs-lookup"><span data-stu-id="01462-106">It has optimized algorithms for efficient parallel matching.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01462-107">初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilterTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilterTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01462-108">初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilterTable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilterTable(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="01462-109">表的初始容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-109">Initial capacity of the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-110">初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01462-111">将 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 及其关联的 <paramref name="FilterData" /> 添加到 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-111">Adds an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> and its associated <paramref name="FilterData" /> to the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="01462-112">要添加到表中的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-112">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to add to the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-113">将 filter/<paramref name="FilterData" />（键/值）对添加到 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-113">Adds a filter/<paramref name="FilterData" /> (key/value) pair to the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-114">此方法实现 <xref:System.Collections.Generic.ICollection%601.Add%2A> 类的 <xref:System.Collections.Generic.ICollection%601> 方法。</span><span class="sxs-lookup"><span data-stu-id="01462-114">This method implements the <xref:System.Collections.Generic.ICollection%601.Add%2A> method of the <xref:System.Collections.Generic.ICollection%601> class.</span></span>  <span data-ttu-id="01462-115">使用强类型重载 `filter` 可避免将 <xref:System.ServiceModel.Dispatcher.MessageFilter> 参数从类型 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 隐式转换为 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-115">The implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-116">
            <paramref name="filter" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-116">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="01462-117">发生了编译器错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-117">A compiler error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="01462-118">用作所添加对的键的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-118">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span>
          </span>
          <span data-ttu-id="01462-119">必须为 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-119">Must be an instance of <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="01462-120">与筛选器关联的、用作所添加对的值的 <c>FilterData</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-120">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-121">将筛选器/数据对添加到筛选器表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-121">Adds a filter/data pair to the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-122">使用强类型重载 `filter` 可避免将 <xref:System.ServiceModel.Dispatcher.MessageFilter> 参数从 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 内部转换为 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-122">The internal conversion of the `filter` parameter from <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-123">
            <paramref name="filter" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-123">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01462-124">
            <paramref name="filter" /> 不是 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-124">
              <paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="01462-125">发生了编译器错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-125">A compiler error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.XPathMessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Dispatcher.XPathMessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As XPathMessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Dispatcher::XPathMessageFilter ^ filter, TFilterData data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.XPathMessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="01462-126">用作所添加对的键的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-126">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> used as the key of the pair added.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="01462-127">与筛选器关联的、用作所添加对的值的 <c>FilterData</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-127">The <c>FilterData</c> associated with the filter; used as the value of the pair added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-128">将筛选器/数据对添加到筛选器表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-128">Adds a filter/data pair to the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-129">这可提供强类型重载以将 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 添加到筛选器表，强类型重载比弱类型重载执行的更好，因为强类型重载可避免将 `filter` 参数从类型 <xref:System.ServiceModel.Dispatcher.MessageFilter> 隐式转换为 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>。</span><span class="sxs-lookup"><span data-stu-id="01462-129">This provides a strongly-typed overload for adding an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> to the filter table that performs better than the weakly-typed overload because it avoids implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-130">
            <paramref name="filter" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-130">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="01462-131">发生了编译器错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-131">A compiler error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01462-132">从筛选器表中移除所有的筛选器/数据对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-132">Removes all filter/data pairs from the filter table.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="01462-133">要在表中查找的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-133">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; to find in the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-134">确定筛选器表是否包含指定的筛选器及其关联的 <paramref name="FilterData" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-134">Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-135">如果筛选器表中包含 filter/*FilterData* 对，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-135">
              <see langword="true" /> if the filter/*FilterData* pair is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-136">如果找到了筛选器，但对应不同的数据，则此方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="01462-136">This method returns `false` if the filter is found but corresponds to different data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="01462-137">正在进行测试的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-137">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-138">确定筛选器表是否包含指定的筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-138">Determines whether the filter table contains a specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-139">如果筛选器表中包含 <paramref name="filter" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-139">
              <see langword="true" /> if the <paramref name="filter" /> is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-140">此方法实现 `ContainsKey` 的 <xref:System.Collections.Generic.IDictionary%602> 方法。</span><span class="sxs-lookup"><span data-stu-id="01462-140">This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="01462-141">这些对所复制到的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; 类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-141">The array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to which the pairs are being copied.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="01462-142">开始复制的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-142">The index at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-143">将 filter/<paramref name="FilterData" /> 对复制到从指定索引开始的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-143">Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01462-144">获取当前筛选器表中筛选器/数据对的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-144">Gets the number of filter/data pairs currently in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01462-145">当前筛选器表中筛选器/数据对的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-145">The number of filter/data pairs currently in the filter table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01462-146">返回一个可循环访问筛选器表的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-146">Returns an enumerator that can iterate through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-147">一个可用于循环访问筛选器表的 <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-147">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-148">此方法实现 <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-148">This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01462-149">返回一个值，该值指示指定的消息或缓冲消息是否正好满足表中的一个筛选器的匹配条件，然后在 <see langword="out" /> 参数中返回该筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-149">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-150">测试某一消息是否正好符合筛选器表中其中一个筛选器的要求。</span><span class="sxs-lookup"><span data-stu-id="01462-150">Tests whether a message satisfies exactly one of the filters in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="01462-151">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-151">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="01462-152">
            <see langword="out" /> 参数，该参数存储 <c>message</c> 符合的筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-152">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="01462-153">如果找不到筛选器，该参数将设置为默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-153">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-154">返回一个值，该值指示指定的消息是否正好满足表中的一个筛选器的匹配标准，然后在 <see langword="out" /> 参数中返回该筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-154">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-155">消息满足其查询条件的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />；如果未找到任何匹配的筛选器，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-155">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the message; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-156">当预期会有单个筛选器与消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-156">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="01462-157">此方法对优先级最高的筛选器存储桶中的单个筛选器匹配进行测试。</span><span class="sxs-lookup"><span data-stu-id="01462-157">This method tests for a single filter match in the highest priority bucket of filters.</span></span> <span data-ttu-id="01462-158">不允许表中的筛选器检查消息正文。</span><span class="sxs-lookup"><span data-stu-id="01462-158">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="01462-159">如果预期会有多个筛选器与消息相匹配，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-159">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="01462-160">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-160">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-161">
            <paramref name="message" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-161">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-162">多个筛选器与 <paramref name="message" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-162">More than one filter matches the <paramref name="message" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="01462-163">筛选器试图检查消息正文的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-163">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="01462-164">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-164">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="01462-165">
            <see langword="out" /> 参数，该参数存储 <c>message</c> 符合的筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-165">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="01462-166">如果找不到筛选器，该参数将设置为默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-166">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-167">返回一个值，该值指示指定的消息或缓冲消息是否正好满足表中的一个筛选器的匹配条件，然后在 <see langword="out" /> 参数中返回该筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-167">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-168">缓冲消息满足其查询条件的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />；如果未找到任何匹配的筛选器，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-168">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the buffered message; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-169">当预期有单个筛选器与缓冲消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-169">Use this method when a single filter is expected to match the buffered message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="01462-170">允许表中的筛选器检查消息正文。</span><span class="sxs-lookup"><span data-stu-id="01462-170">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="01462-171">如果预期会有多个筛选器与消息相匹配，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-171">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="01462-172">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-172">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-173">
            <paramref name="messageBuffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-173">
              <paramref name="messageBuffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-174">多个筛选器与 <paramref name="messageBuffer" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-174">More than one filter matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilter(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (navigator As SeekableXPathNavigator, ByRef filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-175">要测试的 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-175">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="01462-176">
            <see langword="out" /> 参数，该参数存储 <c>message</c> 符合的筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-176">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>message</c>.</span>
          </span>
          <span data-ttu-id="01462-177">如果找不到筛选器，该参数将设置为默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-177">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-178">返回一个值，该值指示指定的消息或缓冲消息是否正好满足表中的一个 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> 的匹配条件，然后在 <see langword="out" /> 参数中返回该筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-178">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-179">缓冲消息满足其查询条件的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />；如果未找到任何匹配的筛选器，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-179">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-180">当预期会有单个筛选器与 <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> 指定的消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-180">Use this method when a single filter is expected to match the message specified by the <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and the matching filter is required.</span></span>  
  
 <span data-ttu-id="01462-181">如果预期会有多个筛选器与消息相匹配，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-181">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-182">
            <paramref name="navigator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-182">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-183">多个筛选器与 <paramref name="navigator" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-183">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.Xml.XPath.XPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilter(class System.Xml.XPath.XPathNavigator navigator, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (navigator As XPathNavigator, ByRef filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::Xml::XPath::XPathNavigator ^ navigator, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-184">要测试的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-184">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="01462-185">
            <see langword="out" /> 参数，该参数存储 <c>navigator</c> 符合的筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-185">The <see langword="out" /> parameter that stores the filter that is satisfied by the <c>navigator</c>.</span>
          </span>
          <span data-ttu-id="01462-186">如果找不到筛选器，该参数将设置为默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-186">If no filter was found, the parameter is set to its default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-187">返回一个值，该值指示指定的消息或缓冲消息是否正好满足表中的一个 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的匹配条件，然后在 <see langword="out" /> 参数中返回该筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-187">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-188">缓冲消息满足其查询条件的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />；如果未找到任何匹配的筛选器，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-188">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or <see langword="null" /> if no filters are found to match.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-189">当预期会有单个筛选器与 <xref:System.Xml.XPath.XPathNavigator> 指定的消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-189">Use this method when a single filter is expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filter is required.</span></span>  
  
 <span data-ttu-id="01462-190">如果预期会有多个筛选器与消息相匹配，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-190">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-191">
            <paramref name="navigator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-191">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-192">多个筛选器与 <paramref name="navigator" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-192">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01462-193">返回一个值，该值指示指定的 XML 文档是否满足表中筛选器的匹配条件，然后将匹配筛选器添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-193">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified XML document and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-194">当预期有多个筛选器与消息匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-194">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="01462-195">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-195">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-196">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-196">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-197">返回一个值，该值指示指定的消息是否满足表中至少一个 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的匹配条件，然后将匹配筛选器添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-197">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-198">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="message" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-198">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-199">当预期有多个筛选器与消息匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-199">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="01462-200">不允许表中的筛选器检查消息正文。</span><span class="sxs-lookup"><span data-stu-id="01462-200">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="01462-201">匹配的 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 对象存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="01462-201">The matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="01462-202">然后，可以使用这些筛选器作为键，通过 `FilterData` 提供的方法从筛选器表恢复 <xref:System.Collections.Generic.IDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="01462-202">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="01462-203">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-203">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-204">
            <paramref name="results" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-204">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="01462-205">筛选器试图检查消息正文的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-205">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="01462-206">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-206">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-207">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-207">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-208">返回一个值，该值指示指定的缓冲消息是否满足表中至少一个 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的匹配条件，然后将匹配筛选器添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-208">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-209">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="messageBuffer" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-209">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-210">当预期有多个筛选器与缓冲消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-210">Use this method when more than one filter is expected to match the buffered message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="01462-211">允许表中的筛选器检查消息正文。</span><span class="sxs-lookup"><span data-stu-id="01462-211">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="01462-212">匹配的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="01462-212">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="01462-213">然后，可以使用这些筛选器作为键，通过 `FilterData` 提供的方法从筛选器表恢复 <xref:System.Collections.Generic.IDictionary%602>。</span><span class="sxs-lookup"><span data-stu-id="01462-213">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="01462-214">此方法实现 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-214">This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-215">
            <paramref name="results" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-215">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilters(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (navigator As SeekableXPathNavigator, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-216">要测试的 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-216">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-217">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-217">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-218">返回一个值，该值指示指定的缓冲消息是否满足表中至少一个 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> 的匹配条件，然后将匹配筛选器添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-218">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-219">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="messageBuffer" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-219">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-220">当预期会有多个筛选器与导航器匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-220">Use this method when more than one filter is expected to match the navigator and the matching filters are required.</span></span>  
  
 <span data-ttu-id="01462-221">如果预期只有一个筛选器与消息相匹配，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="01462-221">If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-222">
            <paramref name="results" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-222">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilters(class System.Xml.XPath.XPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (navigator As XPathNavigator, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::Xml::XPath::XPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-223">要测试的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-223">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-224">存储 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt; 中匹配的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 对象的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-224">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-225">返回一个值，该值指示指定的缓冲消息是否满足表中至少一个 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的匹配条件，然后将匹配筛选器添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-225">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-226">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="messageBuffer" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-226">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-227">当预期会有多个筛选器与 <xref:System.Xml.XPath.XPathNavigator> 指定的消息相匹配，并且需要匹配筛选器时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-227">Use this method when multiple filters can be expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filters are required.</span></span>  
  
 <span data-ttu-id="01462-228">如果预期只有一个筛选器与消息相匹配，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="01462-228">If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-229">
            <paramref name="matches" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-229">
              <paramref name="matches" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01462-230">返回一个值，该值指示指定的文档对象是否正好满足表中的一个 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的匹配条件，然后将匹配的筛选数据添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-230">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified document object and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-231">当预期有单个筛选器与文档对象相匹配，并且只需要恢复匹配筛选器的 `FilterData` 时，请使用这四个方法之一。</span><span class="sxs-lookup"><span data-stu-id="01462-231">Use one of these four methods when a single filter is expected to match the document object and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="01462-232">前两种方法是实现的<xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-232">The first two methods are implementations of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 <span data-ttu-id="01462-233">如果不需要检查正文内容，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-233">Use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> if the body content does not require examination.</span></span> <span data-ttu-id="01462-234">如果可能需要检查消息正文的内容，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-234">Use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> if the contents of the message body may require examination.</span></span>  
  
 <span data-ttu-id="01462-235">其余的两个方法为针对于 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> 的重载。</span><span class="sxs-lookup"><span data-stu-id="01462-235">The remaining two methods are overloads specific to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span> <span data-ttu-id="01462-236">若要筛选通过导航器提供的文档，请使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> 或 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-236">To filter on a document provided through a navigator, use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> or <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="01462-237">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-237">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="01462-238">
            <see langword="out" /> 参数，用于存储与 <c>message</c> 匹配的筛选器的 <c>FilterData</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-238">The <see langword="out" /> parameter that stores the <c>FilterData</c> for the filter that matches the <c>message</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-239">返回一个值，该值指示指定的消息是否正好满足表中的一个 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的匹配条件，然后返回匹配的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-239">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and returns the matching filter data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-240">如果消息满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-240">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-241">当预期会有单个筛选器与消息相匹配，并且只需要恢复匹配筛选器的 `FilterData` 时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-241">Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="01462-242">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-242">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-243">
            <paramref name="message" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-243">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-244">多个筛选器与 <paramref name="message" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-244">More than one filter matches the <paramref name="message" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="01462-245">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-245">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="01462-246">
            <see langword="out" /> 参数，用于存储与 <c>messageBuffer</c> 匹配的筛选器的 <c>FilterData</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-246">The <see langword="out" /> parameter that stores the <c>FilterData</c> for the filter that matches the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-247">返回一个值，该值指示指定的缓冲消息是否正好满足表中的一个 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的匹配条件，然后返回匹配的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-247">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and returns the matching filter data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-248">如果缓冲消息满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-248">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-249">当预期有单个筛选器与缓冲消息相匹配，并且只需要恢复匹配筛选器的 `FilterData` 时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-249">Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="01462-250">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-250">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-251">
            <paramref name="message" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-251">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-252">多个筛选器与 <paramref name="messageBuffer" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-252">More than one filter matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValue(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (navigator As SeekableXPathNavigator, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-253">要测试的 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-253">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="01462-254">存储与 <c>navigator</c> 匹配的 <c>FilterData</c> 的 <see langword="out" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-254">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>navigator</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-255">返回一个值，该值指示 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> 是否正好满足表中的一个 <paramref name="navigator" /> 的匹配条件，然后在 <see langword="out" /> 参数中返回匹配筛选器的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-255">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-256">如果 <paramref name="navigator" /> 正好满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-256">
              <see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-257">使用此方法指定消息必须满足的 XPath 条件。</span><span class="sxs-lookup"><span data-stu-id="01462-257">Use this method to specify an XPath condition that the message must meet.</span></span>  
  
 <span data-ttu-id="01462-258">此方法类似于 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>，不同的是此方法使用 <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>，这样就扩展了 <xref:System.Xml.XPath.XPathNavigator> 的功能，可以包含允许各种优化的方法。</span><span class="sxs-lookup"><span data-stu-id="01462-258">This method is similar to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, except that it uses a <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, which extends the functionality of the <xref:System.Xml.XPath.XPathNavigator> to include methods that allow various optimizations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-259">
            <paramref name="navigator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-259">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-260">多个筛选器与 <paramref name="navigator" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-260">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.Xml.XPath.XPathNavigator navigator, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValue(class System.Xml.XPath.XPathNavigator navigator, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (navigator As XPathNavigator, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::Xml::XPath::XPathNavigator ^ navigator, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-261">要测试的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-261">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="01462-262">存储与 <c>navigator</c> 匹配的 <c>FilterData</c> 的 <see langword="out" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-262">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>navigator</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-263">返回一个值，该值指示 <see cref="T:System.Xml.XPath.XPathNavigator" /> 是否正好满足表中的一个 <paramref name="navigator" /> 的匹配条件，然后在 <see langword="out" /> 参数中返回匹配筛选器的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-263">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-264">如果 <paramref name="navigator" /> 正好满足表中一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-264">
              <see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-265">使用此方法指定消息必须满足的 XPath 条件。</span><span class="sxs-lookup"><span data-stu-id="01462-265">Use this method to specify an XPath condition that the message must meet.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-266">
            <paramref name="navigator" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-266">
              <paramref name="navigator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="01462-267">多个筛选器与 <paramref name="navigator" /> 相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-267">More than one filter matches the <paramref name="navigator" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01462-268">返回一个值，该值指示指定的消息或缓冲消息是否满足表中至少一个筛选器的匹配条件，然后将匹配筛选器的 <paramref name="FilterData" /> 添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-268">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-269">当预期有多个筛选器与消息或缓冲消息相匹配，并且只需要 `FilterData` 时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-269">Use this method when more than one filter is expected to match the message or buffered message and only the `FilterData` is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="01462-270">要测试的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-270">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-271">在泛型 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; 中存储匹配筛选器的筛选数据的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-271">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-272">返回一个值，该值指示指定的消息是否满足表中至少一个筛选器的匹配条件，然后将匹配筛选器的筛选数据添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-272">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-273">如果 <paramref name="message" /> 满足表中至少一个筛选器的匹配条件，则为 <see langword="true" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-273">
              <see langword="true" /> if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-274">当预期会有多个筛选器与消息相匹配，同时只需要筛选数据，且不检查消息的正文时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-274">Use this method when more than one filter is expected to match the message, only the filter data is required, and the body of the message is not inspected.</span></span>  
  
 <span data-ttu-id="01462-275">匹配的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 对象的筛选数据存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="01462-275">The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="01462-276">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-276">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-277">
            <paramref name="results" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-277">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="01462-278">筛选器试图检查消息正文的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-278">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="01462-279">要测试的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-279">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-280">在泛型 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; 中存储匹配筛选器的筛选数据的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-280">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-281">返回一个值，该值指示指定的缓冲消息是否满足表中至少一个筛选器的匹配条件，然后将匹配筛选器的筛选数据添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-281">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-282">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="message" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-282">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-283">当预期有多个筛选器与缓冲消息相匹配，并且只需要筛选数据时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-283">Use this method when more than one filter is expected to match the buffered message and only the filter data is required.</span></span>  
  
 <span data-ttu-id="01462-284">匹配的 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 对象的筛选数据存储在 `results`<xref:System.Collections.Generic.ICollection%601> 中。</span><span class="sxs-lookup"><span data-stu-id="01462-284">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="01462-285">此方法实现 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-285">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-286">
            <paramref name="results" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-286">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValues(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (navigator As SeekableXPathNavigator, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-287">要测试的 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-287">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-288">在泛型 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; 中存储匹配筛选器的筛选数据的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-288">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-289">返回一个值，该值指示 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> 是否满足表中至少一个 <paramref name="navigator" /> 的匹配条件，然后将匹配筛选器的筛选数据添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-289">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-290">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="navigator" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-290">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-291">当预期会有多个筛选器与派生自优化的 XPath 导航器 <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> 的 XML 文档的查询条件相匹配，并且只需要筛选数据时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-291">Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.</span></span>  
  
 <span data-ttu-id="01462-292">匹配的 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 对象的筛选数据存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="01462-292">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-293">
            <paramref name="results" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-293">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValues(class System.Xml.XPath.XPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (navigator As XPathNavigator, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::Xml::XPath::XPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <span data-ttu-id="01462-294">要测试的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-294">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="01462-295">在泛型 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt; 中存储匹配筛选器的筛选数据的引用参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-295">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-296">返回一个值，该值指示 <see cref="T:System.Xml.XPath.XPathNavigator" /> 是否满足表中至少一个 <paramref name="navigator" /> 的匹配条件，然后将匹配筛选器的筛选数据添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-296">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-297">如果 <see langword="true" /> 满足表中至少一个筛选器的匹配条件，则为 <paramref name="navigator" />；如果不满足任何筛选器，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-297">
              <see langword="true" /> if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-298">当预期会有多个筛选器与派生自优化的 XPath 导航器 <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> 的 XML 文档的查询条件相匹配，并且只需要筛选数据时，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="01462-298">Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.</span></span>  
  
 <span data-ttu-id="01462-299">匹配的 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 对象的筛选数据存储在 `results` 的 <xref:System.Collections.Generic.ICollection%601> 参数中。</span><span class="sxs-lookup"><span data-stu-id="01462-299">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-300">
            <paramref name="results" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-300">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01462-301">
            <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 不是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-301">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> is not read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01462-302">始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-302">Always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFilterData Item(class System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(filter As MessageFilter) As TFilterData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TFilterData default[System::ServiceModel::Dispatcher::MessageFilter ^] { TFilterData get(System::ServiceModel::Dispatcher::MessageFilter ^ filter); void set(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFilterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="01462-303">与要获取或设置的筛选数据关联的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-303">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-304">获取或设置与指定的 <paramref name="filter" /> 关联的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-304">Gets or sets the filter data associated with the specified <paramref name="filter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01462-305">与 <paramref name="filter" /> 关联的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-305">The filter data associated with the <paramref name="filter" />.</span>
          </span>
          <span data-ttu-id="01462-306">如果找不到指定的 <paramref name="filter" />，get 操作会引发 <see cref="T:System.Collections.Generic.KeyNotFoundException" />，而 set 操作会创建一个以指定的 <paramref name="filter" /> 作为键的新筛选数据元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-306">If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new filter data element with the specified <paramref name="filter" /> as key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-307">`Item` 属性（C# 中的索引器）可通过使用下面的语法提供访问与表的筛选器集合中的 `filter` 关联的筛选数据的功能。</span><span class="sxs-lookup"><span data-stu-id="01462-307">The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.</span></span>  
  
```csharp  
myFilters[filter]  
```  
  
```vb  
myFilters(filter)  
```  
  
 <span data-ttu-id="01462-308">您还可以使用 `Item` 属性来添加新元素，方法是设置操作筛选器表中不存在的 `filter`/filter data 对的值。</span><span class="sxs-lookup"><span data-stu-id="01462-308">You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table.</span></span> <span data-ttu-id="01462-309">然而，如果表中已经存在 `filter`，则设置 `Item` 属性将会覆盖旧值。</span><span class="sxs-lookup"><span data-stu-id="01462-309">However if `filter` is already in the table, setting the `Item` property overwrites the old value.</span></span> <span data-ttu-id="01462-310">相反，<xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> 方法不会修改现有的 `filter` 的筛选数据。</span><span class="sxs-lookup"><span data-stu-id="01462-310">In contrast, the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.</span></span>  
  
 <span data-ttu-id="01462-311">词典 `Item` 为 `filter` 中的 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>/filter data 对。</span><span class="sxs-lookup"><span data-stu-id="01462-311">The dictionary `Item` is a `filter`/filter data pair in the case of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-312">
            <paramref name="filter" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-312">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="01462-313">发生了编译器错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-313">A compiler error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="01462-314">已检索该属性，并且 <paramref name="filter" /> 不在表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-314">The property is retrieved and the <paramref name="filter" /> is not in the table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01462-315">获取 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 中包含的所有筛选器的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-315">Gets a collection of all the filters contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01462-316">筛选器表中包含的所有 <see cref="T:System.Collections.Generic.ICollection`1" /> 的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-316">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />s contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-317">此属性实现 <xref:System.Collections.Generic.IDictionary%602.Keys%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-317">This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span></span> <span data-ttu-id="01462-318">筛选器表实现的 <xref:System.Collections.Generic.IDictionary%602> 将 <xref:System.ServiceModel.Dispatcher.MessageFilter> 用作对的键并将 `FilterData` 用作对的值。</span><span class="sxs-lookup"><span data-stu-id="01462-318">The <xref:System.Collections.Generic.IDictionary%602> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="01462-319">未指定集合中返回的筛选器的顺序，但可以保证此顺序与 `FilterData` 属性所返回的集合中相应 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A> 的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="01462-319">The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeQuota">
      <MemberSignature Language="C#" Value="public int NodeQuota { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeQuota" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeQuota As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeQuota { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01462-320">获取或设置 XML 文档节点的最大数目，这些文档节点在单一调用 <see langword="Match" /> 方法期间可由单个筛选器检查。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-320">Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a <see langword="Match" /> method.</span>
          </span>
          <span data-ttu-id="01462-321">此值适用于每个筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-321">This value applies for each filter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01462-322">可检查的节点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-322">The number of nodes that can be examined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-323">此属性可用于解决安全威胁。</span><span class="sxs-lookup"><span data-stu-id="01462-323">This property can be used to alleviate a security threat.</span></span> <span data-ttu-id="01462-324">某些筛选器的开销极大评估或非常长时间运行。</span><span class="sxs-lookup"><span data-stu-id="01462-324">Some filters can be extremely expensive to evaluate or are very long-running.</span></span> <span data-ttu-id="01462-325"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s 最常计算针对来自不受信任源 （从线路的 SOAP 消息），这可能是恶意的文档中。</span><span class="sxs-lookup"><span data-stu-id="01462-325"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious.</span></span> <span data-ttu-id="01462-326">因为筛选器在 XML 文档上执行，所以对筛选器表设置计算限制的最好方法是指定评估此表中的筛选器时所检查的最大节点数。</span><span class="sxs-lookup"><span data-stu-id="01462-326">Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01462-327">从筛选器表中移除筛选器及其关联的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-327">Removes a filter and its associated filter data from the filter table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="01462-328">要从表中移除的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-328">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to remove from the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-329">从筛选器表中移除筛选器及其关联的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-329">Removes a filter and its associated filter data from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-330">如果找到了 filter/<see langword="true" /> 对并将其移除，则为 <paramref name="FilterData" />；如果未找到，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-330">
              <see langword="true" /> if the filter/<paramref name="FilterData" /> pair was found and removed; <see langword="false" /> if it was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-331">如果存在 `item` 的筛选键，但此筛选键与不同于 `FilterData` 的数据相关联，则此方法将无法移除筛选器并返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="01462-331">If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="01462-332">要移除的 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-332">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-333">从筛选器表中移除筛选器及其关联的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-333">Removes a filter and its associated filter data from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-334">如果找到了筛选器并将其移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-334">
              <see langword="true" /> if the filter was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-335">
            <paramref name="filter" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-335">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01462-336">
            <paramref name="filter" /> 不是 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-336">
              <paramref name="filter" /> is not a <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.XPathMessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.ServiceModel.Dispatcher.XPathMessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As XPathMessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::ServiceModel::Dispatcher::XPathMessageFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.XPathMessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="01462-337">要移除的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-337">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-338">从筛选器表中移除 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 及其关联的筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-338">Removes an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> and its associated filter data from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-339">如果找到了 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 并将其移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-339">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-340">如果指定的筛选器在筛选器表中不存在，此方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="01462-340">This method does not throw an exception if the specified filter does not exist in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01462-341">
            <paramref name="filter" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-341">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="01462-342">
            <paramref name="filter" /> 不是 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-342">
              <paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01462-343">返回一个可循环访问筛选器表的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-343">Returns an enumerator that can iterate through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-344">一个可用于循环访问筛选器表的 <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-344">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-345">此方法实现 <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-345">This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01462-346">压缩筛选器表，清除任何过多的分配或缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-346">Compacts the filter table, purging any excess allocations or buffers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-347">此方法基本上等效于将集合的容量设置为其计数。</span><span class="sxs-lookup"><span data-stu-id="01462-347">This method is conceptually equivalent to setting a collection's capacity to its count.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.ServiceModel.Dispatcher.MessageFilter filter, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (filter As MessageFilter, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::ServiceModel::Dispatcher::MessageFilter ^ filter, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="01462-348">用于检索数据的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-348">A key to retrieve the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="01462-349">当此方法返回 <see langword="true" /> 时，则返回与 <c>filter</c> 关联的 <c>data</c>；否则，将返回 <c>data</c> 参数的类型的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-349">The <c>data</c> associated with the <c>filter</c> when this method returns <see langword="true" />; otherwise, the default value for the type of the <c>data</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01462-350">检查筛选器是否存储在筛选器表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-350">Checks whether a filter is stored in the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01462-351">如果筛选器表中存在 <paramref name="filter" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-351">
              <see langword="true" /> if the <paramref name="filter" /> is present in the filter table; <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-352">在检查筛选器是否在筛选器表中时，此方法是一种有效的方法，因为如果筛选器不存在，则此方法会返回 `false`，而不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="01462-352">This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns `false` instead of throwing an exception.</span></span> <span data-ttu-id="01462-353">如果尝试使用筛选器的 `Item` 属性（C# 中为索引器）从表中检索筛选器，并且此筛选器在表中不存在，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="01462-353">If you try to retrieve the filter from the table using its `Item` property (the indexer in C#) and it is not there, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TFilterData&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ Values { System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01462-354">获取 <paramref name="FilterData" /> 中包含的所有 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-354">Gets a collection of all the <paramref name="FilterData" /> contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01462-355">筛选器表中包含的所有 <see cref="T:System.Collections.Generic.ICollection`1" /> 的 <paramref name="FilterData" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01462-355">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01462-356">此属性实现 <xref:System.Collections.Generic.IDictionary%602.Values%2A>。</span><span class="sxs-lookup"><span data-stu-id="01462-356">This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span></span> <span data-ttu-id="01462-357">筛选器表实现的 <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> 将 <xref:System.ServiceModel.Dispatcher.MessageFilter> 用作该对的键并将 `FilterData` 用作该对的值。</span><span class="sxs-lookup"><span data-stu-id="01462-357">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="01462-358">未指定集合中返回的 `FilterData` 的顺序，但可以保证此顺序与 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> 属性所返回的集合中相应筛选器的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="01462-358">The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>