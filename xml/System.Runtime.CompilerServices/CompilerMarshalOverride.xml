<Type Name="CompilerMarshalOverride" FullName="System.Runtime.CompilerServices.CompilerMarshalOverride">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c16abf3dded44457fa55df44132ba3c28cf2832" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37472338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CompilerMarshalOverride" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CompilerMarshalOverride extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CompilerMarshalOverride" />
  <TypeSignature Language="VB.NET" Value="Public Class CompilerMarshalOverride" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerMarshalOverride abstract sealed" />
  <TypeSignature Language="F#" Value="type CompilerMarshalOverride = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2803e-101">指示修饰的变量实例在封送时与其真实类型不同。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2803e-101">Indicates that the modified instance of a variable differs from its true type when marshaling.</span>
      </span>
      <span data-ttu-id="2803e-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2803e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2803e-103"><xref:System.Runtime.CompilerServices.CompilerMarshalOverride>类允许在公共语言运行时进行封送处理使用正确的大小。</span><span class="sxs-lookup"><span data-stu-id="2803e-103">The <xref:System.Runtime.CompilerServices.CompilerMarshalOverride> class allows the common language runtime to marshal using the correct sizes.</span></span>  
  
 <span data-ttu-id="2803e-104">公共语言运行时的一些行为是与某些语言不兼容。</span><span class="sxs-lookup"><span data-stu-id="2803e-104">Some behaviors of the common language runtime are incompatible with some languages.</span></span> <span data-ttu-id="2803e-105">例如，c + + 视为布尔变量单字节值，而公共语言运行时将它们封送为 4 字节值，以匹配`BOOLEAN`由 Microsoft Win32 API 定义的类型。</span><span class="sxs-lookup"><span data-stu-id="2803e-105">For example, C++ treats Boolean variables as single-byte values, while the common language runtime marshals them as four-byte values to match the `BOOLEAN` type defined by the Microsoft Win32 API.</span></span>  <span data-ttu-id="2803e-106">若要解决此类问题，c + + 编译器将发出任何上的此修饰符`wchar_t`或`bool`参数或函数返回。</span><span class="sxs-lookup"><span data-stu-id="2803e-106">To work around such issues, the C++ compiler emits this modifier on any `wchar_t` or `bool` parameter or function return.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>