<Type Name="IsVolatile" FullName="System.Runtime.CompilerServices.IsVolatile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13e3e09c2fcdc7f4812f5c0165f44c88a9afcfa5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58714966" /></Metadata><TypeSignature Language="C#" Value="public static class IsVolatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsVolatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsVolatile" />
  <TypeSignature Language="VB.NET" Value="Public Class IsVolatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsVolatile abstract sealed" />
  <TypeSignature Language="F#" Value="type IsVolatile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将字段标记为易失。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsVolatile` 用于仅在自定义修饰符的方法签名中指示它将标记的字段是易失性。 将元数据导入包含一个或多个字段标记为易失性任何编译器必须使用带有前缀的说明`volatile.`来访问这些字段。  
  
 中的类<xref:System.Runtime.CompilerServices>仅用于编译器编写器。  
  
 编译器发出元数据更改，在实时 (JIT) 编译器处理值时的默认行为是不适当的方式中的自定义修饰符。  当 JIT 编译器遇到了一个自定义修饰符时，它处理修饰符指定的方法中的值。  编译器可以将自定义修饰符应用于方法、 参数和返回值。  JIT 编译器必须响应所需的修饰符，但可以忽略可选的修饰符。  C + + 编译器可以发出自定义修饰符，用于描述一个字节应如何处理在其中 JIT 编译器与 c + + 不兼容的方式将字节的情况下默认情况下。  
  
 可以将自定义修饰符发出到元数据中使用以下方法之一：  
  
-   使用中的方法<xref:System.Reflection.Emit.TypeBuilder>如类<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>，和<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>。  
  
-   生成包含对的调用的 Microsoft 中间语言 (MSIL) 指令文件`modopt`和`modreq`，并组合成与文件[Ilasm.exe （IL 汇编程序）](~/docs/framework/tools/ilasm-exe-il-assembler.md)。  
  
-   使用非托管的反射 API。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>