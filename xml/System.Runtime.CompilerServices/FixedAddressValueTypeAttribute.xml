<Type Name="FixedAddressValueTypeAttribute" FullName="System.Runtime.CompilerServices.FixedAddressValueTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c830ab16e3576906df66ffa118a43b554d9478f" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48678770" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FixedAddressValueTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FixedAddressValueTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FixedAddressValueTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FixedAddressValueTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type FixedAddressValueTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b09db-101">在静态值类型字段的整个生存期内固定其地址。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b09db-101">Fixes the address of a static value type field throughout its lifetime.</span>
      </span>
      <span data-ttu-id="b09db-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b09db-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b09db-103">使用<xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute>特性标记静态值类型标记为在创建时固定。</span><span class="sxs-lookup"><span data-stu-id="b09db-103">Use the <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> attribute to mark static value types as pinned upon creation.</span></span>  
  
 <span data-ttu-id="b09db-104">由 Microsoft Visual c + + 编译器使用此特性。</span><span class="sxs-lookup"><span data-stu-id="b09db-104">This attribute is used by the Microsoft Visual C++ compiler.</span></span>  
  
 <span data-ttu-id="b09db-105">静态值类型的字段创建为装箱的对象。</span><span class="sxs-lookup"><span data-stu-id="b09db-105">Static value type fields are created as boxed objects.</span></span> <span data-ttu-id="b09db-106">这意味着执行垃圾回收时，可以更改其地址。</span><span class="sxs-lookup"><span data-stu-id="b09db-106">This means that their address can change as garbage collection is performed.</span></span> <span data-ttu-id="b09db-107">将此特性应用于静态值类型，其地址保持不变在其生存期内。</span><span class="sxs-lookup"><span data-stu-id="b09db-107">When you apply this attribute to a static value type, its address remains constant during its lifetime.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b09db-108">下面的示例演示如何使用<xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute>固定在内存中的静态字段的属性。</span><span class="sxs-lookup"><span data-stu-id="b09db-108">The following example illustrates the use of the <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> attribute to pin a static field in memory.</span></span> <span data-ttu-id="b09db-109">它定义`Age`结构，并初始化两个类具有类型的静态字段的`Age`。</span><span class="sxs-lookup"><span data-stu-id="b09db-109">It defines an `Age` structure and initializes two classes that have static fields of type `Age`.</span></span> <span data-ttu-id="b09db-110">第二个类适用<xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute>固定字段的地址。</span><span class="sxs-lookup"><span data-stu-id="b09db-110">The second class applies <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> to pin the field's address.</span></span> <span data-ttu-id="b09db-111">之前和之后这两个对象进行实例化和调用垃圾回收器进行内存分配数。</span><span class="sxs-lookup"><span data-stu-id="b09db-111">A number of memory allocations are made before and after these two objects are instantiated and the garbage collector is invoked.</span></span> <span data-ttu-id="b09db-112">该示例的输出显示，虽然的第一个地址`Age`垃圾回收，向其字段的地址后已更改字段<xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute>应用不具有。</span><span class="sxs-lookup"><span data-stu-id="b09db-112">The output from the example shows that although the address of the first `Age` field has changed after garbage collection, the address of the field to which <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> is applied has not.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedAddressValueTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FixedAddressValueTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b09db-113">初始化 <see cref="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b09db-113">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b09db-114">下面的示例演示如何使用<xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute>固定在内存中的静态字段的属性。</span><span class="sxs-lookup"><span data-stu-id="b09db-114">The following example illustrates the use of the <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> attribute to pin a static field in memory.</span></span> <span data-ttu-id="b09db-115">它定义`Age`结构，并初始化两个类具有类型的静态字段的`Age`。</span><span class="sxs-lookup"><span data-stu-id="b09db-115">It defines an `Age` structure and initializes two classes that have static fields of type `Age`.</span></span> <span data-ttu-id="b09db-116">第二个类适用<xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute>固定字段的地址。</span><span class="sxs-lookup"><span data-stu-id="b09db-116">The second class applies <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> to pin the field's address.</span></span> <span data-ttu-id="b09db-117">之前和之后这两个对象进行实例化和调用垃圾回收器进行内存分配数。</span><span class="sxs-lookup"><span data-stu-id="b09db-117">A number of memory allocations are made before and after these two objects are instantiated and the garbage collector is invoked.</span></span> <span data-ttu-id="b09db-118">该示例的输出显示，虽然的第一个地址`Age`垃圾回收，向其字段的地址后已更改字段<xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute>应用不具有。</span><span class="sxs-lookup"><span data-stu-id="b09db-118">The output from the example shows that although the address of the first `Age` field has changed after garbage collection, the address of the field to which <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> is applied has not.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>