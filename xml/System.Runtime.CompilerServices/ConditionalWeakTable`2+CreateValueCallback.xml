<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key"><span data-ttu-id="b2157-101">属于要创建的值的键。</span><span class="sxs-lookup"><span data-stu-id="b2157-101">The key that belongs to the value to create.</span></span></param>
    <summary><span data-ttu-id="b2157-102">表示一种方法，用于创建作为键/值对的一部分添加到 <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 对象的非默认值。</span><span class="sxs-lookup"><span data-stu-id="b2157-102">Represents a method that creates a non-default value to add as part of a key/value pair to a <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
    <returns><span data-ttu-id="b2157-103">一个引用类型的实例，该类型表示要附加到指定键的值。</span><span class="sxs-lookup"><span data-stu-id="b2157-103">An instance of a reference type that represents the value to attach to the specified key.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2157-104"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>委托封装由调用的回调方法<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType>中找不到密钥传递给方法的方法<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>对象。</span><span class="sxs-lookup"><span data-stu-id="b2157-104">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object.</span></span> <span data-ttu-id="b2157-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法通过回调方法键，表示为动态附加属性值的托管的对象。</span><span class="sxs-lookup"><span data-stu-id="b2157-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached.</span></span> <span data-ttu-id="b2157-106">方法负责返回其调用方，这反过来将键/值对添加到表的属性值。</span><span class="sxs-lookup"><span data-stu-id="b2157-106">The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.</span></span>  
  
 <span data-ttu-id="b2157-107"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>方法用于返回引用类型可以附加到指定的键的实例。</span><span class="sxs-lookup"><span data-stu-id="b2157-107">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key.</span></span> <span data-ttu-id="b2157-108">它使该实例使用非默认值初始化。</span><span class="sxs-lookup"><span data-stu-id="b2157-108">It enables that instance to be initialized using non-default values.</span></span> <span data-ttu-id="b2157-109">如果在表中，找不到键<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType>方法将添加在其中使用默认值初始化值的键/值对。</span><span class="sxs-lookup"><span data-stu-id="b2157-109">If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> method adds a key/value pair in which the value is initialized using default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2157-110">下面的示例定义`MainClass`类和一个`MainInfo`类。</span><span class="sxs-lookup"><span data-stu-id="b2157-110">The following example defines a `MainClass` class and a `MainInfo` class.</span></span> <span data-ttu-id="b2157-111">`MainInfo` 相关信息提供`MainClass`实例。</span><span class="sxs-lookup"><span data-stu-id="b2157-111">`MainInfo` provides information about the `MainClass` instance.</span></span> <span data-ttu-id="b2157-112">它还定义一个静态 (`Shared`在 Visual Basic 中)`CreateAttachedValue`方法可以分配给<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>委派并传递给<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b2157-112">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="b2157-113">该示例通过调用<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法将添加`MainClass`对象和其对应`MainInfo`对象传递给<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>表。</span><span class="sxs-lookup"><span data-stu-id="b2157-113">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its corresponding `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="b2157-114">该示例还演示如何调用<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>和<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>方法将键/值对添加到表，并调用<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法来检索属于现有密钥的值。</span><span class="sxs-lookup"><span data-stu-id="b2157-114">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and a call to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value that belongs to an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>