<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dbad90729492314a23866ed7c79bfea50e363de" /><Meta Name="ms.sourcegitcommit" Value="f53ba3f284fd3661546ab51c379ed7872ed4ee74" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/08/2019" /><Meta Name="ms.locfileid" Value="54098209" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5ba4-101">指定通常仅在当前程序集中可见的类型对指定程序集可见。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-101">Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5ba4-102">通常，类型和成员`internal`（在 C# 中) 的作用域和`Friend`作用域 （在 Visual Basic 中) 是仅在定义它们的程序集可见。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-102">Ordinarily, types and members with `internal` scope (in C#) and `Friend` scope (in Visual Basic) are visible only in the assembly in which they are defined.</span></span> <span data-ttu-id="e5ba4-103"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性使它们还的可见类型中指定的程序集，这被称为友元程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-103">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</span></span> <span data-ttu-id="e5ba4-104">这仅适用于`internal`(`Friend`在 VB 中) 的方法仅限非`private`的。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-104">This only applies to `internal` (`Friend` in VB) methods only, not `private` ones.</span></span>
  
 <span data-ttu-id="e5ba4-105">程序集级别应用属性。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-105">The attribute is applied at the assembly level.</span></span> <span data-ttu-id="e5ba4-106">这意味着它可以是包含源代码文件中，开始时，或者它可以包含在 Visual Studio 项目中的 AssemblyInfo 文件。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-106">This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</span></span> <span data-ttu-id="e5ba4-107">该属性可用于指定可以访问的内部类型和成员的当前程序集的单个友元程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-107">You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</span></span> <span data-ttu-id="e5ba4-108">可以通过两种方式来定义多个友元程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-108">You can define multiple friend assemblies in two ways.</span></span> <span data-ttu-id="e5ba4-109">它们可以显示作为单个程序集级别属性，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-109">They can appear as individual assembly-level attributes, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 <span data-ttu-id="e5ba4-110">它们还可以显示使用单独<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>标记，但单个`assembly`关键字，如下面的示例说明了。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-110">They can also appear with separate <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tags but a single `assembly` keyword, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 <span data-ttu-id="e5ba4-111">友元程序集由<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-111">The friend assembly is identified by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="e5ba4-112">当前程序集和友元程序集都必须是无符号整数，或两个程序集必须使用强名称签名。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-112">Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</span></span>  
  
 <span data-ttu-id="e5ba4-113">如果两个程序集是无符号整数，`assemblyName`参数包含的友元程序集，而无需的目录路径或文件名称扩展指定的名称。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-113">If both assemblies are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file name extension.</span></span>  
  
 <span data-ttu-id="e5ba4-114">如果两个程序集签名用强名称，为参数<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>构造函数必须包含不带其目录路径或文件扩展名，以及完整的公钥 （和不的公钥标记） 程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-114">If both assemblies are signed with a strong name, the argument to the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</span></span> <span data-ttu-id="e5ba4-115">若要获取完整公钥的强名称程序集，请参阅[获取完整公钥](#Key)本文后面的部分。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-115">To get the full public key of a strong-named assembly, see the [Getting the full public key](#Key) section later in this article.</span></span> <span data-ttu-id="e5ba4-116">有关使用详细信息<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>使用强名称程序集，请参阅<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-116">For more information about using <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> with strong-named assemblies, see the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="e5ba4-117">不包括值<xref:System.Reflection.AssemblyName.CultureInfo%2A>， <xref:System.Reflection.AssemblyName.Version%2A>，或<xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A>参数中的字段; Visual Basic、 C# 和 c + + 编译器将此视为编译器错误。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-117">Do not include values for the <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, or <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</span></span> <span data-ttu-id="e5ba4-118">如果你使用不会将它视为错误的编译器 (如[IL 汇编程序 (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) 和这些程序集进行强命名<xref:System.MethodAccessException>引发第一次指定的友元程序集访问异常。包含程序集<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-118">If you use a compiler that does not treat it as an error (such as the [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) and the assemblies are strong-named, a <xref:System.MethodAccessException> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute.</span></span>  
  
 <span data-ttu-id="e5ba4-119">有关如何使用此属性的详细信息，请参阅以下主题：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-119">For more information about how to use this attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="e5ba4-120">友元程序集 (C++)</span><span class="sxs-lookup"><span data-stu-id="e5ba4-120">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="e5ba4-121">友元程序集</span><span class="sxs-lookup"><span data-stu-id="e5ba4-121">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a><span data-ttu-id="e5ba4-122">获取完整公钥</span><span class="sxs-lookup"><span data-stu-id="e5ba4-122">Getting the full public key</span></span>  
 <span data-ttu-id="e5ba4-123">可以使用[强名称工具 (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md)从强名称密钥 (.snk) 文件中检索完整的公钥。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-123">You can use the [Strong Name Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="e5ba4-124">若要执行此操作，您执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-124">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="e5ba4-125">从强名称密钥文件中的公钥提取到单独的文件：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-125">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="e5ba4-126">\**Sn-p\*\*\*snk_file* *outfile* </span><span class="sxs-lookup"><span data-stu-id="e5ba4-126">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="e5ba4-127">向控制台显示完整的公钥：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-127">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="e5ba4-128">\**Sn-tp\*\*\*outfile*</span><span class="sxs-lookup"><span data-stu-id="e5ba4-128">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="e5ba4-129">复制并粘贴到你的源代码的完整公钥值。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-129">Copy and paste the full public key value into your source code.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="e5ba4-130">编译使用 C# 的友元程序集</span><span class="sxs-lookup"><span data-stu-id="e5ba4-130">Compiling the friend assembly with C#</span></span>  
 <span data-ttu-id="e5ba4-131">如果您使用 C# 编译器来编译友元程序集，必须使用显式指定输出文件 （.exe 或.dll） 的名称 **/out**编译器选项。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-131">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="e5ba4-132">这是必需的，因为编译器尚未为它在绑定到外部引用时而正在构建的程序集生成名称。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-132">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="e5ba4-133">**/Out**编译器选项是可选的 Visual Basic 编译器和相应 **-out**或 **-o**编译友元时，不应使用编译器选项具有程序集F#编译器。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-133">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="e5ba4-134">编译使用 c + + 的友元程序集</span><span class="sxs-lookup"><span data-stu-id="e5ba4-134">Compiling the friend assembly with C++</span></span>  
 <span data-ttu-id="e5ba4-135">在 c + +，以使情况下启用的内部成员<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性的友元程序集可以访问，则必须使用`as_friend`c + + 指令中的属性。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-135">In C++, in order to make the internal members enabled by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute accessible to a friend assembly, you must use the `as_friend` attribute in the C++  directive.</span></span> <span data-ttu-id="e5ba4-136">有关详细信息，请参阅[友元程序集 （c + +）](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-136">For more information, see [Friend Assemblies (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5ba4-137">**签名的程序集**</span><span class="sxs-lookup"><span data-stu-id="e5ba4-137">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="e5ba4-138">下面的示例使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>特性，以使`internal`方法名为`AppendDirectorySeparator`中签名的程序集对另一个已签名的程序集可见。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-138">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="e5ba4-139">它定义`FileUtilities`类，其中包括内部`AppendDirectorySeparator`方法。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-139">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="e5ba4-140"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>特性应用于包含的程序集`FileUtilities`类。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-140">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="e5ba4-141">该属性允许程序集名为`Friend1`访问该内部成员。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-141">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="e5ba4-142">如果将下面的示例编译到名为的强名称程序集`Friend1`，则`Example.Main`中的方法`Friend1`可成功调用`FileUtilities.AppendDirectorySeparator`方法，尽管该方法的内部`Assembly1`程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-142">If the following example is compiled into a strong-named assembly named `Friend1`, the `Example.Main` method in `Friend1` can successfully call the `FileUtilities.AppendDirectorySeparator` method, although the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="e5ba4-143">请注意，是否要从命令行编译 C# 中，则必须使用 **/out**编译器开关，以确保友元程序集的名称可用时，编译器将绑定到外部引用。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-143">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="e5ba4-144">**未签名程序集**</span><span class="sxs-lookup"><span data-stu-id="e5ba4-144">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="e5ba4-145">下面的示例使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>特性，以使`internal`未签名的程序集到另一个可见的成员未签名的程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-145">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="e5ba4-146">该属性可确保`internal``StringLib.IsFirstLetterUpperCase`中名为程序集的方法`UtilityLib`是对中名为程序集的代码可见`Friend2`。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-146">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="e5ba4-147">以下是 UtilityLib.dll 的源代码：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-147">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="e5ba4-148">下面的示例提供的源代码`Friend2`程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-148">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="e5ba4-149">请注意，是否要从命令行编译 C# 中，则必须使用 **/out**编译器开关，以确保友元程序集的名称可用时，编译器将绑定到外部引用。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-149">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="e5ba4-150">友元程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-150">The name of a friend assembly.</span></span></param>
        <summary><span data-ttu-id="e5ba4-151">用指定的友元程序集的名称初始化 <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-151">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> class with the name of the specified friend assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5ba4-152"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>构造函数定义友元程序集，即有权访问的内部类型和成员的当前程序集的程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-152">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor defines a friend assembly, which is an assembly that has access to the internal types and members of the current assembly.</span></span>  
  
 <span data-ttu-id="e5ba4-153">当前程序集和友元程序集都必须是无符号整数，或两者都必须用强名称签名。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-153">Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</span></span> <span data-ttu-id="e5ba4-154">(有关强名称的程序集的详细信息，请参阅[创建和使用具有强名称程序集](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)。)如果两者都是无符号整数，`assemblyName`参数包含的友元程序集，而无需的目录路径或文件扩展指定的名称。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-154">(For more information about strong-named assemblies, see [Creating and Using Strong-Named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) If both are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file extension.</span></span> <span data-ttu-id="e5ba4-155">如果两个都签名`assemblyName`包含不带其目录路径或文件扩展名，以及其完整公钥 （但不是的公钥标记） 的友元程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-155">If both are signed, `assemblyName` consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</span></span> <span data-ttu-id="e5ba4-156">不能指定一个强名称，例如那些提供区域性、 版本或处理器体系结构信息的其他组件`assemblyName`参数。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-156">The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the `assemblyName` argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5ba4-157">如果您使用 C# 编译器来编译友元程序集，必须使用显式指定输出文件 （.exe 或.dll） 的名称 **/out**编译器选项。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-157">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="e5ba4-158">这是必需的，因为编译器尚未为它在绑定到外部引用时而正在构建的程序集生成名称。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-158">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="e5ba4-159">**/Out**编译器选项是可选的 Visual Basic 编译器和相应 **-out**或 **-o**编译友元时，不应使用编译器选项具有程序集F#编译器。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-159">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
 <span data-ttu-id="e5ba4-160">可以使用[Sn.exe （强名称工具）](~/docs/framework/tools/sn-exe-strong-name-tool.md)从强名称密钥 (.snk) 文件中检索完整的公钥。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-160">You can use [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="e5ba4-161">若要执行此操作，您执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-161">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="e5ba4-162">从强名称密钥文件中的公钥提取到单独的文件：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-162">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="e5ba4-163">\**Sn-p\*\*\*snk_file* *outfile* </span><span class="sxs-lookup"><span data-stu-id="e5ba4-163">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="e5ba4-164">向控制台显示完整的公钥：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-164">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="e5ba4-165">\**Sn-tp\*\*\*outfile*</span><span class="sxs-lookup"><span data-stu-id="e5ba4-165">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="e5ba4-166">复制并粘贴到你的源代码的完整公钥值。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-166">Copy and paste the full public key value into your source code.</span></span>  
  
 <span data-ttu-id="e5ba4-167">详细了解如何使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性，请参阅以下主题：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-167">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="e5ba4-168">友元程序集 (C++)</span><span class="sxs-lookup"><span data-stu-id="e5ba4-168">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="e5ba4-169">友元程序集</span><span class="sxs-lookup"><span data-stu-id="e5ba4-169">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 <span data-ttu-id="e5ba4-170">**签名的程序集**</span><span class="sxs-lookup"><span data-stu-id="e5ba4-170">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="e5ba4-171">下面的示例使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>特性，以使`internal`方法名为`AppendDirectorySeparator`中签名的程序集对另一个已签名的程序集可见。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-171">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="e5ba4-172">它定义`FileUtilities`类，其中包括内部`AppendDirectorySeparator`方法。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-172">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="e5ba4-173"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>特性应用于包含的程序集`FileUtilities`类。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-173">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="e5ba4-174">该属性允许程序集名为`Friend1`访问该内部成员。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-174">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="e5ba4-175">如果将下面的示例编译到名为的强名称程序集`Friend1`，它可以成功调用`FileUtilities.AppendDirectorySeparator`方法，即使该方法是内部`Assembly1`程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-175">If the following example is compiled into a strong-named assembly named `Friend1`, it can successfully call the `FileUtilities.AppendDirectorySeparator` method, even though the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="e5ba4-176">请注意，是否要从命令行编译 C# 中，则必须使用 **/out**编译器开关，以确保友元程序集的名称可用时，编译器将绑定到外部引用。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-176">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="e5ba4-177">下面的示例使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>特性，以使`internal`未签名的程序集到另一个可见的成员未签名的程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-177">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="e5ba4-178">该属性可确保`internal``StringLib.IsFirstLetterUpperCase`中名为程序集的方法`UtilityLib`是对中名为程序集的代码可见`Friend2`。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-178">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="e5ba4-179">以下是 UtilityLib.dll 的源代码：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-179">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="e5ba4-180">**未签名程序集**</span><span class="sxs-lookup"><span data-stu-id="e5ba4-180">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="e5ba4-181">下面的示例提供的源代码`Friend2`程序集。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-181">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="e5ba4-182">请注意，是否要从命令行编译 C# 中，则必须使用 **/out**编译器开关，以确保友元程序集的名称可用时，编译器将绑定到外部引用。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-182">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5ba4-183">不实现此属性。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-183">This property is not implemented.</span></span></summary>
        <value><span data-ttu-id="e5ba4-184">此属性不返回值。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-184">This property does not return a value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5ba4-185">获取友元程序集的名称，采用 <see langword="internal" /> 关键字标记的所有类型和类型成员对该程序集均为可见。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-185">Gets the name of the friend assembly to which all types and type members that are marked with the <see langword="internal" /> keyword are to be made visible.</span></span></summary>
        <value><span data-ttu-id="e5ba4-186">一个表示友元程序集名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="e5ba4-186">A string that represents the name of the friend assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5ba4-187">详细了解如何使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>属性，请参阅以下主题：</span><span class="sxs-lookup"><span data-stu-id="e5ba4-187">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="e5ba4-188">友元程序集 (C++)</span><span class="sxs-lookup"><span data-stu-id="e5ba4-188">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="e5ba4-189">友元程序集</span><span class="sxs-lookup"><span data-stu-id="e5ba4-189">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
