<Type Name="RuntimeWrappedException" FullName="System.Runtime.CompilerServices.RuntimeWrappedException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42ff56edcd7461cfb08d4f2f8fbc16d55e9bd320" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36540654" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RuntimeWrappedException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit RuntimeWrappedException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.RuntimeWrappedException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuntimeWrappedException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeWrappedException sealed : Exception" />
  <TypeSignature Language="F#" Value="type RuntimeWrappedException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="93b86-101">包装不是从 <see cref="T:System.Exception" /> 类派生的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="93b86-101">Wraps an exception that does not derive from the <see cref="T:System.Exception" /> class.</span>
      </span>
      <span data-ttu-id="93b86-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="93b86-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93b86-103">某些语言，如 c + +，允许您引发任何托管类型的异常。</span><span class="sxs-lookup"><span data-stu-id="93b86-103">Some languages, such as C++, allow you to throw exceptions of any managed type.</span></span>  <span data-ttu-id="93b86-104">其他语言，如 Microsoft C# 和 Visual Basic 中，需要每个引发的异常派生自<xref:System.Exception>类。</span><span class="sxs-lookup"><span data-stu-id="93b86-104">Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the <xref:System.Exception> class.</span></span>  <span data-ttu-id="93b86-105">为了保持语言之间的兼容性，公共语言运行时 (CLR) 包装是非派生自的对象<xref:System.Exception>中<xref:System.Runtime.CompilerServices.RuntimeWrappedException>对象。</span><span class="sxs-lookup"><span data-stu-id="93b86-105">To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from <xref:System.Exception> in a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.</span></span>  
  
 <span data-ttu-id="93b86-106">你可以使用<xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>类指定异常是否应在 catch 块和异常筛选器已包装的程序集。</span><span class="sxs-lookup"><span data-stu-id="93b86-106">You can use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.</span></span>  <span data-ttu-id="93b86-107">许多语言编译器，包括 Microsoft C# 和 Visual Basic 编译器，默认情况下指定换行行为应用此特性。</span><span class="sxs-lookup"><span data-stu-id="93b86-107">Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.</span></span>  
  
 <span data-ttu-id="93b86-108">请注意，运行时仍包装异常，即使你使用<xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>类，以指定你不希望它们包装。</span><span class="sxs-lookup"><span data-stu-id="93b86-108">Note that the runtime still wraps exceptions even if you use the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> class to specify that you do not want them wrapped.</span></span>  <span data-ttu-id="93b86-109">在这种情况下，异常是仅在 catch 块或异常筛选器内解包。</span><span class="sxs-lookup"><span data-stu-id="93b86-109">In this case, exceptions are unwrapped only inside catch blocks or exception filters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93b86-110">下面的代码示例演示如何引发<xref:System.String>对象作为在 c + + 异常并将其使用捕获<xref:System.Runtime.CompilerServices.RuntimeWrappedException>对象。</span><span class="sxs-lookup"><span data-stu-id="93b86-110">The following code example demonstrates how to throw a <xref:System.String> object as an exception in C++ and catch it using a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeWrappedException/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeWrappedException (object thrownObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object thrownObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeWrappedException.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (thrownObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeWrappedException(System::Object ^ thrownObject);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.RuntimeWrappedException : obj -&gt; System.Runtime.CompilerServices.RuntimeWrappedException" Usage="new System.Runtime.CompilerServices.RuntimeWrappedException thrownObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="thrownObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="thrownObject">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="runtimeWrappedException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="93b86-111">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-111">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="93b86-112">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，它包含有关源或目标的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-112">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b86-113">使用有关异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-113">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93b86-114"><xref:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData%2A>方法设置<xref:System.Runtime.Serialization.SerializationInfo>用针对于序列化的所有异常对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="93b86-114">The <xref:System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData%2A> method sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="93b86-115">反序列化期间，从通过流传输的 `SerializationInfo` 重建异常。</span><span class="sxs-lookup"><span data-stu-id="93b86-115">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93b86-116">
            <paramref name="info" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-116">The <paramref name="info" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="93b86-117">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-117">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="93b86-118">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-118">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WrappedException">
      <MemberSignature Language="C#" Value="public object WrappedException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrappedException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrappedException As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrappedException { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WrappedException : obj" Usage="System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93b86-119">获取由 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 对象包装的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-119">Gets the object that was wrapped by the <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b86-120">由 <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> 对象包装的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b86-120">The object that was wrapped by the <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93b86-121"><xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A>属性获取一个对象，允许是非派生自的异常的语言中作为异常抛<xref:System.Exception>类。</span><span class="sxs-lookup"><span data-stu-id="93b86-121">The <xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A> property gets an object that was thrown as an exception from a language that allows exceptions that do not derive from the <xref:System.Exception> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>