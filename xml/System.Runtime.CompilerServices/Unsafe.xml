<Type Name="Unsafe" FullName="System.Runtime.CompilerServices.Unsafe">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ccc5cb47c6abfb58ca98a1419b6a1547438294f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Unsafe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Unsafe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.Unsafe" />
  <TypeSignature Language="VB.NET" Value="Public Class Unsafe" />
  <TypeSignature Language="C++ CLI" Value="public ref class Unsafe abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4cc1b-101">包含用于操作指针的通用低级别功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4cc1b-101">Contains generic, low-level functionality for manipulating pointers.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Add&lt;T&gt; (ref T source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Add&lt;T&gt;(!!T&amp; source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add(Of T) (ByRef source As T, elementOffset As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Add(T % source, int elementOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-102">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-102">The type of reference.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-103">要为其增加偏移量的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-103">The reference to add the offset to.</span>
          </span>
        </param>
        <param name="elementOffset">
          <span data-ttu-id="4cc1b-104">要增加的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-104">The offset to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-105">向给定引用添加元素偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-105">Adds an element offset to the given reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-106">新引用，用于反映向指针添加的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-106">A new reference that reflects the addition of offset to pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Add&lt;T&gt; (ref T source, IntPtr elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Add&lt;T&gt;(!!T&amp; source, native int elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add(Of T) (ByRef source As T, elementOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Add(T % source, IntPtr elementOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-107">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-107">The type of reference.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-108">要为其增加偏移量的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-108">The reference to add the offset to.</span>
          </span>
        </param>
        <param name="elementOffset">
          <span data-ttu-id="4cc1b-109">要增加的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-109">The offset to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-110">向给定引用添加元素偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-110">Adds an element offset to the given reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-111">新引用，用于反映向指针添加的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-111">A new reference that reflects the addition of offset to pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T AddByteOffset&lt;T&gt; (ref T source, IntPtr byteOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AddByteOffset&lt;T&gt;(!!T&amp; source, native int byteOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddByteOffset(Of T) (ByRef source As T, byteOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AddByteOffset(T % source, IntPtr byteOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="byteOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-112">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-112">The type of reference.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-113">要为其增加偏移量的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-113">The reference to add the offset to.</span>
          </span>
        </param>
        <param name="byteOffset">
          <span data-ttu-id="4cc1b-114">要增加的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-114">The offset to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-115">向给定引用添加字节偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-115">Adds a byte offset to the given reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-116">新引用，用于反映向指针添加的字节偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-116">A new reference that reflects the addition of byte offset to pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreSame&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool AreSame&lt;T&gt; (ref T left, ref T right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreSame&lt;T&gt;(!!T&amp; left, !!T&amp; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreSame(Of T) (ByRef left As T, ByRef right As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool AreSame(T % left, T % right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="left" Type="T&amp;" RefType="ref" />
        <Parameter Name="right" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-117">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-117">The type of reference.</span>
          </span>
        </typeparam>
        <param name="left">
          <span data-ttu-id="4cc1b-118">要比较的第一个引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-118">The first reference to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4cc1b-119">要比较的第二个引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-119">The second reference to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-120">确定指定的引用是否指向相同的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-120">Determines whether the specified references point to the same location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-121">如果 <paramref name="left" /> 和 <paramref name="right" /> 指向相同的位置，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-121">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> point to the same location; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T As&lt;T&gt; (object o) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T As&lt;class T&gt;(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function As(Of T As Class) (o As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T As(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-122">对象将强制转换为的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-122">The type which the object will be cast to.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="4cc1b-123">要强制转换的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-123">The object to cast.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-124">将给定对象强制转换为指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-124">Casts the given object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-125">原始对象，强制转换为给定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-125">The original object, casted to the given type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static TTo As&lt;TFrom,TTo&gt; (ref TFrom source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TTo As&lt;TFrom, TTo&gt;(!!TFrom&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function As(Of TFrom, TTo) (ByRef source As TFrom) As TTo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; static TTo % As(TFrom % source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TTo@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom" />
        <TypeParameter Name="TTo" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="TFrom&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom">
          <span data-ttu-id="4cc1b-126">要重新解释的引用的类型...</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-126">The type of reference to reinterpret..</span>
          </span>
        </typeparam>
        <typeparam name="TTo">
          <span data-ttu-id="4cc1b-127">引用所需的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-127">The desired type of the reference.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-128">要重新解释的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-128">The reference to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-129">将给定引用重新解释为对 <typeparamref name="TTo" /> 类型的值的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-129">Reinterprets the given reference as a reference to a value of type <typeparamref name="TTo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-130">对 <typeparamref name="TTo" /> 类型的值的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-130">A reference to a value of type <typeparamref name="TTo" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsPointer&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void* AsPointer&lt;T&gt; (ref T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void* AsPointer&lt;T&gt;(!!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void* AsPointer(T % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-131">对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-131">The type of object.</span>
          </span>
        </typeparam>
        <param name="value">
          <span data-ttu-id="4cc1b-132">已获取其指针的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-132">The object whose pointer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-133">返回指向给定 by-ref 参数的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-133">Returns a pointer to the given by-ref parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-134">指向给定值的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-134">A pointer to the given value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsRef&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T AsRef&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T AsRef&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % AsRef(void* source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-135">解释位置的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-135">The type of the interpreted location.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-136">要引用的值的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-136">The location of the value to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-137">将给定位置重新解释为对 <typeparamref name="T" /> 类型的值的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-137">Reinterprets the given location as a reference to a value of type <typeparamref name="T" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-138">对 <typeparamref name="T" /> 类型的值的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-138">A reference to a value of type <typeparamref name="T" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr ByteOffset&lt;T&gt; (ref T origin, ref T target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ByteOffset&lt;T&gt;(!!T&amp; origin, !!T&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ByteOffset(Of T) (ByRef origin As T, ByRef target As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr ByteOffset(T % origin, T % target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="origin" Type="T&amp;" RefType="ref" />
        <Parameter Name="target" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-139">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-139">The type of reference.</span>
          </span>
        </typeparam>
        <param name="origin">
          <span data-ttu-id="4cc1b-140">对源的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-140">The reference to origin.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="4cc1b-141">对目标的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-141">The reference to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-142">确定给定引用从源到目标的字节偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-142">Determines the byte offset from origin to target from the given references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-143">从源到目标的字节偏移量，即 <paramref name="target" /> - <paramref name="origin" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-143">Byte offset from origin to target i.e. <paramref name="target" /> - <paramref name="origin" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Copy&lt;T&gt; (void* destination, ref T source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy&lt;T&gt;(void* destination, !!T&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Copy(void* destination, T % source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-144">要复制值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-144">The type of value to copy.</span>
          </span>
        </typeparam>
        <param name="destination">
          <span data-ttu-id="4cc1b-145">要复制到其中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-145">The location to copy to.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="4cc1b-146">对要复制的值的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-146">A reference to the value to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-147">将 <typeparamref name="T" /> 类型的值复制到给定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-147">Copies a value of type <typeparamref name="T" /> to the given location.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Copy&lt;T&gt; (ref T destination, void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy&lt;T&gt;(!!T&amp; destination, void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Copy(T % destination, void* source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="T&amp;" RefType="ref" />
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-148">要复制值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-148">The type of value to copy.</span>
          </span>
        </typeparam>
        <param name="destination">
          <span data-ttu-id="4cc1b-149">要复制到其中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-149">The location to copy to.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="4cc1b-150">指向要复制的值的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-150">A pointer to the value to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-151">将 <typeparamref name="T" /> 类型的值复制到给定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-151">Copies a value of type <typeparamref name="T" /> to the given location.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlock">
      <MemberSignature Language="C#" Value="public static void CopyBlock (ref byte destination, ref byte source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlock(unsigned int8&amp; destination, unsigned int8&amp; source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyBlock (ByRef destination As Byte, ByRef source As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlock(System::Byte % destination, System::Byte % source, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="source" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="4cc1b-152">要复制到其中的目标地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-152">The destination address to copy to.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="4cc1b-153">要从其中进行复制的源地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-153">The source address to copy from.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-154">要复制的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-154">The number of bytes to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-155">将字节从源地址复制到目标地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-155">Copies bytes from the source address to the destination address.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlock">
      <MemberSignature Language="C#" Value="public static void CopyBlock (void* destination, void* source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlock(void* destination, void* source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlock(void* destination, void* source, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="source" Type="System.Void*" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="4cc1b-156">要复制到其中的目标地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-156">The destination address to copy to.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="4cc1b-157">要从其中进行复制的源地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-157">The source address to copy from.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-158">要复制的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-158">The number of bytes to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-159">将字节从源地址复制到目标地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-159">Copies bytes from the source address to the destination address.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void CopyBlockUnaligned (ref byte destination, ref byte source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlockUnaligned(unsigned int8&amp; destination, unsigned int8&amp; source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyBlockUnaligned (ByRef destination As Byte, ByRef source As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlockUnaligned(System::Byte % destination, System::Byte % source, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="source" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="4cc1b-160">要复制到其中的目标地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-160">The destination address to copy to.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="4cc1b-161">要从其中进行复制的源地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-161">The source address to copy from.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-162">要复制的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-162">The number of bytes to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-163">将字节从源地址复制到目标地址，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-163">Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void CopyBlockUnaligned (void* destination, void* source, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBlockUnaligned(void* destination, void* source, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyBlockUnaligned(void* destination, void* source, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="source" Type="System.Void*" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="4cc1b-164">要复制到其中的目标地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-164">The destination address to copy to.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="4cc1b-165">要从其中进行复制的源地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-165">The source address to copy from.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-166">要复制的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-166">The number of bytes to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-167">将字节从源地址复制到目标地址，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-167">Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlock">
      <MemberSignature Language="C#" Value="public static void InitBlock (ref byte startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlock(unsigned int8&amp; startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitBlock (ByRef startAddress As Byte, value As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlock(System::Byte % startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="startAddress">
          <span data-ttu-id="4cc1b-168">要初始化的内存块的起始地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-168">The address of the start of the memory block to initialize.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4cc1b-169">块的初始化值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-169">The value to initialize the block to.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-170">要初始化的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-170">The number of bytes to initialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-171">在给定位置使用给定的初始值初始化内存块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-171">Initializes a block of memory at the given location with a given initial value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlock">
      <MemberSignature Language="C#" Value="public static void InitBlock (void* startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlock(void* startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlock(void* startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Void*" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="startAddress">
          <span data-ttu-id="4cc1b-172">要初始化的内存块的起始地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-172">The address of the start of the memory block to initialize.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4cc1b-173">块的初始化值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-173">The value to initialize the block to.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-174">要初始化的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-174">The number of bytes to initialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-175">在给定位置使用给定的初始值初始化内存块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-175">Initializes a block of memory at the given location with a given initial value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void InitBlockUnaligned (ref byte startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlockUnaligned(unsigned int8&amp; startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitBlockUnaligned (ByRef startAddress As Byte, value As Byte, byteCount As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlockUnaligned(System::Byte % startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="startAddress">
          <span data-ttu-id="4cc1b-176">要初始化的内存块的起始地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-176">The address of the start of the memory block to initialize.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4cc1b-177">块的初始化值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-177">The value to initialize the block to.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-178">要初始化的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-178">The number of bytes to initialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-179">在给定位置使用给定的初始值初始化内存块，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-179">Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitBlockUnaligned">
      <MemberSignature Language="C#" Value="public static void InitBlockUnaligned (void* startAddress, byte value, uint byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitBlockUnaligned(void* startAddress, unsigned int8 value, unsigned int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitBlockUnaligned(void* startAddress, System::Byte value, System::UInt32 byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAddress" Type="System.Void*" />
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="byteCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="startAddress">
          <span data-ttu-id="4cc1b-180">要初始化的内存块的起始地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-180">The address of the start of the memory block to initialize.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4cc1b-181">块的初始化值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-181">The value to initialize the block to.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4cc1b-182">要初始化的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-182">The number of bytes to initialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-183">在给定位置使用给定的初始值初始化内存块，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-183">Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Read&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Read&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Read(void* source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-184">要读取的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-184">The type to read.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-185">要从中读取的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-185">The location to read from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-186">从给定位置读取 <typeparamref name="T" /> 类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-186">Reads a value of type <typeparamref name="T" /> from the given location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-187">从给定位置读取的 <typeparamref name="T" /> 类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-187">An object of type <typeparamref name="T" /> read from the given location.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ReadUnaligned&lt;T&gt; (ref byte source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ReadUnaligned&lt;T&gt;(unsigned int8&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadUnaligned(Of T) (ByRef source As Byte) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T ReadUnaligned(System::Byte % source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-188">要读取的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-188">The type to read.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-189">要从中读取的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-189">The location to read from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-190">从给定位置读取 <typeparamref name="T" /> 类型的值，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-190">Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-191">从给定位置读取的 <typeparamref name="T" /> 类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-191">An object of type <typeparamref name="T" /> read from the given location.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ReadUnaligned&lt;T&gt; (void* source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ReadUnaligned&lt;T&gt;(void* source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T ReadUnaligned(void* source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-192">要读取的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-192">The type to read.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-193">要从中读取的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-193">The location to read from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-194">从给定位置读取 <typeparamref name="T" /> 类型的值，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-194">Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-195">从给定位置读取的 <typeparamref name="T" /> 类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-195">An object of type <typeparamref name="T" /> read from the given location.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-196">要检索其大小对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-196">The type of object whose size is retrieved.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="4cc1b-197">返回给定类型参数的对象的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-197">Returns the size of an object of the given type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-198">
            <typeparamref name="T" /> 类型的对象大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-198">The size of an object of type <typeparamref name="T" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Subtract&lt;T&gt; (ref T source, int elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Subtract&lt;T&gt;(!!T&amp; source, int32 elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract(Of T) (ByRef source As T, elementOffset As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Subtract(T % source, int elementOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-199">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-199">The type of reference.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-200">要从中减去偏移量的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-200">The reference to subtract the offset from.</span>
          </span>
        </param>
        <param name="elementOffset">
          <span data-ttu-id="4cc1b-201">要减去的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-201">The offset to subtract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-202">从给定引用减去元素偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-202">Subtracts an element offset from the given reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-203">新引用，用于反映从指针减去的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-203">A new reference that reflects the subraction of offset from pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Subtract&lt;T&gt; (ref T source, IntPtr elementOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Subtract&lt;T&gt;(!!T&amp; source, native int elementOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract(Of T) (ByRef source As T, elementOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % Subtract(T % source, IntPtr elementOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="elementOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-204">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-204">The type of reference.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-205">要从中减去偏移量的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-205">The reference to subtract the offset from.</span>
          </span>
        </param>
        <param name="elementOffset">
          <span data-ttu-id="4cc1b-206">要减去的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-206">The offset to subtract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-207">从给定引用减去元素偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-207">Subtracts an element offset from the given reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-208">新引用，用于反映从指针减去的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-208">A new reference that reflects the subraction of offset from pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractByteOffset&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SubtractByteOffset&lt;T&gt; (ref T source, IntPtr byteOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SubtractByteOffset&lt;T&gt;(!!T&amp; source, native int byteOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractByteOffset(Of T) (ByRef source As T, byteOffset As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % SubtractByteOffset(T % source, IntPtr byteOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T@</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T&amp;" RefType="ref" />
        <Parameter Name="byteOffset" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-209">引用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-209">The type of reference.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="4cc1b-210">要从中减去偏移量的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-210">The reference to subtract the offset from.</span>
          </span>
        </param>
        <param name="bytesOffset">
          <span data-ttu-id="4cc1b-211">要减去的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-211">The offset to subtract.</span>
          </span>
        </param>
        <param name="byteOffset">To be added.</param>
        <summary>
          <span data-ttu-id="4cc1b-212">从给定引用减去字节偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-212">Subtracts a byte offset from the given reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cc1b-213">新引用，用于反映从指针减去的字节偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-213">A new reference that reflects the subraction of byte offset from pointer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Write&lt;T&gt; (void* destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write&lt;T&gt;(void* destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Write(void* destination, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-214">要写入值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-214">The type of value to write.</span>
          </span>
        </typeparam>
        <param name="destination">
          <span data-ttu-id="4cc1b-215">要写入到其中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-215">The location to write to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4cc1b-216">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-216">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-217">将 <typeparamref name="T" /> 类型的值写入给定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-217">Writes a value of type <typeparamref name="T" /> to the given location.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void WriteUnaligned&lt;T&gt; (ref byte destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUnaligned&lt;T&gt;(unsigned int8&amp; destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteUnaligned(Of T) (ByRef destination As Byte, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void WriteUnaligned(System::Byte % destination, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-218">要写入值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-218">The type of value to write.</span>
          </span>
        </typeparam>
        <param name="destination">
          <span data-ttu-id="4cc1b-219">要写入到其中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-219">The location to write to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4cc1b-220">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-220">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-221">将 <typeparamref name="T" /> 类型的值写入给定位置，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-221">Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteUnaligned&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void WriteUnaligned&lt;T&gt; (void* destination, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteUnaligned&lt;T&gt;(void* destination, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void WriteUnaligned(void* destination, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.Unsafe</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Void*" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4cc1b-222">要写入值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-222">The type of value to write.</span>
          </span>
        </typeparam>
        <param name="destination">
          <span data-ttu-id="4cc1b-223">要写入到其中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-223">The location to write to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4cc1b-224">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-224">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cc1b-225">将 <typeparamref name="T" /> 类型的值写入给定位置，无需假设地址的结构依赖对齐方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cc1b-225">Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>