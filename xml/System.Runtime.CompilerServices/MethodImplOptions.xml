<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MethodImplOptions.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52a1306513d16e7911502bbab52cc392fd3a1e968.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a1306513d16e7911502bbab52cc392fd3a1e968</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>Defines the details of how a method is implemented.</source>
          <target state="translated">定义如何实现方法的详细信息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>This enumeration is used with the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplAttribute&gt;</ph> attribute.</source>
          <target state="translated">此枚举用于<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplAttribute&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>You can specify multiple <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplOptions&gt;</ph> values by using the bitwise OR operator.</source>
          <target state="translated">你可以指定多个<ph id="ph1">&lt;xref:System.Runtime.CompilerServices.MethodImplOptions&gt;</ph>使用按位 OR 运算符的值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances.</source>
          <target state="translated">与已同步标志，锁定的实例上或类型，不建议用于公共类型，因为你自己的以外的代码可以演变公共类型和实例上的锁。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.MethodImplOptions">
          <source>This might cause deadlocks or other synchronization problems.</source>
          <target state="translated">这可能会导致死锁或其他同步问题。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining">
          <source>The method should be inlined if possible.</source>
          <target state="translated">如可能应将该方法进行内联。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.ForwardRef">
          <source>The method is declared, but its implementation is provided elsewhere.</source>
          <target state="translated">已声明该方法，但在其他位置提供实现。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.InternalCall">
          <source>The call is internal, that is, it calls a method that is implemented within the common language runtime.</source>
          <target state="translated">该调用为内部调用，也就是说它调用了在公共语言运行时中实现的方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
          <source>The method cannot be inlined.</source>
          <target state="translated">该方法不能为内联方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
          <source>Inlining is an optimization by which a method call is replaced with the method body.</source>
          <target state="translated">内联是一种优化方式，通过该方式将方法调用替换为方法体。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization">
          <source>The method is not optimized by the just-in-time (JIT) compiler or by native code generation (see <bpt id="p1">[</bpt>Ngen.exe<ept id="p1">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept>) when debugging possible code generation problems.</source>
          <target state="translated">调试可能的代码生成问题时，该方法不由实时 (JIT) 编译器或本机代码生成优化（请参阅 <bpt id="p1">[</bpt>Ngen.exe<ept id="p1">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept>）。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig">
          <source>The method signature is exported exactly as declared.</source>
          <target state="translated">完全按照声明导出方法签名。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Synchronized">
          <source>The method can be executed by only one thread at a time.</source>
          <target state="translated">该方法一次性只能在一个线程上执行。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Synchronized">
          <source>Static methods lock on the type, whereas instance methods lock on the instance.</source>
          <target state="translated">静态方法在类型上锁定，而实例方法在实例上锁定。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Synchronized">
          <source>Only one thread can execute in any of the instance functions, and only one thread can execute in any of a class's static functions.</source>
          <target state="translated">只有一个线程可在任意实例函数中执行，且只有一个线程可在任意类的静态函数中执行。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Runtime.CompilerServices.MethodImplOptions.Unmanaged">
          <source>The method is implemented in unmanaged code.</source>
          <target state="translated">此方法在非托管的代码中实现。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>