<Type Name="IteratorStateMachineAttribute" FullName="System.Runtime.CompilerServices.IteratorStateMachineAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1049cdb80f790f0ba64a3bf059cffc59662e5778" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58714555" /></Metadata><TypeSignature Language="C#" Value="public sealed class IteratorStateMachineAttribute : System.Runtime.CompilerServices.StateMachineAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit IteratorStateMachineAttribute extends System.Runtime.CompilerServices.StateMachineAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IteratorStateMachineAttribute&#xA;Inherits StateMachineAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class IteratorStateMachineAttribute sealed : System::Runtime::CompilerServices::StateMachineAttribute" />
  <TypeSignature Language="F#" Value="type IteratorStateMachineAttribute = class&#xA;    inherit StateMachineAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.CompilerServices.StateMachineAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5e849-101">指示是否使用 <see langword="Iterator" /> 修饰符标记 Visual Basic 中的方法。</span><span class="sxs-lookup"><span data-stu-id="5e849-101">Indicates whether a method in Visual Basic is marked with the <see langword="Iterator" /> modifier.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e849-102">不应将应用`IteratorStateMachine`属性到你的代码中的方法。</span><span class="sxs-lookup"><span data-stu-id="5e849-102">You shouldn't apply the `IteratorStateMachine` attribute to methods in your code.</span></span> <span data-ttu-id="5e849-103">对于已在 Visual Basic 中的方法[迭代器](~/docs/visual-basic/language-reference/modifiers/iterator.md)修饰符，编译器将应用`IteratorStateMachine`它发出的 IL 中的属性。</span><span class="sxs-lookup"><span data-stu-id="5e849-103">For methods in Visual Basic that have the [Iterator](~/docs/visual-basic/language-reference/modifiers/iterator.md) modifier, the compiler will apply the `IteratorStateMachine` attribute in the IL that it emits.</span></span>  
  
 <span data-ttu-id="5e849-104">当某个方法 (*MethodName*) 在 Visual Basic 中具有`Iterator`修饰符，则编译器将发出包含状态机结构的 IL。</span><span class="sxs-lookup"><span data-stu-id="5e849-104">When a method (*MethodName*) in Visual Basic has the `Iterator` modifier, the compiler emits IL that includes a state machine structure.</span></span> <span data-ttu-id="5e849-105">该结构包含在方法中的代码。</span><span class="sxs-lookup"><span data-stu-id="5e849-105">That structure contains the code in the method.</span></span> <span data-ttu-id="5e849-106">IL 还包含一个存根 （stub） 方法 (*MethodName*) 调用到状态机。</span><span class="sxs-lookup"><span data-stu-id="5e849-106">That IL also contains a stub method (*MethodName*) that calls into the state machine.</span></span> <span data-ttu-id="5e849-107">编译器将添加`IteratorStateMachine`属性存根 （stub） 方法，以便工具可以确定相应的状态机。</span><span class="sxs-lookup"><span data-stu-id="5e849-107">The compiler adds the `IteratorStateMachine` attribute to the stub method so that tools can identify the corresponding state machine.</span></span> <span data-ttu-id="5e849-108">发出 IL 的详细信息可能会更改在将来的版本的编译器。</span><span class="sxs-lookup"><span data-stu-id="5e849-108">Details of the emitted IL might change in future releases of the compilers.</span></span>  
  
 <span data-ttu-id="5e849-109">迭代器方法通过对集合执行自定义迭代`Yield`(Visual Basic) 语句来一次返回一个元素。</span><span class="sxs-lookup"><span data-stu-id="5e849-109">An iterator method performs a custom iteration over a collection by using the `Yield` (Visual Basic) statement to return each element one at a time.</span></span> <span data-ttu-id="5e849-110">有关更多信息，请参见 [迭代器](https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7)。</span><span class="sxs-lookup"><span data-stu-id="5e849-110">For more information, see [Iterators](https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e849-111">不能使用`IteratorStateMachineAttribute`测试是否一种方法是在 C# 迭代器方法。</span><span class="sxs-lookup"><span data-stu-id="5e849-111">You can't use `IteratorStateMachineAttribute` to test whether a method is an iterator method in C#.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e849-112">下面的示例演示如何确定方法是否为迭代器方法。</span><span class="sxs-lookup"><span data-stu-id="5e849-112">The following example shows how to determine whether a method is an iterator method.</span></span> <span data-ttu-id="5e849-113">在示例中，`IsIteratorMethod`将执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="5e849-113">In the example, `IsIteratorMethod` performs the following steps:</span></span>  
  
-   <span data-ttu-id="5e849-114">获取<xref:System.Reflection.MethodInfo>对象使用的方法名称<xref:System.Type.GetMethod%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5e849-114">Obtains a <xref:System.Reflection.MethodInfo> object for the method name by using <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="5e849-115">获取<xref:System.Type>通过使用属性的对象[GetType 运算符](~/docs/visual-basic/language-reference/operators/gettype-operator.md)。</span><span class="sxs-lookup"><span data-stu-id="5e849-115">Obtains a <xref:System.Type> object for the attribute by using [GetType Operator](~/docs/visual-basic/language-reference/operators/gettype-operator.md).</span></span>  
  
-   <span data-ttu-id="5e849-116">使用获取的方法和属性类型的属性对象`MethodInfo.GetCustomAttribute`。</span><span class="sxs-lookup"><span data-stu-id="5e849-116">Obtains an attribute object for the method and attribute type by using `MethodInfo.GetCustomAttribute`.</span></span> <span data-ttu-id="5e849-117">如果`GetCustomAttribute`返回`Nothing`(Visual Basic 中)，该方法不包含该属性。</span><span class="sxs-lookup"><span data-stu-id="5e849-117">If `GetCustomAttribute` returns `Nothing` (Visual Basic), the method doesn't contain the attribute.</span></span>  
  
 [!code-vb[Runtime.CompilerServices.AsyncStateMachineAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/runtime.compilerservices.asyncstatemachineattribute/vb/module2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
    <altmember cref="P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IteratorStateMachineAttribute (Type stateMachineType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type stateMachineType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateMachineType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IteratorStateMachineAttribute(Type ^ stateMachineType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.IteratorStateMachineAttribute : Type -&gt; System.Runtime.CompilerServices.IteratorStateMachineAttribute" Usage="new System.Runtime.CompilerServices.IteratorStateMachineAttribute stateMachineType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateMachineType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="stateMachineType"><span data-ttu-id="5e849-118">用于实现状态机方法的基础状态机类型的类型对象。</span><span class="sxs-lookup"><span data-stu-id="5e849-118">The type object for the underlying state machine type that's used to implement a state machine method.</span></span></param>
        <summary><span data-ttu-id="5e849-119">初始化 <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5e849-119">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>