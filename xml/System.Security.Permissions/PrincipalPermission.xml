<Type Name="PrincipalPermission" FullName="System.Security.Permissions.PrincipalPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="479046d83ebbfb0ca6fd456a196d0a6400b501f8" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53750096" /></Metadata><TypeSignature Language="C#" Value="public sealed class PrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PrincipalPermission = class&#xA;    interface IPermission&#xA;    interface IUnrestrictedPermission&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f8914-101">允许使用为声明性和命令性安全操作定义的语言构造对活动主体执行检查（请参阅 <see cref="T:System.Security.Principal.IPrincipal" />）。</span><span class="sxs-lookup"><span data-stu-id="f8914-101">Allows checks against the active principal (see <see cref="T:System.Security.Principal.IPrincipal" />) using the language constructs defined for both declarative and imperative security actions.</span></span> <span data-ttu-id="f8914-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="f8914-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-103">通过将标识信息 （用户名和角色） 传递给构造函数中，<xref:System.Security.Permissions.PrincipalPermission>可用于要求活动主体的标识匹配此信息。</span><span class="sxs-lookup"><span data-stu-id="f8914-103">By passing identity information (user name and role) to the constructor, <xref:System.Security.Permissions.PrincipalPermission> can be used to demand that the identity of the active principal matches this information.</span></span>  
  
 <span data-ttu-id="f8914-104">若要匹配活动<xref:System.Security.Principal.IPrincipal>和关联<xref:System.Security.Principal.IIdentity>，必须匹配指定的标识和角色。</span><span class="sxs-lookup"><span data-stu-id="f8914-104">To match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>, both the specified identity and role must match.</span></span> <span data-ttu-id="f8914-105">如果`null`标识字符串，它被解释为匹配任何标识的请求。</span><span class="sxs-lookup"><span data-stu-id="f8914-105">If `null` identity string is used, it is interpreted as a request to match any identity.</span></span> <span data-ttu-id="f8914-106">使用`null`角色字符串将匹配任何角色。</span><span class="sxs-lookup"><span data-stu-id="f8914-106">Use of `null` role string will match any role.</span></span> <span data-ttu-id="f8914-107">通过暗示、 传递`null`参数`name`或`role`到<xref:System.Security.Permissions.PrincipalPermission>将匹配的标识和角色中任何<xref:System.Security.Principal.IPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="f8914-107">By implication, passing `null` parameter for `name` or `role` to <xref:System.Security.Permissions.PrincipalPermission> will match the identity and roles in any <xref:System.Security.Principal.IPrincipal>.</span></span> <span data-ttu-id="f8914-108">还有可能构造<xref:System.Security.Permissions.PrincipalPermission>，它仅确定是否<xref:System.Security.Principal.IIdentity>表示已经过身份验证或未经身份验证实体。</span><span class="sxs-lookup"><span data-stu-id="f8914-108">It is also possible to construct a <xref:System.Security.Permissions.PrincipalPermission> that only determines whether the <xref:System.Security.Principal.IIdentity> represents an authenticated or unauthenticated entity.</span></span> <span data-ttu-id="f8914-109">在这种情况下，`name`和`role`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="f8914-109">In this case, `name` and `role` are ignored.</span></span>  
  
 <span data-ttu-id="f8914-110">与大多数其他权限，不同<xref:System.Security.Permissions.PrincipalPermission>不会扩展<xref:System.Security.CodeAccessPermission>。</span><span class="sxs-lookup"><span data-stu-id="f8914-110">Unlike most other permissions, <xref:System.Security.Permissions.PrincipalPermission> does not extend <xref:System.Security.CodeAccessPermission>.</span></span> <span data-ttu-id="f8914-111">它，但是，实现<xref:System.Security.IPermission>接口。</span><span class="sxs-lookup"><span data-stu-id="f8914-111">It does, however, implement the <xref:System.Security.IPermission> interface.</span></span> <span data-ttu-id="f8914-112">这是因为<xref:System.Security.Permissions.PrincipalPermission>不是代码访问权限; 也就是说，它未被授予基于执行的程序集标识。</span><span class="sxs-lookup"><span data-stu-id="f8914-112">This is because <xref:System.Security.Permissions.PrincipalPermission> is not a code access permission; that is, it is not granted based on the identity of the executing assembly.</span></span> <span data-ttu-id="f8914-113">相反，它允许代码执行的操作 (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>， <xref:System.Security.Permissions.PrincipalPermission.Union%2A>， <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>，依此类推) 的代码访问权限和代码标识权限执行这些操作时针对当前用户标识的方式一致的方式。</span><span class="sxs-lookup"><span data-stu-id="f8914-113">Instead, it allows code to perform actions (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>, and so on) against the current user identity in a manner consistent with the way those actions are performed for code access and code identity permissions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8914-114">在要求主体权限之前它是必须将当前应用程序域的主体的策略设置为枚举值<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="f8914-114">Prior to a demand for principal permission it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="f8914-115">默认情况下，主体的策略设置为<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="f8914-115">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="f8914-116">如果你未设置为主体的策略<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>，对主体的权限的请求将失败。</span><span class="sxs-lookup"><span data-stu-id="f8914-116">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="f8914-117">在要求主体的权限之前，应执行以下代码：</span><span class="sxs-lookup"><span data-stu-id="f8914-117">The following code should be executed before the principal permission is demanded:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
   
  
## Examples  
 <span data-ttu-id="f8914-118">下面的示例要求活动主体是管理员。</span><span class="sxs-lookup"><span data-stu-id="f8914-118">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="f8914-119">`name`参数是`null`，这样只要用户是管理员才能满足该要求。</span><span class="sxs-lookup"><span data-stu-id="f8914-119">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8914-120">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="f8914-120">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8914-121">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="f8914-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8914-122">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="f8914-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8914-123">要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。</span><span class="sxs-lookup"><span data-stu-id="f8914-123">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="f8914-124">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="f8914-124">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8914-125">初始化 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f8914-125">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="f8914-126"><see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f8914-126">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="f8914-127">使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f8914-127">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-128">`None` 仅的未经身份验证的主体相匹配 (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>是空字符串 ("")、 no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>，<xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A>是`false`)。</span><span class="sxs-lookup"><span data-stu-id="f8914-128">`None` matches only the unauthenticated principal (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the empty string (""), no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> is `false`).</span></span> <span data-ttu-id="f8914-129">`Unrestricted` 匹配的所有主体 (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>是`null`，<xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>是`null`)。</span><span class="sxs-lookup"><span data-stu-id="f8914-129">`Unrestricted` matches all principals (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is `null`, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> is `null`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8914-130">此构造函数包含为了与其他权限的设计保持一致，但并不十分有用的做法。</span><span class="sxs-lookup"><span data-stu-id="f8914-130">This constructor is included for consistency with the design of other permissions, but is not useful in practice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8914-131"><paramref name="state" /> 参数不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-131">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f8914-132"><see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="f8914-132">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="f8914-133"><see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的角色（例如，管理员）。</span><span class="sxs-lookup"><span data-stu-id="f8914-133">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <summary><span data-ttu-id="f8914-134">为指定的 <paramref name="name" /> 和 <paramref name="role" /> 初始化 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f8914-134">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" /> and <paramref name="role" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-135">这两个`name`参数和`role`参数必须与此权限，以匹配活动的匹配<xref:System.Security.Principal.IPrincipal>和关联<xref:System.Security.Principal.IIdentity>。</span><span class="sxs-lookup"><span data-stu-id="f8914-135">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span> <span data-ttu-id="f8914-136">设置`name`到`null`若要检查的角色中的任何用户。</span><span class="sxs-lookup"><span data-stu-id="f8914-136">Set `name` to `null` to check for any user in a role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8914-137">下面的示例要求活动主体是管理员。</span><span class="sxs-lookup"><span data-stu-id="f8914-137">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="f8914-138">`name`参数是`null`，这样只要用户是管理员才能满足该要求。</span><span class="sxs-lookup"><span data-stu-id="f8914-138">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
 <span data-ttu-id="f8914-139">**请注意**在 Windows Vista，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="f8914-139">**Note** In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8914-140">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="f8914-140">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8914-141">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="f8914-141">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8914-142">要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。</span><span class="sxs-lookup"><span data-stu-id="f8914-142">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="f8914-143">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="f8914-143">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string * bool -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f8914-144"><see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="f8914-144">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="f8914-145"><see cref="T:System.Security.Principal.IPrincipal" /> 对象的用户的角色（例如，管理员）。</span><span class="sxs-lookup"><span data-stu-id="f8914-145">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <param name="isAuthenticated"><span data-ttu-id="f8914-146"><see langword="true" /> 表示用户已经过身份验证；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-146"><see langword="true" /> to signify that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f8914-147">为指定的 <paramref name="name" />、<paramref name="role" /> 和身份验证状态初始化 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f8914-147">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" />, <paramref name="role" />, and authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-148">这两个`name`参数和`role`参数必须与此权限，以匹配活动的匹配<xref:System.Security.Principal.IPrincipal>和关联<xref:System.Security.Principal.IIdentity>。</span><span class="sxs-lookup"><span data-stu-id="f8914-148">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="principalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8914-149">创建并返回当前权限的相同副本。</span><span class="sxs-lookup"><span data-stu-id="f8914-149">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="f8914-150">当前权限的副本。</span><span class="sxs-lookup"><span data-stu-id="f8914-150">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-151">权限的副本与原始权限表示相同的主体和标识。</span><span class="sxs-lookup"><span data-stu-id="f8914-151">A copy of the permission represents the same principal and identity as the original permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="principalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8914-152">在运行时确定当前主体是否与当前权限指定的主体相匹配。</span><span class="sxs-lookup"><span data-stu-id="f8914-152">Determines at run time whether the current principal matches the principal specified by the current permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-153">如果没有<xref:System.Security.SecurityException>引发，则<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>成功。</span><span class="sxs-lookup"><span data-stu-id="f8914-153">If no <xref:System.Security.SecurityException> is raised, <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> succeeds.</span></span>  
  
 <span data-ttu-id="f8914-154">此方法针对附加到调用线程的主体的作用。</span><span class="sxs-lookup"><span data-stu-id="f8914-154">This method acts against the principal attached to the calling thread.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8914-155">在调用之前<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>方法中，有必要将当前应用程序域的主体的策略设置为枚举值<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="f8914-155">Prior to calling the <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> method, it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="f8914-156">默认情况下的主体的策略设置为<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="f8914-156">By default the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="f8914-157">如果你未设置为主体的策略<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>，对主体的权限的请求将失败。</span><span class="sxs-lookup"><span data-stu-id="f8914-157">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="f8914-158">主体的权限的需求发生之前，应执行以下代码：</span><span class="sxs-lookup"><span data-stu-id="f8914-158">The following code should be executed before the demand for principal permission occurs:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f8914-159">当前主体未通过当前权限指定的主体的安全检查。</span><span class="sxs-lookup"><span data-stu-id="f8914-159">The current principal does not pass the security check for the principal specified by the current permission.</span></span>  
  
<span data-ttu-id="f8914-160">- 或 -</span><span class="sxs-lookup"><span data-stu-id="f8914-160">-or-</span></span> 
<span data-ttu-id="f8914-161">当前的 <see cref="T:System.Security.Principal.IPrincipal" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-161">The current <see cref="T:System.Security.Principal.IPrincipal" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" FrameworkAlternate="netframework-4.5;netcore-2.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.0;netcore-2.1;netcore-2.2" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f8914-162">要与当前的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 比较的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f8914-162">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></param>
        <param name="obj"><span data-ttu-id="f8914-163">要与当前的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 比较的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f8914-163">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="f8914-164">确定指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象是否等于当前的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-164">Determines whether the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="f8914-165">如果指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 等于当前的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-165"><see langword="true" /> if the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-166">有关详情，请参阅<xref:System.Object.Equals%2A>。</span><span class="sxs-lookup"><span data-stu-id="f8914-166">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="principalPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="f8914-167">用于重新构造权限的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="f8914-167">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="f8914-168">从 XML 编码重新构造具有指定状态的权限。</span><span class="sxs-lookup"><span data-stu-id="f8914-168">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8914-169"><paramref name="elem" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-169">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8914-170"><paramref name="elem" /> 参数不是有效的权限元素。</span><span class="sxs-lookup"><span data-stu-id="f8914-170">The <paramref name="elem" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="f8914-171">- 或 -</span><span class="sxs-lookup"><span data-stu-id="f8914-171">-or-</span></span> 
<span data-ttu-id="f8914-172"><paramref name="elem" /> 参数的版本号无效。</span><span class="sxs-lookup"><span data-stu-id="f8914-172">The <paramref name="elem" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="principalPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8914-173">获取 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象的哈希代码，此代码适合在哈希算法和数据结构（例如哈希表）中使用。</span><span class="sxs-lookup"><span data-stu-id="f8914-173">Gets a hash code for the <see cref="T:System.Security.Permissions.PrincipalPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="f8914-174">当前 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="f8914-174">A hash code for the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-175">相同的权限的两个实例的哈希代码可能会有所不同，因此不应使用的哈希代码来比较两个<xref:System.Security.Permissions.PrincipalPermission>对象。</span><span class="sxs-lookup"><span data-stu-id="f8914-175">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f8914-176">要与当前权限相交的权限。</span><span class="sxs-lookup"><span data-stu-id="f8914-176">A permission to intersect with the current permission.</span></span> <span data-ttu-id="f8914-177">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="f8914-177">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="f8914-178">创建并返回一个权限，该权限是当前权限与指定权限的交集。</span><span class="sxs-lookup"><span data-stu-id="f8914-178">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="f8914-179">表示当前权限和指定权限的交集的一个新权限。</span><span class="sxs-lookup"><span data-stu-id="f8914-179">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="f8914-180">如果交集为空，则此新权限将为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-180">This new permission will be <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-181">因为两个用户永远不相交，此方法不是适用于<xref:System.Security.Permissions.PrincipalPermission>。</span><span class="sxs-lookup"><span data-stu-id="f8914-181">Because two users never intersect, this method is not useful for <xref:System.Security.Permissions.PrincipalPermission>.</span></span> <span data-ttu-id="f8914-182">例如，应用于对象的</span><span class="sxs-lookup"><span data-stu-id="f8914-182">For example,</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#1)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#1)]  
  
 <span data-ttu-id="f8914-183">等效于</span><span class="sxs-lookup"><span data-stu-id="f8914-183">is equivalent to</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#2)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#2)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#2)]  
  
 <span data-ttu-id="f8914-184">因为 Bob 和路易，同时可以表示没有标识。</span><span class="sxs-lookup"><span data-stu-id="f8914-184">because no identity can simultaneously represent both Bob and Louise.</span></span> <span data-ttu-id="f8914-185">实际上，`pp1.Demand()`当未经身份验证的主体才会成功 (具有名称等于空字符串 ("")) 允许以充当管理员角色。</span><span class="sxs-lookup"><span data-stu-id="f8914-185">In effect, `pp1.Demand()` only succeeds if an unauthenticated principal (with name equal to the empty string ("")) is allowed to act in the Administrator role.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8914-186"><paramref name="target" /> 参数不为 <see langword="null" />，并且是与当前权限不属于同一类的实例。</span><span class="sxs-lookup"><span data-stu-id="f8914-186">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="principalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f8914-187">将要测试子集关系的权限。</span><span class="sxs-lookup"><span data-stu-id="f8914-187">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="f8914-188">此权限必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="f8914-188">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="f8914-189">确定当前权限是否为指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="f8914-189">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="f8914-190">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-190"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-191">如果当前权限对于成功的所有要求也成功都完成的指定权限，则当前权限是指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="f8914-191">The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8914-192">下面的示例定义的实例<xref:System.Security.Permissions.PrincipalPermission>与三个不同的用户相对应。</span><span class="sxs-lookup"><span data-stu-id="f8914-192">The following example defines instances of <xref:System.Security.Permissions.PrincipalPermission> corresponding to three distinct users.</span></span> <span data-ttu-id="f8914-193">两个附加实例都将创建为用户组。</span><span class="sxs-lookup"><span data-stu-id="f8914-193">Two additional instances are then created as groups of users.</span></span> <span data-ttu-id="f8914-194">`pp1` 表示 Bob 和路易，`pp2`表示 Bob、 路易和 Greg。</span><span class="sxs-lookup"><span data-stu-id="f8914-194">`pp1` represents Bob and Louise, `pp2` represents Bob, Louise, and Greg.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f8914-195">与前面的声明`pp1.IsSubsetOf(pp2)`将返回`true`，并`pp2.IsSubsetOf(pp1)`返回`false`。</span><span class="sxs-lookup"><span data-stu-id="f8914-195">With the preceding declarations, `pp1.IsSubsetOf(pp2)` returns `true`, and `pp2.IsSubsetOf(pp1)` returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8914-196"><paramref name="target" /> 参数是一个对象，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="f8914-196">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="principalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8914-197">返回一个值，该值指示当前权限是否不受限制。</span><span class="sxs-lookup"><span data-stu-id="f8914-197">Returns a value indicating whether the current permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="f8914-198">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8914-198"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-199">不受限制<xref:System.Security.Permissions.PrincipalPermission>匹配任何主体。</span><span class="sxs-lookup"><span data-stu-id="f8914-199">An unrestricted <xref:System.Security.Permissions.PrincipalPermission> matches any principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="principalPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8914-200">创建并返回表示当前权限的字符串。</span><span class="sxs-lookup"><span data-stu-id="f8914-200">Creates and returns a string representing the current permission.</span></span></summary>
        <returns><span data-ttu-id="f8914-201">当前权限的表示形式。</span><span class="sxs-lookup"><span data-stu-id="f8914-201">A representation of the current permission.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="principalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8914-202">创建权限及其当前状态的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="f8914-202">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="f8914-203">权限的 XML 编码，包括任何状态信息。</span><span class="sxs-lookup"><span data-stu-id="f8914-203">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="f8914-204">与当前权限合并的权限。</span><span class="sxs-lookup"><span data-stu-id="f8914-204">A permission to combine with the current permission.</span></span> <span data-ttu-id="f8914-205">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="f8914-205">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="f8914-206">创建一个权限，该权限是当前权限与指定权限的并集。</span><span class="sxs-lookup"><span data-stu-id="f8914-206">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="f8914-207">表示同时兼具当前权限和指定权限的新权限。</span><span class="sxs-lookup"><span data-stu-id="f8914-207">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8914-208"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> 创建一个权限，表示一组给定的个人的条件<xref:System.Security.Permissions.PrincipalPermission>对象。</span><span class="sxs-lookup"><span data-stu-id="f8914-208"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> creates a permission representing the criteria of a given set of individual <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span> <span data-ttu-id="f8914-209">它可用于简洁地表示要测试的条件集。</span><span class="sxs-lookup"><span data-stu-id="f8914-209">It is useful for compactly representing a set of conditions to test.</span></span> <span data-ttu-id="f8914-210">例如，使用声明</span><span class="sxs-lookup"><span data-stu-id="f8914-210">For example, with the declarations</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#3)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#3)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#3)]  
  
 <span data-ttu-id="f8914-211">`(ppBob.Union(ppLouise)).Demand()` 如果当前主体表示 Bob 中管理员角色的管理员或路易角色将会成功。</span><span class="sxs-lookup"><span data-stu-id="f8914-211">`(ppBob.Union(ppLouise)).Demand()` will succeed if the current principal represents Bob in the role of Administrator or Louise in the role of Administrator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8914-212"><paramref name="other" /> 参数是一个对象，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="f8914-212">The <paramref name="other" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>