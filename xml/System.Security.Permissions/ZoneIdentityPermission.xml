<Type Name="ZoneIdentityPermission" FullName="System.Security.Permissions.ZoneIdentityPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="704c17d910973e6a5b766e6ee226ad24a0e1ccb8" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49157983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ZoneIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ZoneIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ZoneIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZoneIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type ZoneIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为代码的来源区域定义标识权限。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此权限可以确定调用代码是否来自某特定区域。 区域的 Microsoft Internet Explorer 选项，根据配置，从 URL 映射由 Internet Explorer 的 IInternetSecurityManager 和相关的 Api。 仅将确切的区域匹配项定义的权限;URL 只能属于一个区域。  
  
-   本地 intranet 区域： 本地 intranet 区域用于位于公司的 intranet 上的内容。 因为服务器是公司的防火墙内，在 intranet 上的内容被分配更高级别的信任。  
  
-   受信任的站点区域： 受信任的站点区域用于位于被视为更可信或更高信度比在 Internet 上的其他站点的网站上的内容。 用户可以使用此区域分配给特定的 Internet 站点的更高级别的信任。 这些受信任的网站的 URL 需要由用户映射到该区域中。 默认情况下，受信任的站点区域中的站点将接收比 Internet 区域中没有更高的信任关系。 用户或公司需要更改它包含要提供更高级别的信任如果用户想站点授予给该区域的信任级别。  
  
-   Internet 区域： Internet 区域用于 Internet 上不属于另一个区域的 Web 站点。 默认设置允许从这些站点仅最小访问下载到用户的计算机上的资源的代码。 未映射到其他区域自动的网站归入此区域。  
  
-   受限的站点区域： 受限站点区域用于包含的内容可能会导致，或可能具有以前引起的问题时下载的网站。 此区域可用于防止从用户的计算机上运行这些站点下载的代码。 这些不受信任的网站的 URL 需要由用户映射到该区域中。  
  
-   本地计算机区域： 本地计算机区域是一个隐式区域，用于在用户计算机存在的内容。 找到用户的计算机上，除了由 Internet Explorer 缓存在本地系统上的内容的内容被视为具有极高的信任级别。  
  
> [!IMPORTANT]
>  从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，不使用标识权限。  
>   
>  在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，即使调用程序集是完全受信任。 也就是说，尽管调用程序集具有完全信任，但如果程序集不符合要求的条件故障的标识权限的需求。 从.NET Framework 2.0 版开始，标识权限的要求是如果调用程序集具有完全信任关系无效。 这可确保所有权限，消除标识权限的处理方式的一致性。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Zone" />
    <altmember cref="T:System.Security.Policy.ZoneMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZoneIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ZoneIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.ZoneIdentityPermission" Usage="new System.Security.Permissions.ZoneIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
        <summary>使用指定的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 或者创建一个完全受限制 (`None`) 或`Unrestricted`权限。  
  
> [!NOTE]
>  在.NET framework 1.0 和 1.1 版中，标识的权限不能具有<xref:System.Security.Permissions.PermissionState.Unrestricted>权限状态值。 从.NET Framework 2.0 版开始，标识权限可以具有任何权限状态值。 这意味着在 2.0 及更高版本中，标识权限具有相同的行为与实现<xref:System.Security.Permissions.IUnrestrictedPermission>接口。 即，请求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。  
  
 在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，即使调用程序集是完全受信任。 也就是说，尽管调用程序集具有完全信任，但如果程序集不符合要求的条件故障的标识权限的需求。 从.NET Framework 2.0 版开始，标识权限的要求是如果调用程序集具有完全信任关系无效。 这可确保所有权限，消除标识权限的处理方式的一致性。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Security.Permissions.ZoneIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType>构造函数。  
  
 [!code-csharp[System.Security.Permissions.ZoneIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/CS/zoneidentity.cs#7)]
 [!code-vb[System.Security.Permissions.ZoneIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/VB/zoneidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZoneIdentityPermission (System.Security.SecurityZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.SecurityZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (zone As SecurityZone)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZoneIdentityPermission(System::Security::SecurityZone zone);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ZoneIdentityPermission : System.Security.SecurityZone -&gt; System.Security.Permissions.ZoneIdentityPermission" Usage="new System.Security.Permissions.ZoneIdentityPermission zone" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="zone" Type="System.Security.SecurityZone" />
      </Parameters>
      <Docs>
        <param name="zone">区域标识符。</param>
        <summary>初始化 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 类的新实例，以表示指定的区域标识。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用<xref:System.Security.Permissions.ZoneIdentityPermission.%23ctor%28System.Security.SecurityZone%29?displayProperty=nameWithType>构造函数。  
  
 [!code-csharp[System.Security.Permissions.ZoneIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/CS/zoneidentity.cs#8)]
 [!code-vb[System.Security.Permissions.ZoneIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ZoneIdentityPermission/VB/zoneidentity.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="zoneIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回当前权限的相同副本。</summary>
        <returns>当前权限的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 权限的副本与原始权限资源表示相同的访问权限。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="zoneIdentityPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">用于重新构造权限的 XML 编码。</param>
        <summary>从 XML 编码重新构造具有指定状态的权限。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="esd" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="esd" /> 参数不是有效的权限元素。  
  
或 
<paramref name="esd" /> 参数的版本号无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="zoneIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
        <summary>创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
        <returns>表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个权限的交集是描述两者共同描述的操作组的权限。 只有传递两个原始权限的请求将通过该交集。  
  
 两个相同的交集<xref:System.Security.Permissions.ZoneIdentityPermission>对象是相同的权限。 任何其他组合会导致的权限，则`null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="zoneIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
        <summary>确定当前权限是否为指定权限的子集。</summary>
        <returns>如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当前权限是指定权限的子集，这两个权限是否相等或如果当前权限表示<xref:System.Security.SecurityZone.NoZone>安全区域。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> 参数不是 <see langword="null" />，此权限不表示 <see cref="F:System.Security.SecurityZone.NoZone" /> 安全区域，且指定的权限不等于当前的权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityZone">
      <MemberSignature Language="C#" Value="public System.Security.SecurityZone SecurityZone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityZone SecurityZone" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityZone As SecurityZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecurityZone SecurityZone { System::Security::SecurityZone get(); void set(System::Security::SecurityZone value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityZone : System.Security.SecurityZone with get, set" Usage="System.Security.Permissions.ZoneIdentityPermission.SecurityZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由当前 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 表示的区域。</summary>
        <value>
          <see cref="T:System.Security.SecurityZone" /> 值之一。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">参数值不是有效的 <see cref="T:System.Security.SecurityZone" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="zoneIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建权限及其当前状态的 XML 编码。</summary>
        <returns>权限的 XML 编码，包括任何状态信息。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="zoneIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
        <summary>创建一个权限，该权限是当前权限与指定权限的并集。</summary>
        <returns>表示同时兼具当前权限和指定权限的新权限。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对的调用结果<xref:System.Security.Permissions.ZoneIdentityPermission.Union%2A>是当前权限和指定的权限表示表示的安全区域的权限。 任何请求都会通过任一权限传递其联合。 两个相同的并集<xref:System.Security.Permissions.ZoneIdentityPermission>对象是相同的权限。 Null 权限的并集和一个<xref:System.Security.Permissions.ZoneIdentityPermission>权限是不为 null 的权限。  
  
 请注意，<xref:System.Security.Permissions.ZoneIdentityPermission>对象，表示<xref:System.Security.SecurityZone.NoZone>视为 null 权限并作为一种特殊情况处理安全区域。 联合<xref:System.Security.Permissions.ZoneIdentityPermission>对象，表示<xref:System.Security.SecurityZone.NoZone>安全区域和 null 权限为 null。 两个不同的区域标识权限的并集将导致<xref:System.ArgumentException>异常时的两个权限都不表示引发<xref:System.Security.SecurityZone.NoZone>安全区域。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
或 
两个权限不相等，并且当前权限不表示 <see cref="F:System.Security.SecurityZone.NoZone" /> 安全区域。</exception>
      </Docs>
    </Member>
  </Members>
</Type>