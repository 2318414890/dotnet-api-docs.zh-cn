<Type Name="ReflectionPermissionFlag" FullName="System.Security.Permissions.ReflectionPermissionFlag">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ea8a0435690e232ce077bff445bd216d32b3a29" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498421" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ReflectionPermissionFlag" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReflectionPermissionFlag extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermissionFlag" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReflectionPermissionFlag" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReflectionPermissionFlag" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="da59e-101">指定 <see cref="N:System.Reflection" /> 和 <see cref="N:System.Reflection.Emit" /> 命名空间的允许用法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da59e-101">Specifies the permitted use of the <see cref="N:System.Reflection" /> and <see cref="N:System.Reflection.Emit" /> namespaces.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da59e-102">此枚举由<xref:System.Security.Permissions.ReflectionPermission>和<xref:System.Security.Permissions.ReflectionPermissionAttribute>类。</span><span class="sxs-lookup"><span data-stu-id="da59e-102">This enumeration is used by the <xref:System.Security.Permissions.ReflectionPermission> and <xref:System.Security.Permissions.ReflectionPermissionAttribute> classes.</span></span> <span data-ttu-id="da59e-103">如果没有<xref:System.Security.Permissions.ReflectionPermission>授予，反射允许所有类型和成员，但都允许仅对可见类型和成员的调用操作。</span><span class="sxs-lookup"><span data-stu-id="da59e-103">If no <xref:System.Security.Permissions.ReflectionPermission> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</span></span> <span data-ttu-id="da59e-104">有关详细信息，请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。</span><span class="sxs-lookup"><span data-stu-id="da59e-104">For more information, see [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="da59e-105">因为<xref:System.Security.Permissions.ReflectionPermission>可以提供访问私有类的成员，我们建议你授予<xref:System.Security.Permissions.ReflectionPermission>Internet 代码只能与 RestrictedMemberAccess 标志，而不使用任何其他标志。</span><span class="sxs-lookup"><span data-stu-id="da59e-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to private class members, we recommend that you grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.</span></span>  
  
 <span data-ttu-id="da59e-106">RestrictedMemberAccess 标志在中引入[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="da59e-106">The RestrictedMemberAccess flag is introduced in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span></span> <span data-ttu-id="da59e-107">若要使用此标志，你的应用程序应面向[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]或更高版本。</span><span class="sxs-lookup"><span data-stu-id="da59e-107">To use this flag, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="da59e-108">AllFlags 不包括 RestrictedMemberAccess 标志。</span><span class="sxs-lookup"><span data-stu-id="da59e-108">AllFlags does not include the RestrictedMemberAccess flag.</span></span> <span data-ttu-id="da59e-109">若要获取此枚举中包括所有标志掩码，你必须使用带有 RestrictedMemberAccess AllFlags 的组合。</span><span class="sxs-lookup"><span data-stu-id="da59e-109">To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.</span></span>  
  
 <span data-ttu-id="da59e-110">从开始[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]，ReflectionEmit 标志不再需要发出的代码，除非发出调试符号。</span><span class="sxs-lookup"><span data-stu-id="da59e-110">Starting with the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted.</span></span> <span data-ttu-id="da59e-111">若要使用此功能，你的应用程序应面向[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]或更高版本。</span><span class="sxs-lookup"><span data-stu-id="da59e-111">To use this feature, your application should target the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] or later.</span></span>  
  
 <span data-ttu-id="da59e-112">从开始[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]，TypeInformation 标志不再需要反映非公共类型和成员; 标志具有已标记为已过时。</span><span class="sxs-lookup"><span data-stu-id="da59e-112">Starting with the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da59e-113">下面的示例演示如何使用<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess>枚举初始化的新实例<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess>表示有权执行受限的成员访问权限的类。</span><span class="sxs-lookup"><span data-stu-id="da59e-113">The following example shows how to use the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> class that represents the right to perform restricted member access.</span></span> <span data-ttu-id="da59e-114">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags>类。</span><span class="sxs-lookup"><span data-stu-id="da59e-114">This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags> class.</span></span>  
  
 <span data-ttu-id="da59e-115">有关演示如何使用 RestrictedMemberAccess 标志具有 Internet 的代码示例，请参阅[演练： 在部分信任方案中发出代码](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)。</span><span class="sxs-lookup"><span data-stu-id="da59e-115">For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="AllFlags">
      <MemberSignature Language="C#" Value="AllFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag AllFlags = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />
      <MemberSignature Language="VB.NET" Value="AllFlags" />
      <MemberSignature Language="C++ CLI" Value="AllFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="da59e-116">对 <see langword="TypeInformation" />、<see langword="MemberAccess" /> 和 <see langword="ReflectionEmit" /> 进行了设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-116">
              <see langword="TypeInformation" /> , <see langword="MemberAccess" />, and <see langword="ReflectionEmit" /> are set.</span>
          </span>
          <span data-ttu-id="da59e-117">
            <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> 不包括 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-117">
              <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> does not include <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MemberAccess">
      <MemberSignature Language="C#" Value="MemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag MemberAccess = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />
      <MemberSignature Language="VB.NET" Value="MemberAccess" />
      <MemberSignature Language="C++ CLI" Value="MemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="da59e-118">无论授予集是什么，都允许在所有成员上进行调用操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-118">Invocation operations on all members are allowed, regardless of grant set.</span>
          </span>
          <span data-ttu-id="da59e-119">如果未设置此标志，则只允许在可见成员上进行调用操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-119">If this flag is not set, invocation operations are allowed only on visible members.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NoFlags">
      <MemberSignature Language="C#" Value="NoFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag NoFlags = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />
      <MemberSignature Language="VB.NET" Value="NoFlags" />
      <MemberSignature Language="C++ CLI" Value="NoFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="da59e-120">允许对类型和成员进行枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-120">Enumeration of types and members is allowed.</span>
          </span>
          <span data-ttu-id="da59e-121">允许在可见类型和成员上进行调用操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-121">Invocation operations are allowed on visible types and members.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReflectionEmit">
      <MemberSignature Language="C#" Value="ReflectionEmit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag ReflectionEmit = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit" />
      <MemberSignature Language="VB.NET" Value="ReflectionEmit" />
      <MemberSignature Language="C++ CLI" Value="ReflectionEmit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="da59e-122">允许发出调试符号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-122">Emitting debug symbols is allowed.</span>
          </span>
          <span data-ttu-id="da59e-123">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] 开始，发出代码时不再需要此标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-123">Beginning with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this flag is no longer required to emit code.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RestrictedMemberAccess">
      <MemberSignature Language="C#" Value="RestrictedMemberAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag RestrictedMemberAccess = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />
      <MemberSignature Language="VB.NET" Value="RestrictedMemberAccess" />
      <MemberSignature Language="C++ CLI" Value="RestrictedMemberAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="da59e-124">为部分受信任代码提供了受限成员访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-124">Restricted member access is provided for partially trusted code.</span>
          </span>
          <span data-ttu-id="da59e-125">部分受信任代码可以访问非公共类型和成员，但前提条件是部分受信任代码的授予集包括程序集（该程序集包含要访问的非公共类型和成员）的授予集内的所有权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-125">Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</span>
          </span>
          <span data-ttu-id="da59e-126">此标志在 [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] 中是新增标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-126">This flag is new in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TypeInformation">
      <MemberSignature Language="C#" Value="TypeInformation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.ReflectionPermissionFlag TypeInformation = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />
      <MemberSignature Language="VB.NET" Value="TypeInformation" />
      <MemberSignature Language="C++ CLI" Value="TypeInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("not used anymore")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="da59e-127">此标志已过时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-127">This flag is obsolete.</span>
          </span>
          <span data-ttu-id="da59e-128">枚举类型和成员以及检验它们的元数据时不需要任何标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-128">No flags are necessary to enumerate types and members and to examine their metadata.</span>
          </span>
          <span data-ttu-id="da59e-129">请改用 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da59e-129">Use <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /> instead.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>