<Type Name="KeyContainerPermissionAccessEntry" FullName="System.Security.Permissions.KeyContainerPermissionAccessEntry">
  <TypeSignature Language="C#" Value="public sealed class KeyContainerPermissionAccessEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit KeyContainerPermissionAccessEntry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KeyContainerPermissionAccessEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyContainerPermissionAccessEntry sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e2da1-101">为特定密钥容器指定访问权限。</span><span class="sxs-lookup"><span data-stu-id="e2da1-101">Specifies access rights for specific key containers.</span></span> <span data-ttu-id="e2da1-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="e2da1-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-103">此权限旨在使用户能够轻松地管理密钥容器，当涉及少量的密钥，则或访问权限是授予只有某些密钥。</span><span class="sxs-lookup"><span data-stu-id="e2da1-103">This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2da1-104">初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e2da1-104">Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntry (System.Security.Cryptography.CspParameters parameters, System.Security.Permissions.KeyContainerPermissionFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters, valuetype System.Security.Permissions.KeyContainerPermissionFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters, flags As KeyContainerPermissionFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyContainerPermissionAccessEntry(System::Security::Cryptography::CspParameters ^ parameters, System::Security::Permissions::KeyContainerPermissionFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
        <Parameter Name="flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="e2da1-105"><see cref="T:System.Security.Cryptography.CspParameters" /> 对象，包含加密服务提供程序 (CSP) 参数。</span><span class="sxs-lookup"><span data-stu-id="e2da1-105">A <see cref="T:System.Security.Cryptography.CspParameters" /> object that contains the cryptographic service provider (CSP) parameters.</span></span></param>
        <param name="flags"><span data-ttu-id="e2da1-106"><see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="e2da1-106">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="e2da1-107">使用指定的加密服务提供程序 (CSP) 参数和访问权限初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e2da1-107">Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> class, using the specified cryptographic service provider (CSP) parameters and access permissions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-108">此构造函数允许分配为中标识的特定密钥容器的访问权限<xref:System.Security.Cryptography.CspParameters>对象。</span><span class="sxs-lookup"><span data-stu-id="e2da1-108">This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2da1-109">下面的代码示例演示了利用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.Security.Cryptography.CspParameters%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="e2da1-109">The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.Security.Cryptography.CspParameters%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#3)]
 [!code-csharp[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#3)]
 [!code-vb[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-110">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-110">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntry (string keyContainerName, System.Security.Permissions.KeyContainerPermissionFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string keyContainerName, valuetype System.Security.Permissions.KeyContainerPermissionFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyContainerName As String, flags As KeyContainerPermissionFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyContainerPermissionAccessEntry(System::String ^ keyContainerName, System::Security::Permissions::KeyContainerPermissionFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
      </Parameters>
      <Docs>
        <param name="keyContainerName"><span data-ttu-id="e2da1-111">密钥容器的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-111">The name of the key container.</span></span></param>
        <param name="flags"><span data-ttu-id="e2da1-112"><see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="e2da1-112">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="e2da1-113">使用指定的密钥容器名称和访问权限初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e2da1-113">Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> class, using the specified key container name and access permissions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-114">此构造函数，可指定为 name; 由标识的特定密钥容器的访问权限使用星号 ("\*") 来表示所需的所有密钥容器。</span><span class="sxs-lookup"><span data-stu-id="e2da1-114">This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk ("\*") to represent all the key containers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2da1-115">下面的代码示例演示了利用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="e2da1-115">The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#2)]
 [!code-vb[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-116">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-116">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntry (string keyStore, string providerName, int providerType, string keyContainerName, int keySpec, System.Security.Permissions.KeyContainerPermissionFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string keyStore, string providerName, int32 providerType, string keyContainerName, int32 keySpec, valuetype System.Security.Permissions.KeyContainerPermissionFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyStore As String, providerName As String, providerType As Integer, keyContainerName As String, keySpec As Integer, flags As KeyContainerPermissionFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyContainerPermissionAccessEntry(System::String ^ keyStore, System::String ^ providerName, int providerType, System::String ^ keyContainerName, int keySpec, System::Security::Permissions::KeyContainerPermissionFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyStore" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="keySpec" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
      </Parameters>
      <Docs>
        <param name="keyStore"><span data-ttu-id="e2da1-117">密钥存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-117">The name of the key store.</span></span></param>
        <param name="providerName"><span data-ttu-id="e2da1-118">提供程序的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-118">The name of the provider.</span></span></param>
        <param name="providerType"><span data-ttu-id="e2da1-119">提供程序的类型代码。</span><span class="sxs-lookup"><span data-stu-id="e2da1-119">The type code for the provider.</span></span> <span data-ttu-id="e2da1-120">请参见 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> 属性获取相关的值。</span><span class="sxs-lookup"><span data-stu-id="e2da1-120">See the <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> property for values.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="e2da1-121">密钥容器的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-121">The name of the key container.</span></span></param>
        <param name="keySpec"><span data-ttu-id="e2da1-122">密钥规范。</span><span class="sxs-lookup"><span data-stu-id="e2da1-122">The key specification.</span></span> <span data-ttu-id="e2da1-123">请参见 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> 属性获取相关的值。</span><span class="sxs-lookup"><span data-stu-id="e2da1-123">See the <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> property for values.</span></span></param>
        <param name="flags"><span data-ttu-id="e2da1-124"><see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="e2da1-124">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="e2da1-125">使用指定的属性值初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e2da1-125">Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> class with the specified property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-126">此构造函数允许分配为特定密钥容器的访问权限。</span><span class="sxs-lookup"><span data-stu-id="e2da1-126">This constructor allows access rights to be assigned for specific key containers.</span></span> <span data-ttu-id="e2da1-127">A`keySpec`或`providerType`值 – 1 表示所有密钥规范或提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="e2da1-127">A `keySpec` or `providerType` value of –1 represents all key specifications or provider types.</span></span> <span data-ttu-id="e2da1-128">A `keyStore`， `providerName`，或`keyContainerName`的"\*"表示所有密钥存储、 提供程序或密钥容器。</span><span class="sxs-lookup"><span data-stu-id="e2da1-128">A `keyStore`, `providerName`, or `keyContainerName` of "\*" represents all key stores, providers, or key containers.</span></span> <span data-ttu-id="e2da1-129">A`providerName`或`keyContainerName`即`null`表示所有提供程序或密钥容器。</span><span class="sxs-lookup"><span data-stu-id="e2da1-129">A `providerName` or `keyContainerName` that is `null` represents all providers or key containers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2da1-130">下面的代码示例演示了利用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="e2da1-130">The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#4)]
 [!code-csharp[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#4)]
 [!code-vb[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-131">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-131">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e2da1-132">要与当前实例进行比较的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2da1-132">The <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object to compare with the currentinstance.</span></span></param>
        <summary><span data-ttu-id="e2da1-133">确定指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象是否等于当前实例。</span><span class="sxs-lookup"><span data-stu-id="e2da1-133">Determines whether the specified <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object is equal to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="e2da1-134">如果指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 等于当前的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2da1-134"><see langword="true" /> if the specified <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> is equal to the current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-135"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A>方法比较两个属性<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>对象以确定它们是否相等。</span><span class="sxs-lookup"><span data-stu-id="e2da1-135">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A> method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.KeyContainerPermissionFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As KeyContainerPermissionFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::KeyContainerPermissionFlags Flags { System::Security::Permissions::KeyContainerPermissionFlags get(); void set(System::Security::Permissions::KeyContainerPermissionFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.KeyContainerPermissionFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2da1-136">获取或设置密钥容器权限。</span><span class="sxs-lookup"><span data-stu-id="e2da1-136">Gets or sets the key container permissions.</span></span></summary>
        <value><span data-ttu-id="e2da1-137"><see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="e2da1-137">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</span></span> <span data-ttu-id="e2da1-138">默认值为 <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />。</span><span class="sxs-lookup"><span data-stu-id="e2da1-138">The default is <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="e2da1-139">许多这些标志非常强大，允许只应授予高度受信任的代码的密钥容器访问权限。</span><span class="sxs-lookup"><span data-stu-id="e2da1-139">Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.</span></span>  
  
 <span data-ttu-id="e2da1-140">最强大的标志是<xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>， <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>， <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>， <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>， <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>， <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>，和<xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>。</span><span class="sxs-lookup"><span data-stu-id="e2da1-140">The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>.</span></span> <span data-ttu-id="e2da1-141">通过使用这些标志所带来的特定威胁，请参阅各个标志的说明。</span><span class="sxs-lookup"><span data-stu-id="e2da1-141">For specific threats posed by the use of these flags, see individual flag descriptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2da1-142">获取适合在哈希算法和类似哈希表的数据结构中使用的当前实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2da1-142">Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="e2da1-143">当前 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2da1-143">A hash code for the current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-144">用作哈希函数<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>，适合在哈希算法和数据结构，如哈希表中使用。</span><span class="sxs-lookup"><span data-stu-id="e2da1-144">Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2da1-145">获取或设置密钥容器名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-145">Gets or sets the key container name.</span></span></summary>
        <value><span data-ttu-id="e2da1-146">密钥容器的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-146">The name of the key container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-147">使用值"\*"将应用到指定的提供程序名称和提供程序类型中的所有密钥容器访问项。</span><span class="sxs-lookup"><span data-stu-id="e2da1-147">Use a value of "\*" to apply the access entry to all key containers within the specified provider name and provider type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-148">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-148">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySpec">
      <MemberSignature Language="C#" Value="public int KeySpec { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySpec" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" />
      <MemberSignature Language="VB.NET" Value="Public Property KeySpec As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeySpec { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2da1-149">获取或设置密钥规范。</span><span class="sxs-lookup"><span data-stu-id="e2da1-149">Gets or sets the key specification.</span></span></summary>
        <value><span data-ttu-id="e2da1-150">Wincrypt.h 头文件中定义的 AT_ 值之一。</span><span class="sxs-lookup"><span data-stu-id="e2da1-150">One of the AT_ values defined in the Wincrypt.h header file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-151">此属性的有效值为 AT_KEYEXCHANGE （1） 和 AT_SIGNATURE (2)。</span><span class="sxs-lookup"><span data-stu-id="e2da1-151">Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).</span></span> <span data-ttu-id="e2da1-152">默认值为 1，表示所有可能的值。</span><span class="sxs-lookup"><span data-stu-id="e2da1-152">The default value is –1, representing all possible values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-153">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-153">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyStore">
      <MemberSignature Language="C#" Value="public string KeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyStore As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyStore { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2da1-154">获取或设置密钥存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-154">Gets or sets the name of the key store.</span></span></summary>
        <value><span data-ttu-id="e2da1-155">密钥存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-155">The name of the key store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-156">有效值为"User"、"计算机"或"\*"。</span><span class="sxs-lookup"><span data-stu-id="e2da1-156">Valid values are "User", "Machine", or "\*".</span></span> <span data-ttu-id="e2da1-157">如果`null`指定的值设置为"\*"。</span><span class="sxs-lookup"><span data-stu-id="e2da1-157">If `null` is specified, the value is set to "\*".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-158">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-158">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2da1-159">获取或设置提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-159">Gets or sets the provider name.</span></span></summary>
        <value><span data-ttu-id="e2da1-160">提供程序的名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-160">The name of the provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-161">提供程序名称的一个示例是"Microsoft Enhanced Cryptographic Provider"。</span><span class="sxs-lookup"><span data-stu-id="e2da1-161">An example of a provider name is "Microsoft Enhanced Cryptographic Provider".</span></span> <span data-ttu-id="e2da1-162">如果`null`指定了，使用增强加密提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="e2da1-162">If `null` is specified, the enhanced cryptographic provider name is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-163">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-163">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProviderType { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2da1-164">获取或设置提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="e2da1-164">Gets or sets the provider type.</span></span></summary>
        <value><span data-ttu-id="e2da1-165">Wincrypt.h 头文件中定义的 PROV_ 值之一。</span><span class="sxs-lookup"><span data-stu-id="e2da1-165">One of the PROV_ values defined in the Wincrypt.h header file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2da1-166">默认值为 1，表示所有可能的值。</span><span class="sxs-lookup"><span data-stu-id="e2da1-166">The default value is –1, representing all possible values.</span></span>  
  
 <span data-ttu-id="e2da1-167">Wincrypt.h 标头文件定义以下值：</span><span class="sxs-lookup"><span data-stu-id="e2da1-167">The Wincrypt.h header file defines the following values:</span></span>  
  
-   <span data-ttu-id="e2da1-168">\#定义 PROV_RSA_FULL 1</span><span class="sxs-lookup"><span data-stu-id="e2da1-168">\#define PROV_RSA_FULL 1</span></span>  
  
-   <span data-ttu-id="e2da1-169">\#define PROV_RSA_SIG 2</span><span class="sxs-lookup"><span data-stu-id="e2da1-169">\#define PROV_RSA_SIG 2</span></span>  
  
-   <span data-ttu-id="e2da1-170">\#定义 PROV_DSS 3</span><span class="sxs-lookup"><span data-stu-id="e2da1-170">\#define PROV_DSS 3</span></span>  
  
-   <span data-ttu-id="e2da1-171">\#定义 PROV_FORTEZZA 4</span><span class="sxs-lookup"><span data-stu-id="e2da1-171">\#define PROV_FORTEZZA 4</span></span>  
  
-   <span data-ttu-id="e2da1-172">\#定义 PROV_MS_EXCHANGE 5</span><span class="sxs-lookup"><span data-stu-id="e2da1-172">\#define PROV_MS_EXCHANGE 5</span></span>  
  
-   <span data-ttu-id="e2da1-173">\#定义 PROV_SSL 6</span><span class="sxs-lookup"><span data-stu-id="e2da1-173">\#define PROV_SSL 6</span></span>  
  
-   <span data-ttu-id="e2da1-174">\#define PROV_RSA_SCHANNEL 12</span><span class="sxs-lookup"><span data-stu-id="e2da1-174">\#define PROV_RSA_SCHANNEL 12</span></span>  
  
-   <span data-ttu-id="e2da1-175">\#定义 PROV_DSS_DH 13</span><span class="sxs-lookup"><span data-stu-id="e2da1-175">\#define PROV_DSS_DH 13</span></span>  
  
-   <span data-ttu-id="e2da1-176">\#define PROV_EC_ECDSA_SIG 14</span><span class="sxs-lookup"><span data-stu-id="e2da1-176">\#define PROV_EC_ECDSA_SIG 14</span></span>  
  
-   <span data-ttu-id="e2da1-177">\#定义 PROV_EC_ECNRA_SIG 15</span><span class="sxs-lookup"><span data-stu-id="e2da1-177">\#define PROV_EC_ECNRA_SIG 15</span></span>  
  
-   <span data-ttu-id="e2da1-178">\#定义 PROV_EC_ECDSA_FULL 16</span><span class="sxs-lookup"><span data-stu-id="e2da1-178">\#define PROV_EC_ECDSA_FULL 16</span></span>  
  
-   <span data-ttu-id="e2da1-179">\#定义 PROV_EC_ECNRA_FULL 17</span><span class="sxs-lookup"><span data-stu-id="e2da1-179">\#define PROV_EC_ECNRA_FULL 17</span></span>  
  
-   <span data-ttu-id="e2da1-180">\#定义 PROV_DH_SCHANNEL 18</span><span class="sxs-lookup"><span data-stu-id="e2da1-180">\#define PROV_DH_SCHANNEL 18</span></span>  
  
-   <span data-ttu-id="e2da1-181">\#定义 PROV_SPYRUS_LYNKS 20</span><span class="sxs-lookup"><span data-stu-id="e2da1-181">\#define PROV_SPYRUS_LYNKS 20</span></span>  
  
-   <span data-ttu-id="e2da1-182">\#定义 PROV_RNG 21</span><span class="sxs-lookup"><span data-stu-id="e2da1-182">\#define PROV_RNG 21</span></span>  
  
-   <span data-ttu-id="e2da1-183">\#定义 PROV_INTEL_SEC 22</span><span class="sxs-lookup"><span data-stu-id="e2da1-183">\#define PROV_INTEL_SEC 22</span></span>  
  
-   <span data-ttu-id="e2da1-184">\#定义 PROV_REPLACE_OWF 23</span><span class="sxs-lookup"><span data-stu-id="e2da1-184">\#define PROV_REPLACE_OWF 23</span></span>  
  
-   <span data-ttu-id="e2da1-185">\#定义 PROV_RSA_AES 24</span><span class="sxs-lookup"><span data-stu-id="e2da1-185">\#define PROV_RSA_AES 24</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2da1-186">对结果项的访问将不受限制。</span><span class="sxs-lookup"><span data-stu-id="e2da1-186">The resulting entry would have unrestricted access.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>