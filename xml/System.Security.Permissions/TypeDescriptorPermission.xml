<Type Name="TypeDescriptorPermission" FullName="System.Security.Permissions.TypeDescriptorPermission">
  <TypeSignature Language="C#" Value="public sealed class TypeDescriptorPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit TypeDescriptorPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.TypeDescriptorPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptorPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptorPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bd74a-101">定义对 <see cref="T:System.ComponentModel.TypeDescriptor" /> 类的部分信任访问。</span><span class="sxs-lookup"><span data-stu-id="bd74a-101">Defines partial-trust access to the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd74a-102"><xref:System.Security.Permissions.TypeDescriptorPermission>类上定义的以下方法访问<xref:System.ComponentModel.TypeDescriptor>类。</span><span class="sxs-lookup"><span data-stu-id="bd74a-102">The <xref:System.Security.Permissions.TypeDescriptorPermission> class defines access to the following methods on the <xref:System.ComponentModel.TypeDescriptor> class.</span></span>  
  
-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  
  
-   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>  
  
-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>  
  
-   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bd74a-103">初始化 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bd74a-103">Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDescriptorPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeDescriptorPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="bd74a-104">要请求的 <see cref="T:System.Security.Permissions.PermissionState" />。</span><span class="sxs-lookup"><span data-stu-id="bd74a-104">The <see cref="T:System.Security.Permissions.PermissionState" /> to request.</span></span> <span data-ttu-id="bd74a-105">仅 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 和 <see cref="F:System.Security.Permissions.PermissionState.None" /> 有效。</span><span class="sxs-lookup"><span data-stu-id="bd74a-105">Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid.</span></span></param>
        <summary><span data-ttu-id="bd74a-106">初始化 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bd74a-106">Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bd74a-107"><paramref name="state" /> 不是有效的权限状态。</span><span class="sxs-lookup"><span data-stu-id="bd74a-107"><paramref name="state" /> is not a valid permission state.</span></span> <span data-ttu-id="bd74a-108">仅 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 和 <see cref="F:System.Security.Permissions.PermissionState.None" /> 有效。</span><span class="sxs-lookup"><span data-stu-id="bd74a-108">Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeDescriptorPermission (System.Security.Permissions.TypeDescriptorPermissionFlags flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.TypeDescriptorPermissionFlags flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flag As TypeDescriptorPermissionFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeDescriptorPermission(System::Security::Permissions::TypeDescriptorPermissionFlags flag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.TypeDescriptorPermissionFlags" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="bd74a-109">要请求的权限标志。</span><span class="sxs-lookup"><span data-stu-id="bd74a-109">The permission flags to request.</span></span></param>
        <summary><span data-ttu-id="bd74a-110">初始化具有指定权限标志的 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bd74a-110">Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class with the specified permission flags.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd74a-111">由派生类实现时，创建并返回当前权限对象的相同副本。</span><span class="sxs-lookup"><span data-stu-id="bd74a-111">When implemented by a derived class, creates and returns an identical copy of the current permission object.</span></span></summary>
        <returns><span data-ttu-id="bd74a-112">当前权限对象的副本。</span><span class="sxs-lookup"><span data-stu-id="bd74a-112">A copy of the current permission object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="M:System.Security.CodeAccessPermission.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.TypeDescriptorPermissionFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.TypeDescriptorPermissionFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.TypeDescriptorPermission.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As TypeDescriptorPermissionFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::TypeDescriptorPermissionFlags Flags { System::Security::Permissions::TypeDescriptorPermissionFlags get(); void set(System::Security::Permissions::TypeDescriptorPermissionFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.TypeDescriptorPermissionFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd74a-113">获取或设置该类型描述符的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />。</span><span class="sxs-lookup"><span data-stu-id="bd74a-113">Gets or sets the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor.</span></span></summary>
        <value><span data-ttu-id="bd74a-114">该类型描述符的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />。</span><span class="sxs-lookup"><span data-stu-id="bd74a-114">The <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement"><span data-ttu-id="bd74a-115">用于重新构造安全对象的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="bd74a-115">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="bd74a-116">当在派生类中替代时，用 XML 编码重新构造具有指定状态的安全对象。</span><span class="sxs-lookup"><span data-stu-id="bd74a-116">When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="bd74a-117">要与当前权限相交的权限。</span><span class="sxs-lookup"><span data-stu-id="bd74a-117">A permission to intersect with the current permission.</span></span> <span data-ttu-id="bd74a-118">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="bd74a-118">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="bd74a-119">由派生类实现时，创建并返回属于当前权限和指定权限的交集的权限。</span><span class="sxs-lookup"><span data-stu-id="bd74a-119">When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="bd74a-120">表示当前权限和指定权限的交集的一个新权限。</span><span class="sxs-lookup"><span data-stu-id="bd74a-120">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="bd74a-121">如果交集为空，则此新权限为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bd74a-121">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="bd74a-122">将要测试子集关系的权限。</span><span class="sxs-lookup"><span data-stu-id="bd74a-122">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="bd74a-123">此权限必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="bd74a-123">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="bd74a-124">由派生类实现时，确定当前权限是否为指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="bd74a-124">When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns>
          <span data-ttu-id="bd74a-125">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bd74a-125"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd74a-126">获取一个值，该值指示是否可以从部分信任的代码调用类型描述符。</span><span class="sxs-lookup"><span data-stu-id="bd74a-126">Gets a value that indicates whether the type descriptor may be called from partially trusted code.</span></span></summary>
        <returns>
          <span data-ttu-id="bd74a-127">如果 <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> 属性设置为 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bd74a-127"><see langword="true" /> if the <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> property is set to <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd74a-128">当在派生类中重写时，创建安全对象及其当前状态的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="bd74a-128">When overridden in a derived class, creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="bd74a-129">安全对象的 XML 编码，包括任何状态信息。</span><span class="sxs-lookup"><span data-stu-id="bd74a-129">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.CodeAccessPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="bd74a-130">与当前权限合并的权限。</span><span class="sxs-lookup"><span data-stu-id="bd74a-130">A permission to combine with the current permission.</span></span> <span data-ttu-id="bd74a-131">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="bd74a-131">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="bd74a-132">当在派生类中重写时，则创建属于当前权限与指定权限的并集的权限。</span><span class="sxs-lookup"><span data-stu-id="bd74a-132">When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="bd74a-133">表示同时兼具当前权限和指定权限的新权限。</span><span class="sxs-lookup"><span data-stu-id="bd74a-133">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
  </Members>
</Type>