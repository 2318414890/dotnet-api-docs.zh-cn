<Type Name="PermissionSetAttribute" FullName="System.Security.Permissions.PermissionSetAttribute">
  <TypeSignature Language="C#" Value="public sealed class PermissionSetAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PermissionSetAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PermissionSetAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PermissionSetAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSetAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="54bc2-101">允许对使用声明安全性应用到代码中的 <see cref="T:System.Security.PermissionSet" /> 进行安全操作。</span><span class="sxs-lookup"><span data-stu-id="54bc2-101">Allows security actions for a <see cref="T:System.Security.PermissionSet" /> to be applied to code using declarative security.</span></span> <span data-ttu-id="54bc2-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="54bc2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54bc2-103"><xref:System.Security.Permissions.PermissionSetAttribute>属性<xref:System.Security.Permissions.PermissionSetAttribute.Name%2A>， <xref:System.Security.Permissions.PermissionSetAttribute.File%2A>，和<xref:System.Security.Permissions.PermissionSetAttribute.XML%2A>是互斥的这意味着，权限集可以作为其源以下之一： 命名的权限集，包含的 XML 表示形式的文件设置权限，或包含权限的 XML 表示形式的字符串设置。</span><span class="sxs-lookup"><span data-stu-id="54bc2-103">The <xref:System.Security.Permissions.PermissionSetAttribute> properties <xref:System.Security.Permissions.PermissionSetAttribute.Name%2A>, <xref:System.Security.Permissions.PermissionSetAttribute.File%2A>, and <xref:System.Security.Permissions.PermissionSetAttribute.XML%2A> are mutually exclusive, meaning that a permission set can have as its source only one of the following: a named permission set, a file containing an XML representation of a permission set, or a string containing an XML representation of a permission set.</span></span>  
  
 <span data-ttu-id="54bc2-104">允许声明的范围取决于<xref:System.Security.Permissions.SecurityAction>使用。</span><span class="sxs-lookup"><span data-stu-id="54bc2-104">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="54bc2-105">A<xref:System.Security.Permissions.SecurityAction>上执行<xref:System.Security.PermissionSet>等效于对每个在集内的权限执行该操作。</span><span class="sxs-lookup"><span data-stu-id="54bc2-105">A <xref:System.Security.Permissions.SecurityAction> performed on a <xref:System.Security.PermissionSet> is the equivalent of performing that action on each of the permissions within the set.</span></span>  
  
 <span data-ttu-id="54bc2-106">通过安全特性声明的安全信息的属性目标的元数据中存储和在运行时访问系统。</span><span class="sxs-lookup"><span data-stu-id="54bc2-106">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="54bc2-107">安全属性仅用于声明性安全。</span><span class="sxs-lookup"><span data-stu-id="54bc2-107">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="54bc2-108">对于命令性安全，使用相应的权限类。</span><span class="sxs-lookup"><span data-stu-id="54bc2-108">For imperative security, use the corresponding permission class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54bc2-109">下面的示例演示如何使用<xref:System.Security.Permissions.PermissionSetAttribute>类。</span><span class="sxs-lookup"><span data-stu-id="54bc2-109">The following example shows the use of the <xref:System.Security.Permissions.PermissionSetAttribute> Class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.PermissionSetAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.PermissionSetAttribute/CS/permissionsetattribute.cs#1)]
 [!code-vb[System.Security.Permissions.PermissionSetAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.PermissionSetAttribute/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.PermissionSet" />
    <altmember cref="T:System.Security.NamedPermissionSet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSetAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSetAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="54bc2-110">指定安全操作的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="54bc2-110">One of the enumeration values that specifies a security action.</span></span></param>
        <summary><span data-ttu-id="54bc2-111">使用指定的安全操作初始化 <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="54bc2-111">Initializes a new instance of the <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> class with the specified security action.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54bc2-112">未使用此方法。</span><span class="sxs-lookup"><span data-stu-id="54bc2-112">This method is not used.</span></span></summary>
        <returns><span data-ttu-id="54bc2-113">在所有情况下均为 null 引用（在 Visual Basic 中为 <see langword="nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="54bc2-113">A null reference (<see langword="nothing" /> in Visual Basic) in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54bc2-114">不使用此方法;它包含只是为了支持从继承<xref:System.Security.Permissions.SecurityAttribute>。</span><span class="sxs-lookup"><span data-stu-id="54bc2-114">This method is not used; it is included only to support inheritance from <xref:System.Security.Permissions.SecurityAttribute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermissionSet">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet CreatePermissionSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet CreatePermissionSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePermissionSet () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ CreatePermissionSet();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54bc2-115">创建并返回基于此权限集特性对象的新权限集。</span><span class="sxs-lookup"><span data-stu-id="54bc2-115">Creates and returns a new permission set based on this permission set attribute object.</span></span></summary>
        <returns><span data-ttu-id="54bc2-116">新权限集。</span><span class="sxs-lookup"><span data-stu-id="54bc2-116">A new permission set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54bc2-117">绝不能由应用程序代码，应仅由安全系统中，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="54bc2-117">This method should be called only by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="54bc2-118">属性在编译时用于将安全声明转换为元数据中序列化形式。</span><span class="sxs-lookup"><span data-stu-id="54bc2-118">Attributes are used at compile time to convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="54bc2-119">从权限对象，此方法返回，，它对应于此属性实例创建元数据中的声明性安全数据。</span><span class="sxs-lookup"><span data-stu-id="54bc2-119">Declarative security data in metadata is created from the permission object that this method returns, which corresponds to this attribute instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public string File { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string File" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PermissionSetAttribute.File" />
      <MemberSignature Language="VB.NET" Value="Public Property File As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ File { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54bc2-120">获取或设置一个文件，该文件包含要声明的自定义权限集的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="54bc2-120">Gets or sets a file containing the XML representation of a custom permission set to be declared.</span></span></summary>
        <value><span data-ttu-id="54bc2-121">包含该权限集 XML 表示形式的文件的物理路径。</span><span class="sxs-lookup"><span data-stu-id="54bc2-121">The physical path to the file containing the XML representation of the permission set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54bc2-122">如果指定的文件是 Unicode，设置<xref:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="54bc2-122">If the file specified is Unicode, set the <xref:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54bc2-123">下面的代码演示如何使用<xref:System.Security.Permissions.PermissionSetAttribute.File%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="54bc2-123">The following code shows the use of the <xref:System.Security.Permissions.PermissionSetAttribute.File%2A> property.</span></span> <span data-ttu-id="54bc2-124">此代码示例摘自更大的示例为提供<xref:System.Security.Permissions.PermissionSetAttribute>类。</span><span class="sxs-lookup"><span data-stu-id="54bc2-124">This code example is part of a larger example provided for the <xref:System.Security.Permissions.PermissionSetAttribute> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.PermissionSetAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.PermissionSetAttribute/CS/permissionsetattribute.cs#2)]
 [!code-vb[System.Security.Permissions.PermissionSetAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.PermissionSetAttribute/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public string Hex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Hex" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PermissionSetAttribute.Hex" />
      <MemberSignature Language="VB.NET" Value="Public Property Hex As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Hex { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54bc2-125">获取或设置 XML 编码的权限集的十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="54bc2-125">Gets or sets the hexadecimal representation of the XML encoded permission set.</span></span></summary>
        <value><span data-ttu-id="54bc2-126">XML 编码的权限集的十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="54bc2-126">The hexadecimal representation of the XML encoded permission set.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PermissionSetAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54bc2-127">获取或设置权限集的名称。</span><span class="sxs-lookup"><span data-stu-id="54bc2-127">Gets or sets the name of the permission set.</span></span></summary>
        <value><span data-ttu-id="54bc2-128">不可更改的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称（它是包含在默认策略中的多个权限集之一，而且不能更改）。</span><span class="sxs-lookup"><span data-stu-id="54bc2-128">The name of an immutable <see cref="T:System.Security.NamedPermissionSet" /> (one of several permission sets that are contained in the default policy and cannot be altered).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54bc2-129">由于命名的权限集各异计算机到计算机，则命名的权限集用于声明性安全被限制为默认策略的一部分包括的不可变的命名的权限集。</span><span class="sxs-lookup"><span data-stu-id="54bc2-129">Because named permission sets can vary from computer to computer, the use of named permission sets for declarative security is restricted to the immutable named permission sets included as part of the default policy.</span></span> <span data-ttu-id="54bc2-130">这可确保，包含在权限集引用的权限将是相同的位置运行该代码。</span><span class="sxs-lookup"><span data-stu-id="54bc2-130">This ensures that the permissions contained in the permission set referenced will be the same wherever the code is run.</span></span> <span data-ttu-id="54bc2-131">如果使用可变或无法识别的命名的权限集，则将引发编译器错误。</span><span class="sxs-lookup"><span data-stu-id="54bc2-131">A compiler error will be thrown if a mutable or unrecognized named permission set is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54bc2-132">下面的代码演示如何使用<xref:System.Security.Permissions.PermissionSetAttribute.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="54bc2-132">The following code shows the use of the <xref:System.Security.Permissions.PermissionSetAttribute.Name%2A> property.</span></span> <span data-ttu-id="54bc2-133">此代码示例摘自更大的示例为提供<xref:System.Security.Permissions.PermissionSetAttribute>类。</span><span class="sxs-lookup"><span data-stu-id="54bc2-133">This code example is part of a larger example provided for the <xref:System.Security.Permissions.PermissionSetAttribute> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.PermissionSetAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.PermissionSetAttribute/CS/permissionsetattribute.cs#3)]
 [!code-vb[System.Security.Permissions.PermissionSetAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.PermissionSetAttribute/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeEncoded">
      <MemberSignature Language="C#" Value="public bool UnicodeEncoded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnicodeEncoded" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded" />
      <MemberSignature Language="VB.NET" Value="Public Property UnicodeEncoded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnicodeEncoded { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54bc2-134">获取或设置一个值，该值指示 <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> 所指定的文件是 Unicode 编码还是 ASCII 编码。</span><span class="sxs-lookup"><span data-stu-id="54bc2-134">Gets or sets a value indicating whether the file specified by <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> is Unicode or ASCII encoded.</span></span></summary>
        <value>
          <span data-ttu-id="54bc2-135">如果文件是 Unicode 编码，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54bc2-135"><see langword="true" /> if the file is Unicode encoded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54bc2-136">如果未设置此属性，则假定文件是 ASCII。</span><span class="sxs-lookup"><span data-stu-id="54bc2-136">If this property is not set, the file is assumed to be ASCII.</span></span>  
  
 <span data-ttu-id="54bc2-137">如果<xref:System.Security.Permissions.PermissionSetAttribute.File%2A>是`null`未使用此属性。</span><span class="sxs-lookup"><span data-stu-id="54bc2-137">If <xref:System.Security.Permissions.PermissionSetAttribute.File%2A> is `null` this property is not used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PermissionSetAttribute.XML" />
      <MemberSignature Language="VB.NET" Value="Public Property XML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54bc2-138">获取或设置权限集的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="54bc2-138">Gets or sets the XML representation of a permission set.</span></span></summary>
        <value><span data-ttu-id="54bc2-139">权限集的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="54bc2-139">The XML representation of a permission set.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>