<Type Name="ReflectionPermission" FullName="System.Security.Permissions.ReflectionPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c08008bdf563f164cd7c74825158f8369aa4b728" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ReflectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReflectionPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReflectionPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b1275-101">通过 <see cref="N:System.Reflection" /> API 控制对非公共类型和成员的访问。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b1275-101">Controls access to non-public types and members through the <see cref="N:System.Reflection" /> APIs.</span>
      </span>
      <span data-ttu-id="b1275-102">控制 <see cref="N:System.Reflection.Emit" /> API 的一些功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b1275-102">Controls some features of the <see cref="N:System.Reflection.Emit" /> APIs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1275-103">而无需<xref:System.Security.Permissions.ReflectionPermission>，代码可以使用反射来访问对象的公共成员。</span><span class="sxs-lookup"><span data-stu-id="b1275-103">Without <xref:System.Security.Permissions.ReflectionPermission>, code can use reflection to access only the public members of objects.</span></span> <span data-ttu-id="b1275-104">代码与<xref:System.Security.Permissions.ReflectionPermission>适当<xref:System.Security.Permissions.ReflectionPermissionFlag>标志可以访问`protected`和`private`对象的成员。</span><span class="sxs-lookup"><span data-stu-id="b1275-104">Code with <xref:System.Security.Permissions.ReflectionPermission> and the appropriate <xref:System.Security.Permissions.ReflectionPermissionFlag> flags can access the `protected` and `private` members of objects.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b1275-105">因为<xref:System.Security.Permissions.ReflectionPermission>可以提供访问非公共类型和成员，我们建议你不要授予<xref:System.Security.Permissions.ReflectionPermission>到 Internet 的代码，除非包含<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="b1275-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to non-public types and members, we recommend that you do not grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code, except with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="b1275-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> 允许访问非公共成员，与非公共成员的授予集必须等于，限制或的代码访问非公共成员的授予集的子集。</span><span class="sxs-lookup"><span data-stu-id="b1275-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> allows access to non-public members, with the restriction that the grant set of the non-public members must be equal to, or a subset of, the grant set of the code that accesses the non-public members.</span></span>  
  
 <span data-ttu-id="b1275-107">反射的某些功能发出，如发出调试符号，要求<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="b1275-107">Certain features of reflection emit, such as emitting debug symbols, require <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="b1275-108">有关详细信息，请参见 <xref:System.Security.Permissions.ReflectionPermissionFlag> 枚举。</span><span class="sxs-lookup"><span data-stu-id="b1275-108">For more information, see the <xref:System.Security.Permissions.ReflectionPermissionFlag> enumeration.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionFlag" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b1275-109">初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-109">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="b1275-110">
            <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-110">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1275-111">用指定的完全受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-111">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with either fully restricted or unrestricted permission as specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1275-112">创建完全受限制 (`None`) 或`Unrestricted`访问元数据。</span><span class="sxs-lookup"><span data-stu-id="b1275-112">Creates either fully restricted (`None`) or `Unrestricted` access to metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1275-113">下面的代码示例演示了利用<xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="b1275-113">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="b1275-114">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-114">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#7)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b1275-115">
            <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-115">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.ReflectionPermissionFlag flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.ReflectionPermissionFlag flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flag As ReflectionPermissionFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::ReflectionPermissionFlag flag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.ReflectionPermissionFlag" />
      </Parameters>
      <Docs>
        <param name="flag">
          <span data-ttu-id="b1275-116">
            <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-116">One of the <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1275-117">用指定的访问权限初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-117">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with the specified access.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1275-118">下面的代码示例演示了利用<xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="b1275-118">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="b1275-119">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-119">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b1275-120">
            <paramref name="flag" /> 参数不是 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 的有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-120">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b1275-121">创建并返回当前权限的相同副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-121">Creates and returns an identical copy of the current permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1275-122">当前权限的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-122">A copy of the current permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1275-123">与原始权限情况下，一份权限表示对资源的相同的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b1275-123">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1275-124">下面的代码示例演示的行为<xref:System.Security.Permissions.ReflectionPermission.Copy%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b1275-124">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> method.</span></span> <span data-ttu-id="b1275-125">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-125">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1275-126">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="b1275-126">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="b1275-127">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="b1275-127">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#5)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.ReflectionPermissionFlag Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.ReflectionPermissionFlag Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As ReflectionPermissionFlag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::ReflectionPermissionFlag Flags { System::Security::Permissions::ReflectionPermissionFlag get(); void set(System::Security::Permissions::ReflectionPermissionFlag value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1275-128">获取或设置允许用于当前权限的反射类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-128">Gets or sets the type of reflection allowed for the current permission.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1275-129">当前权限的设置标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-129">The set flags for the current permission.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1275-130">下面的代码示例演示了利用<xref:System.Security.Permissions.ReflectionPermission.Flags%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b1275-130">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> property.</span></span> <span data-ttu-id="b1275-131">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-131">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b1275-132">尝试将此属性设置为无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-132">An attempt is made to set this property to an invalid value.</span>
          </span>
          <span data-ttu-id="b1275-133">要查阅有效值，请参见 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-133">See <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> for the valid values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">
          <span data-ttu-id="b1275-134">用于重新构造权限的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-134">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1275-135">从 XML 编码重新构造具有指定状态的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-135">Reconstructs a permission with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1275-136">下面的代码示例演示的行为<xref:System.Security.Permissions.ReflectionPermission.FromXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b1275-136">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> method.</span></span> <span data-ttu-id="b1275-137">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-137">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1275-138">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="b1275-138">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="b1275-139">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="b1275-139">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b1275-140">
            <paramref name="esd" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-140">The <paramref name="esd" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b1275-141">
            <paramref name="esd" /> 参数不是有效的权限元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-141">The <paramref name="esd" /> parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="b1275-142">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-142">-or-</span>
          </span>
          <span data-ttu-id="b1275-143">
            <paramref name="esd" /> 参数的版本号无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-143">The <paramref name="esd" /> parameter's version number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b1275-144">要与当前权限相交的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-144">A permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="b1275-145">它必须与当前权限属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-145">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1275-146">创建并返回一个权限，该权限是当前权限与指定权限的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-146">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1275-147">表示当前权限和指定权限的交集的一个新权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-147">A new permission that represents the intersection of the current permission and the specified permission.</span>
          </span>
          <span data-ttu-id="b1275-148">如果交集为空，则此新权限为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-148">This new permission is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1275-149">以下两个权限的交集是描述组的二者共同描述的操作的权限。</span><span class="sxs-lookup"><span data-stu-id="b1275-149">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="b1275-150">仅通过两个原始权限的请求将通过该交集。</span><span class="sxs-lookup"><span data-stu-id="b1275-150">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1275-151">下面的代码示例演示的行为<xref:System.Security.Permissions.ReflectionPermission.Intersect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b1275-151">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> method.</span></span> <span data-ttu-id="b1275-152">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-152">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1275-153">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="b1275-153">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="b1275-154">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="b1275-154">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#4)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b1275-155">
            <paramref name="target" /> 参数不是 <see langword="null" />，而且与当前权限不是同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-155">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b1275-156">将要测试子集关系的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-156">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="b1275-157">此权限必须与当前权限属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-157">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1275-158">确定当前权限是否为指定权限的子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-158">Determines whether the current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1275-159">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-159">
              <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1275-160">如果当前权限指定一组完全包含在指定权限的操作，当前权限是指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="b1275-160">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="b1275-161">例如，表示对 C:\example.txt 访问权限的权限是到 c： 表示访问权限的子集\\。</span><span class="sxs-lookup"><span data-stu-id="b1275-161">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="b1275-162">如果此方法返回`true`，当前的权限表示对受保护资源的访问权限不超过指定的权限。</span><span class="sxs-lookup"><span data-stu-id="b1275-162">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1275-163">下面的代码示例演示的行为<xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b1275-163">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="b1275-164">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-164">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1275-165">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="b1275-165">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="b1275-166">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="b1275-166">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b1275-167">
            <paramref name="target" /> 参数不是 <see langword="null" />，而且与当前权限不是同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-167">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b1275-168">返回一个值，该值指示当前权限是否不受限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-168">Returns a value indicating whether the current permission is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1275-169">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-169">
              <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1275-170">无限制的权限表示对权限所保护的所有资源的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b1275-170">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b1275-171">创建权限及其当前状态的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-171">Creates an XML encoding of the permission and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1275-172">权限的 XML 编码，包括任何状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-172">An XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1275-173">下面的代码示例演示的行为<xref:System.Security.Permissions.ReflectionPermission.ToXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b1275-173">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> method.</span></span> <span data-ttu-id="b1275-174">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-174">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1275-175">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="b1275-175">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="b1275-176">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="b1275-176">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b1275-177">与当前权限合并的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-177">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="b1275-178">它必须与当前权限属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-178">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1275-179">创建一个权限，该权限是当前权限与指定权限的并集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-179">Creates a permission that is the union of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1275-180">表示同时兼具当前权限和指定权限的新权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-180">A new permission that represents the union of the current permission and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1275-181">对的调用结果<xref:System.Security.Permissions.ReflectionPermission.Union%2A>是由当前权限和指定的权限表示所表示的所有操作的权限。</span><span class="sxs-lookup"><span data-stu-id="b1275-181">The result of a call to <xref:System.Security.Permissions.ReflectionPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="b1275-182">任何请求都会通过任一权限传递其联合。</span><span class="sxs-lookup"><span data-stu-id="b1275-182">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1275-183">下面的代码示例演示的行为<xref:System.Security.Permissions.ReflectionPermission.Union%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b1275-183">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Union%2A> method.</span></span> <span data-ttu-id="b1275-184">此示例摘自更大的示例为提供<xref:System.Security.Permissions.ReflectionPermission>类。</span><span class="sxs-lookup"><span data-stu-id="b1275-184">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1275-185">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="b1275-185">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="b1275-186">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="b1275-186">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#3)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b1275-187">
            <paramref name="other" /> 参数不是 <see langword="null" />，而且与当前权限不是同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1275-187">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>