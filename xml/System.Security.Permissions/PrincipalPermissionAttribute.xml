<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32ab637180ae7105d9ee340eb6066a041803d229" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="71679-101">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 执行安全操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="71679-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span>
      </span>
      <span data-ttu-id="71679-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="71679-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71679-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 可以用于以声明方式要求运行你的代码的用户属于指定角色或已经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="71679-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="71679-104">利用<xref:System.Security.Permissions.PermissionState.Unrestricted>创建<xref:System.Security.Permissions.PrincipalPermission>与<xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A>设置为`true`和<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>和<xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="71679-104">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="71679-105">允许声明的范围取决于<xref:System.Security.Permissions.SecurityAction>使用。</span><span class="sxs-lookup"><span data-stu-id="71679-105">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="71679-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 无法在程序集级别应用。</span><span class="sxs-lookup"><span data-stu-id="71679-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="71679-107">通过安全特性声明的安全信息的属性目标的元数据中存储和在运行时访问系统。</span><span class="sxs-lookup"><span data-stu-id="71679-107">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="71679-108">安全属性仅用于声明性安全。</span><span class="sxs-lookup"><span data-stu-id="71679-108">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="71679-109">对于命令性安全，使用相应的权限类。</span><span class="sxs-lookup"><span data-stu-id="71679-109">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="71679-110">在使用此类要求主体权限之前，必须将当前应用程序域的主体策略设置为枚举值<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="71679-110">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="71679-111">默认情况下，主体的策略设置为<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="71679-111">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="71679-112">如果你未设置为主体策略<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>，对主体权限的请求将失败。</span><span class="sxs-lookup"><span data-stu-id="71679-112">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="71679-113">在要求主体权限前，应执行下面的代码： `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="71679-113">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71679-114">下面的示例演示如何<xref:System.Security.Permissions.PrincipalPermissionAttribute>类以声明方式使用，以要求当前用户是管理员。</span><span class="sxs-lookup"><span data-stu-id="71679-114">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71679-115">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="71679-115">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="71679-116">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="71679-116">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="71679-117">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="71679-117">By default, you are in the standard user role.</span></span> <span data-ttu-id="71679-118">要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。</span><span class="sxs-lookup"><span data-stu-id="71679-118">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="71679-119">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="71679-119">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="71679-120">
            <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-120">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71679-121">使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-121">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71679-122">`Demand``InheritanceDemand`，和`LinkDemand`是唯一的值的<xref:System.Security.Permissions.SecurityAction>具有此特性的含义。</span><span class="sxs-lookup"><span data-stu-id="71679-122">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="71679-123">不是代码访问权限的权限不适用于其他操作。</span><span class="sxs-lookup"><span data-stu-id="71679-123">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71679-124">下面的示例演示如何使用<xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A>构造函数来要求当前用户是管理员。</span><span class="sxs-lookup"><span data-stu-id="71679-124">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71679-125">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="71679-125">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="71679-126">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="71679-126">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="71679-127">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="71679-127">By default, you are in the standard user role.</span></span> <span data-ttu-id="71679-128">要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。</span><span class="sxs-lookup"><span data-stu-id="71679-128">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="71679-129">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="71679-129">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71679-130">获取或设置一个指示当前主题是否已经过基于角色的基础安全提供程序验证的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-130">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71679-131">如果当前用户的身份已经过验证，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-131">
              <see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71679-132">创建并返回一个新的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-132">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71679-133">与此属性对应的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-133">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71679-134">此方法仅应由安全系统中，永远不会由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="71679-134">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="71679-135">在编译时，属性将安全声明转换为元数据中序列化形式。</span><span class="sxs-lookup"><span data-stu-id="71679-135">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="71679-136">从权限，此方法返回对应于此属性创建元数据中的声明性安全数据。</span><span class="sxs-lookup"><span data-stu-id="71679-136">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71679-137">获取或设置与当前主体相关联的标识名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-137">Gets or sets the name of the identity associated with the current principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71679-138">要与基于角色的基础安全提供程序提供的名称相匹配的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-138">A name to match against that provided by the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71679-139">如果身份验证提供程序是 Windows NT <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> （以"域名 \ 用户名"形式） 的用户的 Windows NT 登录名相同。</span><span class="sxs-lookup"><span data-stu-id="71679-139">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="71679-140">查看你的主机，以确定它使用的身份验证提供程序以及它如何确定当前的主体的标识的文档。</span><span class="sxs-lookup"><span data-stu-id="71679-140">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71679-141">获取或设置指定安全角色的成员条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-141">Gets or sets membership in a specified security role.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71679-142">基于角色的基础安全提供程序中的角色名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71679-142">The name of a role from the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71679-143">可用的角色根据主机中使用的身份验证提供程序会有所不同。</span><span class="sxs-lookup"><span data-stu-id="71679-143">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="71679-144">如果身份验证提供程序是 Windows NT，角色是 Windows NT 用户组 （在窗体"DomainName\GroupName"）。</span><span class="sxs-lookup"><span data-stu-id="71679-144">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="71679-145">查看你的主机，以确定它使用的身份验证提供程序和角色的用户可以属于的文档。</span><span class="sxs-lookup"><span data-stu-id="71679-145">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>