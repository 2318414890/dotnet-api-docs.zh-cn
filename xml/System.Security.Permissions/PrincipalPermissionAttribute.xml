<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9aeeb85da7d4e97045dd4eea18b4e2da5592a434" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36528694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 执行安全操作。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 可以用于以声明方式要求运行你的代码的用户属于指定角色或已经过身份验证。 利用<xref:System.Security.Permissions.PermissionState.Unrestricted>创建<xref:System.Security.Permissions.PrincipalPermission>与<xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A>设置为`true`和<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>和<xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>设置为`null`。  
  
 允许声明的范围取决于<xref:System.Security.Permissions.SecurityAction>使用。 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 无法在程序集级别应用。  
  
 通过安全特性声明的安全信息的属性目标的元数据中存储和在运行时访问系统。 安全属性仅用于声明性安全。 对于命令性安全，使用相应的权限类。  
  
> [!IMPORTANT]
>  在使用此类要求主体权限之前，必须将当前应用程序域的主体策略设置为枚举值<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>。 默认情况下，主体的策略设置为<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>。 如果你未设置为主体策略<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>，对主体权限的请求将失败。 在要求主体权限前，应执行下面的代码： `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
   
  
## Examples  
 下面的示例演示如何<xref:System.Security.Permissions.PrincipalPermissionAttribute>类以声明方式使用，以要求当前用户是管理员。  
  
> [!NOTE]
>  在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。 如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。 默认情况下，您拥有标准用户角色。 要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。 你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.PrincipalPermissionAttribute" Usage="new System.Security.Permissions.PrincipalPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">
          <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
        <summary>使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Demand``InheritanceDemand`，和`LinkDemand`是唯一的值的<xref:System.Security.Permissions.SecurityAction>具有此特性的含义。 不是代码访问权限的权限不适用于其他操作。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A>构造函数来要求当前用户是管理员。  
  
> [!NOTE]
>  在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。 如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。 默认情况下，您拥有标准用户角色。 要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。 你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个指示当前主题是否已经过基于角色的基础安全提供程序验证的值。</summary>
        <value>如果当前用户的身份已经过验证，则为 <see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="principalPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回一个新的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</summary>
        <returns>与此属性对应的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法仅应由安全系统中，永远不会由应用程序代码调用。  
  
 在编译时，属性将安全声明转换为元数据中序列化形式。 从权限，此方法返回对应于此属性创建元数据中的声明性安全数据。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与当前主体相关联的标识名称。</summary>
        <value>要与基于角色的基础安全提供程序提供的名称相匹配的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果身份验证提供程序是 Windows NT <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> （以"域名 \ 用户名"形式） 的用户的 Windows NT 登录名相同。 查看你的主机，以确定它使用的身份验证提供程序以及它如何确定当前的主体的标识的文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Role : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定安全角色的成员条件。</summary>
        <value>基于角色的基础安全提供程序中的角色名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可用的角色根据主机中使用的身份验证提供程序会有所不同。 如果身份验证提供程序是 Windows NT，角色是 Windows NT 用户组 （在窗体"DomainName\GroupName"）。 查看你的主机，以确定它使用的身份验证提供程序和角色的用户可以属于的文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>