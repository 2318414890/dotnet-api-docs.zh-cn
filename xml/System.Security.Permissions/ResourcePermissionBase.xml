<Type Name="ResourcePermissionBase" FullName="System.Security.Permissions.ResourcePermissionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80ac4426dca688297a694ca744aced5e700c09eb" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49144638" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ResourcePermissionBase : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ResourcePermissionBase extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ResourcePermissionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResourcePermissionBase&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourcePermissionBase abstract : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ResourcePermissionBase = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许控制代码访问安全权限。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Security.Permissions.ResourcePermissionBase>类使用序号排序规则比较字符串，并忽略所比较的字符串的大小写。  
  
   
  
## Examples  
 下面的示例从继承<xref:System.Security.Permissions.ResourcePermissionBase>类。 实现 4 种构造函数。 该示例还提供了一个名为类的实现`MailslotPermissionEntry`。 <xref:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType%2A>属性的类型然后私下设置`MailslotPermissionEntry`。 <xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A>属性私下设置为"Name"和"计算机"。  
  
 [!code-cpp[ResourcePermissionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#1)]
 [!code-csharp[ResourcePermissionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#1)]
 [!code-vb[ResourcePermissionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">若要控制证明等的权利。 安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。 关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</permission>
    <block subset="none" type="overrides">
      <para>继承自<see cref="T:System.Security.Permissions.ResourcePermissionBase" />，必须提供至少三个构造函数，设置两个属性，并提供第三个属性。 所需的构造函数是： 默认构造函数、 采用<see cref="T:System.Security.Permissions.PermissionState" />作为参数，并尽可能为所需的执行属性的值。 需要设置的属性是<see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />和<see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />。 需要第三个属性是指返回的权限项。 此类的实现的示例，请参阅<see cref="T:System.Diagnostics.PerformanceCounterPermission" />。 在<see cref="T:System.Diagnostics.PerformanceCounterPermission" />，则<see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />属性私人设置为"计算机"和"类别"<see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />私下属性设置为的类型<see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />，和<see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" />属性返回的权限项。</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourcePermissionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourcePermissionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourcePermissionBase (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourcePermissionBase(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ResourcePermissionBase : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.ResourcePermissionBase" Usage="new System.Security.Permissions.ResourcePermissionBase state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
        <summary>在创建过程中，用指定级别的资源访问权限初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionAccess">
      <MemberSignature Language="C#" Value="protected void AddPermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddPermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddPermissionAccess (entry As ResourcePermissionBaseEntry)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddPermissionAccess(System::Security::Permissions::ResourcePermissionBaseEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.AddPermissionAccess : System.Security.Permissions.ResourcePermissionBaseEntry -&gt; unit" Usage="resourcePermissionBase.AddPermissionAccess entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Parameters>
      <Docs>
        <param name="entry">要添加的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
        <summary>将权限项添加到权限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用<xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A>方法在类初始化过程中添加的权限访问项。 此代码示例是为提供一个更大示例的一部分<xref:System.Security.Permissions.ResourcePermissionBase>类。  
  
 [!code-cpp[ResourcePermissionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#2)]
 [!code-csharp[ResourcePermissionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#2)]
 [!code-vb[ResourcePermissionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 属性中的元素数目不等于 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 属性中的元素数目。  
  
或 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 已经包含在权限中。</exception>
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public const string Any;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Any" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ResourcePermissionBase.Any" />
      <MemberSignature Language="VB.NET" Value="Public Const Any As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Any;" />
      <MemberSignature Language="F#" Value="val mutable Any : string" Usage="System.Security.Permissions.ResourcePermissionBase.Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定要用来表示任何通配符的字符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此字段的值是"*"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="resourcePermissionBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除已添加的权限项的权限。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="resourcePermissionBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回与当前权限对象相同的副本。</summary>
        <returns>当前权限对象的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 权限对象的副本与原始权限对象的资源表示相同的访问权限。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="resourcePermissionBase.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("incomplete - need more test")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">用于重新构造安全对象的 XML 编码。</param>
        <summary>通过 XML 编码重新构造具有指定状态的安全对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityElement" /> 参数不是有效的权限元素。  
  
或 
不支持 <paramref name="securityElement" /> 参数的版本号。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionEntries">
      <MemberSignature Language="C#" Value="protected System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetPermissionEntries () As ResourcePermissionBaseEntry()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Security::Permissions::ResourcePermissionBaseEntry ^&gt; ^ GetPermissionEntries();" />
      <MemberSignature Language="F#" Value="member this.GetPermissionEntries : unit -&gt; System.Security.Permissions.ResourcePermissionBaseEntry[]" Usage="resourcePermissionBase.GetPermissionEntries " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ResourcePermissionBaseEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回已添加到此权限的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 对象的数组。</summary>
        <returns>已添加到此权限的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 对象的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A>和<xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A>添加和删除对此权限的权限项。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
        <altmember cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="resourcePermissionBase.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">与当前权限对象类型相同的权限对象。</param>
        <summary>创建并返回作为当前权限对象和目标权限对象的交集的权限对象。</summary>
        <returns>表示当前对象和指定目标交集的新权限对象。 如果交集为空，则此对象为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个权限对象的交集是描述两者共同持有的操作组的权限。 具体而言，它表示要传递这两个权限的请求所需的最低权限。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">目标权限对象与当前权限对象不属于同一类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="resourcePermissionBase.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">将用于测试子集关系的权限对象。</param>
        <summary>确定当前权限对象是否是指定权限的子集。</summary>
        <returns>如果当前权限对象是指定权限对象的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前权限对象指定一组操作完全包含的指定的权限对象，当前权限对象是指定的权限对象的子集。 例如，表示对 C:\Example.txt 访问权限的权限是到 c： 表示访问权限的子集\\。 如果此方法返回`true`，当前权限对象表示对受保护资源的访问权限不会超过指定的权限对象。  
  
 此方法始终返回`false`当指定的权限对象属于与当前权限对象的不同的类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="resourcePermissionBase.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个值，该值指示该权限是否不受限制。</summary>
        <returns>如果权限不受限制，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 具有不受限制的权限的对象表示对受权限保护的所有资源的访问。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="public const string Local;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Local" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ResourcePermissionBase.Local" />
      <MemberSignature Language="VB.NET" Value="Public Const Local As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Local;" />
      <MemberSignature Language="F#" Value="val mutable Local : string" Usage="System.Security.Permissions.ResourcePermissionBase.Local" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定要用来表示局部引用的字符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此字段的值是"。"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionAccessType">
      <MemberSignature Language="C#" Value="protected Type PermissionAccessType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PermissionAccessType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />
      <MemberSignature Language="VB.NET" Value="Protected Property PermissionAccessType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Type ^ PermissionAccessType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PermissionAccessType : Type with get, set" Usage="System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置描述给予资源的访问权限类型的枚举值。</summary>
        <value>枚举值，它从 <see cref="T:System.Type" /> 派生并描述给予资源的访问权限的类型。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">属性值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">属性值不是枚举值。</exception>
        <block subset="none" type="overrides">
          <para>继承自<see cref="T:System.Security.Permissions.ResourcePermissionBase" />，必须设置此属性。 此类的实现的示例，请参阅<see cref="T:System.Diagnostics.PerformanceCounterPermission" />。 在中<see cref="T:System.Diagnostics.PerformanceCounterPermission" />，则<see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />私下属性设置为的类型<see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionAccess">
      <MemberSignature Language="C#" Value="protected void RemovePermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemovePermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemovePermissionAccess (entry As ResourcePermissionBaseEntry)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemovePermissionAccess(System::Security::Permissions::ResourcePermissionBaseEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.RemovePermissionAccess : System.Security.Permissions.ResourcePermissionBaseEntry -&gt; unit" Usage="resourcePermissionBase.RemovePermissionAccess entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Parameters>
      <Docs>
        <param name="entry">要移除的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
        <summary>从该权限中移除权限项。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 属性中的元素数目不等于 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 属性中的元素数目。  
  
或 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 不在此权限中。</exception>
        <altmember cref="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      </Docs>
    </Member>
    <Member MemberName="TagNames">
      <MemberSignature Language="C#" Value="protected string[] TagNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TagNames" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagNames As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property cli::array &lt;System::String ^&gt; ^ TagNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagNames : string[] with get, set" Usage="System.Security.Permissions.ResourcePermissionBase.TagNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标识处于保护中的资源的字符串数组。</summary>
        <value>标识处于保护中的资源的字符串数组。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">属性值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">数组的长度为 0。</exception>
        <block subset="none" type="overrides">
          <para>继承自<see cref="T:System.Security.Permissions.ResourcePermissionBase" />，必须设置此属性。 此类的实现的示例，请参阅<see cref="T:System.Diagnostics.PerformanceCounterPermission" />。 在中<see cref="T:System.Diagnostics.PerformanceCounterPermission" />，则<see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />属性私下设置为"计算机"和"类别"。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="resourcePermissionBase.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回安全对象及其当前状态的 XML 编码。</summary>
        <returns>安全对象的 XML 编码，包括任何状态信息。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="resourcePermissionBase.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">要与当前的权限对象合并的权限对象。 它必须与当前权限对象的类型相同。</param>
        <summary>创建将当前权限对象与目标权限对象组合的权限对象。</summary>
        <returns>新权限对象，它表示当前权限对象和指定权限对象的并集。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对的调用结果<xref:System.Security.Permissions.ResourcePermissionBase.Union%2A>是表示当前权限对象和指定的权限对象所表示的所有操作的权限。 任何请求都会通过任一权限传递其联合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> 权限对象与当前权限对象不属于同一类型。</exception>
      </Docs>
    </Member>
  </Members>
</Type>