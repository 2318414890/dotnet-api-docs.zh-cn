<Type Name="StrongNameIdentityPermission" FullName="System.Security.Permissions.StrongNameIdentityPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a463af60ab4edfa6fe57431ad325d271e1f70c88" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30504521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StrongNameIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.StrongNameIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrongNameIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrongNameIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fe9a1-101">定义强名称的标识权限。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe9a1-101">Defines the identity permission for strong names.</span>
      </span>
      <span data-ttu-id="fe9a1-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe9a1-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="fe9a1-103">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，不使用标识权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-103">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], identity permissions are not used.</span></span>  
>   
>  <span data-ttu-id="fe9a1-104">在.NET framework 1.0 和 1.1 版中，标识权限不能有<xref:System.Security.Permissions.PermissionState.Unrestricted>权限状态值。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-104">In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value.</span></span> <span data-ttu-id="fe9a1-105">在.NET Framework 2.0 及更高版本中，标识权限可以具有任何权限状态值。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-105">In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</span></span>  <span data-ttu-id="fe9a1-106">这意味着，在版本 2.0 和更高版本中，标识权限具有相同的行为实现的权限<xref:System.Security.Permissions.IUnrestrictedPermission>接口。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-106">This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span> <span data-ttu-id="fe9a1-107">也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-107">That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</span></span>  
  
 <span data-ttu-id="fe9a1-108">使用<xref:System.Security.Permissions.StrongNameIdentityPermission>以确认调用的代码在一个特定的具有强名称代码程序集。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-108">Use <xref:System.Security.Permissions.StrongNameIdentityPermission> to confirm that the calling code is in a particular strong-named code assembly.</span></span> <span data-ttu-id="fe9a1-109">完整的需求<xref:System.Security.Permissions.StrongNameIdentityPermission>才堆栈中的所有程序集具有正确的证据，以满足此要求。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-109">Full demands for <xref:System.Security.Permissions.StrongNameIdentityPermission> succeed only if all the assemblies in the stack have the correct evidence to satisfy the demand.</span></span> <span data-ttu-id="fe9a1-110">链接要求使用<xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>属性成功仅当直接调用方具有正确的证据。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-110">Link demands that use the <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> attribute succeed only if the immediate caller has the correct evidence.</span></span>  
  
 <span data-ttu-id="fe9a1-111">强名称标识基于称为二进制大型对象 (BLOB)，它与的名称和版本特定的程序集 （可选） 结合的加密公共密钥。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-111">A strong name identity is based on a cryptographic public key called a binary large object (BLOB),  which is optionally combined with the name and version of a specific assembly.</span></span> <span data-ttu-id="fe9a1-112">密钥定义唯一的命名空间，并提供强名称为正版，因为该名称定义必须由相应的私钥进行签名的程序集中的验证。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-112">The key defines a unique namespace and provides strong verification that the name is genuine, because the definition of the name must be in an assembly that is signed by the corresponding private key.</span></span>  
  
 <span data-ttu-id="fe9a1-113">请注意，强名称密钥的有效性不依赖或一定颁发密钥的任何证书上的信任关系。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-113">Note that the validity of the strong name key is not dependent on a trust relationship or on any certificate necessarily being issued for the key.</span></span>  
  
 <span data-ttu-id="fe9a1-114">在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效的这是调用程序集是完全受信任时如此。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-114">In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted.</span></span> <span data-ttu-id="fe9a1-115">即，即使调用程序集具有完全信任，则将失败对标识权限的请求，如果程序集不符合要求的条件。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-115">That is, even if the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</span></span> <span data-ttu-id="fe9a1-116">中的.NET Framework 版本 2.0 及更高版本，标识权限的需求较为低效如果调用程序集具有完全信任权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-116">In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</span></span> <span data-ttu-id="fe9a1-117">这样可确保所有权限的一致性，并消除标识权限的处理方式。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-117">This ensures consistency for all permissions and eliminates the treatment of identity permissions as a special case.</span></span>  
  
 <span data-ttu-id="fe9a1-118">强名称的完整说明，请参阅<xref:System.Security.Policy.StrongName>引用页。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-118">For a complete description of strong names, see the <xref:System.Security.Policy.StrongName> reference page.</span></span> <span data-ttu-id="fe9a1-119">有关强名称的程序集的详细信息，请参阅[强名称程序集](~/docs/framework/app-domains/strong-named-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-119">For more information about strong-named assemblies, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
 <span data-ttu-id="fe9a1-120"><xref:System.Security.Permissions.StrongNameIdentityPermission>类用于定义强名称对要求访问的一种类型的公共成员。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-120">The <xref:System.Security.Permissions.StrongNameIdentityPermission> class is used to define strong-name requirements for accessing the public members of a type.</span></span> <span data-ttu-id="fe9a1-121"><xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>属性可以用于定义强名称程序集级别的要求。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-121">The <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> attribute can be used to define strong-name requirements at the assembly level.</span></span> <span data-ttu-id="fe9a1-122">在.NET Framework 2.0 及更高版本中，你还可以使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>特性来指定该程序集中的所有非公共类型都是对另一个程序集可见。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-122">In the .NET Framework version 2.0 and later, you can also use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to specify that all nonpublic types in that assembly are visible to another assembly.</span></span> <span data-ttu-id="fe9a1-123">有关详细信息，请参阅[友元程序集](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-123">For more information, see [Friend Assemblies](http://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.StrongNameIdentityPermission" />
    <altmember cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />
    <altmember cref="T:System.Security.Policy.StrongName" />
    <altmember cref="T:System.Security.Policy.StrongNameMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe9a1-124">初始化 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-124">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="fe9a1-125">
            <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-125">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9a1-126">使用指定的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-126">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-127">创建完全受限制 (`None`) 或`Unrestricted`权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-127">Creates either a fully restricted (`None`) or `Unrestricted` permission.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe9a1-128">在.NET framework 1.0 和 1.1 版中，标识权限不能有<xref:System.Security.Permissions.PermissionState.Unrestricted>权限状态值。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-128">In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value.</span></span> <span data-ttu-id="fe9a1-129">在.NET Framework 2.0 及更高版本中，标识权限可以具有任何权限状态值。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-129">In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</span></span>  <span data-ttu-id="fe9a1-130">这意味着，在版本 2.0 和更高版本中，标识权限具有相同的行为实现的权限<xref:System.Security.Permissions.IUnrestrictedPermission>接口。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-130">This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span> <span data-ttu-id="fe9a1-131">也就是说，要求的标识始终成功，而不考虑程序集，标识程序集已被授予完全信任。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-131">That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</span></span>  
  
 <span data-ttu-id="fe9a1-132">在.NET framework 1.0 和 1.1 版中，对标识权限的要求是有效，调用程序集是完全受信任时也如此。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-132">In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.</span></span> <span data-ttu-id="fe9a1-133">即，尽管调用程序集具有完全信任，则将失败标识权限的要求，如果程序集不符合要求的条件。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-133">That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</span></span> <span data-ttu-id="fe9a1-134">中的.NET Framework 版本 2.0 及更高版本，标识权限的需求较为低效如果调用程序集具有完全信任权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-134">In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</span></span> <span data-ttu-id="fe9a1-135">这可确保对所有其他权限，消除标识权限的处理方式的一致性。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-135">This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.</span></span>  
  
 <span data-ttu-id="fe9a1-136">使用此构造函数中包含的权限状态值<xref:System.Security.Permissions.PermissionState.None>创建匹配没有强名称标识权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-136">Use this constructor with a permission state value of <xref:System.Security.Permissions.PermissionState.None> to create an identity permission that matches no strong names.</span></span> <span data-ttu-id="fe9a1-137">如果随后将设置<xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>和<xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A>可以由权限表示属性，一个特定强名称标识。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-137">If you subsequently set the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> and <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> properties, a specific strong name identity can be represented by the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-138">下面的代码示例演示了利用<xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-138">The following code example shows the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#7)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe9a1-139">
            <paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-139">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::StrongNamePublicKeyBlob ^ blob, System::String ^ name, Version ^ version);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blob" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="blob">
          <span data-ttu-id="fe9a1-140">定义强名称标识命名空间的公共密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-140">The public key defining the strong name identity namespace.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fe9a1-141">强名称标识的简单名称部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-141">The simple name part of the strong name identity.</span>
          </span>
          <span data-ttu-id="fe9a1-142">这对应于程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-142">This corresponds to the name of the assembly.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="fe9a1-143">标识的版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-143">The version number of the identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9a1-144">为指定的强名称标识初始化 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-144">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class for the specified strong name identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-145">`name`和`version`参数可以是`null`仅当公钥用于标识程序集。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-145">The `name` and `version` parameters can be `null` only when the public key is used to identify the assembly.</span></span> <span data-ttu-id="fe9a1-146">空字符串 ("") 不应使用代替了`null`。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-146">An empty string ("") should not be used in place of `null`.</span></span> <span data-ttu-id="fe9a1-147">如果`name`为空字符串，<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-147">If `name` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="fe9a1-148">名称和版本号的程序集的详细信息，请参阅[强名称程序集](~/docs/framework/app-domains/strong-named-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-148">For more information on names and version numbers of assemblies, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-149">下面的代码示例演示了利用<xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-149">The following code example shows the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#8)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe9a1-150">
            <paramref name="blob" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-150">The <paramref name="blob" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe9a1-151">
            <paramref name="name" /> 参数为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-151">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe9a1-152">创建并返回当前权限的相同副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-152">Creates and returns an identical copy of the current permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9a1-153">当前权限的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-153">A copy of the current permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-154">与原始权限情况下，一份权限表示对资源的相同的访问权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-154">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-155">下面的代码示例演示的行为<xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-155">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> method.</span></span> <span data-ttu-id="fe9a1-156">此示例摘自更大的示例为提供<xref:System.Security.Permissions.StrongNameIdentityPermission>类。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-156">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="fe9a1-157">对于此示例的最佳用途是生成和执行整个示例中，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-157">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe9a1-158">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-158">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="fe9a1-159">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-159">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#5)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#5)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe9a1-160">用于重新构造权限的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-160">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9a1-161">从 XML 编码重新构造具有指定状态的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-161">Reconstructs a permission with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-162">应用程序代码不使用此方法。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-162">This method is not used by application code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-163">下面的代码示例演示的行为<xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-163">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> method.</span></span> <span data-ttu-id="fe9a1-164">此示例摘自更大的示例为提供<xref:System.Security.Permissions.StrongNameIdentityPermission>类。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-164">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="fe9a1-165">对于此示例的最佳用途是生成和执行整个示例中，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-165">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe9a1-166">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-166">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="fe9a1-167">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-167">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe9a1-168">
            <paramref name="e" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-168">The <paramref name="e" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe9a1-169">
            <paramref name="e" /> 参数不是有效的权限元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-169">The <paramref name="e" /> parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="fe9a1-170">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-170">-or-</span>
          </span>
          <span data-ttu-id="fe9a1-171">
            <paramref name="e" /> 参数的版本号无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-171">The <paramref name="e" /> parameter's version number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fe9a1-172">要与当前权限相交的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-172">A permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="fe9a1-173">它必须与当前权限属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-173">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9a1-174">创建并返回一个权限，该权限是当前权限与指定权限的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-174">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9a1-175">一个新的权限，表示当前权限与指定权限的交集，或为 <see langword="null" />（如果交集为空）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-175">A new permission that represents the intersection of the current permission and the specified permission, or <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-176">以下两个权限的交集是描述组的二者共同描述的操作的权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-176">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="fe9a1-177">仅通过两个原始权限的请求将通过该交集。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-177">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="fe9a1-178">两个相同的强名称标识权限的交集是相同的权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-178">The intersection of two identical strong name identity permissions is the same permission.</span></span> <span data-ttu-id="fe9a1-179">（不是通配符） 的两个不同的交集表达式是空的权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-179">The intersection of two different (not wildcard) expressions is an empty permission.</span></span> <span data-ttu-id="fe9a1-180">通配符表达式和匹配的强名称的交集是强名称。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-180">The intersection of a wildcard expression and a matching strong name is the strong name.</span></span> <span data-ttu-id="fe9a1-181">两个匹配的通配符表达式的交集是更长的时间，更具体的两个表达式。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-181">The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-182">下面的代码示例显示使用的结果<xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A>方法，不是说明了如何使用方法。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-182">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> method, not how to use the method.</span></span> <span data-ttu-id="fe9a1-183">此示例摘自更大的示例为提供<xref:System.Security.Permissions.StrongNameIdentityPermission>类。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-183">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="fe9a1-184">对于此示例的最佳用途是生成和执行整个示例中，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-184">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe9a1-185">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-185">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="fe9a1-186">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-186">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#4)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#4)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe9a1-187">
            <paramref name="target" /> 参数不是 <see langword="null" />，而且与当前权限不是同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-187">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fe9a1-188">将要测试子集关系的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-188">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="fe9a1-189">此权限必须与当前权限属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-189">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9a1-190">确定当前权限是否为指定权限的子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-190">Determines whether the current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9a1-191">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-191">
              <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-192">如果当前权限指定一组完全包含在指定权限的操作，当前权限是指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-192">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="fe9a1-193">例如，视为相同的其他属性，使用的标识<xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>包含通配符表达式 MyCompany.MyDepartment.\* 属性标识为具有标识的子集<xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>属性 MyCompany.MyDepartment.MyFile.</span><span class="sxs-lookup"><span data-stu-id="fe9a1-193">For example, the other properties being equal, an identity with the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property containing the wildcard expression MyCompany.MyDepartment.\* is identified as a subset of an identity with the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property MyCompany.MyDepartment.MyFile.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-194">下面的代码示例显示使用的结果<xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A>方法，不是说明了如何使用方法。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-194">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> method, not how to use the method.</span></span> <span data-ttu-id="fe9a1-195">此示例摘自更大的示例为提供<xref:System.Security.Permissions.StrongNameIdentityPermission>类。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-195">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="fe9a1-196">对于此示例的最佳用途是生成和执行整个示例中，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-196">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe9a1-197">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-197">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="fe9a1-198">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-198">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#2)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#2)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe9a1-199">
            <paramref name="target" /> 参数不是 <see langword="null" />，而且与当前权限不是同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-199">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe9a1-200">获取或设置强名称标识的简单名称部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-200">Gets or sets the simple name portion of the strong name identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe9a1-201">标识的简单名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-201">The simple name of the identity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-202">值<xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>属性可以是一个确切的名称，或可以修改的最后一个位置中的通配符字符; 例如，MyCompany.MyDepartment.MyFile 和 MyCompany.MyDepartment.\* 是有效的名称。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-202">The value of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property can be an exact name or can be modified by a wildcard character in the final position; for example, both MyCompany.MyDepartment.MyFile and MyCompany.MyDepartment.\* are valid names.</span></span> <span data-ttu-id="fe9a1-203">如果你尝试设置<xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>属性为空字符串 ("")、<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-203">If you attempt to set the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property to an empty string (""), an <xref:System.ArgumentException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe9a1-204">值为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-204">The value is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe9a1-205">无法检索此属性值，因为它包含的标识不明确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-205">The property value cannot be retrieved because it contains an ambiguous identity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.StrongNamePublicKeyBlob PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicKey As StrongNamePublicKeyBlob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::StrongNamePublicKeyBlob ^ PublicKey { System::Security::Permissions::StrongNamePublicKeyBlob ^ get(); void set(System::Security::Permissions::StrongNamePublicKeyBlob ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.StrongNamePublicKeyBlob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe9a1-206">获取或设置定义强名称标识命名空间的公钥 blob。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-206">Gets or sets the public key blob that defines the strong name identity namespace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe9a1-207">
            <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 包含标识的公钥，或 <see langword="null" />（如果没有密钥）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-207">A <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> that contains the public key of the identity, or <see langword="null" /> if there is no key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fe9a1-208">该属性值被设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-208">The property value is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe9a1-209">无法检索此属性值，因为它包含的标识不明确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-209">The property value cannot be retrieved because it contains an ambiguous identity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe9a1-210">创建权限及其当前状态的 XML 编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-210">Creates an XML encoding of the permission and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9a1-211">权限的 XML 编码，包括任何状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-211">An XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-212">此方法通常不使用由应用程序代码中。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-212">This method is not typically used by application code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-213">下面的代码示例演示的行为<xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-213">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe9a1-214">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-214">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="fe9a1-215">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-215">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="fe9a1-216">与当前权限合并的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-216">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="fe9a1-217">它必须与当前权限属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-217">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9a1-218">创建一个权限，该权限是当前权限与指定权限的并集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-218">Creates a permission that is the union of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9a1-219">表示同时兼具当前权限和指定权限的新权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-219">A new permission that represents the union of the current permission and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9a1-220">对的调用结果<xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A>是由当前权限和指定的权限表示所表示的所有操作的权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-220">The result of a call to <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="fe9a1-221">任何请求都会通过任一权限传递其联合。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-221">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="fe9a1-222">权限的联合和`null`是不是权限`null`。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-222">The union of a permission and `null` is the permission that is not `null`.</span></span> <span data-ttu-id="fe9a1-223">该权限的子集和权限的联合是包含其他权限。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-223">The union of a permission and a subset of that permission is the permission that contains the other.</span></span> <span data-ttu-id="fe9a1-224">任何其他组合会导致<xref:System.ArgumentException>所引发异常。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-224">Any other combination results in an <xref:System.ArgumentException> exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe9a1-225">下面的代码示例显示使用的结果<xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A>方法，不是说明了如何使用方法。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-225">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> method, not how to use the method.</span></span> <span data-ttu-id="fe9a1-226">此示例摘自更大的示例为提供<xref:System.Security.Permissions.StrongNameIdentityPermission>类。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-226">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="fe9a1-227">对于此示例的最佳用途是生成和执行整个示例中，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-227">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe9a1-228">下面的代码示例旨在演示方法，不是为了演示其用法的行为。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-228">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="fe9a1-229">安全基础结构; 一般情况下，使用权限类的方法它们通常不使用应用程序中。</span><span class="sxs-lookup"><span data-stu-id="fe9a1-229">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#3)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#3)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe9a1-230">
            <paramref name="target" /> 参数不是 <see langword="null" />，而且与当前权限不是同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-230">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
          <span data-ttu-id="fe9a1-231">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-231">-or-</span>
          </span>
          <span data-ttu-id="fe9a1-232">这两个权限不相等，而且其中一个是另一个的子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-232">The two permissions are not equal and one is a subset of the other.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe9a1-233">获取或设置标识的版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-233">Gets or sets the version number of the identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe9a1-234">标识的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-234">The version of the identity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe9a1-235">无法检索此属性值，因为它包含的标识不明确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9a1-235">The property value cannot be retrieved because it contains an ambiguous identity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>