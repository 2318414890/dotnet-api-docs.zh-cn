<Type Name="KeyContainerPermissionAccessEntryEnumerator" FullName="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46bd68f7a16dbef36fa70f00a2e80e17dc959e9c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39893667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit KeyContainerPermissionAccessEntryEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KeyContainerPermissionAccessEntryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyContainerPermissionAccessEntryEnumerator sealed : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type KeyContainerPermissionAccessEntryEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e2f48-101">表示 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 中的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> 对象的枚举数。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2f48-101">Represents the enumerator for <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects in a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2f48-102">枚举器只允许读取集合中的数据。</span><span class="sxs-lookup"><span data-stu-id="e2f48-102">Enumerators allow only reading the data in the collection.</span></span> <span data-ttu-id="e2f48-103">枚举器不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="e2f48-103">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e2f48-104">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="e2f48-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e2f48-105"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>方法也会枚举数放回此位置。</span><span class="sxs-lookup"><span data-stu-id="e2f48-105">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="e2f48-106">在此位置，调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>属性引发异常。</span><span class="sxs-lookup"><span data-stu-id="e2f48-106">At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="e2f48-107">因此，您必须调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>方法将枚举数前移到集合，然后再读取的值的第一个元素<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e2f48-107">Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="e2f48-108">在调用 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> 或 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 之前，<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="e2f48-108"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="e2f48-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 将 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="e2f48-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e2f48-110">在传递到集合的末尾之后，枚举数放在集合中最后一个元素后面，且调用 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 会返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="e2f48-110">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e2f48-111">如果最后一次调用到<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>返回`false`，则调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="e2f48-111">If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="e2f48-112">若要重置<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>集合的第一个元素，调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>调用后跟<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="e2f48-112">To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="e2f48-113">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="e2f48-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e2f48-114">如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>或<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e2f48-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e2f48-115">如果调用之间修改集合<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>并<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>，<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>返回的元素为其当前设置，即使枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="e2f48-115">If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="e2f48-116">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="e2f48-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e2f48-117">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="e2f48-117">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e2f48-118">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="e2f48-118">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntryEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyContainerPermissionAccessEntryEnumerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.KeyContainerPermissionAccessEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As KeyContainerPermissionAccessEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::KeyContainerPermissionAccessEntry ^ Current { System::Security::Permissions::KeyContainerPermissionAccessEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Permissions.KeyContainerPermissionAccessEntry" Usage="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.KeyContainerPermissionAccessEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2f48-119">获取集合中的当前项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-119">Gets the current entry in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2f48-120">集合中当前的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-120">The current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2f48-121">创建枚举器时，它不指向一个对象，因此<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>属性无效，将引发异常，如果访问它。</span><span class="sxs-lookup"><span data-stu-id="e2f48-121">When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="e2f48-122">必须首先调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>方法将游标定位在集合中的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e2f48-122">You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.</span></span>  
  
 <span data-ttu-id="e2f48-123">获取<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>属性使用没有干预调用多次<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>将返回相同<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>对象每次。</span><span class="sxs-lookup"><span data-stu-id="e2f48-123">Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e2f48-124">在第一次调用 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 方法之前会访问 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-124">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed before first calling the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method.</span>
          </span>
          <span data-ttu-id="e2f48-125">光标位于集合中的第一个对象之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-125">The cursor is located before the first object in the collection.</span>
          </span>
          <span data-ttu-id="e2f48-126">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-126">-or-</span>
          </span>
          <span data-ttu-id="e2f48-127">在调用 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 方法返回 <see langword="false" />（这表明光标位于集合的最后一个对象之后）后会访问 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-127">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed after a call to the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method returns <see langword="false" />, which indicates that the cursor is located after the last object in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="keyContainerPermissionAccessEntryEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2f48-128">移至集合中的下一元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-128">Moves to the next element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2f48-129">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-129">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2f48-130"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>方法将返回`false`立即如果集合中不有任何对象。</span><span class="sxs-lookup"><span data-stu-id="e2f48-130">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method returns `false` immediately if there are no objects in the collection.</span></span>  
  
 <span data-ttu-id="e2f48-131"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> 返回`true`直到它已达到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="e2f48-131"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="e2f48-132">然后，它返回`false`为每个后续调用。</span><span class="sxs-lookup"><span data-stu-id="e2f48-132">It then returns `false` for each successive call.</span></span> <span data-ttu-id="e2f48-133">但是，一旦<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>已返回`false`，则访问<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>属性引发异常。</span><span class="sxs-lookup"><span data-stu-id="e2f48-133">However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span>  
  
 <span data-ttu-id="e2f48-134">创建后，枚举数位于早于第一个<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>对象在集合中，并在首次调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>集合中定位到第一个对象的枚举器。</span><span class="sxs-lookup"><span data-stu-id="e2f48-134">Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="keyContainerPermissionAccessEntryEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2f48-135">将枚举数重置到集合的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-135">Resets the enumerator to the beginning of the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2f48-136">一个枚举器将只进的方向移动。</span><span class="sxs-lookup"><span data-stu-id="e2f48-136">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="e2f48-137">使用此方法以返回到集合的开头。</span><span class="sxs-lookup"><span data-stu-id="e2f48-137">Use this method to return to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="e2f48-138"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>方法将光标定位在集合中的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e2f48-138">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection.</span></span> <span data-ttu-id="e2f48-139">在调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>，不需要调用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>使光标向前移动到第一个对象。</span><span class="sxs-lookup"><span data-stu-id="e2f48-139">After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2f48-140">获取集合中的当前对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-140">Gets the current object in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2f48-141">集合中的当前对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2f48-141">The current object in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2f48-142">不调用此方法。使用<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>属性改为。</span><span class="sxs-lookup"><span data-stu-id="e2f48-142">Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>