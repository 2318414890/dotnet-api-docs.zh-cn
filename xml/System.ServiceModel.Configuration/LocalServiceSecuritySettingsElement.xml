<Type Name="LocalServiceSecuritySettingsElement" FullName="System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement">
  <TypeSignature Language="C#" Value="public sealed class LocalServiceSecuritySettingsElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalServiceSecuritySettingsElement extends System.ServiceModel.Configuration.ServiceModelConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalServiceSecuritySettingsElement&#xA;Inherits ServiceModelConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalServiceSecuritySettingsElement sealed : System::ServiceModel::Configuration::ServiceModelConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.ServiceModelConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a88e6-101">配置本地服务的安全设置。</span><span class="sxs-lookup"><span data-stu-id="a88e6-101">Configures the security settings of a local service.</span></span> <span data-ttu-id="a88e6-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="a88e6-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalServiceSecuritySettingsElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalServiceSecuritySettingsElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a88e6-103">初始化 <see cref="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a88e6-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplays">
      <MemberSignature Language="C#" Value="public bool DetectReplays { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetectReplays" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays" />
      <MemberSignature Language="VB.NET" Value="Public Property DetectReplays As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DetectReplays { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("detectReplays", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-104">获取或设置一个布尔值，该值指定是否自动检测和处理针对通道的重播攻击。</span><span class="sxs-lookup"><span data-stu-id="a88e6-104">Gets or sets a Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.</span></span></summary>
        <value>
          <span data-ttu-id="a88e6-105">如果自动检测和处理针对通道的重播攻击，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88e6-105"><see langword="true" /> if replay attacks against the channel are detected and dealt with automatically; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a88e6-106">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88e6-106">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("inactivityTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-107">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定通道在超时之前等待的无活动持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-107">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration of inactivity the channel waits before it times out.</span></span></summary>
        <value><span data-ttu-id="a88e6-108">一个正的 <see cref="T:System.TimeSpan" />，指定通道在超时之前等待的无活动持续时间。默认值为“01:00:00”。</span><span class="sxs-lookup"><span data-stu-id="a88e6-108">A positive <see cref="T:System.TimeSpan" /> that specifies the duration of inactivity the channel waits before it times out. The default is "01:00:00".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuedCookieLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan IssuedCookieLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IssuedCookieLifetime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuedCookieLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan IssuedCookieLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("issuedCookieLifetime", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-109">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定颁发给所有新安全 Cookie 的生存期。</span><span class="sxs-lookup"><span data-stu-id="a88e6-109">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the lifetime issued to all new security cookies.</span></span></summary>
        <value><span data-ttu-id="a88e6-110">一个 <see cref="T:System.TimeSpan" />，指定颁发给所有新安全 Cookie 的生存期。</span><span class="sxs-lookup"><span data-stu-id="a88e6-110">A <see cref="T:System.TimeSpan" /> that specifies the lifetime issued to all new security cookies.</span></span> <span data-ttu-id="a88e6-111">默认值为“10:00:00”。</span><span class="sxs-lookup"><span data-stu-id="a88e6-111">The default value is "10:00:00".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-112">超过生存期的 Cookie 会被回收，且必须再次对其进行协商。</span><span class="sxs-lookup"><span data-stu-id="a88e6-112">Cookies that exceed their lifetime are recycled and must be negotiated again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedCookies">
      <MemberSignature Language="C#" Value="public int MaxCachedCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedCookies As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedCookies { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxCachedCookies", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-113">获取或设置一个值，该值指定可以缓存的最大 Cookie 数。</span><span class="sxs-lookup"><span data-stu-id="a88e6-113">Gets or sets a value that specifies the maximum number of cookies that can be cached.</span></span></summary>
        <value><span data-ttu-id="a88e6-114">可以缓存的最大 Cookie 数。</span><span class="sxs-lookup"><span data-stu-id="a88e6-114">The maximum number of cookies that can be cached.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxClockSkew">
      <MemberSignature Language="C#" Value="public TimeSpan MaxClockSkew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxClockSkew" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxClockSkew As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxClockSkew { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxClockSkew", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-115">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定通信双方的系统时钟之间的最大时间差异。</span><span class="sxs-lookup"><span data-stu-id="a88e6-115">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the maximum time difference between the system clocks of the two communicating parties.</span></span></summary>
        <value><span data-ttu-id="a88e6-116">一个 <see cref="T:System.TimeSpan" />，指定通信双方的系统时钟之间的最大时间差异。</span><span class="sxs-lookup"><span data-stu-id="a88e6-116">A <see cref="T:System.TimeSpan" /> that specifies the maximum time difference between the system clocks of the two communicating parties.</span></span> <span data-ttu-id="a88e6-117">默认值为“00:05:00”。</span><span class="sxs-lookup"><span data-stu-id="a88e6-117">The default value is "00:05:00".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-118">当此属性被设置为默认值时，接收方所接受的消息的发送时间戳最多可比消息接收时间晚或早 5 分钟。</span><span class="sxs-lookup"><span data-stu-id="a88e6-118">When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received.</span></span> <span data-ttu-id="a88e6-119">未通过发送时间测试的消息会被拒绝。</span><span class="sxs-lookup"><span data-stu-id="a88e6-119">Messages that do not pass the send-time test are rejected.</span></span> <span data-ttu-id="a88e6-120">此设置与 <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> 属性结合使用。</span><span class="sxs-lookup"><span data-stu-id="a88e6-120">This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingSessions">
      <MemberSignature Language="C#" Value="public int MaxPendingSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingSessions { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxPendingSessions", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-121">获取或设置一个值，该值指定服务支持的最大挂起安全会话数。</span><span class="sxs-lookup"><span data-stu-id="a88e6-121">Gets or sets a value that specifies the maximum number of pending security sessions that the service supports.</span></span></summary>
        <value><span data-ttu-id="a88e6-122">服务支持的最大挂起安全会话数。</span><span class="sxs-lookup"><span data-stu-id="a88e6-122">The maximum number of pending security sessions that the service supports.</span></span> <span data-ttu-id="a88e6-123">默认值为 1000。</span><span class="sxs-lookup"><span data-stu-id="a88e6-123">The default value is 1000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-124">达到此限制时，所有新客户端都会接收到 SOAP 错误。</span><span class="sxs-lookup"><span data-stu-id="a88e6-124">When this limit is reached, all new clients receive SOAP faults.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStatefulNegotiations">
      <MemberSignature Language="C#" Value="public int MaxStatefulNegotiations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxStatefulNegotiations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxStatefulNegotiations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxStatefulNegotiations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxStatefulNegotiations", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-125">获取或设置一个值，该值指定可以同时处于活动状态的最大安全协商数。</span><span class="sxs-lookup"><span data-stu-id="a88e6-125">Gets or sets a value that specifies the number of security negotiations that can be active concurrently.</span></span></summary>
        <value><span data-ttu-id="a88e6-126">可以同时处于活动状态的安全协商数。</span><span class="sxs-lookup"><span data-stu-id="a88e6-126">The number of security negotiations that can be active concurrently.</span></span> <span data-ttu-id="a88e6-127">默认值为 1024。</span><span class="sxs-lookup"><span data-stu-id="a88e6-127">The default value is 1024.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-128">超出限制的协商会话会进行排队。</span><span class="sxs-lookup"><span data-stu-id="a88e6-128">Negotiation sessions in excess of the limit are queued.</span></span> <span data-ttu-id="a88e6-129">仅当处于限制范围内的空间可用时才完成这些会话。</span><span class="sxs-lookup"><span data-stu-id="a88e6-129">They can only be completed when a space below the limit becomes available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NegotiationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan NegotiationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan NegotiationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property NegotiationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan NegotiationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("negotiationTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-130">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定服务器和客户端之间安全协商阶段的最长持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-130">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the maximum duration for the security negotiation phase between server and client.</span></span></summary>
        <value><span data-ttu-id="a88e6-131">一个正的 <see cref="T:System.TimeSpan" /> 值，指定服务器和客户端之间安全协商阶段的最长持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-131">A positive <see cref="T:System.TimeSpan" /> value that specifies the maximum duration for the security negotiation phase between server and client.</span></span> <span data-ttu-id="a88e6-132">默认值为“00:02:00”</span><span class="sxs-lookup"><span data-stu-id="a88e6-132">The default is "00:02:00"</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-133">如果超过时间限制，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a88e6-133">If the time limit expires, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReconnectTransportOnFailure">
      <MemberSignature Language="C#" Value="public bool ReconnectTransportOnFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReconnectTransportOnFailure" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property ReconnectTransportOnFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReconnectTransportOnFailure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("reconnectTransportOnFailure", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-134">获取或设置一个布尔值，该值指定使用 WS-Reliable 消息的连接在发生传输故障后是否尝试重新连接。</span><span class="sxs-lookup"><span data-stu-id="a88e6-134">Gets or sets a Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.</span></span></summary>
        <value>
          <span data-ttu-id="a88e6-135">如果使用 WS-Reliable 消息的连接在发生传输故障后尝试重新连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88e6-135"><see langword="true" /> if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a88e6-136">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a88e6-136">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-137">如果此属性为 `true`，则连接会无限次尝试重新连接。</span><span class="sxs-lookup"><span data-stu-id="a88e6-137">If this property is `true`, infinite reconnect attempts are attempted.</span></span> <span data-ttu-id="a88e6-138">只有非活动超时能够打断此循环；非活动超时在无法重新连接通道时使其引发异常。</span><span class="sxs-lookup"><span data-stu-id="a88e6-138">The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplayCacheSize">
      <MemberSignature Language="C#" Value="public int ReplayCacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReplayCacheSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplayCacheSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReplayCacheSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("replayCacheSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-139">获取或设置一个值，该值指定用于重播检测的缓存 Nonce 的数目。</span><span class="sxs-lookup"><span data-stu-id="a88e6-139">Gets or sets a value that specifies the number of cached nonces used for replay detection.</span></span></summary>
        <value><span data-ttu-id="a88e6-140">用于重播检测的缓存 Nonce 的数目。</span><span class="sxs-lookup"><span data-stu-id="a88e6-140">The number of cached nonces used for replay detection.</span></span> <span data-ttu-id="a88e6-141">默认值为 500000。</span><span class="sxs-lookup"><span data-stu-id="a88e6-141">The default value is 500000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-142">如果超出此限制，则会移除最旧的 Nonce，并且为新消息创建一个新的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="a88e6-142">If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplayWindow">
      <MemberSignature Language="C#" Value="public TimeSpan ReplayWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReplayWindow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplayWindow As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReplayWindow { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("replayWindow", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-143">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定单个消息 Nonce 有效的持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-143">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration in which individual message nonces are valid.</span></span></summary>
        <value><span data-ttu-id="a88e6-144">一个 <see cref="T:System.TimeSpan" />，指定单个消息 Nonce 有效的持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-144">A <see cref="T:System.TimeSpan" /> that specifies the duration in which individual message nonces are valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-145">在此属性指定的时间之后，如果发送的消息与之前发送的消息具有相同的 Nonce，则该消息会被拒绝。</span><span class="sxs-lookup"><span data-stu-id="a88e6-145">After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted.</span></span> <span data-ttu-id="a88e6-146">此属性与 <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> 属性结合使用，以防止遭受重播攻击。</span><span class="sxs-lookup"><span data-stu-id="a88e6-146">This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks.</span></span> <span data-ttu-id="a88e6-147">攻击者可以在其重播时间窗口过期之后重播消息。</span><span class="sxs-lookup"><span data-stu-id="a88e6-147">An attacker can replay a message after its replay window has expired.</span></span> <span data-ttu-id="a88e6-148">但是，该消息无法通过 maxClockSkew 测试；如果消息的发送时间戳比消息接收时间晚或早指定的时间，则该测试会拒绝消息。</span><span class="sxs-lookup"><span data-stu-id="a88e6-148">This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionKeyRenewalInterval">
      <MemberSignature Language="C#" Value="public TimeSpan SessionKeyRenewalInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SessionKeyRenewalInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionKeyRenewalInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SessionKeyRenewalInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sessionKeyRenewalInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-149">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定一个持续时间，发起方将在此段时间之后续订安全会话的密钥。</span><span class="sxs-lookup"><span data-stu-id="a88e6-149">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration after which the initiator renews the key for the security session.</span></span></summary>
        <value><span data-ttu-id="a88e6-150">一个 <see cref="T:System.TimeSpan" />，指定一个持续时间，发起方将在此段时间之后续订安全会话的密钥。</span><span class="sxs-lookup"><span data-stu-id="a88e6-150">A <see cref="T:System.TimeSpan" /> that specifies the duration after which the initiator renews the key for the security session.</span></span> <span data-ttu-id="a88e6-151">默认值为“10:00:00”。</span><span class="sxs-lookup"><span data-stu-id="a88e6-151">The default is "10:00:00".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionKeyRolloverInterval">
      <MemberSignature Language="C#" Value="public TimeSpan SessionKeyRolloverInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SessionKeyRolloverInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionKeyRolloverInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SessionKeyRolloverInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sessionKeyRolloverInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-152">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定在密钥续订期间，上一个会话密钥对于传入消息有效的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="a88e6-152">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the time interval a previous session key is valid on incoming messages during a key renewal.</span></span> <span data-ttu-id="a88e6-153">默认值为“00:05:00”。</span><span class="sxs-lookup"><span data-stu-id="a88e6-153">The default is "00:05:00".</span></span></summary>
        <value><span data-ttu-id="a88e6-154">一个 <see cref="T:System.TimeSpan" />，指定在密钥续订期间，上一个会话密钥对于传入消息有效的持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-154">A <see cref="T:System.TimeSpan" /> that specifies the duration a previous session key is valid on incoming messages during a key renewal.</span></span> <span data-ttu-id="a88e6-155">默认值为“00:05:00”。</span><span class="sxs-lookup"><span data-stu-id="a88e6-155">The default is "00:05:00".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88e6-156">在密钥续订期间，客户端和服务器必须总是使用最新的可用密钥来发送消息。</span><span class="sxs-lookup"><span data-stu-id="a88e6-156">During key renewal, the client and server must always send messages using the most current available key.</span></span> <span data-ttu-id="a88e6-157">在此属性指定的翻转时间过期之前，双方都接受用上一个会话密钥加密的传入消息。</span><span class="sxs-lookup"><span data-stu-id="a88e6-157">Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimestampValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan TimestampValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimestampValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property TimestampValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimestampValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timestampValidityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88e6-158">获取或设置一个 <see cref="T:System.TimeSpan" />，它指定时间戳有效的持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-158">Gets or sets a <see cref="T:System.TimeSpan" /> that specifies the duration in which a time stamp is valid.</span></span></summary>
        <value><span data-ttu-id="a88e6-159">一个值为正的 <see cref="T:System.TimeSpan" />，指定时间戳有效的持续时间。</span><span class="sxs-lookup"><span data-stu-id="a88e6-159">A positive <see cref="T:System.TimeSpan" /> that specifies the duration in which a time stamp is valid.</span></span> <span data-ttu-id="a88e6-160">默认值为“00:15:00”。</span><span class="sxs-lookup"><span data-stu-id="a88e6-160">The default is "00:15:00".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>