<Type Name="WSDualHttpBindingElement" FullName="System.ServiceModel.Configuration.WSDualHttpBindingElement">
  <TypeSignature Language="C#" Value="public class WSDualHttpBindingElement : System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSDualHttpBindingElement extends System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WSDualHttpBindingElement&#xA;Inherits StandardBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSDualHttpBindingElement : System::ServiceModel::Configuration::StandardBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.StandardBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="676ac-101">表示安全且可互操作的绑定的配置元素，该绑定适合于双工服务协定或通过 SOAP 媒介进行的通信。</span><span class="sxs-lookup"><span data-stu-id="676ac-101">Represents the configuration element for a secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676ac-102">wsDualHttpBinding 是一个适合于双工服务协定的安全、可靠且可互操作的绑定。</span><span class="sxs-lookup"><span data-stu-id="676ac-102">The wsDualHttpBinding is a secure, reliable, interoperable binding suitable for duplex service contracts.</span></span> <span data-ttu-id="676ac-103">默认情况下，它会生成一个运行时堆栈，该堆栈包含 WS-ReliableMessaging 以保证可靠性，包含 WS-Security 以保证消息安全性和进行身份验证，包含 HTTP 以便进行消息传递，并且包含 Text/XML 消息编码功能。</span><span class="sxs-lookup"><span data-stu-id="676ac-103">By default, it generates a run-time stack with WS-ReliableMessaging for reliability, WS-Security for message security and authentication, HTTP for message delivery, and a Text/XML message encoding.</span></span>  
  
 <span data-ttu-id="676ac-104">此绑定要求客户端具有公共 URI。</span><span class="sxs-lookup"><span data-stu-id="676ac-104">This binding requires that the client has a public URI.</span></span> <span data-ttu-id="676ac-105">使用它可以通过一个或多个 SOAP 媒介可靠地进行通信。</span><span class="sxs-lookup"><span data-stu-id="676ac-105">It can be used to communicate reliably through one or more SOAP intermediaries.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.WSDualHttpBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="676ac-106">初始化 <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="676ac-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="676ac-107">初始化 <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="676ac-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBindingElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBindingElement(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="676ac-108">绑定的配置名称。</span><span class="sxs-lookup"><span data-stu-id="676ac-108">The configuration name of the binding.</span></span> <span data-ttu-id="676ac-109">因为此值用作绑定的标识，所以它应该是唯一的。</span><span class="sxs-lookup"><span data-stu-id="676ac-109">This value should be unique because it is used as identification for the binding.</span></span></param>
        <summary><span data-ttu-id="676ac-110">用指定的名称初始化 <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="676ac-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class with the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingElementType">
      <MemberSignature Language="C#" Value="protected override Type BindingElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingElementType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property BindingElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ BindingElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-111">获取此绑定元素的类型。</span><span class="sxs-lookup"><span data-stu-id="676ac-111">Gets the type of this binding element.</span></span></summary>
        <value><span data-ttu-id="676ac-112">此绑定元素的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-112">The <see cref="T:System.Type" /> of this binding element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("bypassProxyOnLocal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-113">获取或设置一个布尔值，该值指定对本地地址是否不使用代理服务器。</span><span class="sxs-lookup"><span data-stu-id="676ac-113">Gets or sets a boolean value that specifies whether to bypass the proxy server for local addresses.</span></span></summary>
        <value>
          <span data-ttu-id="676ac-114">如果对本地地址不使用代理服务器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-114"><see langword="true" /> if the proxy server is bypassed for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="676ac-115">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-115">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("clientBaseAddress", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-116">获取或设置一个 URI，该 URI 指定客户端为接收来自服务的响应消息而侦听的基址。</span><span class="sxs-lookup"><span data-stu-id="676ac-116">Gets or sets a URI that specifies the base address the client listens to for response messages from the service.</span></span></summary>
        <value><span data-ttu-id="676ac-117">一个 URI，指定客户端为接收来自服务的响应消息而侦听的基址。</span><span class="sxs-lookup"><span data-stu-id="676ac-117">A URI that specifies the base address that the client listens to for response messages from the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676ac-118">如果此属性具有值，则此地址（加上每个通道的 GUID）会用于侦听。</span><span class="sxs-lookup"><span data-stu-id="676ac-118">If this property has a value, this address (plus a GUID for each channel) is used for listening.</span></span> <span data-ttu-id="676ac-119">否则，将以传输特定的方式生成客户端基址。</span><span class="sxs-lookup"><span data-stu-id="676ac-119">Otherwise, the client base address is generated in a transport-specific manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("hostNameComparisonMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-120">获取或设置用于分析 URI 的 HTTP 主机名比较模式。</span><span class="sxs-lookup"><span data-stu-id="676ac-120">Gets or sets the HTTP hostname comparison mode used to parse URIs.</span></span></summary>
        <value><span data-ttu-id="676ac-121">一个有效的 <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 值，该值指定在对 URI 进行匹配时，是否使用主机名来访问服务。</span><span class="sxs-lookup"><span data-stu-id="676ac-121">A valid <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that specifies whether the hostname is used to reach the service when matching on the URI.</span></span> <span data-ttu-id="676ac-122">默认值为 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />，表示忽略匹配项中的主机名。</span><span class="sxs-lookup"><span data-stu-id="676ac-122">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="676ac-123">一个绑定元素集合。</span><span class="sxs-lookup"><span data-stu-id="676ac-123">A collection of binding elements.</span></span></param>
        <summary><span data-ttu-id="676ac-124">使用指定绑定集合的内容来初始化此绑定配置节。</span><span class="sxs-lookup"><span data-stu-id="676ac-124">Initializes this binding configuration section with the content of the specified binding collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBufferPoolSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-125">获取或设置可为特定消息缓冲区管理器（该管理器在配置了此绑定的终结点接收消息）分配的最大内存量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="676ac-125">Gets or sets the maximum amount of memory, in bytes, that can be allocated for the message buffer manager, which receives messages at the endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="676ac-126">配置了此绑定的终结点所使用的缓冲池的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="676ac-126">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span></span> <span data-ttu-id="676ac-127">默认值为 524288 字节。</span><span class="sxs-lookup"><span data-stu-id="676ac-127">The default value is 524288 bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxReceivedMessageSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-128">获取或设置配置了此绑定配置的通道上可以接收的消息的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="676ac-128">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span></span></summary>
        <value><span data-ttu-id="676ac-129">绑定可处理的最大消息大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="676ac-129">The maximum size, in bytes, for a message that is processed by the binding.</span></span> <span data-ttu-id="676ac-130">默认值为 65,536 字节。</span><span class="sxs-lookup"><span data-stu-id="676ac-130">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676ac-131">使用 <xref:System.ServiceModel.WSDualHttpBinding> 类的服务能够在网络上接收的消息的大小受到为每个消息分配的内存量的限制。</span><span class="sxs-lookup"><span data-stu-id="676ac-131">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> class is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="676ac-132">对消息大小进行的此限制旨在降低遭受拒绝服务 (DoS) 攻击的可能性。</span><span class="sxs-lookup"><span data-stu-id="676ac-132">This bound on message size is intended to limit exposure to DoS-style attacks.</span></span>  
  
 <span data-ttu-id="676ac-133">请注意，<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize%2A> 和 <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize%2A> 的设置都是本地行为设置。</span><span class="sxs-lookup"><span data-stu-id="676ac-133">Note that the settings for <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize%2A>, are local behavioral settings.</span></span> <span data-ttu-id="676ac-134">这表示它们不会传输到元数据中的其他终结点。</span><span class="sxs-lookup"><span data-stu-id="676ac-134">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="676ac-135">如果为元数据中一个最大消息大小为 2GB 的服务生成了一个代理，则该代理的最大消息大小仍为默认的 64K。</span><span class="sxs-lookup"><span data-stu-id="676ac-135">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</span></span> <span data-ttu-id="676ac-136">这样就使对消息和消息缓冲区大小进行适当限制的控制权处在本地管理员的管辖范围内。</span><span class="sxs-lookup"><span data-stu-id="676ac-136">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("messageEncoding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-137">获取或设置用于对消息进行编码的编码器。</span><span class="sxs-lookup"><span data-stu-id="676ac-137">Gets or sets the encoder used to encode the message.</span></span></summary>
        <value><span data-ttu-id="676ac-138">一个 <see cref="T:System.ServiceModel.WSMessageEncoding" /> 值，它指定用于对消息进行编码的编码器。</span><span class="sxs-lookup"><span data-stu-id="676ac-138">A <see cref="T:System.ServiceModel.WSMessageEncoding" /> value that specifies the encoder used to encode the message.</span></span> <span data-ttu-id="676ac-139">默认值为 <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-139">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApplyConfiguration(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnApplyConfiguration(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="676ac-140">要应用的绑定。</span><span class="sxs-lookup"><span data-stu-id="676ac-140">The binding to be applied.</span></span></param>
        <summary><span data-ttu-id="676ac-141">在将指定绑定集合的内容应用到此绑定配置元素时调用。</span><span class="sxs-lookup"><span data-stu-id="676ac-141">Called when the content of a specified binding collection is applied to this binding configuration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-142">获取一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 实例，该实例包含一个 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象集合，这些对象可以是此配置元素的属性或 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="676ac-142">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></summary>
        <value><span data-ttu-id="676ac-143">一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 实例，该实例包含一个 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象集合，这些对象可以是此配置元素的属性或 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="676ac-143">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("proxyAddress", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-144">获取或设置一个指定 HTTP 代理的地址的 URI。</span><span class="sxs-lookup"><span data-stu-id="676ac-144">Gets or set a URI that specifies the address of the HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="676ac-145">一个指定 HTTP 代理的地址的 URI。</span><span class="sxs-lookup"><span data-stu-id="676ac-145">A URI that specifies the address of the HTTP proxy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676ac-146">如果 <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> 属性设置为 `true`，则该属性的值被忽略。</span><span class="sxs-lookup"><span data-stu-id="676ac-146">If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> property is set to `true`, the value of this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotasElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ ReaderQuotas { System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("readerQuotas")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-147">获取或设置可由配置了此绑定的终结点处理的 SOAP 消息的复杂性约束。</span><span class="sxs-lookup"><span data-stu-id="676ac-147">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="676ac-148">指定复杂性约束的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-148">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676ac-149">复杂性约束包括多个项，例如最大元素深度、消息中的字符串内容的最大长度等。</span><span class="sxs-lookup"><span data-stu-id="676ac-149">The complexity constraints include items such as a maximum element depth, or a maximum length for string content within the message.</span></span> <span data-ttu-id="676ac-150">这些约束可以抵御某种类型的拒绝服务 (DOS) 攻击，这些攻击试图利用消息复杂性来占用终结点处理资源。</span><span class="sxs-lookup"><span data-stu-id="676ac-150">The constraints protect against a type of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.StandardBindingReliableSessionElement ReliableSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.StandardBindingReliableSessionElement ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReliableSession As StandardBindingReliableSessionElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::StandardBindingReliableSessionElement ^ ReliableSession { System::ServiceModel::Configuration::StandardBindingReliableSessionElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("reliableSession")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.StandardBindingReliableSessionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-151">获取一个配置元素，该元素指定是否为配置了此绑定的终结点启用可靠会话。</span><span class="sxs-lookup"><span data-stu-id="676ac-151">Gets a configuration element that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</span></span></summary>
        <value><span data-ttu-id="676ac-152">一个 <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" />，指定是否为配置了此绑定的终结点启用可靠会话。</span><span class="sxs-lookup"><span data-stu-id="676ac-152">An <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" /> that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676ac-153">配置了 wsDualHttpBinding 绑定的服务要求使用可靠会话。</span><span class="sxs-lookup"><span data-stu-id="676ac-153">A reliable session is required for services configured with wsDualHttpBinding binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.WSDualHttpSecurityElement Security { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.WSDualHttpSecurityElement Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Security" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As WSDualHttpSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::WSDualHttpSecurityElement ^ Security { System::ServiceModel::Configuration::WSDualHttpSecurityElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("security")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.WSDualHttpSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-154">获取用于此绑定的安全类型。</span><span class="sxs-lookup"><span data-stu-id="676ac-154">Gets the type of security to be used with this binding.</span></span></summary>
        <value><span data-ttu-id="676ac-155">一个 <see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" />，指定用于此绑定的安全设置。</span><span class="sxs-lookup"><span data-stu-id="676ac-155">The <see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" /> that specifies the security settings used with this binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("textEncoding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-156">获取或设置要用于在绑定上发出消息的字符集编码。</span><span class="sxs-lookup"><span data-stu-id="676ac-156">Gets or sets the character set encoding to be used for emitting messages on the binding.</span></span></summary>
        <value><span data-ttu-id="676ac-157">一个有效的 <see cref="T:System.Text.Encoding" /> 值，该值指定要用于在绑定上发出消息的字符集编码。</span><span class="sxs-lookup"><span data-stu-id="676ac-157">A valid <see cref="T:System.Text.Encoding" /> value that specifies the character set encoding to be used for emitting messages on the binding.</span></span> <span data-ttu-id="676ac-158">默认值为 <see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-158">The default is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("transactionFlow", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-159">获取或设置一个布尔值，该值指定绑定是否支持流动 WS-Transactions。</span><span class="sxs-lookup"><span data-stu-id="676ac-159">Gets or sets a boolean value that specifies whether the binding supports flowing WS-Transactions.</span></span></summary>
        <value>
          <span data-ttu-id="676ac-160">如果绑定支持流动 WS-Transactions，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-160"><see langword="true" /> if the binding supports flowing WS-Transactions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="676ac-161">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676ac-162">默认值指定客户端不对事务进行流处理，并且服务拒绝带有流事务消息头的消息。</span><span class="sxs-lookup"><span data-stu-id="676ac-162">The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useDefaultWebProxy", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="676ac-163">获取或设置一个布尔值，该值指定是否使用系统的自动配置 HTTP 代理。</span><span class="sxs-lookup"><span data-stu-id="676ac-163">Gets or sets a boolean value that specifies whether the system’s auto-configured HTTP proxy is used.</span></span></summary>
        <value>
          <span data-ttu-id="676ac-164">如果使用系统的自动配置 HTTP 代理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-164"><see langword="true" /> if the system’s auto-configured HTTP proxy is used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="676ac-165">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="676ac-165">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>