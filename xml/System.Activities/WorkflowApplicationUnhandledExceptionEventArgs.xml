<Type Name="WorkflowApplicationUnhandledExceptionEventArgs" FullName="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32346c0781c5b93bdde156ae0e7a68ae9bb7bb7f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30358521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowApplicationUnhandledExceptionEventArgs : System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationUnhandledExceptionEventArgs extends System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationUnhandledExceptionEventArgs&#xA;Inherits WorkflowApplicationEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationUnhandledExceptionEventArgs : System::Activities::WorkflowApplicationEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.WorkflowApplicationEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bf76d-101">提供有关工作流实例中发生的未处理异常的信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf76d-101">Provides information about an unhandled exception that occurred in a workflow instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf76d-102">如果异常由某个活动引发并且未经处理，则默认行为是终止该工作流实例。</span><span class="sxs-lookup"><span data-stu-id="bf76d-102">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="bf76d-103">如果存在 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序，则它会重写此默认行为。</span><span class="sxs-lookup"><span data-stu-id="bf76d-103">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="bf76d-104">通过此处理程序，工作流宿主作者能够提供合适的处理操作，例如自定义日志记录、中止工作流、取消工作流或终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-104">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf76d-105">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-105">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="bf76d-106">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="bf76d-106">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="bf76d-107">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-107">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExceptionSource">
      <MemberSignature Language="C#" Value="public System.Activities.Activity ExceptionSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity ExceptionSource" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSource As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ ExceptionSource { System::Activities::Activity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf76d-108">获取作为未处理异常的源的活动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf76d-108">Gets the activity that is the source of the unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf76d-109">一个活动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf76d-109">An activity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf76d-110">如果异常由某个活动引发并且未经处理，则默认行为是终止该工作流实例。</span><span class="sxs-lookup"><span data-stu-id="bf76d-110">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="bf76d-111">如果存在 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序，则它会重写此默认行为。</span><span class="sxs-lookup"><span data-stu-id="bf76d-111">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="bf76d-112">通过此处理程序，工作流宿主作者能够提供合适的处理操作，例如自定义日志记录、中止工作流、取消工作流或终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-112">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf76d-113">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-113">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="bf76d-114">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="bf76d-114">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="bf76d-115">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-115">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionSourceInstanceId">
      <MemberSignature Language="C#" Value="public string ExceptionSourceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExceptionSourceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSourceInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExceptionSourceInstanceId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf76d-116">获取作为未处理异常源的活动实例的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf76d-116">Gets the unique identifier of the activity instance that is the source of the unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf76d-117">作为未处理异常源的活动实例的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf76d-117">An identifier of the activity instance that is the source of the unhandled exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf76d-118">如果异常由某个活动引发并且未经处理，则默认行为是终止该工作流实例。</span><span class="sxs-lookup"><span data-stu-id="bf76d-118">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="bf76d-119">如果存在 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序，则它会重写此默认行为。</span><span class="sxs-lookup"><span data-stu-id="bf76d-119">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="bf76d-120">通过此处理程序，工作流宿主作者能够提供合适的处理操作，例如自定义日志记录、中止工作流、取消工作流或终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-120">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf76d-121">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-121">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="bf76d-122">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="bf76d-122">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="bf76d-123">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-123">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public Exception UnhandledException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception UnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ UnhandledException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf76d-124">获取工作流实例未处理的 <see cref="T:System.Exception" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf76d-124">Gets the <see cref="T:System.Exception" /> that was unhandled by the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf76d-125">工作流实例未处理的 <see cref="T:System.Exception" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf76d-125">The <see cref="T:System.Exception" /> that was unhandled by the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf76d-126">如果异常由某个活动引发并且未经处理，则默认行为是终止该工作流实例。</span><span class="sxs-lookup"><span data-stu-id="bf76d-126">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="bf76d-127">如果存在 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序，则它会重写此默认行为。</span><span class="sxs-lookup"><span data-stu-id="bf76d-127">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="bf76d-128">通过此处理程序，工作流宿主作者能够提供合适的处理操作，例如自定义日志记录、中止工作流、取消工作流或终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-128">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf76d-129">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-129">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="bf76d-130">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="bf76d-130">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="bf76d-131">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且终止工作流。</span><span class="sxs-lookup"><span data-stu-id="bf76d-131">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>