<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OrderablePartitioner`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac594e676539489c7f3d423af6660e27a2cb0a4ada5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94e676539489c7f3d423af6660e27a2cb0a4ada5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>Type of the elements in the collection.</source>
          <target state="translated">集合中的元素的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>Represents a particular manner of splitting an orderable data source into multiple partitions.</source>
          <target state="translated">表示将可排序数据源拆分为多个分区的特定方式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>The implementation of the derived class is responsible for ordering the elements into key-value pairs in whatever manner is appropriate.</source>
          <target state="translated">派生类的实现负责将元素排成中任何方式适合的键 / 值对。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>The following example shows how to implement an orderable partitioner that returns one element at a time:</source>
          <target state="translated">下面的示例演示如何实现一次返回一个元素的可排序分区：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>All public members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> are thread-safe and may be called from multiple threads concurrently.</source>
          <target state="translated">所有公共成员<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph>都是线程安全的可能会从多个线程同时调用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Indicates whether the elements in each partition are yielded in the order of increasing keys.</source>
          <target state="translated">指示是否按键增加的顺序生成每个分区中的元素。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Indicates whether elements in an earlier partition always come before elements in a later partition.</source>
          <target state="translated">指示前一分区中的元素是否始终排在后一分区中的元素之前。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</source>
          <target state="translated">如果为 true，则分区 0 中的每个元素的顺序键比分区 1 中的任何元素都要小，分区 1 中的每个元素的顺序键比分区 2 中的任何元素都要小，依次类推。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Indicates whether keys are normalized.</source>
          <target state="translated">指示是否规范化键。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>If true, all order keys are distinct integers in the range [0 ..</source>
          <target state="translated">如果为 true，所有顺序键均为范围 [0 .</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>numberOfElements-1].</source>
          <target state="translated">numberOfElements-1] 中的不同整数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</source>
          <target state="translated">如果为 false，顺序键仍必须互不相同，但只考虑其相对顺序，而不考虑其绝对值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Called from constructors in derived classes to initialize the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> class with the specified constraints on the index keys.</source>
          <target state="translated">从派生类中的构造函数进行调用以便使用索引键上指定的约束初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>Creates an object that can partition the underlying collection into a variable number of partitions.</source>
          <target state="translated">创建一个可将基础集合分区成可变数目的分区的对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>An object that can create partitions over the underlying data source.</source>
          <target state="translated">一个可针对基础数据源创建分区的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>The returned object implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">返回的对象实现<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>Calling <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the object creates another partition over the sequence.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>在对象上创建另一个分区序列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>The default implementation provides the same behavior as <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph> except that the returned set of partitions does not provide the keys for the elements.</source>
          <target state="translated">默认实现，提供相同的行为<ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph>只不过返回的组分区不提供的键的元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A&gt;</ph> method is only supported if the <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> property returns true.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A&gt;</ph>如果仅支持方法<ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph>属性返回 true。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>Dynamic partitioning is not supported by the base class.</source>
          <target state="translated">该基类不支持动态分区。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>It must be implemented in derived classes.</source>
          <target state="translated">它必须在派生类中实现。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Creates an object that can partition the underlying collection into a variable number of partitions.</source>
          <target state="translated">创建一个可将基础集合分区成可变数目的分区的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>An object that can create partitions over the underlying data source.</source>
          <target state="translated">一个可针对基础数据源创建分区的对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>The returned object implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">返回的对象实现<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Calling <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the object creates another partition over the sequence.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>在对象上创建另一个分区序列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Each partition is represented as an enumerator over key-value pairs.</source>
          <target state="translated">每个分区通过键-值对表示为一个枚举器。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>The value in the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements.</source>
          <target state="translated">对中的值是元素本身，并且键是一个整数，它确定此元素与其他元素的相对顺序。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph> method is only supported if the <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> property returns true.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph>如果仅支持方法<ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph>属性返回 true。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Dynamic partitioning is not supported by this partitioner.</source>
          <target state="translated">此分区程序不支持动态分区。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>The number of partitions to create.</source>
          <target state="translated">要创建的分区数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>Partitions the underlying collection into the specified number of orderable partitions.</source>
          <target state="translated">将基础集合分区成指定数目的可排序分区。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>A list containing <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> enumerators.</source>
          <target state="translated">一个包含 <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> 枚举器的列表。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>Each partition is represented as an enumerator over key-value pairs.</source>
          <target state="translated">每个分区通过键-值对表示为一个枚举器。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>The value of the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements in the data source.</source>
          <target state="translated">对的值是元素本身，并且键是一个整数，它确定此元素与数据源中的其他元素的相对顺序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>The number of partitions to create.</source>
          <target state="translated">要创建的分区数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>Partitions the underlying collection into the given number of ordered partitions.</source>
          <target state="translated">将基础集合分区成给定数目的可排序分区。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>A list containing <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> enumerators.</source>
          <target state="translated">一个包含 <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> 枚举器的列表。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>The default implementation provides the same behavior as <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A&gt;</ph> except that the returned set of partitions does not provide the keys for the elements.</source>
          <target state="translated">默认实现，提供相同的行为<ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A&gt;</ph>只不过返回的组分区不提供的键的元素。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>Gets whether order keys are normalized.</source>
          <target state="translated">获取是否规范化顺序键。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>true if the keys are normalized; otherwise false.</source>
          <target state="translated">如果规范化键，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A&gt;</ph> returns true, all order keys are distinct integers in the range [0 ..</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A&gt;</ph>返回 true，则所有的键进行排序是 [0..范围内的不同整数</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>numberOfElements-1].</source>
          <target state="translated">numberOfElements-1] 中的不同整数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>If the property returns false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</source>
          <target state="translated">如果该属性返回 false，顺序键仍必须是不同的但仅考虑它们的相对顺序，不其绝对值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>Gets whether elements in an earlier partition always come before elements in a later partition.</source>
          <target state="translated">获取前一分区中的元素是否始终排在后一分区中的元素之前。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>true if the elements in an earlier partition always come before elements in a later partition; otherwise false.</source>
          <target state="translated">如果前一分区中的元素始终排在后一分区中的元素之前，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A&gt;</ph> returns true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A&gt;</ph>返回 true，则分区 0 中的每个元素具有较小的排序键与分区 1，分区 1 中的每个元素中的任意元素具有较小的顺序键比分区 2，依次类推中的任意元素。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition">
          <source>Gets whether elements in each partition are yielded in the order of increasing keys.</source>
          <target state="translated">获取是否按键增加的顺序生成每个分区中的元素。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition">
          <source>true if the elements in each partition are yielded in the order of increasing keys; otherwise false.</source>
          <target state="translated">如果按键增加的顺序生成每个分区中的元素，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>