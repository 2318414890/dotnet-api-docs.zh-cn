<Type Name="ConcurrentDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Concurrent.ConcurrentDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb441d3e4c3c8fdf704d8a871c1566db184c9e14" />
    <Meta Name="ms.sourcegitcommit" Value="d71cc71109ed3cbcf3406a10a3cd7ac7e30f5e0c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/10/2018" />
    <Meta Name="ms.locfileid" Value="51525809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class ConcurrentDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type ConcurrentDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="be6c5-101">字典中的键的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6c5-101">The type of the keys in the dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="be6c5-102">字典中的值的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6c5-102">The type of the values in the dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="be6c5-103">表示可由多个线程同时访问的键/值对的线程安全集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6c5-103">Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-104">对于非常大<xref:System.Collections.Concurrent.ConcurrentDictionary%602>对象，您可以将最大数组大小增加到 2 千兆字节 (GB) 的 64 位系统上通过将配置元素设置为`true`在运行时环境中。</span><span class="sxs-lookup"><span data-stu-id="be6c5-104">For very large <xref:System.Collections.Concurrent.ConcurrentDictionary%602> objects, you can increase the maximum array size to 2 gigabytes (GB) on a 64-bit system by setting the  configuration element to `true` in the run-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6c5-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> 实现<xref:System.Collections.Generic.IReadOnlyCollection%601>并<xref:System.Collections.Generic.IReadOnlyDictionary%602>开头的接口[!INCLUDE[net_v46](~/includes/net-v46-md.md)]; 在以前版本的.NET Framework 中，<xref:System.Collections.Concurrent.ConcurrentDictionary%602>类未实现这些接口。</span><span class="sxs-lookup"><span data-stu-id="be6c5-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> and <xref:System.Collections.Generic.IReadOnlyDictionary%602> interfaces starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class did not implement these interfaces.</span></span>  
  
 <span data-ttu-id="be6c5-106">像<xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType>类，<xref:System.Collections.Concurrent.ConcurrentDictionary%602>实现<xref:System.Collections.Generic.IDictionary%602>接口。</span><span class="sxs-lookup"><span data-stu-id="be6c5-106">Like the <xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> class, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span> <span data-ttu-id="be6c5-107">此外，<xref:System.Collections.Concurrent.ConcurrentDictionary%602>用于添加或更新在字典中，键/值对提供几种方法下, 表中所述。</span><span class="sxs-lookup"><span data-stu-id="be6c5-107">In addition, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> provides several methods for adding or updating key/value pairs in the dictionary, as described in the following table.</span></span>  
  
|<span data-ttu-id="be6c5-108">任务</span><span class="sxs-lookup"><span data-stu-id="be6c5-108">To do this</span></span>|<span data-ttu-id="be6c5-109">使用此方法</span><span class="sxs-lookup"><span data-stu-id="be6c5-109">Use this method</span></span>|<span data-ttu-id="be6c5-110">用法说明</span><span class="sxs-lookup"><span data-stu-id="be6c5-110">Usage notes</span></span>|  
|----------------|---------------------|-----------------|  
|<span data-ttu-id="be6c5-111">如果它尚不存在字典中向字典中，添加新的密钥</span><span class="sxs-lookup"><span data-stu-id="be6c5-111">Add a new key to the dictionary, if it doesn’t already exist in the dictionary</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A>|<span data-ttu-id="be6c5-112">如果字典中当前不存在该键，则此方法将添加指定的键/值对。</span><span class="sxs-lookup"><span data-stu-id="be6c5-112">This method adds the specified key/value pair, if the key doesn’t currently exist in the dictionary.</span></span> <span data-ttu-id="be6c5-113">该方法返回`true`或`false`具体取决于是否已添加新对。</span><span class="sxs-lookup"><span data-stu-id="be6c5-113">The method returns `true` or `false` depending on whether the new pair was added.</span></span>|  
|<span data-ttu-id="be6c5-114">如果该注册表项具有特定值，更新为现有键在字典中值</span><span class="sxs-lookup"><span data-stu-id="be6c5-114">Update the value for an existing key in the dictionary, if that key has a specific value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>|<span data-ttu-id="be6c5-115">此方法检查是否该密钥具有指定的值，如果它，则用新值更新该键。</span><span class="sxs-lookup"><span data-stu-id="be6c5-115">This method checks whether the key has a specified value, and if it does, updates the key with a new value.</span></span> <span data-ttu-id="be6c5-116">它相当于<xref:System.Threading.Interlocked.CompareExchange%2A>方法，它的用于字典元素不同。</span><span class="sxs-lookup"><span data-stu-id="be6c5-116">It's similar to the <xref:System.Threading.Interlocked.CompareExchange%2A> method, except that it's used for dictionary elements.</span></span>|  
|<span data-ttu-id="be6c5-117">无条件地，在字典中存储键/值对，并覆盖已存在的键的值</span><span class="sxs-lookup"><span data-stu-id="be6c5-117">Store a key/value pair in the dictionary unconditionally, and overwrite the value of a key that already exists</span></span>|<span data-ttu-id="be6c5-118">索引器的资源库： `dictionary[key] = newValue`</span><span class="sxs-lookup"><span data-stu-id="be6c5-118">The indexer’s setter: `dictionary[key] = newValue`</span></span>||  
|<span data-ttu-id="be6c5-119">将键/值对添加到字典中，或如果密钥已存在，更新基于键的现有值的键的值</span><span class="sxs-lookup"><span data-stu-id="be6c5-119">Add a key/value pair to the dictionary, or if the key already exists, update the value for the key based on the key’s existing value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29><br /><br /> <span data-ttu-id="be6c5-120">- 或 -</span><span class="sxs-lookup"><span data-stu-id="be6c5-120">—or—</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29>|<span data-ttu-id="be6c5-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> 接受的密钥和两个委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key and two delegates.</span></span> <span data-ttu-id="be6c5-122">它使用的第一个委托，如果键不存在字典; 中它接受键，并返回应添加的密钥的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-122">It uses the first delegate if the key doesn’t exist in the dictionary; it accepts the key and returns the value that should be added for the key.</span></span> <span data-ttu-id="be6c5-123">如果在项存在; 它使用第二个委托它接受的键和其当前值，并返回新值应为键设置。</span><span class="sxs-lookup"><span data-stu-id="be6c5-123">It uses the second delegate if the key does exist; it accepts the key and its current value, and it returns the new value that should be set for the key.</span></span><br /><br /> <span data-ttu-id="be6c5-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> 接受键、 值添加，以及更新委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key, a value to add, and the update delegate.</span></span> <span data-ttu-id="be6c5-125">这是上一重载相同，只不过它不使用委托来添加密钥。</span><span class="sxs-lookup"><span data-stu-id="be6c5-125">This is the same as the previous overload, except that it doesn't use a delegate to add a key.</span></span>|  
|<span data-ttu-id="be6c5-126">获取此键在字典中，将值添加到字典并将其返回如果该键不存在的值</span><span class="sxs-lookup"><span data-stu-id="be6c5-126">Get the value for a key in the dictionary, adding the value to the dictionary and returning it if the key doesn’t exist</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29><br /><br /> <span data-ttu-id="be6c5-127">- 或 -</span><span class="sxs-lookup"><span data-stu-id="be6c5-127">—or—</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29>|<span data-ttu-id="be6c5-128">这些重载提供迟缓初始化为键/值对在字典中，仅当找不到添加的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-128">These overloads provide lazy initialization for a key/value pair in the dictionary, adding the value only if it’s not there.</span></span><br /><br /> <span data-ttu-id="be6c5-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> 采用要添加密钥不存在的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> takes the value to be added if the key doesn’t exist.</span></span><br /><br /> <span data-ttu-id="be6c5-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> 将一个委托，它将生成值，如果不存在。</span><span class="sxs-lookup"><span data-stu-id="be6c5-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> takes a delegate that will generate the value if the key doesn’t exist.</span></span>|  
  
 <span data-ttu-id="be6c5-131">所有这些操作是原子操作，并且是线程安全的所有其他操作方面<xref:System.Collections.Concurrent.ConcurrentDictionary%602>类。</span><span class="sxs-lookup"><span data-stu-id="be6c5-131">All these operations are atomic and are thread-safe with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span> <span data-ttu-id="be6c5-132">唯一的例外是，它是接受一个委托，委托的方法<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>和<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>。</span><span class="sxs-lookup"><span data-stu-id="be6c5-132">The only exceptions are the methods that accept a delegate, that is, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>.</span></span> <span data-ttu-id="be6c5-133">修改和向字典中，写入操作<xref:System.Collections.Concurrent.ConcurrentDictionary%602>使用细粒度锁定，以确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="be6c5-133">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="be6c5-134">（在字典上的读取操作执行无锁方式。）但是，外部锁以避免出现问题造成的执行锁下的未知的代码调用这些方法的委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-134">(Read operations on the dictionary are performed in a lock-free manner.) However, delegates for these methods are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="be6c5-135">因此，执行这些委托的代码不是受该操作的原子性。</span><span class="sxs-lookup"><span data-stu-id="be6c5-135">Therefore, the code executed by these delegates is not subject to the atomicity of the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6c5-136">下面的示例演示如何构造<xref:System.Collections.Concurrent.ConcurrentDictionary%602>对象。</span><span class="sxs-lookup"><span data-stu-id="be6c5-136">The following example shows how to construct a <xref:System.Collections.Concurrent.ConcurrentDictionary%602> object.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="be6c5-137">所有公共和受保护成员<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />是线程安全的可能从多个线程同时使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6c5-137">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
      <span data-ttu-id="be6c5-138">但是，通过一个接口访问成员<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />实现，其中包括扩展方法不能保证是线程安全并可能需要由调用方同步。</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6c5-138">However, members accessed through one of the interfaces the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</span>
      </span>
    </threadsafe>
    <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
      <span data-ttu-id="be6c5-139">线程安全集合</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6c5-139">Thread-Safe Collections</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
      <span data-ttu-id="be6c5-140">如何：在 ConcurrentDictionary 中添加和移除项</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6c5-140">How to: Add and Remove Items from a ConcurrentDictionary</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-141">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-141">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-142">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-142">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-143">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-143">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-144">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例，该实例为空，具有默认的并发级别和默认的初始容量，并为键类型使用默认比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-144">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-145">默认的并发级别等于 Cpu 数。</span><span class="sxs-lookup"><span data-stu-id="be6c5-145">The default concurrency level is equal to the number of CPUs.</span></span> <span data-ttu-id="be6c5-146">并发级别越高，更多的并发写入操作可以发生而不会相互干扰和阻塞。</span><span class="sxs-lookup"><span data-stu-id="be6c5-146">The higher the concurrency level is, the more concurrent write operations can take place without interference and blocking.</span></span> <span data-ttu-id="be6c5-147">较高的并发级别值也会导致需要所有锁的操作 (例如，表重设大小，`ToArray`和`Count`) 以变得更高。</span><span class="sxs-lookup"><span data-stu-id="be6c5-147">Higher concurrency level values also cause operations that require all locks (for example, table resizing, `ToArray` and `Count`) to become more expensive.</span></span> <span data-ttu-id="be6c5-148">构造大型字典时，默认的容量 (DEFAULT_CAPACITY)，它表示初始存储桶数，是字典的非常小的大小和调整大小活动数之间进行权衡。</span><span class="sxs-lookup"><span data-stu-id="be6c5-148">The default capacity (DEFAULT_CAPACITY), which represents the initial number of buckets, is a trade-off between the size of a very small dictionary and the number of resizes when constructing a large dictionary.</span></span> <span data-ttu-id="be6c5-149">此外，容量不应为整除小的质数。</span><span class="sxs-lookup"><span data-stu-id="be6c5-149">Also, the capacity should not be divisible by a small prime number.</span></span> <span data-ttu-id="be6c5-150">默认的容量为 31。</span><span class="sxs-lookup"><span data-stu-id="be6c5-150">The default capacity is 31.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-151">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-151">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-152">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-152">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="be6c5-153">
            <see cref="T:System.Collections.Generic.IEnumerable`1" />，它的元素被复制到新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-153">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-154">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例，该实例包含从指定的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 中复制的元素，具有默认的并发级别和默认的初始容量，并为键类型使用默认比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-154">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IEnumerable`1" />, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-155">
            <paramref name="collection" /> 或其中的任一键为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-155">
              <paramref name="collection" /> or any of its keys is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be6c5-156">
            <paramref name="collection" /> 包含一个或多个重复键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-156">
              <paramref name="collection" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-157">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-157">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-158">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-158">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="be6c5-159">在对键进行比较时使用的相等比较实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-159">The equality comparison implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-160">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例，该实例为空，具有默认的并发级别和容量，并使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-160">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level and capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-161">
            <paramref name="comparer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-161">
              <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-162">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-162">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-163">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-163">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="be6c5-164">
            <see cref="T:System.Collections.Generic.IEnumerable`1" />，它的元素被复制到新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-164">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="be6c5-165">在对键进行比较时使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-165">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-166">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例，该实例包含从指定的 <see cref="T:System.Collections.IEnumerable" /> 中复制的元素，具有默认的并发级别和默认的初始容量，并使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-166">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> has the default concurrency level, has the default initial capacity, and uses the specified  <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-167">
            <paramref name="collection" /> 或 <paramref name="comparer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-167">
              <paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-168">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-168">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-169">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-169">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel">
          <span data-ttu-id="be6c5-170">将同时更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的线程的估计数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-170">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="be6c5-171">
            <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 可包含的初始元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-171">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-172">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例，该实例为空，具有指定的并发级别和容量，并为键类型使用默认比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-172">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be6c5-173">
            <paramref name="concurrencyLevel" /> 小于 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-173">
              <paramref name="concurrencyLevel" /> is less than 1.</span>
          </span>
          <span data-ttu-id="be6c5-174">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-174">-or-</span>
          </span>
          <span data-ttu-id="be6c5-175">
            <paramref name="capacity" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-175">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-176">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-176">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-177">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-177">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, collection, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel">
          <span data-ttu-id="be6c5-178">将同时更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的线程的估计数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-178">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="be6c5-179">
            <see cref="T:System.Collections.Generic.IEnumerable`1" />，它的元素被复制到新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-179">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="be6c5-180">在对键进行比较时使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-180">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-181">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例，该实例包含从指定的 <see cref="T:System.Collections.IEnumerable" /> 中复制的元素并使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-181">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" />, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-182">
            <paramref name="collection" /> 或 <paramref name="comparer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-182">
              <paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be6c5-183">
            <paramref name="concurrencyLevel" /> 小于 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-183">
              <paramref name="concurrencyLevel" /> is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be6c5-184">
            <paramref name="collection" /> 包含一个或多个重复键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-184">
              <paramref name="collection" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-185">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-185">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-186">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-186">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer, comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; : int * int * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt; (concurrencyLevel, capacity, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel">
          <span data-ttu-id="be6c5-187">将同时更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的线程的估计数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-187">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="be6c5-188">
            <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 可包含的初始元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-188">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="be6c5-189">在对键进行比较时使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-189">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-190">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 类的新实例，该实例为空，具有指定的并发级别和指定的初始容量，并使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-190">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-191">
            <paramref name="comparer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-191">
              <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be6c5-192">
            <paramref name="concurrencyLevel" /> 或 <paramref name="capacity" /> 小于 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-192">
              <paramref name="concurrencyLevel" /> or <paramref name="capacity" /> is less than 1.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-193">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-193">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-194">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-194">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-195">如果该键不存在，则将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中；如果该键已经存在，则更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的键/值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-195">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="be6c5-196">下面的示例演示如何调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="be6c5-196">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-197">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-197">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-198">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-198">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, Func&lt;TKey,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; addValueFactory, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValueFactory As Func(Of TKey, TValue), updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Value&gt; * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-199">要添加的键或应更新其值的键</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-199">The key to be added or whose value should be updated</span>
          </span>
        </param>
        <param name="addValueFactory">
          <span data-ttu-id="be6c5-200">用于为空缺键生成值的函数</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-200">The function used to generate a value for an absent key</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="be6c5-201">用于基于键的现有值为现有键生成新值的函数</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-201">The function used to generate a new value for an existing key based on the key's existing value</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-202">如果该键不存在，则使用指定函数将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；如果该键已存在，则使用该函数更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的键/值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-202">Uses the specified functions to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-203">键的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-203">The new value for the key.</span>
          </span>
          <span data-ttu-id="be6c5-204">此为 <c>addValueFactory</c>（若没有键）的结果或 <c>updateValueFactory</c>（若有键）的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-204">This will be either be the result of <c>addValueFactory</c> (if the key was absent) or the result of <c>updateValueFactory</c> (if the key was present).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-205">如果您调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>在不同线程上同时`addValueFactory`可能被调用多次，但其键/值对可能不会添加到每个调用的字典。</span><span class="sxs-lookup"><span data-stu-id="be6c5-205">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="be6c5-206">修改和向字典中，写入操作<xref:System.Collections.Concurrent.ConcurrentDictionary%602>使用细粒度锁定，以确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="be6c5-206">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="be6c5-207">（在字典上的读取操作执行无锁方式。）但是，`addValueFactory`和`updateValueFactory`锁以避免出现的问题的可执行锁下的未知的代码从外部调用委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-207">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="be6c5-208">因此，<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>都不是所有其他操作方面原子<xref:System.Collections.Concurrent.ConcurrentDictionary%602>类。</span><span class="sxs-lookup"><span data-stu-id="be6c5-208">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-209">
            <paramref name="key" />、<paramref name="addValueFactory" /> 或 <paramref name="updateValueFactory" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-209">
              <paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="be6c5-210">字典中已包含元素的最大数量(<see cref="F:System.Int32.MaxValue" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-210">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-211">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-211">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-212">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-212">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, TValue addValue, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, !TValue addValue, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValue As TValue, updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, TValue addValue, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value * Func&lt;'Key, 'Value, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValue, updateValueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValue" Type="TValue" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-213">要添加的键或应更新其值的键</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-213">The key to be added or whose value should be updated</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="be6c5-214">要为空缺键添加的值</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-214">The value to be added for an absent key</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="be6c5-215">用于基于键的现有值为现有键生成新值的函数</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-215">The function used to generate a new value for an existing key based on the key's existing value</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-216">如果该键不存在，则将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中；如果该键已经存在，则通过使用指定的函数更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的键/值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-216">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-217">键的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-217">The new value for the key.</span>
          </span>
          <span data-ttu-id="be6c5-218">此为 <c>addValue</c> （若没有键）的结果或 <c>updateValueFactory</c>（若有键）的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-218">This will be either be <c>addValue</c> (if the key was absent) or the result of <c>updateValueFactory</c> (if the key was present).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="be6c5-219">以下示例代码演示如何初始化 <xref:System.Collections.Concurrent.ConcurrentDictionary%602> 以及如何使用 AddOrUpdate 方法向集合添加附加项并更新现有项。</span><span class="sxs-lookup"><span data-stu-id="be6c5-219">The following code example shows how to initialize an <xref:System.Collections.Concurrent.ConcurrentDictionary%602> and how to use the AddOrUpdate method to add an additional item to the collection, and update the existing items.</span></span>  
  
 [!code-csharp[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/cs/program.cs#1)]
 [!code-vb[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/vb/module1.vb#1)]  

## Remarks  
 <span data-ttu-id="be6c5-220">修改和向字典中，写入操作<xref:System.Collections.Concurrent.ConcurrentDictionary%602>使用细粒度锁定，以确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="be6c5-220">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="be6c5-221">（在字典上的读取操作执行无锁方式。）但是，`updateValueFactory`锁以避免出现的问题的可执行锁下的未知的代码从外部调用委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-221">(Read operations on the dictionary are performed in a lock-free manner.) However, the `updateValueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="be6c5-222">因此，<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>都不是所有其他操作方面原子<xref:System.Collections.Concurrent.ConcurrentDictionary%602>类。</span><span class="sxs-lookup"><span data-stu-id="be6c5-222">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-223">
            <paramref name="key" /> 或 <paramref name="updateValueFactory" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-223">
              <paramref name="key" /> or <paramref name="updateValueFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="be6c5-224">字典中已包含元素的最大数量(<see cref="F:System.Int32.MaxValue" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-224">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-225">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-225">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-226">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-226">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TArg,TValue&gt; updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; addValueFactory, class System.Func`4&lt;!TKey, !TValue, !!TArg, !TValue&gt; updateValueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate(Of TArg) (key As TKey, addValueFactory As Func(Of TKey, TArg, TValue), updateValueFactory As Func(Of TKey, TValue, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TArg, TValue&gt; ^ updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * Func&lt;'Key, 'Value, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.AddOrUpdate (key, addValueFactory, updateValueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TArg,TValue&gt;" />
        <Parameter Name="factoryArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TArg">
          <span data-ttu-id="be6c5-227">要传递到的参数的类型<c>addValueFactory</c>并<c>updateValueFactory</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-227">The type of an argument to pass into <c>addValueFactory</c> and <c>updateValueFactory</c>.</span>
          </span>
        </typeparam>
        <param name="key">
          <span data-ttu-id="be6c5-228">要添加的键或应更新其值的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-228">The key to be added or whose value should be updated.</span>
          </span>
        </param>
        <param name="addValueFactory">
          <span data-ttu-id="be6c5-229">用于为空缺键生成值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-229">The function used to generate a value for an absent key.</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="be6c5-230">用以基于键的现有值为现有键生成新值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-230">The function used to generate a new value for an existing key based on the key's existing value.</span>
          </span>
        </param>
        <param name="factoryArgument">
          <span data-ttu-id="be6c5-231">要传入 <c>addValueFactory</c> 和 <c>updateValueFactory</c> 的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-231">An argument to pass into <c>addValueFactory</c> and <c>updateValueFactory</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-232">使用指定函数和参数将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />中（若尚无键）；或使用指定函数和参数更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的键/值对（若已有键）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-232">Uses the specified functions and argument to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-233">键的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-233">The new value for the key.</span>
          </span>
          <span data-ttu-id="be6c5-234">此为 <c>addValueFactory</c>（若没有键）的结果或 <c>updateValueFactory</c>（若有键）的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-234">This will be either be the result of <c>addValueFactory</c> (if the key was absent) or the result of <c>updateValueFactory</c> (if the key was present).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-235">如果您调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>在不同线程上同时`addValueFactory`可能被调用多次，但其键/值对可能不会添加到每个调用的字典。</span><span class="sxs-lookup"><span data-stu-id="be6c5-235">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  

 <span data-ttu-id="be6c5-236">修改和向字典中，写入操作<xref:System.Collections.Concurrent.ConcurrentDictionary%602>使用细粒度锁定，以确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="be6c5-236">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="be6c5-237">（在字典上的读取操作执行无锁方式。）但是，`addValueFactory`和`updateValueFactory`锁以避免出现的问题的可执行锁下的未知的代码从外部调用委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-237">(Read operations on the dictionary are performed in a lock-free manner.) However, the `addValueFactory` and `updateValueFactory` delegates are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="be6c5-238">因此，<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>都不是所有其他操作方面原子<xref:System.Collections.Concurrent.ConcurrentDictionary%602>类。</span><span class="sxs-lookup"><span data-stu-id="be6c5-238">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-239">
            <paramref name="key" />、<paramref name="addValueFactory" /> 或 <paramref name="updateValueFactory" /> 为空引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-239">
              <paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="concurrentDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-240">将所有键和值从 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-240">Removes all keys and values from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-241">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-241">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-242">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-242">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="concurrentDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-243">要在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中定位的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-243">The key to locate in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-244">确定是否 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 包含指定键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-244">Determines whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-245">如果 <see langword="true" /> 包含具有指定键的元素，则为 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-245">
              <see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-246">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-246">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-247">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-247">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-248">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-248">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-249">获取包含在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的键/值对的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-249">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-250">包含在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的键/值对的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-250">The number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-251">此属性具有快照语义，表示中的项数<xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType>时刻访问了属性。</span><span class="sxs-lookup"><span data-stu-id="be6c5-251">This property has snapshot semantics and represents the number of items in the <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> at the moment when the property was accessed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="be6c5-252">字典中已包含元素的最大数量(<see cref="F:System.Int32.MaxValue" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-252">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-253">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-253">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-254">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-254">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt;" Usage="concurrentDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__35))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-255">返回循环访问 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-255">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-256">用于 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-256">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-257">从字典中返回的枚举器可以安全地使用与并发读取和写入字典中，但它不表示字典时刻快照。</span><span class="sxs-lookup"><span data-stu-id="be6c5-257">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="be6c5-258">通过枚举器公开的内容可能包含字典后所做的修改<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="be6c5-258">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-259">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-259">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-260">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-260">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOrAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-261">如果该键不存在，则将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-261">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span>
          </span>
          <span data-ttu-id="be6c5-262">如果该键已存在，则返回新值或现有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-262">Returns the new value, or the existing value if the key already exists.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="be6c5-263">下面的示例演示如何调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="be6c5-263">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-264">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-264">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-265">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-265">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, Func&lt;TKey,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TValue&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Value&gt; -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-266">要添加的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-266">The key of the element to add.</span>
          </span>
        </param>
        <param name="valueFactory">
          <span data-ttu-id="be6c5-267">用于为键生成值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-267">The function used to generate a value for the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-268">如果该键不存在，则通过使用指定的函数将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-268">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key does not already exist.</span>
          </span>
          <span data-ttu-id="be6c5-269">如果该键已存在，则返回新值或现有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-269">Returns the new value, or the existing value if the key exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-270">键的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-270">The value for the key.</span>
          </span>
          <span data-ttu-id="be6c5-271">如果字典中已存在该键，则为该键的现有值；如果字典中不存在该键，则为新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-271">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="be6c5-272">修改和向字典中，写入操作<xref:System.Collections.Concurrent.ConcurrentDictionary%602>使用细粒度锁定，以确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="be6c5-272">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="be6c5-273">（在字典上的读取操作执行无锁方式。）但是，`valueFactory`锁以避免出现的问题的可执行锁下的未知的代码从外部调用委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-273">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="be6c5-274">因此，<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>都不是所有其他操作方面原子<xref:System.Collections.Concurrent.ConcurrentDictionary%602>类。</span><span class="sxs-lookup"><span data-stu-id="be6c5-274">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="be6c5-275">由于键/值可通过另一个线程时，插入`valueFactory`是生成一个值，您不能信任，只是因为`valueFactory`执行，它生成的值将插入到字典中并返回。</span><span class="sxs-lookup"><span data-stu-id="be6c5-275">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="be6c5-276">如果您调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>在不同线程上同时`valueFactory`可能被调用多次，但只有一个键/值对将添加到字典。</span><span class="sxs-lookup"><span data-stu-id="be6c5-276">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="be6c5-277">返回值取决于字典并将由另一个线程后插入一个键/值中的键是否存在<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>之前调用`valueFactory`生成一个值：</span><span class="sxs-lookup"><span data-stu-id="be6c5-277">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="be6c5-278">方案</span><span class="sxs-lookup"><span data-stu-id="be6c5-278">Scenario</span></span> | <span data-ttu-id="be6c5-279">返回值</span><span class="sxs-lookup"><span data-stu-id="be6c5-279">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="be6c5-280">密钥已在字典中。</span><span class="sxs-lookup"><span data-stu-id="be6c5-280">The key is already in the dictionary.</span></span> | <span data-ttu-id="be6c5-281">返回现有值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-281">The existing value is returned.</span></span> |
 | <span data-ttu-id="be6c5-282">该密钥不在字典中。</span><span class="sxs-lookup"><span data-stu-id="be6c5-282">The key is not in the dictionary.</span></span> <span data-ttu-id="be6c5-283">`valueFactory` 生成一个值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-283">`valueFactory` generates a value.</span></span> <span data-ttu-id="be6c5-284">在重新检查的密钥，未找到键。</span><span class="sxs-lookup"><span data-stu-id="be6c5-284">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="be6c5-285">键/值插入到字典中，并返回的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-285">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="be6c5-286">该密钥不在字典中。</span><span class="sxs-lookup"><span data-stu-id="be6c5-286">The key is not in the dictionary.</span></span> <span data-ttu-id="be6c5-287">`valueFactory` 生成一个值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-287">`valueFactory` generates a value.</span></span> <span data-ttu-id="be6c5-288">虽然`valueFactory`是生成值，另一个线程将插入该密钥的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-288">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="be6c5-289">之后`valueFactory`执行和后重新检查的密钥，找到键被其他线程插入。</span><span class="sxs-lookup"><span data-stu-id="be6c5-289">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="be6c5-290">返回由另一个线程插入的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-290">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-291">
            <paramref name="key" /> 或 <paramref name="valueFactory" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-291">
              <paramref name="key" /> or <paramref name="valueFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="be6c5-292">字典中已包含元素的最大数量(<see cref="F:System.Int32.MaxValue" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-292">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-293">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-293">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-294">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-294">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, value As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * 'Value -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-295">要添加的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-295">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="be6c5-296">当键不存在时要添加的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-296">The value to be added, if the key does not already exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-297">如果该键不存在，则将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-297">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span>
          </span>
          <span data-ttu-id="be6c5-298">如果该键存在，则返回新值或现有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-298">Returns the new value, or the existing value if the key exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-299">键的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-299">The value for the key.</span>
          </span>
          <span data-ttu-id="be6c5-300">如果字典中已存在该键，则为该键的现有值；如果字典中不存在该键，则为新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-300">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-301">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-301">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="be6c5-302">字典中已包含元素的最大数量(<see cref="F:System.Int32.MaxValue" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-302">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-303">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-303">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-304">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-304">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; valueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd(Of TArg) (key As TKey, valueFactory As Func(Of TKey, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="F#" Value="member this.GetOrAdd : 'Key * Func&lt;'Key, 'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="concurrentDictionary.GetOrAdd (key, valueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" />
        <Parameter Name="factoryArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TArg">
          <span data-ttu-id="be6c5-305">要传递到的参数的类型<c>valueFactory</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-305">The type of an argument to pass into <c>valueFactory</c>.</span>
          </span>
        </typeparam>
        <param name="key">
          <span data-ttu-id="be6c5-306">要添加的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-306">The key of the element to add.</span>
          </span>
        </param>
        <param name="valueFactory">
          <span data-ttu-id="be6c5-307">用于为键生成值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-307">The function used to generate a value for the key.</span>
          </span>
        </param>
        <param name="factoryArgument">
          <span data-ttu-id="be6c5-308">要传入 <c>valueFactory</c> 的参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-308">An argument value to pass into <c>valueFactory</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-309">使用指定函数和参数将键/值对添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />中（若尚无键）；或返回现有值（若已有键）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-309">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function and an argument if the key does not already exist, or returns the existing value if the key exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-310">键的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-310">The value for the key.</span>
          </span>
          <span data-ttu-id="be6c5-311">如果字典中已存在该键，则为该键的现有值；如果字典中不存在该键，则为新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-311">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="be6c5-312">修改和向字典中，写入操作<xref:System.Collections.Concurrent.ConcurrentDictionary%602>使用细粒度锁定，以确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="be6c5-312">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="be6c5-313">（在字典上的读取操作执行无锁方式。）但是，`valueFactory`锁以避免出现的问题的可执行锁下的未知的代码从外部调用委托。</span><span class="sxs-lookup"><span data-stu-id="be6c5-313">(Read operations on the dictionary are performed in a lock-free manner.) However, the `valueFactory` delegate is called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="be6c5-314">因此，<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>都不是所有其他操作方面原子<xref:System.Collections.Concurrent.ConcurrentDictionary%602>类。</span><span class="sxs-lookup"><span data-stu-id="be6c5-314">Therefore, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is not atomic with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span>  

 <span data-ttu-id="be6c5-315">由于键/值可通过另一个线程时，插入`valueFactory`是生成一个值，您不能信任，只是因为`valueFactory`执行，它生成的值将插入到字典中并返回。</span><span class="sxs-lookup"><span data-stu-id="be6c5-315">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="be6c5-316">如果您调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>在不同线程上同时`valueFactory`可能被调用多次，但只有一个键/值对将添加到字典。</span><span class="sxs-lookup"><span data-stu-id="be6c5-316">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="be6c5-317">返回值取决于字典并将由另一个线程后插入一个键/值中的键是否存在<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>之前调用`valueFactory`生成一个值：</span><span class="sxs-lookup"><span data-stu-id="be6c5-317">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="be6c5-318">方案</span><span class="sxs-lookup"><span data-stu-id="be6c5-318">Scenario</span></span> | <span data-ttu-id="be6c5-319">返回值</span><span class="sxs-lookup"><span data-stu-id="be6c5-319">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="be6c5-320">密钥已在字典中。</span><span class="sxs-lookup"><span data-stu-id="be6c5-320">The key is already in the dictionary.</span></span> | <span data-ttu-id="be6c5-321">返回现有值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-321">The existing value is returned.</span></span> |
 | <span data-ttu-id="be6c5-322">该密钥不在字典中。</span><span class="sxs-lookup"><span data-stu-id="be6c5-322">The key is not in the dictionary.</span></span> <span data-ttu-id="be6c5-323">`valueFactory` 生成一个值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-323">`valueFactory` generates a value.</span></span> <span data-ttu-id="be6c5-324">在重新检查的密钥，未找到键。</span><span class="sxs-lookup"><span data-stu-id="be6c5-324">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="be6c5-325">键/值插入到字典中，并返回的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-325">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="be6c5-326">该密钥不在字典中。</span><span class="sxs-lookup"><span data-stu-id="be6c5-326">The key is not in the dictionary.</span></span> <span data-ttu-id="be6c5-327">`valueFactory` 生成一个值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-327">`valueFactory` generates a value.</span></span> <span data-ttu-id="be6c5-328">虽然`valueFactory`是生成值，另一个线程将插入该密钥的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-328">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="be6c5-329">之后`valueFactory`执行和后重新检查的密钥，找到键被其他线程插入。</span><span class="sxs-lookup"><span data-stu-id="be6c5-329">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="be6c5-330">返回由另一个线程插入的值。</span><span class="sxs-lookup"><span data-stu-id="be6c5-330">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-331">获取一个值，该值指示 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 是否为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-331">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-332">如果 <see langword="true" /> 为空，则为 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-332">
              <see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-333">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-333">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-334">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-334">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-335">要获取或设置的值的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-335">The key of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-336">获取或设置与指定的键关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-336">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-337">位于指定索引处的键/值对的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-337">The value of the key/value pair at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-338">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-338">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="be6c5-339">已检索该属性且集合中不存在 <paramref name="key" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-339">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-340">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-340">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-341">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-341">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TKey&gt; ^ Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;'Key&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-342">获得一个包含 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的键的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-342">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-343">
            <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的键的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-343">A collection of keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-344">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-344">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-345">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-345">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-346">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-346">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-347">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-347">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-348">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-348">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-349">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-349">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-350">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-350">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-351">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-351">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-352">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-352">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-353">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-353">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-354">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-354">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-355">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-355">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add">
      <MemberSignature Language="C#" Value="void IDictionary&lt;TKey,TValue&gt;.Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(TKey key, TValue value) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-356">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-356">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-357">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-357">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;TKey,TValue&gt;.Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(TKey key) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-358">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-358">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-359">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-359">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="be6c5-360">一维数组，它是从 <see cref="T:System.Collections.ICollection" /> 中复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-360">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="be6c5-361">该数组的索引必须从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-361">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be6c5-362">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-362">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-363">从特定的数组索引处开始，将 <see cref="T:System.Collections.ICollection" /> 的元素复制到一个数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-363">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-364">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-364">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="be6c5-365">
            <paramref name="index" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-365">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be6c5-366">
            <paramref name="index" /> 等于或大于 <paramref name="array" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-366">
              <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="be6c5-367">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-367">-or-</span>
          </span>
          <span data-ttu-id="be6c5-368">源 <see cref="T:System.Collections.ICollection" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-368">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-369">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-369">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-370">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-370">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-371">获取一个指示对 <see cref="T:System.Collections.ICollection" /> 的访问是否与 SyncRoot 同步的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-371">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-372">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-372">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be6c5-373">有关<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />此属性始终返回**false**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-373">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> this property always returns **false**.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-374">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-374">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-375">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-375">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-376">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-376">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="be6c5-377">不支持此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-377">This property is not supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-378">始终返回 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-378">Always returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="be6c5-379">不支持此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-379">This property is not supported.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-380">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-380">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-381">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-381">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-382">要用作键的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-382">The object to use as the key.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="be6c5-383">要用作值的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-383">The object to use as the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-384">将指定的键和值添加到字典中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-384">Adds the specified key and value to the dictionary.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-385">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-385">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be6c5-386">
            <paramref name="key" /> 所属类型不可分配给 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的键类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-386">
              <paramref name="key" /> is of a type that is not assignable to the key type  of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
          <span data-ttu-id="be6c5-387">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-387">-or-</span>
          </span>
          <span data-ttu-id="be6c5-388">
            <paramref name="value" /> 属于不能分配给 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的值类型的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-388">
              <paramref name="value" /> is of a type that is not assignable to the type of values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
          <span data-ttu-id="be6c5-389">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-389">-or-</span>
          </span>
          <span data-ttu-id="be6c5-390">
            <see cref="T:System.Collections.Generic.Dictionary`2" /> 中已存在相同键的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-390">A value with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="be6c5-391">字典中已包含元素的最大数量(<see cref="F:System.Int32.MaxValue" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-391">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-392">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-392">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-393">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-393">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-394">要在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中定位的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-394">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-395">获取 <see cref="T:System.Collections.Generic.IDictionary`2" /> 是否包含具有指定键的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-395">Gets whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-396">如果 <see langword="true" /> 包含具有指定键的元素，则为 <see cref="T:System.Collections.Generic.IDictionary`2" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-396">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-397">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-397">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-398">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-398">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-399">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-399">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-400">为 <see cref="T:System.Collections.IDictionaryEnumerator" /> 提供一个 <see cref="T:System.Collections.Generic.IDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-400">Provides a <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-401">用于 <see cref="T:System.Collections.IDictionaryEnumerator" /> 的 <see cref="T:System.Collections.Generic.IDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-401">A <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-402">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-402">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-403">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-403">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-404">获取一个值，该值指示 <see cref="T:System.Collections.Generic.IDictionary`2" /> 是否具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-404">Gets a value indicating whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-405">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.Generic.IDictionary`2" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-405">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be6c5-406">对于 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，该属性总是返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-406">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-407">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-407">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-408">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-408">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-409">获取一个值，该值指示 <see cref="T:System.Collections.Generic.IDictionary`2" /> 是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-409">Gets a value indicating whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-410">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.Generic.IDictionary`2" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-410">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="be6c5-411">对于 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，该属性总是返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-411">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-412">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-412">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-413">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-413">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-414">要获取或设置的值的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-414">The key of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-415">获取或设置与指定的键关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-415">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-416">如果 <see langword="null" /> 不在字典中或 <paramref name="key" /> 的类型属于不可分配给 <paramref name="key" /> 的键类型，则为与指定的键关联的值或为 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-416">The value associated with the specified key, or  <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-417">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-417">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="be6c5-418">正在分配一个值，且 <paramref name="key" /> 的类型不可分配为密钥类型或 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-418">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type or the value type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-419">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-419">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-420">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-420">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-421">获取包含 <see cref="T:System.Collections.ICollection" /> 的键的 <see cref="T:System.Collections.Generic.IDictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-421">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys of the  <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-422">包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 的键的接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-422">An interface that contains the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-423">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-423">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-424">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-424">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-425">要移除的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-425">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-426">从 <see cref="T:System.Collections.IDictionary" /> 中移除带有指定键的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-426">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-427">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-427">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-428">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-428">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-429">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-429">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-430">获取包含 <see cref="T:System.Collections.ICollection" /> 中的值的 <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-430">Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-431">包含 <see cref="T:System.Collections.IDictionary" /> 中的值的接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-431">An interface that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-432">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-432">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-433">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-433">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-434">返回循环访问 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-434">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-435">用于 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-435">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-436">从字典中返回的枚举器可以安全地使用与并发读取和写入字典中，但它不表示字典时刻快照。</span><span class="sxs-lookup"><span data-stu-id="be6c5-436">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="be6c5-437">通过枚举器公开的内容可能包含字典后所做的修改<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="be6c5-437">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-438">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-438">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-439">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-439">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As KeyValuePair(Of TKey, TValue)()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[]" Usage="concurrentDictionary.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-440">将 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中存储的键和值对复制到新数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-440">Copies the key and value pairs stored in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-441">一个新数组，其中包含从 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 复制的键和值对的快照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-441">A new array containing a snapshot of key and value pairs copied from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-442">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-442">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-443">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-443">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'Key * 'Value -&gt; bool" Usage="concurrentDictionary.TryAdd (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-444">要添加的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-444">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="be6c5-445">要添加的元素的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-445">The value of the element to add.</span>
          </span>
          <span data-ttu-id="be6c5-446">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-446">The value can be  <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-447">尝试将指定的键和值添加到 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-447">Attempts to add the specified key and value to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-448">如果成功地将键/值对添加到 <see langword="true" />，则为 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；如果该键已存在，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-448">
              <see langword="true" /> if the key/value pair was added to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> successfully; <see langword="false" /> if the key already exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6c5-449">此方法返回`false`如果该键已存在。</span><span class="sxs-lookup"><span data-stu-id="be6c5-449">This method returns `false` if the key already exists.</span></span> <span data-ttu-id="be6c5-450">使用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>或<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>方法来更新的值，如果键已存在。</span><span class="sxs-lookup"><span data-stu-id="be6c5-450">Use the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> or <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method to update the value in case a key already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6c5-451">下面的示例演示如何调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType>方法：</span><span class="sxs-lookup"><span data-stu-id="be6c5-451">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-452">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-452">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="be6c5-453">字典中已包含元素的最大数量(<see cref="F:System.Int32.MaxValue" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-453">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-454">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-454">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-455">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-455">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool&#xA;override this.TryGetValue : 'Key *  -&gt; bool" Usage="concurrentDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-456">要获取的值的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-456">The key of the value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="be6c5-457">当此方法返回时，将包含 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中具有指定键的对象；如果操作失败，则包含类型的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-457">When this method returns, contains the object from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> that has the specified key, or the default value of the type if the operation failed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-458">尝试从 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 获取与指定的键关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-458">Attempts to get the value associated with the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-459">如果在 <see langword="true" /> 中找到该键，则为 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-459">
              <see langword="true" /> if the key was found in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-460">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-460">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-461">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-461">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-462">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-462">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryRemove : 'Key *  -&gt; bool" Usage="concurrentDictionary.TryRemove (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-463">要移除并返回的元素的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-463">The key of the element to remove and return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="be6c5-464">此方法返回时，包含已从 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中移除的对象；如果 <c>key</c> 不存在，则包含 <see langword="TValue" /> 类型的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-464">When this method returns, contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, or the default value of  the <see langword="TValue" /> type if <c>key</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-465">尝试从 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中移除并返回具有指定键的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-465">Attempts to remove and return the value that has the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-466">如果成功地移除了对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-466">
              <see langword="true" /> if the object was removed successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="be6c5-467">下面的示例演示如何调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType>方法：</span><span class="sxs-lookup"><span data-stu-id="be6c5-467">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-468">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-468">
              <paramref name="key" /> is  <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-469">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-469">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-470">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-470">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryUpdate">
      <MemberSignature Language="C#" Value="public bool TryUpdate (TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUpdate(!TKey key, !TValue newValue, !TValue comparisonValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdate (key As TKey, newValue As TValue, comparisonValue As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="F#" Value="member this.TryUpdate : 'Key * 'Value * 'Value -&gt; bool" Usage="concurrentDictionary.TryUpdate (key, newValue, comparisonValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="newValue" Type="TValue" />
        <Parameter Name="comparisonValue" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="be6c5-471">值键将与 <c>comparisonValue</c> 进行比较并且可能被替换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-471">The key of the value that is compared with <c>comparisonValue</c> and possibly replaced.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="be6c5-472">当比较结果相等时，该值将替换具有指定 <c>key</c> 的元素的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-472">The value that replaces the value of the element that has the specified <c>key</c> if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparisonValue">
          <span data-ttu-id="be6c5-473">与具有指定 <c>key</c> 的元素的值进行比较的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-473">The value that is compared with the value of the element that has the specified <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6c5-474">如果具有 <paramref name="key" /> 的现有值等于 <paramref name="comparisonValue" />，则将与 <paramref name="key" /> 关联的值更新为 <paramref name="newValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-474">Updates the value associated with <paramref name="key" /> to <paramref name="newValue" /> if the existing value with <paramref name="key" /> is equal to <paramref name="comparisonValue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6c5-475">如果具有 <see langword="true" /> 的值与 <paramref name="key" /> 相等且被替换为 <paramref name="comparisonValue" />，则为 <paramref name="newValue" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-475">
              <see langword="true" /> if the value with <paramref name="key" /> was equal to <paramref name="comparisonValue" /> and was replaced with <paramref name="newValue" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="be6c5-476">下面的示例演示如何调用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="be6c5-476">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6c5-477">
            <paramref name="key" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-477">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-478">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-478">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-479">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-479">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'Value&gt;" Usage="System.Collections.Concurrent.ConcurrentDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6c5-480">获取包含 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-480">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6c5-481">包含 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-481">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="be6c5-482">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-482">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/81b64b95-13f7-4532-9249-ab532f629598">
          <span data-ttu-id="be6c5-483">如何：在 ConcurrentDictionary 中添加和移除项</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6c5-483">How to: Add and Remove Items from a ConcurrentDictionary</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>