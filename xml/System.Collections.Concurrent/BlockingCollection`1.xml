<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BlockingCollection`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50df771ecf34f5bb842d4f014e7a03bea934d6866.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0df771ecf34f5bb842d4f014e7a03bea934d6866</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">集合中的元素类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Provides blocking and bounding capabilities for thread-safe collections that implement <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph>.</source>
          <target state="translated">为实现 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> 的线程安全集合提供阻塞和限制功能。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is a thread-safe collection class that provides the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 是一个线程安全集合类，可提供以下功能：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>An implementation of the producer/consumer pattern; <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is a wrapper for the <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">生产者/使用者模式中; 实现<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>是包装器<ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Concurrent addition and removal of items from multiple threads with the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> methods.</source>
          <target state="translated">并发添加和删除的项具有多个线程从<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>A bounded collection that blocks <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations when the collection is full or empty.</source>
          <target state="translated">绑定的集合，阻止<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph>完整或为空集合时的操作。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Cancellation of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations by using a <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> object in the  <ph id="ph4">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method.</source>
          <target state="translated">取消<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph>通过使用操作<ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph>对象在<ph id="ph4">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph>或<ph id="ph5">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此类型实现<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">在使用完类型后，您应直接或间接释放类型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>中的方法<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>块。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，请使用 <ph id="ph1">`using`</ph>（在 C# 中）或 <ph id="ph2">`Using`</ph>（在 Visual Basic 中）等语言构造。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口主题。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Also, note that the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Dispose&gt;</ph> method is not thread-safe.</source>
          <target state="translated">另请注意，<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Dispose&gt;</ph>方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>All other public and protected members of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">所有其他公共和受保护的成员<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>是线程安全的可从多个线程同时使用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> represents a collection that allows for thread-safe adding and removal of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 表示允许的线程安全添加和删除数据的集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is used as a wrapper for an <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> instance, and allows removal attempts from the collection to block until data is available to be removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 用作的包装器<ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>实例，并允许从集合删除尝试进行阻止，直到数据是可供移除。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Similarly, you can create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> to enforce an upper bound on the number of data elements allowed in the <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>; addition attempts to the collection may then block until space is available to store the added items.</source>
          <target state="translated">同样，你可以创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>强制实施中允许的数据元素的数目上限<ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>; 空间之前可用于存储添加的项，然后可能会阻止添加到集合的尝试。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>In this manner, <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is similar to a traditional blocking queue data structure, except that the underlying data storage mechanism is abstracted away as an <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</source>
          <target state="translated">这种方式，<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>类似于传统阻止队列数据结构，只是基础的数据存储机制作为抽象出来<ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> supports bounding and blocking.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 支持限制和阻塞。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Bounding means that you can set the maximum capacity of the collection.</source>
          <target state="translated">边界表示你已可以将集合的最大容量。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Bounding is important in certain scenarios because it enables you to control the maximum size of the collection in memory, and it prevents the producing threads from moving too far ahead of the consuming threads.Multiple threads or tasks can add items to the collection concurrently, and if the collection reaches its specified maximum capacity, the producing threads will block until an item is removed.</source>
          <target state="translated">边界非常重要在某些情况下，因为它使您能够控制在内存中，集合的最大大小，它可防止生成线程移动太快之前使用的线程。多个线程或任务可以将项添加到集合并发，并如果集合达到其指定最大容量，生成的线程将阻塞，直到移除项。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Multiple consumers can remove items concurrently, and if the collection becomes empty, the consuming threads will block until a producer adds an item.</source>
          <target state="translated">多个使用者可以同时移除项，如果集合变空，则使用线程将发生阻塞，直到制造者添加某个项。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>A producing thread can call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A&gt;</ph> method to indicate that no more items will be added.</source>
          <target state="translated">生成的线程可以调用<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A&gt;</ph>方法，以指示将添加更多的项。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Consumers monitor the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> property to know when the collection is empty and no more items will be added.</source>
          <target state="translated">使用者将监视 <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> 属性以了解集合何时为空且不再添加项。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations are typically performed in a loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph>通常在循环中执行操作。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>You can cancel a loop by passing in a <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method, and then checking the value of the token's <ph id="ph4">&lt;xref:System.Threading.CancellationToken.IsCancellationRequested%2A&gt;</ph> property on each iteration.</source>
          <target state="translated">你可以通过传入取消循环<ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph>方法，，然后检查令牌的值<ph id="ph4">&lt;xref:System.Threading.CancellationToken.IsCancellationRequested%2A&gt;</ph>每个迭代上的属性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>If the value is <ph id="ph1">`true`</ph>, it is up to you to respond the cancellation request by cleaning up any resources and exiting the loop.</source>
          <target state="translated">如果值为<ph id="ph1">`true`</ph>，它将由您来通过清理任何资源和退出循环做出响应取消请求。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify not only the bounded capacity but also the type of collection to use.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>对象，你可以指定的限定的容量不仅集合的类型使用。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">例如，可以指定<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象的先进先出 (FIFO) 行为，或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>后进先出 (LIFO) 行为的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">可使用实现 <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 接口的任何集合类。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 的默认集合类型为 <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Do not modify the underlying collection directly.</source>
          <target state="translated">不要直接修改基础集合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> methods to add or remove elements.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>方法来添加或删除元素。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object can become corrupted if you change the underlying collection directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>对象可能会被破坏，如果您直接更改基础集合。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The following example shows how to add and take items concurrently from a blocking collection:</source>
          <target state="translated">下面的示例演示如何添加和取出同时从当前阻塞集合的项：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The Dispose method is not thread-safe.</source>
          <target state="translated">Dispose 方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>All other public and protected members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">所有其他公共和受保护的成员<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>是线程安全的可从多个线程同时使用。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class without an upper-bound.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 类的新实例，该实例没有上限。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class without an upper-bound.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 类的新实例，该实例没有上限。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor">
          <source>The default underlying collection is a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object, which provides first in, first out (FIFO) behavior.</source>
          <target state="translated">基础集合的默认值是<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象，它提供第一次在中，先出 (FIFO) 行为。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
          <source>The collection to use as the underlying data store.</source>
          <target state="translated">要用作基础数据存储区的集合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class without an upper-bound and using the provided <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> as its underlying data store.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 类的新实例，该实例没有上限，并使用提供的 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> 作为其基础数据存储区。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>The bounded size of the collection.</source>
          <target state="translated">集合的限制大小。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class with the specified upper-bound.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 类的新实例，该实例具有指定的上限。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>The default underlying collection is a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">基础集合的默认值是<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> is not a positive value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> 不是正值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The collection to use as the underlying data store.</source>
          <target state="translated">要用作基础数据存储区的集合。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The bounded size of the collection.</source>
          <target state="translated">集合的限制大小。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class with the specified upper-bound and using the provided <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> as its underlying data store.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 类的新实例，该实例具有指定的上限，并使用提供的 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> 作为其基础数据存储区。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> is not a positive value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> 不是正值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The supplied <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> contains more values than is permitted by <ph id="ph2">&lt;paramref name="boundedCapacity" /&gt;</ph>.</source>
          <target state="translated">所提供 <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> 包含的值比 <ph id="ph2">&lt;paramref name="boundedCapacity" /&gt;</ph> 允许的值多。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Adds the item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">将项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The item to be added to the collection.</source>
          <target state="translated">要添加到集合的项。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The value can be a null reference.</source>
          <target state="translated">该值可以是 null 引用。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>Adds the item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">将项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>If a bounded capacity was specified when this instance of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was initialized, a call to Add may block until space is available to store the provided item.</source>
          <target state="translated">如果指定一个有限的容量时的此实例<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>已初始化，添加对的调用可能会阻止空间之前可用于存储所提供的项。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The item to be added to the collection.</source>
          <target state="translated">要添加到集合的项。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The value can be a null reference.</source>
          <target state="translated">该值可以是 null 引用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>Adds the item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">将项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>If a bounded capacity was specified when this instance of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was initialized, a call to <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> may block until space is available to store the provided item.</source>
          <target state="translated">如果指定一个有限的容量时的此实例<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>已初始化，调用<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph>可能会阻止空间之前可用于存储所提供的项。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>This method can return early with an <ph id="ph1">&lt;xref:System.OperationCanceledException&gt;</ph> if the <ph id="ph2">`cancellationToken`</ph> is canceled.</source>
          <target state="translated">此方法可以返回尽早<ph id="ph1">&lt;xref:System.OperationCanceledException&gt;</ph>如果<ph id="ph2">`cancellationToken`</ph>被取消。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">如果已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that owns <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 已被释放，或拥有 <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> 已被释放。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">向任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中添加指定的项。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">要添加到其中一个集合的项。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">向任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中添加指定的项。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added.</source>
          <target state="translated">向其添加项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>If a bounded capacity was specified when all of the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</source>
          <target state="translated">如果指定一个有限的容量时的所有<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例已初始化，其中一个要存储提供的项的集合中的可用空间之前，可能会阻止 addtoany 调用。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或者包含 NULL 元素，或者至少一个集合已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">至少一个基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">要添加到其中一个集合的项。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">向任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中添加指定的项。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added.</source>
          <target state="translated">向其添加项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>If a bounded capacity was specified when all of the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</source>
          <target state="translated">如果指定一个有限的容量时的所有<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例已初始化，其中一个要存储提供的项的集合中的可用空间之前，可能会阻止 addtoany 调用。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>This method may return before the item is added to any collection if the <ph id="ph1">`cancellationToken`</ph> is canceled before space is available.</source>
          <target state="translated">此方法可能返回之前的项目添加到任何集合，如果<ph id="ph1">`cancellationToken`</ph>之前的空间，则已取消。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">如果已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">至少一个基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或者包含 NULL 元素，或者至少一个集合已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed, or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放至少一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例，或已释放创建 <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
          <source>Gets the bounded capacity of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例的限定容量。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
          <source>The bounded capacity of this collection, or int.MaxValue if no bound was supplied.</source>
          <target state="translated">此集合的限定容量；如果未提供限制，则为 int.MaxValue。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
          <source>Marks the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances as not accepting any more additions.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例标记为不任何更多的添加。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
          <source>After a collection has been marked as complete for adding, adding to the collection is not permitted and attempts to remove from the collection will not wait when the collection is empty.</source>
          <target state="translated">集合已被标记为完成添加后，不允许将添加到集合，并在该集合为空时，不会等到尝试从集合中移除。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">一维数组，它是从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">该数组的索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>Copies all of the items in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中的所有项复制到兼容的一维数组中，复制从目标数组的指定索引处开始。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>CopyTo represents a snapshot of the collection at a precise point in time.</source>
          <target state="translated">CopyTo 表示集合中一个准确时间点处的时间的快照。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>If other threads are adding or removing items while CopyTo is executing, then the elements returned by CopyTo might not represent the state of the collection.</source>
          <target state="translated">如果其他线程可添加或删除项，执行 CopyTo 时，所返回的 CopyTo 元素可能无法反映该集合的状态。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 参数小于零。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 参数等于或大于 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的长度。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The destination array is too small to hold all of the BlockingCcollection elements.</source>
          <target state="translated">目标数组太小，不能容纳所有 BlockingCcollection 元素。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array rank doesn't match.</source>
          <target state="translated">数组秩不匹配。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array type is incompatible with the type of the BlockingCollection elements.</source>
          <target state="translated">数组类型与 BlockingCollection 元素类型不兼容。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>Gets the number of items contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中包含的项的数量。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>The number of items contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中包含的项的数量。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>If any method in BlockingCollection is executing while the Count property is being accessd, the return value is approximate.</source>
          <target state="translated">如果 BlockingCollection 中的任何方法正在执行时的 Count 属性正在 accessd，则返回的值是近似。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>Count may reflect a number that is either greater than or less than the actual number of items in the BlockingCollection.</source>
          <target state="translated">计数可能反映是一个数字大于或小于 BlockingCollection 中的项的实际数目。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method is not thread-safe.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>方法不是线程安全。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">`Dispose`</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 方法使 <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">`Dispose`</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)">
          <source>Whether being disposed explicitly (true) or due to a finalizer (false).</source>
          <target state="translated">是显式释放 (true)，还是由于终结器释放 (false)。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例使用的资源。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Provides a consuming <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">为集合中的项提供一个使用 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>Provides a consuming <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">为集合中的项提供一个使用 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that removes and returns items from the collection.</source>
          <target state="translated">从集合中移除并返回项的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph> method:</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph>方法：</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>Provides a consuming <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">为集合中的项提供一个使用 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that removes and returns items from the collection.</source>
          <target state="translated">从集合中移除并返回项的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>This method enables client code to remove items from the collection by using a foreach loop (For Each in Visual Basic), or <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> or a PLINQ query.</source>
          <target state="translated">此方法使客户端代码能够通过使用 foreach 循环 （对于每个在 Visual Basic)，从集合中移除项或<ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph>或 PLINQ 查询。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>The enumerator will continue to provide items (if any exist) until <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> returns true, and if <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> is false the loop blocks until an item becomes available or until the <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> is cancelled.</source>
          <target state="translated">枚举数将继续执行，提供项 （如果存在） 直至<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph>，则返回 true，并且如果<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph>为 false 的循环块直到项变得可用，或者直到<ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph>已取消。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">如果已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed</source>
          <target state="translated">已释放 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>，或已释放创建 <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
          <source>Gets whether this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete for adding.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 是否已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
          <source>Whether this collection has been marked as complete for adding.</source>
          <target state="translated">此集合是否已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
          <source>Gets whether this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete for adding and is empty.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 是否已标记为完成添加并且为空。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
          <source>Whether this collection has been marked as complete for adding and is empty.</source>
          <target state="translated">此集合是否已标记为完成添加并且为空。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Provides an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">为集合中的项提供 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for the items in the collection.</source>
          <target state="translated">集合中的项的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Unlike <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> returns a standard enumerator that does not modify the underlying collection.</source>
          <target state="translated">与不同<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph>返回不会修改基础集合的标准枚举器。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If other threads are adding or removing elements concurrently when GetEnumerator is called, then the elements returned by the enumerator might not represent the current state of the collection.</source>
          <target state="translated">如果其他线程正在添加或移除元素，同时调用 GetEnumerator 时，枚举器返回的元素可能无法反映集合的当前状态。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">一维数组，它是从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">该数组的索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies all of the items in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中的所有项复制到兼容的一维数组中，复制从目标数组的指定索引处开始。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 参数小于零。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph>, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 参数等于或大于 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的长度，该数组是多维的，或集合的类型参数无法自动强制转换为目标数组的类型。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized.</source>
          <target state="translated">获取一个值，该值指示对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问是否同步。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>always returns false.</source>
          <target state="translated">始终返回 false。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">获取可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">不支持此属性。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>returns null.</source>
          <target state="translated">返回 null。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>The SyncRoot property is not supported.</source>
          <target state="translated">不支持 SyncRoot 属性。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Provides an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for items in the collection.</source>
          <target state="translated">为集合中的项提供 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the items in the collection.</source>
          <target state="translated">集合中的项的 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Removes an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>Removes  an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The item removed from the collection.</source>
          <target state="translated">从集合中移除的项。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>A call to <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> may block until an item is available to be removed.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph>项是可供移除之前，会阻止。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">在其中移除项的顺序取决于用于创建集合的类型<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>对象，你可以指定要使用的集合类型。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">例如，可以指定<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象的先进先出 (FIFO) 行为，或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>后进先出 (LIFO) 行为的对象。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">可使用实现 <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 接口的任何集合类。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 的默认集合类型为 <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance, or the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> is empty and the collection has been marked as complete for adding.</source>
          <target state="translated">基础集合在此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例外修改，或 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 为空，并且集合已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>Object that can be used to cancel the take operation.</source>
          <target state="translated">可用于取消获取操作的对象。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>Removes an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The item removed from the collection.</source>
          <target state="translated">从集合中移除的项。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>A call to <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> may block until an item is available to be removed or the token is canceled.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph>可能阻止，直到项是可供移除或取消标记。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">在其中移除项的顺序取决于用于创建集合的类型<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>对象，你可以指定要使用的集合类型。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">例如，可以指定<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象的先进先出 (FIFO) 行为，或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>后进先出 (LIFO) 行为的对象。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">可使用实现 <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 接口的任何集合类。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 的默认集合类型为 <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> 已取消。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created the token was canceled.</source>
          <target state="translated">已释放 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>，或已取消创建该标记的 <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance or the BlockingCollection is marked as complete for adding, or the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> is empty.</source>
          <target state="translated">基础集合在此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例外修改，或该 BlockingCollection 被标记为完成添加，或 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 为空。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中获取一个项。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">从其中一个集合中移除的项。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中获取一个项。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed.</source>
          <target state="translated">从其中移除项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>A call to TakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">可供移除一个项之前，可能会阻止对 TakeFromAny 的调用。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element or <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> has been called on the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或包含 NULL 元素，或 <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> 在集合上已被调用。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">至少一个基础集合已在其 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例之外进行了修改。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">从其中一个集合中移除的项。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances while observing the specified cancellation token.</source>
          <target state="translated">在观察指定的取消标记时从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中获取一个项。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed.</source>
          <target state="translated">从其中移除项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>A call to TakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">可供移除一个项之前，可能会阻止对 TakeFromAny 的调用。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The method will return early with an OperationCanceledException if the token is canceled.</source>
          <target state="translated">该方法将返回尽早与 OperationCanceledException 如果标记已取消。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">如果已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">至少一个基础集合已在其 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例之外进行了修改。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> has been called on the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或包含 NULL 元素，或 <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> 在集合上已被调用。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>Copies the items from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance into a new array.</source>
          <target state="translated">将项从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例复制到新数组中。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>An array containing copies of the elements of the collection.</source>
          <target state="translated">包含集合元素副本的数组。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>The copied elements are not removed from the collection.</source>
          <target state="translated">复制的元素不会从集合中。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>If any method in BlockingCollection is executing while the ToArray method executes, the return value is approximate.</source>
          <target state="translated">如果 ToArray 方法执行的同时，正在执行 BlockingCollection 中的任何方法，则返回的值是近似。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>ToArray  may include items that have already been removed, or exclude items that have already been inserted.</source>
          <target state="translated">ToArray 可能包括多个项已被删除，或排除已插入的项。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">尝试将指定的项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The item to be added to the collection.</source>
          <target state="translated">要添加到集合的项。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">尝试将指定的项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>true if <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added; otherwise false.</source>
          <target state="translated">如果可以添加 <ph id="ph1">&lt;paramref name="item" /&gt;</ph>，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown.</source>
          <target state="translated">如果该项有重复，并且基础集合不接受重复项，则会引发 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>If the collection is a bounded collection, and is full, this method immediately returns false without adding the item.</source>
          <target state="translated">如果集合是一个限定的集合，并且已满，此方法立即返回 false 而无需添加项。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The item to be added to the collection.</source>
          <target state="translated">要添加到集合的项。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> within the specified time period.</source>
          <target state="translated">尝试在指定的时间段内将指定的项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>true if the <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added to the collection within the specified time; otherwise, false.</source>
          <target state="translated">如果在指定的时间内可以将 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 添加到集合中，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown.</source>
          <target state="translated">如果该项有重复，并且基础集合不接受重复项，则会引发 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The item to be added to the collection.</source>
          <target state="translated">要添加到集合的项。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">表示等待毫秒数的 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，或表示 -1 毫秒（无限期等待）的 <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">尝试将指定的项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>true if the <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added to the collection within the specified time span; otherwise, false.</source>
          <target state="translated">如果在指定的时间跨度内可以将 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 添加到集合中，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 是 -1 毫秒之外的负数，表示无限超时或者超时大于 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The item to be added to the collection.</source>
          <target state="translated">要添加到集合的项。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> within the specified time period, while observing a cancellation token.</source>
          <target state="translated">在观察取消标记时，尝试在指定的时间段内将指定的项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>true if the <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added to the collection within the specified time; otherwise, false.</source>
          <target state="translated">如果在指定的时间内可以将 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 添加到集合中，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown.</source>
          <target state="translated">如果该项有重复，并且基础集合不接受重复项，则会引发 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">如果已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the underlying <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>，或已释放基础 <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试将指定的项添加到任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">要添加到其中一个集合的项。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试将指定的项添加到任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">向其添加项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能添加项，则为 -1。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或者包含 NULL 元素，或者至少一个集合已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">至少一个基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">要添加到其中一个集合的项。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试将指定的项添加到任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">向其添加项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能添加项，则为 -1。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或者包含 NULL 元素，或者至少一个集合已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">至少一个基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">要添加到其中一个集合的项。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">表示等待毫秒数的 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，或表示 -1 毫秒（无限期等待）的 <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances while observing the specified cancellation token.</source>
          <target state="translated">在观察指定的取消标记时，尝试将指定的项添加到任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">向其添加项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能添加项，则为 -1。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>This method can return early if the cancellationToken is cancelled before space was available for the Add operation.</source>
          <target state="translated">如果 cancellationToken 空间可用于添加操作之前已取消，此方法可以提前返回。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放至少一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例，或已释放创建 <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 是 -1 毫秒之外的负数，表示无限超时或者超时大于 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或者包含 NULL 元素，或者至少一个集合已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">至少一个基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">要添加到其中一个集合的项。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试将指定的项添加到任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">向其添加项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能添加项，则为 -1。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">如果已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">至少一个基础集合未接受该项。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或者包含 NULL 元素，或者至少一个集合已标记为完成添加。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">尝试从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例显示如何使用 <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">要从集合中移除的项。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">尝试从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以移除项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>If the collection is empty, this method immediately returns false.</source>
          <target state="translated">如果该集合为空，则此方法立即返回 false。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">在其中移除项的顺序取决于用于创建集合的类型<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>对象，你可以指定要使用的集合类型。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">例如，可以指定<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象的先进先出 (FIFO) 行为，或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>后进先出 (LIFO) 行为的对象。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">可使用实现 <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 接口的任何集合类。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 的默认集合类型为 <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">该基础集合已在此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例外部进行了修改。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">要从集合中移除的项。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> in the specified time period.</source>
          <target state="translated">尝试在指定的时间段内从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在指定的时间内可以从集合中移除某个项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">在其中移除项的顺序取决于用于创建集合的类型<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>, you can specify the type of collection to use.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>，你可以指定要使用的集合类型。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">例如，可以指定<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象的先进先出 (FIFO) 行为，或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>后进先出 (LIFO) 行为的对象。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">可使用实现 <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 接口的任何集合类。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 的默认集合类型为 <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">该基础集合已在此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例外部进行了修改。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">要从集合中移除的项。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>An object that represents the number of milliseconds to wait, or an object that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">一个对象，表示等待的毫秒数，或为 -1 毫秒，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> in the specified time period.</source>
          <target state="translated">尝试在指定的时间段内从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在指定的时间内可以从集合中移除某个项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">在其中移除项的顺序取决于用于创建集合的类型<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>对象，你可以指定要使用的集合类型。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">例如，可以指定<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象的先进先出 (FIFO) 行为，或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>后进先出 (LIFO) 行为的对象。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">可使用实现 <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 接口的任何集合类。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 的默认集合类型为 <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放了 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 为 -1 毫秒以外的负数，表示无限期超时。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 大于 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">该基础集合已在此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例外部进行了修改。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">要从集合中移除的项。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> in the specified time period while observing a cancellation token.</source>
          <target state="translated">在观察取消标记时，尝试在指定的时间段内从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 中移除一个项。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在指定的时间内可以从集合中移除某个项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">在其中移除项的顺序取决于用于创建集合的类型<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">当你创建<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>对象，你可以指定要使用的集合类型。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">例如，可以指定<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>对象的先进先出 (FIFO) 行为，或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>后进先出 (LIFO) 行为的对象。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">可使用实现 <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> 接口的任何集合类。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> 的默认集合类型为 <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated">已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the underlying <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> has been disposed.</source>
          <target state="translated">已释放 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>，或已释放基础 <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The underlying collection was modified outside this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">该基础集合已在此 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例外部进行了修改。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中移除一个项。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">从其中一个集合中移除的项。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中移除一个项。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">从其中移除项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能移除项，则为 -1。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">可供移除一个项之前，可能会阻止对 TryTakeFromAny 的调用。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType&gt;</ph> method:</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType&gt;</ph>方法：</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或包含 NULL 元素。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">至少一个基础集合已在其 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例之外进行了修改。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">从其中一个集合中移除的项。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中移除一个项。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">从其中移除项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能移除项，则为 -1。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">可供移除一个项之前，可能会阻止对 TryTakeFromAny 的调用。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或包含 NULL 元素。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">至少一个基础集合已在其 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例之外进行了修改。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">从其中一个集合中移除的项。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">表示等待毫秒数的 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，或表示 -1 毫秒（无限期等待）的 <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中移除一个项。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">从其中移除项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能移除项，则为 -1。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">可供移除一个项之前，可能会阻止对 TryTakeFromAny 的调用。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 是 -1 毫秒之外的负数，表示无限超时或者超时大于 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或包含 NULL 元素。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">至少一个基础集合已在其 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例之外进行了修改。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">集合的数组。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">从其中一个集合中移除的项。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">等待的毫秒数，或为 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1)，表示无限期等待。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">要观察的取消标记。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">尝试从任一指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例中移除一个项。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">从其中移除项的集合在 <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 数组中的索引；如果未能移除项，则为 -1。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">可供移除一个项之前，可能会阻止对 TryTakeFromAny 的调用。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">如果已取消 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">至少一个基础集合已在其 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例之外进行了修改。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数为 null。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> 是一个非 -1 的负数，而 -1 表示无限期超时。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 的计数大于上限（STA 为 62，MTA 为 63）。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collections" /&gt;</ph> 参数是一个长度为 0 的数组，或包含 NULL 元素。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">至少已释放其中一个 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> 实例。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>