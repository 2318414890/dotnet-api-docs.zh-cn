<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConcurrentBag`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef822a081be6af622274d7e45bf94539ff9154a00c2b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a081be6af622274d7e45bf94539ff9154a00c2b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>The type of the elements to be stored in the collection.</source>
          <target state="translated">要存储在集合中的元素的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>Represents a thread-safe, unordered collection of objects.</source>
          <target state="translated">表示对象的线程安全的无序集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>Bags are useful for storing objects when ordering doesn't matter, and unlike sets, bags support duplicates.</source>
          <target state="translated">包可用于存储对象，如果排序并不重要，且与集不同，包支持重复项。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> is a thread-safe bag implementation, optimized for scenarios where the same thread will be both producing and consuming data stored in the bag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> 是一个线程安全包实现，对于同一个线程将是同时生成并且使用存储在包中的数据方案进行了优化。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> 接受 <ph id="ph2">`null`</ph> 作为引用类型的有效值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>For more information, see the entry <bpt id="p1">[</bpt>FAQ: Are all of the new concurrent collections lock-free?<ept id="p1">](http://blogs.msdn.com/b/pfxteam/archive/2010/01/26/9953725.aspx)</ept> in the Parallel Programming with .NET blog.</source>
          <target state="translated">有关详细信息，请参阅文章<bpt id="p1">[</bpt>常见问题： 是的新的并发集合的所有无锁？<ept id="p1">](http://blogs.msdn.com/b/pfxteam/archive/2010/01/26/9953725.aspx)</ept>中使用.NET 博客进行并行编程。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>The following example shows how to add and remove items from a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph>:</source>
          <target state="translated">下面的示例演示如何添加和移除项从<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">所有公共和受保护成员<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>是线程安全的可从多个线程同时使用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>However, members accessed through one of the interfaces the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</source>
          <target state="translated">但是，通过的实例之一访问成员<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>实现，包括扩展方法，不能保证是线程安全，可能需要由调用方同步。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements are copied to the new <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">其元素被复制到新的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中的集合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> class that contains elements copied from the specified collection.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 类的新实例，该类包含从指定集合中复制的元素。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
          <source>The object to be added to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">要添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
          <source>The value can be a null reference (Nothing in Visual Basic) for reference types.</source>
          <target state="translated">该值对于引用类型可以是空引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
          <source>Adds an object to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">将对象添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，用作从 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 所复制的元素的目标数组。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> elements to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">从指定数组索引开始将 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 元素复制到现有一维 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> -or- the number of elements in the source <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> is greater than the available space from <ph id="ph4">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph5">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 等于或大于 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的长度 - 或 - 源 <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中的元素数大于从 <ph id="ph4">&lt;paramref name="index" /&gt;</ph> 到目标 <ph id="ph5">&lt;paramref name="array" /&gt;</ph> 结尾的可用空间。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中包含的元素数。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中包含的元素数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>The count returned represents a moment-in-time snapshot of the contents of the bag.</source>
          <target state="translated">返回的计数表示包的内容的时间在实时快照。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>It is possible that other threads might add or remove items immediately after you access the <ph id="ph1">`Count`</ph> property.</source>
          <target state="translated">很可能其他线程可能添加或删除项，你访问后立即<ph id="ph1">`Count`</ph>属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">返回循环访问 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的枚举数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>An enumerator for the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的内容的枚举器。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>The enumeration represents a moment-in-time snapshot of the contents of the bag.</source>
          <target state="translated">枚举表示包内容的时间在实时的快照。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>It does not reflect any updates to the collection after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">它不反映之后对集合的任何更新<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>The enumerator is safe to use concurrently with reads from and writes to the bag.</source>
          <target state="translated">枚举数可以安全地从读取一起使用，并将包写入。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.IsEmpty">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> is empty.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 是否为空。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.IsEmpty">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> is empty; otherwise, false.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 为空，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>The object to be added to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">要添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>The value can be a null reference (Nothing in Visual Basic) for reference types.</source>
          <target state="translated">该值对于引用类型可以是空引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>Attempts to add an object to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">尝试将一个对象添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>Always returns true</source>
          <target state="translated">始终返回 true</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，用作从 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 所复制的元素的目标数组。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">从特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引处开始，将 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的元素复制到一个 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 null 引用（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or- <ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated">- 或 -<ph id="ph1">&lt;paramref name="array" /&gt;</ph> 没有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or- <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> -or- The number of elements in the source <ph id="ph3">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph4">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph5">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">- 或 - <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 等于或大于 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的长度 - 或 - 源 <ph id="ph3">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的元素数大于从 <ph id="ph4">&lt;paramref name="index" /&gt;</ph> 到目标 <ph id="ph5">&lt;paramref name="array" /&gt;</ph> 结尾的可用空间。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or- The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">- 或 - 源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的类型无法自动转换为目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized with the SyncRoot.</source>
          <target state="translated">获取一个指示对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问是否与 SyncRoot 同步的值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized with the SyncRoot; otherwise, false.</source>
          <target state="translated">如果对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问与 SyncRoot 同步，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>, this property always returns false.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>，此属性始终返回 false。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">获取可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">不支持此属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>Returns null  (Nothing in Visual Basic).</source>
          <target state="translated">返回 null（在 Visual Basic 中为 Nothing）。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>The SyncRoot property is not supported.</source>
          <target state="translated">不支持 SyncRoot 属性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">返回循环访问 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的枚举数。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的内容的枚举器。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The items enumerated represent a moment-in-time snapshot of the contents of the bag.</source>
          <target state="translated">枚举项表示包内容的时间在实时的快照。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It does not reflect any update to the collection after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">它不反映之后对集合的任何更新<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> elements to a new array.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 元素复制到新数组。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray">
          <source>A new array containing a snapshot of elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">新数组包含从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 复制的元素的快照。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
          <source>When this method returns, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains an object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> or the default value of <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept> if the operation failed.</source>
          <target state="translated">此方法返回时，<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> 包含 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中的对象；如果操作失败，则返回 <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept> 的默认值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
          <source>Attempts to return an object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> without removing it.</source>
          <target state="translated">尝试从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 返回一个对象但不移除该对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
          <source>true if an object was returned successfully; otherwise, false.</source>
          <target state="translated">如果成功返回了对象，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
          <source>When this method returns, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains the object removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> or the default value of <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept> if the bag is empty.</source>
          <target state="translated">此方法返回时，<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> 包含 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中的对象；如果包为空，则返回 <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept> 的默认值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
          <source>Attempts to remove and return an object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">尝试从 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中移除和返回一个对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
          <source>true if an object was removed successfully; otherwise, false.</source>
          <target state="translated">如果成功移除了对象，则为 true；否则为 false。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>