<Type Name="ConcurrentStack&lt;T&gt;" FullName="System.Collections.Concurrent.ConcurrentStack&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32308a71cf57265835d0a51b32bc2de57315843e" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51307838" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentStack&lt;T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentStack`1&lt;T&gt; extends System.Object implements class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentStack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentStack(Of T)&#xA;Implements IEnumerable(Of T), IProducerConsumerCollection(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ConcurrentStack : System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ConcurrentStack&lt;'T&gt; = class&#xA;    interface IProducerConsumerCollection&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="77c8d-101">堆栈中包含的元素的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="77c8d-101">The type of the elements contained in the stack.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="77c8d-102">表示线程安全的后进先出 (LIFO) 集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="77c8d-102">Represents a thread-safe last in-first out (LIFO) collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="77c8d-103"><xref:System.Collections.Concurrent.ConcurrentStack%601> 实现<xref:System.Collections.Generic.IReadOnlyCollection%601>开头的接口[!INCLUDE[net_v46](~/includes/net-v46-md.md)]; 在以前版本的.NET Framework 中，<xref:System.Collections.Concurrent.ConcurrentStack%601>类未实现此接口。</span><span class="sxs-lookup"><span data-stu-id="77c8d-103"><xref:System.Collections.Concurrent.ConcurrentStack%601> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentStack%601> class did not implement this interface.</span></span>  
  
 <span data-ttu-id="77c8d-104"><xref:System.Collections.Concurrent.ConcurrentStack%601> 提供了几个主要操作：</span><span class="sxs-lookup"><span data-stu-id="77c8d-104"><xref:System.Collections.Concurrent.ConcurrentStack%601> provides a few main operations:</span></span>  
  
-   <span data-ttu-id="77c8d-105"><xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> 在顶部插入一个元素<xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-105"><xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
-   <span data-ttu-id="77c8d-106"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> 从顶部移除一个元素<xref:System.Collections.Concurrent.ConcurrentStack%601>，或返回`false`如果不能删除该项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-106"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> removes an element from the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>, or returns `false` if the item cannot be removed.</span></span>  
  
-   <span data-ttu-id="77c8d-107"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPeek%2A> 返回位于顶部的元素<xref:System.Collections.Concurrent.ConcurrentStack%601>但不会删除从<xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-107"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPeek%2A> returns an element that is at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601> but does not remove it from the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
-   <span data-ttu-id="77c8d-108"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPopRange%2A>和<xref:System.Collections.Concurrent.ConcurrentStack%601.PushRange%2A>方法提供了有效推送和弹出的单个操作中的多个元素。</span><span class="sxs-lookup"><span data-stu-id="77c8d-108">The <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPopRange%2A> and <xref:System.Collections.Concurrent.ConcurrentStack%601.PushRange%2A> methods provide efficient pushing and popping of multiple elements in a single operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c8d-109">下面的示例演示如何使用<xref:System.Collections.Concurrent.ConcurrentStack%601>推送和弹出各项：</span><span class="sxs-lookup"><span data-stu-id="77c8d-109">The following example shows how to use a <xref:System.Collections.Concurrent.ConcurrentStack%601> to push and pop individual items:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentStack#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/cs/concstack_single.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentStack#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/vb/concstack_single.vb#1)]
  
 <span data-ttu-id="77c8d-110">下面的示例演示如何使用<xref:System.Collections.Concurrent.ConcurrentStack%601>来推送和弹出项：</span><span class="sxs-lookup"><span data-stu-id="77c8d-110">The following example shows how to use a <xref:System.Collections.Concurrent.ConcurrentStack%601> to push and pop ranges of items:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentStack#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/cs/concstack_range.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentStack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/vb/concstack_range.vb#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="77c8d-111">所有公共和受保护成员<see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />是线程安全的可能从多个线程同时使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="77c8d-111">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
    <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
      <span data-ttu-id="77c8d-112">线程安全集合</span>
      <span class="sxs-lookup">
        <span data-stu-id="77c8d-112">Thread-Safe Collections</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-113">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-113">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-114">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-114">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentStack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentStack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentStack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;" Usage="new System.Collections.Concurrent.ConcurrentStack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="77c8d-115">其元素被复制到新的 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-115">The collection whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-116">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 类的新实例，该类包含从指定集合中复制的元素</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-116">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> class that contains elements copied from the specified collection</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c8d-117">
            <paramref name="collection" /> 参数为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-117">The <paramref name="collection" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-118">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-118">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="concurrentStack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-119">从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中移除所有对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-119">Removes all objects from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-120">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-120">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="concurrentStack.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="77c8d-121">一维 <see cref="T:System.Array" />，用作从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 所复制的元素的目标数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-121">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="77c8d-122">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-122">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="77c8d-123">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-123">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-124">从指定数组索引开始将 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 元素复制到现有一维 <see cref="T:System.Array" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-124">Copies the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c8d-125">
            <paramref name="array" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-125">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77c8d-126">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-126">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77c8d-127">
            <paramref name="index" /> 等于或大于 <paramref name="array" /> 的长度 - 或 - 源 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中的元素数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 结尾的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-127">
              <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-128">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-128">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-129">获取 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-129">Gets the number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c8d-130">
            <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-130">The number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-131">有关确定集合是否包含任何项，利用<xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A>建议属性而不是检索的项从<xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A>属性并将它与 0 进行比较。</span><span class="sxs-lookup"><span data-stu-id="77c8d-131">For determining whether the collection contains any items, use of the <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> property and comparing it to 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="concurrentStack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-132">返回循环访问 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-132">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-133">用于 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-133">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-134">枚举表示堆栈的内容当前快照。</span><span class="sxs-lookup"><span data-stu-id="77c8d-134">The enumeration represents a moment-in-time snapshot of the contents of the stack.</span></span> <span data-ttu-id="77c8d-135">它不反映对后对集合的任何更新<xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="77c8d-135">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="77c8d-136">枚举器可以安全地与读取的同时使用和写入到堆栈。</span><span class="sxs-lookup"><span data-stu-id="77c8d-136">The enumerator is safe to use concurrently with reads from and writes to the stack.</span></span> <span data-ttu-id="77c8d-137">枚举器按后进先出 （上一次，先进先出） 顺序返回项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-137">The enumerator returns items in LIFO (last-in, first-out) order.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-138">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-138">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-139">获取一个值，该值指示 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 是否为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-139">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c8d-140">如果 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 为空，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-140">true if the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is empty; otherwise, false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-141">确定集合是否包含任何项，建议使用此属性，而不是检索的项从<xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A>属性并将它与 0 进行比较。</span><span class="sxs-lookup"><span data-stu-id="77c8d-141">For determining whether the collection contains any items, use of this property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> property and comparing it to 0.</span></span> <span data-ttu-id="77c8d-142">但是，此集合用于同时访问，因为它可能是另一个线程将修改后的集合的情况下<xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A>返回，从而使结果无效。</span><span class="sxs-lookup"><span data-stu-id="77c8d-142">However, as this collection is intended to be accessed concurrently, it may be the case that another thread will modify the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> returns, thus invalidating the result.</span></span>  
  
 <span data-ttu-id="77c8d-143">有关代码示例，请参阅 <xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-143">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-144">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-144">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="concurrentStack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="77c8d-145">要推入到 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-145">The object to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="77c8d-146">该值对于引用类型可以是空引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-146">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-147">在 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的顶部插入一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-147">Inserts an object at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-148">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-148">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushRange">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <remarks />
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-149">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-149">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushRange">
      <MemberSignature Language="C#" Value="public void PushRange (T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushRange(!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushRange (items As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushRange(cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.PushRange : 'T[] -&gt; unit" Usage="concurrentStack.PushRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="77c8d-150">要推入到 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-150">The objects to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-151">自动将多个对象插入 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的顶部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-151">Inserts multiple objects at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-152">将多个项添加到堆栈，当使用 PushRange 是比使用更高效机制<xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A>一次的一项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-152">When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> one item at a time.</span></span> <span data-ttu-id="77c8d-153">此外，PushRange 保证的所有元素将以原子方式，添加这意味着没有其他线程能够注入推送的元素之间的元素。</span><span class="sxs-lookup"><span data-stu-id="77c8d-153">Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed.</span></span> <span data-ttu-id="77c8d-154">在较低索引处的项`items`数组将被推送之前在较高索引的项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-154">Items at lower indices in the `items` array will be pushed before items at higher indices.</span></span>  
  
 <span data-ttu-id="77c8d-155">有关代码示例，请参阅 <xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-155">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c8d-156">
            <paramref name="items" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-156">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-157">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-157">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PushRange">
      <MemberSignature Language="C#" Value="public void PushRange (T[] items, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushRange(!T[] items, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushRange (items As T(), startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushRange(cli::array &lt;T&gt; ^ items, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.PushRange : 'T[] * int * int -&gt; unit" Usage="concurrentStack.PushRange (items, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="77c8d-158">要推入到 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-158">The objects to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="77c8d-159">
            <c>items</c> 中从零开始的偏移量，在该位置开始将元素插入到 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的顶部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-159">The zero-based offset in <c>items</c> at which to begin inserting elements onto the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="77c8d-160">要插入到 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-160">The number of elements to be inserted onto the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-161">自动将多个对象插入 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的顶部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-161">Inserts multiple objects at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-162">将多个项添加到堆栈，当使用 PushRange 是比使用更高效机制<xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A>一次的一项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-162">When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> one item at a time.</span></span> <span data-ttu-id="77c8d-163">此外，PushRange 保证的所有元素将以原子方式，添加这意味着没有其他线程能够注入推送的元素之间的元素。</span><span class="sxs-lookup"><span data-stu-id="77c8d-163">Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed.</span></span> <span data-ttu-id="77c8d-164">在较低索引处的项`items`数组将被推送之前在较高索引的项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-164">Items at lower indices in the `items` array will be pushed before items at higher indices.</span></span>  
  
 <span data-ttu-id="77c8d-165">有关代码示例，请参阅 <xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-165">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c8d-166">
            <paramref name="items" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-166">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77c8d-167">
            <paramref name="startIndex" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-167">
              <paramref name="startIndex" /> or <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="77c8d-168">或 <paramref name="startIndex" /> 大于或等于 <paramref name="items" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-168">Or <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77c8d-169">
            <paramref name="startIndex" /> + <paramref name="count" /> 大于 <paramref name="items" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-169">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-170">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-170">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Function TryAdd (item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryAdd" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(T item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryAdd;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="77c8d-171">要添加到 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-171">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
          <span data-ttu-id="77c8d-172">该值对于引用类型可以是空引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-172">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-173">尝试将一个对象添加到 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-173">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-174">如果成功添加了对象，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-174">true if the object was added successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-175">有关<xref:System.Collections.Concurrent.ConcurrentStack%601>，此操作将始终插入到的顶部对象<xref:System.Collections.Concurrent.ConcurrentStack%601>并返回 true。</span><span class="sxs-lookup"><span data-stu-id="77c8d-175">For <xref:System.Collections.Concurrent.ConcurrentStack%601>, this operation will always insert the object onto the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601> and return true.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-176">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-176">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Function TryTake (ByRef item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryTake" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([Runtime::InteropServices::Out] T % item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryTake;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="77c8d-177">如果操作成功，则此方法返回时，<c>items</c> 包含所移除的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-177">When this method returns, if the operation was successful, <c>item</c> contains the object removed.</span>
          </span>
          <span data-ttu-id="77c8d-178">如果没有可供移除的对象，则不指定该值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-178">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-179">尝试从 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 中移除和返回一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-179">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-180">如果成功移除并返回了元素，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-180">true if an element was removed and returned succesfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-181">有关<xref:System.Collections.Concurrent.ConcurrentStack%601>，此操作将尝试在顶部弹出对象<xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-181">For <xref:System.Collections.Concurrent.ConcurrentStack%601>, this operation will attempt to pop the object at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-182">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-182">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="77c8d-183">一维 <see cref="T:System.Array" />，用作从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 所复制的元素的目标数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-183">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="77c8d-184">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-184">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="77c8d-185">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-185">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-186">从特定的 <see cref="T:System.Collections.ICollection" /> 索引处开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-186">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c8d-187">
            <paramref name="array" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-187">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77c8d-188">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-188">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77c8d-189">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-189">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="77c8d-190">- 或 -<paramref name="array" /> 没有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-190">-or- <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="77c8d-191">- 或 - <paramref name="index" /> 等于或大于 <paramref name="array" /> 的长度 - 或 - 源 <see cref="T:System.Collections.ICollection" /> 中的元素数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 结尾的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-191">-or- <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="77c8d-192">- 或 - 源 <see cref="T:System.Collections.ICollection" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-192">-or- The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-193">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-193">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-194">获取一个指示对 <see cref="T:System.Collections.ICollection" /> 的访问是否与 SyncRoot 同步的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-194">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c8d-195">如果对 <see cref="T:System.Collections.ICollection" /> 的访问与 SyncRoot 同步，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-195">true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot; otherwise, false.</span>
          </span>
          <span data-ttu-id="77c8d-196">对于 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />，此属性始终返回 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-196">For <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />, this property always returns false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-197">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-197">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="77c8d-198">不支持此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-198">This property is not supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c8d-199">返回 null（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-199">Returns null (Nothing in Visual Basic).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="77c8d-200">不支持 SyncRoot 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-200">The SyncRoot property is not supported</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-201">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-201">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-202">返回循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-202">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-203">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-203">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-204">枚举表示堆栈的内容当前快照。</span><span class="sxs-lookup"><span data-stu-id="77c8d-204">The enumeration represents a moment-in-time snapshot of the contents of the stack.</span></span> <span data-ttu-id="77c8d-205">它不反映对后对集合的任何更新<xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="77c8d-205">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="77c8d-206">枚举器可以安全地与读取的同时使用和写入到堆栈。</span><span class="sxs-lookup"><span data-stu-id="77c8d-206">The enumerator is safe to use concurrently with reads from and writes to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; 'T[]&#xA;override this.ToArray : unit -&gt; 'T[]" Usage="concurrentStack.ToArray " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c8d-207">将 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 中存储的项复制到一个新的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-207">Copies the items stored in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-208">新数组包含从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 复制的元素的快照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-208">A new array containing a snapshot of elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-209">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-209">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="concurrentStack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="77c8d-210">当此方法返回时，<c>result</c> 包含来自 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部的一个对象，或如果操作失败，则包含未指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-210">When this method returns, <c>result</c> contains an object from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> or an unspecified value if the operation failed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-211">尝试从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的顶部返回一个对象而无需移除它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-211">Attempts to return an object from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-212">如果成功返回了对象，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-212">true if and object was returned successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-213">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-213">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="concurrentStack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="77c8d-214">如果操作成功，则此方法返回时，<c>result</c> 包含所移除的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-214">When this method returns, if the operation was successful, <c>result</c> contains the object removed.</span>
          </span>
          <span data-ttu-id="77c8d-215">如果没有可供移除的对象，则不指定该值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-215">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-216">尝试弹出并返回 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-216">Attempts to pop and return the object at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-217">如果从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 的顶部成功移除并返回了元素，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-217">true if an element was removed and returned from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-218">有关代码示例，请参阅 <xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-218">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryPopRange">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <remarks />
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-219">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-219">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryPopRange">
      <MemberSignature Language="C#" Value="public int TryPopRange (T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 TryPopRange(!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPopRange (items As T()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TryPopRange(cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.TryPopRange : 'T[] -&gt; int" Usage="concurrentStack.TryPopRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="77c8d-220">要将从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部弹出的对象添加到的 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-220">The <see cref="T:System.Array" /> to which objects popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> will be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-221">尝试自动弹出并返回 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部的多个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-221">Attempts to pop and return multiple objects from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-222">成功从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部弹出并插入 <paramref name="items" /> 中的对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-222">The number of objects successfully popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> and inserted in <paramref name="items" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-223">当弹出时多个项，如果在堆栈上的小争用，使用`TryPopRange`比使用效率更高<xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A>一次每个要删除的项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-223">When popping multiple items, if there is little contention on the stack, using `TryPopRange` can be more efficient than using <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> once per item to be removed.</span></span> <span data-ttu-id="77c8d-224">节点填充`items`startIndex，要在 startIndex + 1，弹出和其他操作的第二个项在弹出的第一个项数组。</span><span class="sxs-lookup"><span data-stu-id="77c8d-224">Nodes fill the `items` array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.</span></span>  
  
 <span data-ttu-id="77c8d-225">有关代码示例，请参阅 <xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="77c8d-225">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c8d-226">
            <paramref name="items" /> 是 null 参数（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-226">
              <paramref name="items" /> is a null argument (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-227">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-227">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPopRange">
      <MemberSignature Language="C#" Value="public int TryPopRange (T[] items, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 TryPopRange(!T[] items, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPopRange (items As T(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TryPopRange(cli::array &lt;T&gt; ^ items, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.TryPopRange : 'T[] * int * int -&gt; int" Usage="concurrentStack.TryPopRange (items, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="77c8d-228">要将从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部弹出的对象添加到的 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-228">The <see cref="T:System.Array" /> to which objects popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> will be added.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="77c8d-229">
            <c>items</c>中从零开始的偏移量，在该位置开始从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部插入元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-229">The zero-based offset in <c>items</c> at which to begin inserting elements from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="77c8d-230">从 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部弹出并插入 <c>items</c> 中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-230">The number of elements to be popped from top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> and inserted into <c>items</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c8d-231">尝试自动弹出并返回 <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> 顶部的多个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-231">Attempts to pop and return multiple objects from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77c8d-232">成功从堆栈顶部弹出并插入 <paramref name="items" /> 中的对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-232">The number of objects successfully popped from the top of the stack and inserted in <paramref name="items" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c8d-233">当弹出时多个项，如果在堆栈上的小争用，使用 TryPopRange 可能要比使用更高效<xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A>一次每个要删除的项。</span><span class="sxs-lookup"><span data-stu-id="77c8d-233">When popping multiple items, if there is little contention on the stack, using TryPopRange can be more efficient than using <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> once per item to be removed.</span></span> <span data-ttu-id="77c8d-234">节点填充`items`startIndex，要在 startIndex + 1，弹出和其他操作的第二个项在弹出的第一个项数组。</span><span class="sxs-lookup"><span data-stu-id="77c8d-234">Nodes fill the `items` array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c8d-235">
            <paramref name="items" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-235">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77c8d-236">
            <paramref name="startIndex" /> 或 <paramref name="count" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-236">
              <paramref name="startIndex" /> or <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="77c8d-237">或 <paramref name="startIndex" /> 大于或等于 <paramref name="items" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-237">Or <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="77c8d-238">
            <paramref name="startIndex" /> + <paramref name="count" /> 大于 <paramref name="items" /> 的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-238">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="77c8d-239">线程安全集合</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c8d-239">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>