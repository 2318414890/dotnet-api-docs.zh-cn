<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Partitioner`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5197044fd84cf2ed5e079452a8de819393f40f33e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">197044fd84cf2ed5e079452a8de819393f40f33e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.Partitioner`1">
          <source>Type of the elements in the collection.</source>
          <target state="translated">集合中的元素的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.Partitioner`1">
          <source>Represents a particular manner of splitting a data source into multiple partitions.</source>
          <target state="translated">表示将数据源拆分为多个分区的特定方式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.Partitioner`1">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.Partitioner`1">
          <source>The following example shows how to implement a partitioner that returns a single element at a time:</source>
          <target state="translated">下面的示例演示如何实现一次返回的单个元素的分区程序：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.Partitioner`1">
          <source>The static methods on <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.Partitioner`1" /&gt;</ph> are all thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">上的静态方法<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.Partitioner`1" /&gt;</ph>是所有的线程安全的可从多个线程同时使用。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.Partitioner`1">
          <source>However, while a created partitioner is in use, the underlying data source should not be modified, whether from the same thread that is using a partitioner or from a separate thread.</source>
          <target state="translated">但是，在使用创建分区程序时，基础数据源不应修改，不论是从正在使用分区程序的相同线程或从单独的线程。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.#ctor">
          <source>Creates a new partitioner instance.</source>
          <target state="translated">创建新的分区程序实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>Creates an object that can partition the underlying collection into a variable number of partitions.</source>
          <target state="translated">创建一个可将基础集合分区成可变数目的分区的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>An object that can create partitions over the underlying data source.</source>
          <target state="translated">一个可针对基础数据源创建分区的对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>The returned object implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">返回的对象实现<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>Calling <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the object creates another partition over the sequence.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>在对象上创建另一个分区序列。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A&gt;</ph> method is only supported if the <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> property returns true.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A&gt;</ph>如果仅支持方法<ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph>属性返回 true。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>Dynamic partitioning is not supported by the base class.</source>
          <target state="translated">该基类不支持动态分区。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
          <source>You must implement it in a derived class.</source>
          <target state="translated">必须在派生类中实现它。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
          <source>The number of partitions to create.</source>
          <target state="translated">要创建的分区数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
          <source>Partitions the underlying collection into the given number of partitions.</source>
          <target state="translated">将基础集合分区成给定数目的分区。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
          <source>A list containing <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> enumerators.</source>
          <target state="translated">一个包含 <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> 枚举器的列表。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
          <source>A class that implements this method is expected to return exactly the number of partitions that are specified in <ph id="ph1">`partitionCount`</ph>.</source>
          <target state="translated">一个类以实现此方法应返回完全中指定的分区数<ph id="ph1">`partitionCount`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
          <source>If a partition contains no elements, then return an empty enumerator rather than null (Nothing in Visual Basic).</source>
          <target state="translated">如果分区不包含任何元素，则返回空枚举器而不是 null (在 Visual Basic 中为 Nothing)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions">
          <source>Gets whether additional partitions can be created dynamically.</source>
          <target state="translated">获取是否可以动态创建附加分区。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.Partitioner`1" /&gt;</ph> can create partitions dynamically as they are requested; false if the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.Partitioner`1" /&gt;</ph> can only allocate partitions statically.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.Partitioner`1" /&gt;</ph> 可以根据分区请求动态创建分区，则为 true；如果 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.Partitioner`1" /&gt;</ph> 只能以静态方式分配分区，则为 false。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions">
          <source>If a derived class does not override and implement <ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> should return false.</source>
          <target state="translated">如果派生的类没有重写并实现<ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph>应返回 false。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions">
          <source>The value of <ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> should not vary over the lifetime of this instance.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph>应该此实例的生存期内不会对随而变化。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>PLINQ 和 TPL 的自定义分区程序<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>