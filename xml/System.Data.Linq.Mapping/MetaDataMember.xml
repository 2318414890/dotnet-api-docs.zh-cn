<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="195f8be7eea6436f98a825616ab87802912d8f7f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389141" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9fe9d-101">表示域对象的字段或属性与数据库表的列之间的映射。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9fe9d-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-102">初始化 <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-103">获取与此成员相对应的 <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-103">Gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-104">如果存在对应的 <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />，则为该 System.Data.Linq.Mapping.MetaAssociation；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-105">此属性表示类似的外键，到主键关系数据库关联。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-106">获取此成员在执行插入和更新操作时的读回行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-106">Gets the read-back behavior for this member for insert and update operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-107">一个 <see cref="T:System.Data.Linq.Mapping.AutoSync" /> 枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-107">An <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-108">获取一个值，该值指示是否可以为此成员赋予 <see langword="null" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-108">Gets whether the value of this member can be assigned the <see langword="null" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-109">如果可以为此成员赋予 <see langword="true" /> 值，则为 <see langword="null" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-109">
              <see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-110">此属性是依赖于<xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>属性，并为方便而提供。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-111">获取相应数据库列的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-111">Gets the type of the corresponding database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-112">以字符串表示的数据库列的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-112">The type of the database column as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-113">这将是用于在 Transact SQL 表声明命令来定义列的确切文本。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="9fe9d-114">如果不是这样定义，则会从成员类型推断数据库列类型。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-115">获取包含此数据成员的 <see cref="T:System.Data.Linq.Mapping.MetaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-115">Gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-116">包含当前成员的元类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-116">The meta-type that contains the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-117">获取用于获取并设置此成员的延迟源的访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-117">Gets the accessor that is used to get and set the deferred source of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-118">用于访问此成员的延迟源的访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-118">The accessor used to access the deferred source for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-119">获取用于获取并设置此成员的延迟值（而不会导致提取）的访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-119">Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-120">用于访问此成员的延迟值的访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-120">The accessor used to access the deferred value for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-121">获取定义计算列的表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-121">Gets the expression that defines a computed column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-122">以字符串表示的计算列表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-122">The expression for the computed column as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-123">获取一个值，该值指示此成员是否定义关联关系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-123">Gets whether this member defines an association relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-124">如果此成员定义了关联关系，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-124">
              <see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-125">获取一个值，该值指示此成员是否由数据库自动生成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-125">Gets whether this member is automatically generated by the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-126">如果此成员是由数据库自动生成的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-126">
              <see langword="true" /> if this member is automatically generated by the database; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-127">已自动生成的成员后会立即同步插入相应的数据行。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="9fe9d-128">插入触发器生成的键时不支持值。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9fe9d-129">要检查的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-129">The type to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe9d-130">指定此成员是否由指定类型声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-130">Specifies whether this member is declared by the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fe9d-131">如果此成员是由指定类型声明的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-131">
              <see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-132">获取一个值，该值指示默认行为是否为延迟加载此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-132">Gets whether the default behavior is to load this member on a deferred basis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-133">如果默认情况下会延迟加载此成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-133">
              <see langword="true" /> if this member loaded on a deferred basis by default; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-134">获取一个值，该值指示此成员是否表示继承鉴别器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-134">Gets whether this member represents the inheritance discriminator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-135">如果此成员表示继承鉴别器，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-135">
              <see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-136">此属性可`true`最多一个成员的最顶层的映射层次结构中的类。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-137">获取一个值，该值指示此成员是否映射到列（或约束）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-137">Gets whether this member is mapped to a column (or constraint).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-138">如果此成员映射到列（或约束），则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-138">
              <see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-139">一个类可能有持久性和非永久成员的组合。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="9fe9d-140">持久性成员映射而非持久性成员未映射。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="9fe9d-141">映射的类必须具有至少一个持久的成员。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-142">获取一个值，该值指示此成员是否为类型标识的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-142">Gets whether this member is part of the type's identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-143">如果此成员是类型标识的一部分，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-143">
              <see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-144">如果此属性为`true`，类成员表示是表的唯一键的一部分的列。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-144">If this property is `true`, the class member represents a column that is part of the table’s unique key.</span></span> <span data-ttu-id="9fe9d-145">多个类的成员可以具有此属性设置为`true`是关联的列的复合键。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="9fe9d-146">对于实体类，至少一个成员必须具有此属性，并且应映射到的主键或唯一键对应的表或视图中。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="9fe9d-147">否则，LINQ to SQL 会将以用于将更改提交到数据库以只读方式类的实例。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="9fe9d-148">使用标识的列集<xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A>不需要的主键。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="9fe9d-149">它们只是表示唯一标识的实体集。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="9fe9d-150">常见的替代项包括群集索引列或其他唯一键列。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-151">获取一个值，该值指示此成员是否表示行版本或时间戳。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-151">Gets whether this member represents the row version or timestamp.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-152">如果此成员表示行版本或时间戳，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-152">
              <see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-153">版本号递增，并且只要更新关联的行时便会更新时间戳列。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-154">获取用于执行加载操作的 <see cref="T:System.Data.Linq.DataContext" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-154">Gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-155">类似于 <see cref="T:System.Reflection.MethodInfo" /> 的加载方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-156">获取数据库中列（或约束）的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-156">Gets the name of the column (or constraint) in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-157">字符串形式的列（或约束）的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-157">The name of the column (or constraint) as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-158">获取基础 <see cref="T:System.Reflection.MemberInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-158">Gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-159">成员特性和元数据信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-159">Member attribute and metadata information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-160">获取用于获取或设置此成员的值的访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-160">Gets the accessor that is used to get or set the value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-161">访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-161">The accessor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-162">获取与 <see cref="T:System.Reflection.MemberInfo" /> 名称相同的成员名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-162">Gets the name of the member, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-163">与 <see cref="T:System.Reflection.MemberInfo" /> 名称相同的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-163">The name, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-164">获取此成员在查询结果的默认布局中的序号位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-164">Gets the ordinal position of this member in the default layout of query results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-165">序号位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-165">The ordinal position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-166">获取用于获取或设置此成员的存储值的访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-166">Gets the accessor that is used to get or set the storage value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-167">用于访问此成员的存储值的访问器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-167">The accessor for the storage value of this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-168">获取存储此成员数据的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-168">Gets the member that stores the data for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-169">存储成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-169">The storage member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-170">获取此成员的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-170">Gets the type of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-171">当前成员的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-171">The type of the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fe9d-172">获取此成员的开放式并发检查策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-172">Gets the optimistic concurrency check policy for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fe9d-173">
            <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> 枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe9d-173">An <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> enum.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe9d-174">如果类没有版本成员 (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A>设置为`true`)，检测可通过将原始成员值与当前的数据库状态进行比较。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="9fe9d-175"><xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A>属性确定 LINQ to SQL 如何实现在开放式并发冲突检测。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="9fe9d-176">使用此属性的那些成员设置为<xref:System.Data.Linq.Mapping.UpdateCheck.Always>或<xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged>在冲突检测期间考虑。</span><span class="sxs-lookup"><span data-stu-id="9fe9d-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>