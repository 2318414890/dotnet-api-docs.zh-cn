<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdaccd3505909035cae08bf74e9fe432de1f1bb7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681680" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <TypeSignature Language="F#" Value="type ColumnAttribute = class&#xA;    inherit DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fdaa9-101">Associates a class with a column in a database table.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdaa9-101">Associates a class with a column in a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-102">使用此属性可指定实体类的某个成员表示数据库表中的列。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-102">Use this attribute to designate a member of an entity class to represent a column in a database table.</span></span> <span data-ttu-id="fdaa9-103">可以将此特性应用于任何字段或属性是`public`， `private`，或`internal`。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-103">You can apply this attribute to any field or property that is `public`, `private`, or `internal`.</span></span>  
  
 <span data-ttu-id="fdaa9-104">只有标识为列持久化的实体类成员时[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]将更改保存到数据库。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-104">Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] saves changes to the database.</span></span>  
  
 <span data-ttu-id="fdaa9-105">使用逗号分隔多个特性的属性。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-105">Use commas to separate multiple properties on the attribute.</span></span>  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-108">
            <see cref="T:System.Data.Linq.Mapping.AutoSync" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-108">The <see cref="T:System.Data.Linq.Mapping.AutoSync" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-109">Gets or sets whether a column can contain null values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-109">Gets or sets whether a column can contain null values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-110">默认值 = <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-110">Default = <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-111">如果将此值设置为`false`，相应的列中的数据被假定为非 null。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-111">If you set this value to `false`, the data in the corresponding column is assumed to be non-null.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdaa9-112">此属性已复制<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>属性为方便起见。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-112">This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience.</span></span> <span data-ttu-id="fdaa9-113"><xref:System.Data.Linq.DataContext.CreateDatabase%2A>方法将仅使用<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-113">The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property.</span></span> <span data-ttu-id="fdaa9-114">出于此原因，必须指定列是否可以包含中的 null 值<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>属性还。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-114">For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-115">Gets or sets the type of the database column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-115">Gets or sets the type of the database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-116">字符串值，该值指定 TRANSACT-SQL 表声明中定义的列的确切文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-116">String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-117">使用此属性指定的 Transact SQL 表声明中定义的列的确切文本。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-117">Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</span></span> <span data-ttu-id="fdaa9-118">指定<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>属性仅当你打算使用<xref:System.Data.Linq.DataContext.CreateDatabase%2A>创建的数据库的实例。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-118">Specify the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.</span></span>  
  
 <span data-ttu-id="fdaa9-119">默认值<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>从成员类型推断。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-119">The default value of <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> is inferred from the member type.</span></span> <span data-ttu-id="fdaa9-120">有关详细信息，请参阅[SQL-CLR 类型映射](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md)。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-120">For more information, see [SQL-CLR Type Mapping](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-121">Gets or sets whether a column is a computed column in a database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-121">Gets or sets whether a column is a computed column in a database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-122">默认值 = 空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-122">Default = empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-123">使用此属性时使用<xref:System.Data.Linq.DataContext.CreateDatabase%2A>列定义为包含计算的值。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-123">Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.</span></span>  
  
 <span data-ttu-id="fdaa9-124">例如，如果你想要创建与 SQL 中所定义的列`InventoryVal AS UnitPrice * UnitsInStock`，使用以下*表达式*字符串： `"UnitPrice * UnitsInStock"`。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-124">For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `"UnitPrice * UnitsInStock"`.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="fdaa9-125"> 不支持作为主键的计算所得列。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-125"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-126">Gets or sets whether a column contains values that the database auto-generates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-126">Gets or sets whether a column contains values that the database auto-generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-127">默认值 = <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-127">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> 成员后会立即同步的数据行插入，并且成员才是下列时间之后可用<xref:System.Data.Linq.DataContext.SubmitChanges%2A>完成。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdaa9-129">如果列包含主键值并且指派<xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A>作为`true`，还应添加<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>属性使用`IDENTITY`修饰符。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-129">If the column holds primary key values and you designate <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-131">默认值 = <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-131">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-132">当`true`，此属性将标识视为保存为继承层次结构的鉴别器值的类成员。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-132">When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</span></span>  
  
 <span data-ttu-id="fdaa9-133">可以将此属性设置为`true`表示否必须属于的最顶层的多个成员映射层次结构中的类。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-133">You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-135">默认值 = <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-135">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-136">假设一个实体类，必须使用此属性，提供至少一个成员，它必须映射到的主键或唯一键对应的表或视图中。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-136">Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="fdaa9-137">如果不做此提示[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]考虑以用于将更改提交到数据库以只读方式类的实例。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-137">Failure to do this prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.</span></span>  
  
 <span data-ttu-id="fdaa9-138">如果使用此属性指定多个类的成员，该键就被认为是关联的列的组合。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-138">If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="fdaa9-139"> 不支持作为主键的计算所得列。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-139"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-141">默认值 = <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-141">Default value = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-142">版本号会递增，并且时间戳列更新每次更新相关的行。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-142">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="fdaa9-143">(此属性告知[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]应更新列以显示它是新版本; 但并不记录的信息，如谁进行了更新。)</span><span class="sxs-lookup"><span data-stu-id="fdaa9-143">(This property tells [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</span></span>  
  
 <span data-ttu-id="fdaa9-144">请注意以下事项时`IsVersion`为 true:</span><span class="sxs-lookup"><span data-stu-id="fdaa9-144">Note the following when `IsVersion` is true:</span></span>  
  
-   <span data-ttu-id="fdaa9-145">使用<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>指定正确的修饰符，指定版本数或时间戳列。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column.</span></span> <span data-ttu-id="fdaa9-146">如果未指定<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>，[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]推断正确的修饰符。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-146">If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infers the correct modifiers.</span></span>  
  
 <span data-ttu-id="fdaa9-147">版本号会递增，并且时间戳列更新每次更新相关的行。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-147">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="fdaa9-148">具有成员`IsVersion=true`后会立即同步更新的数据行。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-148">Members with `IsVersion=true` are synchronized immediately after the data row is updated.</span></span> <span data-ttu-id="fdaa9-149">新值是可见后<xref:System.Data.Linq.DataContext.SubmitChanges%2A>完成。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-149">The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdaa9-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdaa9-151">默认值 = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />，除非<see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />是<see langword="true" />成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-151">Default = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, unless <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> is <see langword="true" /> for a member.</span>
          </span>
          <span data-ttu-id="fdaa9-152">其他值都<see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" />和<see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdaa9-152">Other values are <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> and <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdaa9-153">当此属性用于三个枚举之一时，它会确定如何[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]检测并发冲突。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-153">When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detects concurrency conflicts.</span></span>  
  
 <span data-ttu-id="fdaa9-154">如果没有成员被设计为`IsVersion=true`，原始成员值进行比较与当前数据库状态。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-154">If no member is designed as `IsVersion=true`, original member values are compared with the current database state.</span></span>  
  
 <span data-ttu-id="fdaa9-155">以下枚举都是可用：</span><span class="sxs-lookup"><span data-stu-id="fdaa9-155">The following enums are available:</span></span>  
  
-   <span data-ttu-id="fdaa9-156">`Always` 始终将此列用于冲突检测。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-156">`Always` Always use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="fdaa9-157">`Never` 永远不会将此列用于冲突检测。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-157">`Never` Never use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="fdaa9-158">`WhenChanged` 仅当成员已更改应用程序时，请使用此列。</span><span class="sxs-lookup"><span data-stu-id="fdaa9-158">`WhenChanged` Use this column only when the member has been changed by the application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>