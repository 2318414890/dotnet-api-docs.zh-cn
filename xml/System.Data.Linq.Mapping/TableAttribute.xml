<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bac18b077e2a113bda817def056a591fab7a1e3c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c3015-101">将某个类指定为与数据库表相关联的实体类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3015-101">Designates a class as an entity class that is associated with a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3015-102">使用此属性可将类指定为与数据库表或视图关联的实体类。</span><span class="sxs-lookup"><span data-stu-id="c3015-102">Use this attribute to designate a class as an entity class that is associated with a database table or view.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="c3015-103"> 将具有类<xref:System.Data.Linq.Mapping.TableAttribute>类视为持久性类的属性。</span><span class="sxs-lookup"><span data-stu-id="c3015-103"> treats classes that have the <xref:System.Data.Linq.Mapping.TableAttribute> attribute as persistent classes.</span></span>  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="c3015-104"> 支持仅单表映射。</span><span class="sxs-lookup"><span data-stu-id="c3015-104"> supports only single-table mapping.</span></span> <span data-ttu-id="c3015-105">这就是说，实体类必须映射到一个数据库表，而你不能在同一时间将数据库表映射到多个类。</span><span class="sxs-lookup"><span data-stu-id="c3015-105">That is, an entity class must be mapped to exactly one database table, and you cannot map a database table to multiple classes at the same time.</span></span>  
  
 <span data-ttu-id="c3015-106">你可以使用<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>属性<xref:System.Data.Linq.Mapping.TableAttribute>特性为表中，指定一个名称并且你可以选择使用架构名称限定表名。</span><span class="sxs-lookup"><span data-stu-id="c3015-106">You can use the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property of the <xref:System.Data.Linq.Mapping.TableAttribute> attribute to specify a name for the table, and you can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="c3015-107">如果你不通过使用指定名称<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>属性，表名假定可与类名称相同。</span><span class="sxs-lookup"><span data-stu-id="c3015-107">If you do not specify a name by using the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property, the table name is assumed to be the same as the class name.</span></span>  
  
## <a name="schema-qualified-names"></a><span data-ttu-id="c3015-108">架构限定名称</span><span class="sxs-lookup"><span data-stu-id="c3015-108">Schema-qualified Names</span></span>  
 <span data-ttu-id="c3015-109">（可选） 可以使用架构名称来限定表名。</span><span class="sxs-lookup"><span data-stu-id="c3015-109">You can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="c3015-110">默认情况下，在第一个期间左侧令牌<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>字符串被视为架构名称。</span><span class="sxs-lookup"><span data-stu-id="c3015-110">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name.</span></span> <span data-ttu-id="c3015-111">名称的其余部分被视为表名称。</span><span class="sxs-lookup"><span data-stu-id="c3015-111">The remainder of the name is considered to be the table name.</span></span> <span data-ttu-id="c3015-112">提供程序行情作为相应的表名称。</span><span class="sxs-lookup"><span data-stu-id="c3015-112">The provider quotes the table name as appropriate.</span></span> <span data-ttu-id="c3015-113">例如， [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] SQL Server 提供程序可确保，则使用方括号至少需要位置。</span><span class="sxs-lookup"><span data-stu-id="c3015-113">For example, the [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] provider for SQL Server makes sure that brackets are used at least where they are needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3015-114">在某些情况下，你必须显式特性由于对 SQL Server 提供程序无法自动的括号。</span><span class="sxs-lookup"><span data-stu-id="c3015-114">In some cases, you must explicitly quote attributes because the SQL Server provider cannot auto-quote.</span></span> <span data-ttu-id="c3015-115">下表显示了一些示例。</span><span class="sxs-lookup"><span data-stu-id="c3015-115">The following table shows some examples.</span></span>  
  
|<span data-ttu-id="c3015-116">Case</span><span class="sxs-lookup"><span data-stu-id="c3015-116">Case</span></span>|<span data-ttu-id="c3015-117">示例： 标识符名称</span><span class="sxs-lookup"><span data-stu-id="c3015-117">Example: Identifier Name</span></span>|<span data-ttu-id="c3015-118">在属性中的示例： 预期的字符串</span><span class="sxs-lookup"><span data-stu-id="c3015-118">Example: Expected String in Attributes</span></span>|<span data-ttu-id="c3015-119">否则为...</span><span class="sxs-lookup"><span data-stu-id="c3015-119">Otherwise…</span></span>|  
|----------|------------------------------|--------------------------------------------|----------------|  
|<span data-ttu-id="c3015-120">架构名称包含句点</span><span class="sxs-lookup"><span data-stu-id="c3015-120">Schema name contains a period</span></span>|<span data-ttu-id="c3015-121">架构:"A.B"</span><span class="sxs-lookup"><span data-stu-id="c3015-121">Schema: "A.B"</span></span><br /><br /> <span data-ttu-id="c3015-122">表:"C"</span><span class="sxs-lookup"><span data-stu-id="c3015-122">Table: "C"</span></span>|<span data-ttu-id="c3015-123">"[A.B].C"</span><span class="sxs-lookup"><span data-stu-id="c3015-123">"[A.B].C"</span></span>|<span data-ttu-id="c3015-124">第一个期间假定架构名称分开的表名称。</span><span class="sxs-lookup"><span data-stu-id="c3015-124">The first period is assumed to separate the schema name from the table name.</span></span>|  
|<span data-ttu-id="c3015-125">架构/表名称开头 `@`</span><span class="sxs-lookup"><span data-stu-id="c3015-125">Schema/Table name starts with `@`</span></span>|<span data-ttu-id="c3015-126">“@SomeName”</span><span class="sxs-lookup"><span data-stu-id="c3015-126">"@SomeName"</span></span>|<span data-ttu-id="c3015-127">"[@SomeName]"</span><span class="sxs-lookup"><span data-stu-id="c3015-127">"[@SomeName]"</span></span>|<span data-ttu-id="c3015-128">假定为参数名称。</span><span class="sxs-lookup"><span data-stu-id="c3015-128">Assumed to be a parameter name.</span></span>|  
|<span data-ttu-id="c3015-129">架构开头`[`和结束的 `]`</span><span class="sxs-lookup"><span data-stu-id="c3015-129">Schema starts with `[` and ends with `]`</span></span>|<span data-ttu-id="c3015-130">"[Schema.Table]"</span><span class="sxs-lookup"><span data-stu-id="c3015-130">"[Schema.Table]"</span></span>|<span data-ttu-id="c3015-131">"[[Schema].[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="c3015-131">"[[Schema].[Table]]]"</span></span>|<span data-ttu-id="c3015-132">不带引号的标识符类似于带引号的标识符。</span><span class="sxs-lookup"><span data-stu-id="c3015-132">The unquoted identifier resembles a quoted identifier.</span></span>|  
|<span data-ttu-id="c3015-133">表开头`[`和结束的 `]`</span><span class="sxs-lookup"><span data-stu-id="c3015-133">Table starts with `[` and ends with `]`</span></span>|<span data-ttu-id="c3015-134">"[Table]"</span><span class="sxs-lookup"><span data-stu-id="c3015-134">"[Table]"</span></span>|<span data-ttu-id="c3015-135">"[[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="c3015-135">"[[Table]]]"</span></span>|<span data-ttu-id="c3015-136">不带引号的标识符类似于带引号的标识符。</span><span class="sxs-lookup"><span data-stu-id="c3015-136">The unquoted identifier resembles a quoted identifier.</span></span>|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3015-137">初始化 <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3015-137">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3015-138">获取或设置表或视图的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3015-138">Gets or sets the name of the table or view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3015-139">默认情况下，此值与类名称相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3015-139">By default, the value is the same as the name of the class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3015-140">如果你不通过使用指定名称<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>，假定表名称为的类名称相同。</span><span class="sxs-lookup"><span data-stu-id="c3015-140">If you do not specify a name by using <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, the table name is assumed to be the same as the class name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c3015-141">你可以选择使用的架构名称来限定表名 (例如，Schema3.Table5)。</span><span class="sxs-lookup"><span data-stu-id="c3015-141">You can optionally use a schema name to qualify the table name (for example, Schema3.Table5).</span></span> <span data-ttu-id="c3015-142">默认情况下，在第一个期间左侧令牌<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>字符串被视为架构名称，并为的表名称的其余部分。</span><span class="sxs-lookup"><span data-stu-id="c3015-142">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name, and the rest to be the table name.</span></span>  
  
 <span data-ttu-id="c3015-143">在下面的示例中，默认表名， `Customer`，更改为`Customers`。</span><span class="sxs-lookup"><span data-stu-id="c3015-143">In the following example, the default table name, `Customer`, is changed to `Customers`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>