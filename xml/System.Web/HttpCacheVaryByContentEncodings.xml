<Type Name="HttpCacheVaryByContentEncodings" FullName="System.Web.HttpCacheVaryByContentEncodings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd3a9b51560205dd50b1d152503690010264c506" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51900924" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpCacheVaryByContentEncodings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCacheVaryByContentEncodings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCacheVaryByContentEncodings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCacheVaryByContentEncodings" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCacheVaryByContentEncodings sealed" />
  <TypeSignature Language="F#" Value="type HttpCacheVaryByContentEncodings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一种类型安全的方式来设置 <see cref="T:System.Web.HttpCachePolicy" /> 类的 <see cref="P:System.Web.HttpCachePolicy.VaryByContentEncodings" /> 属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>属性用于指定是否缓存动态压缩的响应。 缓存动态压缩的响应意味着，压缩成本只发生一次，在第一个请求的资源 （或应用程序重启后） 和缓存项何时到期。  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>属性的<xref:System.Web.HttpCachePolicy>类标识 ASP.NET 用来唯一标识的响应的一种变体，如果有多个资源的缓存的响应的请求标头参数。 当响应依赖于一组客户端输入，如标头、 参数或内容编码时，这很有用。  
  
 <xref:System.Web.HttpCacheVaryByContentEncodings>类不直接与 HTTP 缓存控制标头。 但是，它可帮助确保客户端或代理服务器的响应因指定的内容编码。 若要改变的内容编码将缓存设置使 ASP.NET 可以改变由响应`Accept-Encoding`标头。 处理请求时，`Accept-Encoding`检查标头和第一个可接受编码是标识，用来执行以下操作之一：  
  
-   如果还在找到相匹配的编码，则<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>列表和缓存的响应存在时，发送缓存的响应。  
  
-   如果还在找到相匹配的编码，则<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>列表，但缓存的响应不存在，生成响应并将其插入到缓存。  
  
-   如果在找不到相匹配的编码<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>对于非编码的响应，也称为标识响应搜索列表中，缓存。 如果找到标识响应，则将它发送。 否则为新的非编码响应生成并存储在缓存中。  
  
 有关详细信息<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>属性，请参阅 RFC 2616： 超文本传输协议-HTTP/1.1，位于[World Wide Web 联合会 (W3C) 网站](https://go.microsoft.com/fwlink/?linkid=37125)。 请参阅完整的详细信息部分 14，"标头字段定义"。  
  
 可以设置<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>通过 using 指令或通过将一个配置文件添加到 Web.config 文件中的元素的属性。  
  
   
  
## Examples  
 下面的示例演示如何启用动态压缩形式的响应可以从输出缓存提供的。 可接受的编码为"gzip"，并通过使用设置`VaryByContentEncodings`指令的特性。 如果承载的网页的 Web 服务器没有启用动态压缩，输出缓存不会针对指定的内容编码的缓存的响应。  
  
 [!code-aspx-csharp[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/VB/default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.HttpCachePolicy.VaryByContentEncodings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCacheVaryByContentEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCacheVaryByContentEncodings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCacheVaryByContentEncodings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.HttpCacheVaryByContentEncodings" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentEncodings">
      <MemberSignature Language="C#" Value="public string[] GetContentEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetContentEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCacheVaryByContentEncodings.GetContentEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContentEncodings () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetContentEncodings();" />
      <MemberSignature Language="F#" Value="member this.GetContentEncodings : unit -&gt; string[]" Usage="httpCacheVaryByContentEncodings.GetContentEncodings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个值的数组，这些值指定用于改变缓存的内容编码。</summary>
        <returns>包含用于改变缓存的内容编码的值数组。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[string contentEncoding] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCacheVaryByContentEncodings.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(contentEncoding As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[System::String ^] { bool get(System::String ^ contentEncoding); void set(System::String ^ contentEncoding, bool value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : bool with get, set" Usage="System.Web.HttpCacheVaryByContentEncodings.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentEncoding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentEncoding">内容编码的名称。</param>
        <summary>获取或设置一个值，该值指示缓存是否随指定的内容编码而变化。</summary>
        <value>如果缓存应该随指定的内容编码而变化，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">内容编码为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetContentEncodings">
      <MemberSignature Language="C#" Value="public void SetContentEncodings (string[] contentEncodings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetContentEncodings(string[] contentEncodings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCacheVaryByContentEncodings.SetContentEncodings(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetContentEncodings (contentEncodings As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetContentEncodings(cli::array &lt;System::String ^&gt; ^ contentEncodings);" />
      <MemberSignature Language="F#" Value="member this.SetContentEncodings : string[] -&gt; unit" Usage="httpCacheVaryByContentEncodings.SetContentEncodings contentEncodings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentEncodings" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="contentEncodings">包含用于改变缓存的内容编码的值数组。</param>
        <summary>设置值的数组，这些值指定用于改变缓存的内容编码。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>