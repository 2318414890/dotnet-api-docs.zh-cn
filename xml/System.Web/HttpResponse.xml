<Type Name="HttpResponse" FullName="System.Web.HttpResponse">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f140e3a58a817043eea3b5c5af193b7fa67d9d7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpResponse" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpResponse" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpResponse sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="61b16-101">封装来自 ASP.NET 操作的 HTTP 响应信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="61b16-101">Encapsulates HTTP-response information from an ASP.NET operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-102">方法和属性<xref:System.Web.HttpResponse>通过公开类<xref:System.Web.HttpApplication.Response%2A>属性<xref:System.Web.HttpApplication>， <xref:System.Web.HttpContext>， <xref:System.Web.UI.Page>，和<xref:System.Web.UI.UserControl>类。</span><span class="sxs-lookup"><span data-stu-id="61b16-102">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the <xref:System.Web.HttpApplication.Response%2A> property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="61b16-103">以下的方法<xref:System.Web.HttpResponse>类仅在回发的情况下支持和不在异步 post 备份方案：</span><span class="sxs-lookup"><span data-stu-id="61b16-103">The following methods of the <xref:System.Web.HttpResponse> class are supported only in post back scenarios and not in asynchronous post back scenarios:</span></span>  
  
-   <xref:System.Web.HttpResponse.BinaryWrite%2A>  
  
-   <xref:System.Web.HttpResponse.Clear%2A>  
  
-   <xref:System.Web.HttpResponse.ClearContent%2A>  
  
-   <xref:System.Web.HttpResponse.ClearHeaders%2A>  
  
-   <xref:System.Web.HttpResponse.Close%2A>  
  
-   <xref:System.Web.HttpResponse.End%2A>  
  
-   <xref:System.Web.HttpResponse.Flush%2A>  
  
-   <xref:System.Web.HttpResponse.TransmitFile%2A>  
  
-   <xref:System.Web.HttpResponse.Write%2A>  
  
-   <xref:System.Web.HttpResponse.WriteFile%2A>  
  
-   <xref:System.Web.HttpResponse.WriteSubstitution%2A>  
  
 <span data-ttu-id="61b16-104">当你使用启用局部页面更新<xref:System.Web.UI.UpdatePanel>控件以更新而不是使用一种回发更新整个页面的页面的选定的区域。</span><span class="sxs-lookup"><span data-stu-id="61b16-104">Partial-page updates are enabled when you use <xref:System.Web.UI.UpdatePanel> controls to update selected regions of a page instead of updating the whole page with a post back.</span></span> <span data-ttu-id="61b16-105">有关详细信息，请参阅[UpdatePanel 控件概述](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)和[局部页面呈现概述](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。</span><span class="sxs-lookup"><span data-stu-id="61b16-105">For more information, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-106">请求页时，下面的示例将绘制三个重叠的矩形。</span><span class="sxs-lookup"><span data-stu-id="61b16-106">The following example draws three overlapping rectangles when the page is requested.</span></span> <span data-ttu-id="61b16-107">代码首先通过设置<xref:System.Web.HttpResponse.ContentType%2A>属性为 image/jpeg，以便整个页面将呈现为 JPEG 图像。</span><span class="sxs-lookup"><span data-stu-id="61b16-107">The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image.</span></span> <span data-ttu-id="61b16-108">然后，代码调用<xref:System.Web.HttpResponse.Clear%2A>方法，以确保与此响应发送时的任何无关的内容。</span><span class="sxs-lookup"><span data-stu-id="61b16-108">The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response.</span></span> <span data-ttu-id="61b16-109">接下来，代码设置<xref:System.Web.HttpResponse.BufferOutput%2A>属性设置为 true，以便发送到请求的客户端之前，完全处理页。</span><span class="sxs-lookup"><span data-stu-id="61b16-109">Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client.</span></span> <span data-ttu-id="61b16-110">然后创建用于绘制矩形的两个对象：<xref:System.Drawing.Bitmap>和<xref:System.Drawing.Graphics>对象。</span><span class="sxs-lookup"><span data-stu-id="61b16-110">Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="61b16-111">在页中创建的变量为坐标中用于绘制矩形和最大矩形内显示的字符串。</span><span class="sxs-lookup"><span data-stu-id="61b16-111">The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.</span></span>  
  
 <span data-ttu-id="61b16-112">当绘制的三个矩形和随即显示在它们的字符串时，<xref:System.Drawing.Bitmap>保存到<xref:System.IO.Stream>与关联的对象<xref:System.Web.HttpResponse.OutputStream%2A>属性，并且其格式设置为 JPEG。</span><span class="sxs-lookup"><span data-stu-id="61b16-112">When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG.</span></span> <span data-ttu-id="61b16-113">该代码调用<xref:System.Drawing.Image.Dispose%2A>和<xref:System.Drawing.Graphics.Dispose%2A>方法来释放使用两个图形对象的资源。</span><span class="sxs-lookup"><span data-stu-id="61b16-113">The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects.</span></span> <span data-ttu-id="61b16-114">最后，代码将调用<xref:System.Web.HttpResponse.Flush%2A>方法发送到请求的客户端所有缓冲的响应。</span><span class="sxs-lookup"><span data-stu-id="61b16-114">Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61b16-115">在代码中，<xref:System.Web.HttpResponse>关键字通过引用了对象`Response`。</span><span class="sxs-lookup"><span data-stu-id="61b16-115">In code, the <xref:System.Web.HttpResponse> object is referred to by the keyword `Response`.</span></span> <span data-ttu-id="61b16-116">例如，`Response.Clear()`指<xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-116">For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="61b16-117"><xref:System.Web.UI.Page>类具有一个属性，名为<xref:System.Web.UI.Page.Response%2A>公开的当前实例<xref:System.Web.HttpResponse>。</span><span class="sxs-lookup"><span data-stu-id="61b16-117">The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of <xref:System.Web.HttpResponse>.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpResponse (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpResponse(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="61b16-118">实现自定义 HTTP 输出的 <see cref="T:System.IO.TextWriter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-118">A <see cref="T:System.IO.TextWriter" /> object that enables custom HTTP output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-119">初始化 <see cref="T:System.Web.HttpResponse" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-119">Initializes a new instance of the <see cref="T:System.Web.HttpResponse" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-120">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="61b16-120">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="61b16-121">方法和属性<xref:System.Web.HttpResponse>类公开通过内部<xref:System.Web.HttpContext.Response%2A>在 ASP.NET 中的对象。</span><span class="sxs-lookup"><span data-stu-id="61b16-121">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheDependency">
      <MemberSignature Language="C#" Value="public void AddCacheDependency (params System.Web.Caching.CacheDependency[] dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheDependency(class System.Web.Caching.CacheDependency[] dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheDependency (ParamArray dependencies As CacheDependency())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheDependency(... cli::array &lt;System::Web::Caching::CacheDependency ^&gt; ^ dependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependencies">
          <span data-ttu-id="61b16-122">要添加到应用程序依赖项列表的文件、缓存键或 <see cref="T:System.Web.Caching.CacheDependency" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-122">A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> to add to the list of application dependencies.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-123">将一组缓存依赖项与响应关联，这样，如果响应存储在输出缓存中并且指定的依赖项发生变化，就可以使该响应失效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-123">Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-124"><xref:System.Web.HttpResponse.AddCacheDependency%2A>方法允许的依赖项来创建两个缓存的响应和<xref:System.Web.Caching.CacheDependency>对象。</span><span class="sxs-lookup"><span data-stu-id="61b16-124">The <xref:System.Web.HttpResponse.AddCacheDependency%2A> method allows dependencies to be created between cached responses and a <xref:System.Web.Caching.CacheDependency> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-125">下面的示例演示如何通过使用创建的缓存依赖项<xref:System.Web.HttpResponse.AddCacheDependency%2A>方法和一个<xref:System.Web.Caching.CacheDependency>对象。</span><span class="sxs-lookup"><span data-stu-id="61b16-125">The following example demonstrates how to create a cache dependency by using the <xref:System.Web.HttpResponse.AddCacheDependency%2A> method and a <xref:System.Web.Caching.CacheDependency> object.</span></span>  
  
 [!code-aspx-csharp[HttpResponse.AddCacheDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/CS/httpresponse.addcachedependency_cs.aspx#1)]
 [!code-aspx-vb[HttpResponse.AddCacheDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/VB/httpresponse.addcachedependency_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-126">
            <paramref name="dependencies" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-126">The <paramref name="dependencies" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-127">在缓存处理管线中调用此方法太迟，已经在创建了缓存响应之后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-127">This method was called too late in the cache processing pipeline, after the cached response was already created.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCacheItemDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-128">使缓存响应的有效性依赖于缓存中的其他项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-128">Makes the validity of a cached response dependent on other items in the cache.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(class System.Collections.ArrayList cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(System::Collections::ArrayList ^ cacheKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="cacheKeys">
          <span data-ttu-id="61b16-129">
            <see cref="T:System.Collections.ArrayList" />，包含当前缓存的响应所依赖的项的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-129">The <see cref="T:System.Collections.ArrayList" /> that contains the keys of the items that the current cached response is dependent upon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-130">使缓存响应的有效性依赖于缓存中的其他项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-130">Makes the validity of a cached response dependent on other items in the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-131">当引用的项在`cacheKeys`从缓存中删除参数，当前项的缓存的响应无效。</span><span class="sxs-lookup"><span data-stu-id="61b16-131">When the items referred to in the `cacheKeys` parameter are removed from the cache, the cached response of the current item is not valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-132">下面的示例演示如何使用 ASP.NET 页输出缓存。</span><span class="sxs-lookup"><span data-stu-id="61b16-132">The following example demonstrates how to use an ASP.NET page that is output cached.</span></span> <span data-ttu-id="61b16-133">页的代码创建<xref:System.Collections.ArrayList>的与存储中的项关联的键的对象<xref:System.Web.Caching.Cache>对象。</span><span class="sxs-lookup"><span data-stu-id="61b16-133">The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object.</span></span> <span data-ttu-id="61b16-134">接下来，在代码传递<xref:System.Collections.ArrayList>中调用的参数作为<xref:System.Web.HttpResponse.AddCacheItemDependencies%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-134">Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddCacheItemDependencies%2A> method.</span></span> <span data-ttu-id="61b16-135">这使缓存的输出响应不是有效的如果任何中指定的文件<xref:System.Collections.ArrayList>更改。</span><span class="sxs-lookup"><span data-stu-id="61b16-135">This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/cacheitemsdepscs.aspx#5)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/cacheitemsdepsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (string[] cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(string[] cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(cli::array &lt;System::String ^&gt; ^ cacheKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="cacheKeys">
          <span data-ttu-id="61b16-136">一个项键的数组，缓存响应依赖于这些项键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-136">An array of item keys that the cached response is dependent upon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-137">使缓存项的有效性依赖于缓存中的另一项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-137">Makes the validity of a cached item dependent on another item in the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-138">如果任一`cacheKey`从缓存中删除 s，当前项的缓存的响应无效。</span><span class="sxs-lookup"><span data-stu-id="61b16-138">When any of the `cacheKey`s are removed from the cache, the cached response of the current item is invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependency">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependency (string cacheKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependency(string cacheKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependency (cacheKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependency(System::String ^ cacheKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheKey">
          <span data-ttu-id="61b16-139">缓存的响应所依赖的项的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-139">The key of the item that the cached response is dependent upon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-140">使缓存响应的有效性依赖于缓存中的其他项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-140">Makes the validity of a cached response dependent on another item in the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-141">当对应的项`cacheKey`从缓存中删除参数，当前项的缓存的响应无效。</span><span class="sxs-lookup"><span data-stu-id="61b16-141">When the item corresponding to the `cacheKey` parameter is removed from the cache, the cached response of the current item is invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-142">下面的示例是进行输出缓存的 ASP.NET 用户控件。</span><span class="sxs-lookup"><span data-stu-id="61b16-142">The following example is an ASP.NET user control that is output cached.</span></span> <span data-ttu-id="61b16-143">控件调用的代码<xref:System.Web.HttpResponse.AddCacheItemDependency%2A>方法与中存储的项的键<xref:System.Web.Caching.Cache>对象作为其参数传递。</span><span class="sxs-lookup"><span data-stu-id="61b16-143">The code for the control calls the <xref:System.Web.HttpResponse.AddCacheItemDependency%2A> method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter.</span></span> <span data-ttu-id="61b16-144">如果在缓存中不存在此项，存储在输出缓存的控件的响应将会失效。</span><span class="sxs-lookup"><span data-stu-id="61b16-144">If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated.</span></span> <span data-ttu-id="61b16-145">这意味着，在后续请求时，控件的响应的新版本将添加到输出缓存。</span><span class="sxs-lookup"><span data-stu-id="61b16-145">This means that on the subsequent request, a new version of the control's response will be added to the output cache.</span></span>  
  
 <span data-ttu-id="61b16-146">接下来，代码检查某个项是否与关联`bookData`密钥存储在`Cache`对象，并显示两个行的文本取决于结果之一。</span><span class="sxs-lookup"><span data-stu-id="61b16-146">Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result.</span></span> <span data-ttu-id="61b16-147">然后，代码设置<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>属性<xref:System.Web.UI.WebControls.DataGrid>控件，名为`dgBooks`，通过调用自定义`DataHelper`类的共享`GetBookData`方法，并填充<xref:System.Web.UI.WebControls.DataGrid>与<xref:System.Web.UI.Control.DataBind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-147">Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/bookscs.ascx#3)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/booksvb.ascx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFileDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-148">将一组文件名添加到文件名集合中，当前响应依赖于该集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-148">Adds a group of file names to the collection of file names on which the current response is dependent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (System.Collections.ArrayList filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(class System.Collections.ArrayList filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(System::Collections::ArrayList ^ filenames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="filenames">
          <span data-ttu-id="61b16-149">要添加的文件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-149">The collection of files to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-150">将一组文件名添加到文件名集合中，当前响应依赖于该集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-150">Adds a group of file names to the collection of file names on which the current response is dependent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-151">下面的示例是 ASP.NET 页输出缓存。</span><span class="sxs-lookup"><span data-stu-id="61b16-151">The following example is an ASP.NET page that is output cached.</span></span> <span data-ttu-id="61b16-152">页的代码创建<xref:System.Collections.ArrayList>的文件路径，然后传递<xref:System.Collections.ArrayList>中调用的参数作为<xref:System.Web.HttpResponse.AddFileDependencies%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-152">The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method.</span></span> <span data-ttu-id="61b16-153">这使得无效时的输出缓存的响应中指定的任何的文件<xref:System.Collections.ArrayList>更改。</span><span class="sxs-lookup"><span data-stu-id="61b16-153">This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/responsefiledepscs.aspx#6)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/responsefiledepsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">
          <span data-ttu-id="61b16-154">要添加的文件数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-154">An array of files to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-155">将文件名数组添加到当前响应依赖的文件名集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-155">Adds an array of file names to the collection of file names on which the current response is dependent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-156">下面的示例将添加到的文件名称的数组<xref:System.Web.HttpResponse.AddFileDependencies%2A>文件依赖项列表。</span><span class="sxs-lookup"><span data-stu-id="61b16-156">The following example adds an array of file names to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> file dependency list.</span></span> <span data-ttu-id="61b16-157">如果这些文件发生变化，缓存的响应无效。</span><span class="sxs-lookup"><span data-stu-id="61b16-157">If the files changes, the cached response is invalidated.</span></span>  
  
 [!code-aspx-csharp[Response.AddFileDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Response.AddFileDependency/CS/addfiledependency_cs.aspx#1)]
 [!code-aspx-vb[Response.AddFileDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Response.AddFileDependency/VB/addfiledependency_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependency">
      <MemberSignature Language="C#" Value="public void AddFileDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependency(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependency (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependency(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="61b16-158">要添加的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-158">The name of the file to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-159">将单个文件名添加到文件名集合中，当前响应依赖于该集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-159">Adds a single file name to the collection of file names on which the current response is dependent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-160">当你使用<xref:System.Web.HttpResponse.AddFileDependency%2A>方法添加文件依赖关系，还必须指定输出缓存以编程方式或以声明方式。</span><span class="sxs-lookup"><span data-stu-id="61b16-160">When you use the <xref:System.Web.HttpResponse.AddFileDependency%2A> method to add a file dependency, you must also specify output caching programmatically or declaratively.</span></span> <span data-ttu-id="61b16-161">例如，若要指定输出缓存以声明方式，使用指令。</span><span class="sxs-lookup"><span data-stu-id="61b16-161">For example, to specify output caching declaratively, use the  directive.</span></span> <span data-ttu-id="61b16-162">有关详细信息，请参阅[如何： 使用文件依赖项的缓存页面输出](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)。</span><span class="sxs-lookup"><span data-stu-id="61b16-162">For more information, see [How to: Cache Page Output with File Dependencies](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-163">下面的示例演示如何将添加到单个文件名称<xref:System.Web.HttpResponse.AddFileDependency%2A>文件依赖项列表。</span><span class="sxs-lookup"><span data-stu-id="61b16-163">The following example shows how to add a single file name to the <xref:System.Web.HttpResponse.AddFileDependency%2A> file dependency list.</span></span> <span data-ttu-id="61b16-164">如果文件发生更改，缓存的响应无效。</span><span class="sxs-lookup"><span data-stu-id="61b16-164">If the file changes, the cached response is invalidated.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHeader(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="61b16-165">要将 value<c></c> 添加到其中的 HTTP 标头的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-165">The name of the HTTP header to add <c>value</c> to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="61b16-166">要添加到头中的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-166">The string to add to the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-167">将 HTTP 头添加到输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-167">Adds an HTTP header to the output stream.</span>
          </span>
          <span data-ttu-id="61b16-168">提供 <see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" />，以便兼容 ASP 的早期版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-168">
              <see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> is provided for compatibility with earlier versions of ASP.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-169"><xref:System.Web.HttpResponse.AddHeader%2A> 等同于<xref:System.Web.HttpResponse.AppendHeader%2A>，仅为与 ASP 的早期版本的兼容性提供。</span><span class="sxs-lookup"><span data-stu-id="61b16-169"><xref:System.Web.HttpResponse.AddHeader%2A> is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="61b16-170">使用 ASP.NET， <xref:System.Web.HttpResponse.AppendHeader%2A>。</span><span class="sxs-lookup"><span data-stu-id="61b16-170">With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnSendingHeaders">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken AddOnSendingHeaders (Action&lt;System.Web.HttpContext&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken AddOnSendingHeaders(class System.Action`1&lt;class System.Web.HttpContext&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOnSendingHeaders (callback As Action(Of HttpContext)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ AddOnSendingHeaders(Action&lt;System::Web::HttpContext ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContext&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="61b16-171">回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-171">The callback method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-172">[仅在 .NET Framework 4.5.2 及更高版本中受支持]</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-172">[Supported in the .NET Framework 4.5.2 and later versions]</span>
          </span>
          <span data-ttu-id="61b16-173">注册一个回调，在即将为此请求发送响应标头之前，ASP.NET 运行时将会调用此回调。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-173">Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61b16-174">表示对 OnSendingHeaders 伪事件的订阅的 <see cref="T:System.Web.ISubscriptionToken" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-174">An <see cref="T:System.Web.ISubscriptionToken" /> object that represents the subscription to the OnSendingHeaders pseudo-event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="61b16-175">不调用 AddOnSendingHeaders 方法，如果本机模块第一次刷新响应。</span><span class="sxs-lookup"><span data-stu-id="61b16-175">The AddOnSendingHeaders method is not invoked if the native module flushes the response first.</span></span>  
  
 <span data-ttu-id="61b16-176">伪事件 OnSendingHeaders 区别于 IHttpModule 级管道事件，因为它是每个请求订阅，而不是每个应用程序订阅。</span><span class="sxs-lookup"><span data-stu-id="61b16-176">The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</span></span> <span data-ttu-id="61b16-177">其目的是回调可能会修改响应状态代码，或可能响应 cookie 或标头设置。</span><span class="sxs-lookup"><span data-stu-id="61b16-177">The intent is that the callback may modify the response status code or may set a response cookie or header.</span></span> <span data-ttu-id="61b16-178">其他使用情况注意事项和警告：</span><span class="sxs-lookup"><span data-stu-id="61b16-178">Other usage notes and caveats:</span></span>  
  
-   <span data-ttu-id="61b16-179">仅当在集成的管道模式管线中运行 IIS 和仅当尚未尚未为当前请求发送响应标头，此方法才有效。</span><span class="sxs-lookup"><span data-stu-id="61b16-179">This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</span></span>  
  
-   <span data-ttu-id="61b16-180">ASP.NET 运行时不保证有关调用回调的线程的任何信息。</span><span class="sxs-lookup"><span data-stu-id="61b16-180">The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</span></span> <span data-ttu-id="61b16-181">例如，调用该回调可能会以同步方式在后台线程中如果正在执行后台刷新。</span><span class="sxs-lookup"><span data-stu-id="61b16-181">For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</span></span> <span data-ttu-id="61b16-182"><xref:System.Web.HttpContext.Current%2A> 不保证在此类线程中不可用。</span><span class="sxs-lookup"><span data-stu-id="61b16-182"><xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread.</span></span>  
  
-   <span data-ttu-id="61b16-183">回调必须调用操作的响应实体正文或这将导致在刷新任何方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-183">The callback must not call any method that manipulates the response entity body or that results in a flush.</span></span> <span data-ttu-id="61b16-184">例如，回调必须调用<xref:System.Web.HttpResponse.Redirect%2A>，如该方法可能操作的响应实体正文。</span><span class="sxs-lookup"><span data-stu-id="61b16-184">For example, the callback must not call <xref:System.Web.HttpResponse.Redirect%2A>, as that method may manipulate the response entity body.</span></span>  
  
-   <span data-ttu-id="61b16-185">回调必须包含短时间运行同步代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-185">The callback must contain only short-running synchronous code.</span></span> <span data-ttu-id="61b16-186">尝试调用异步操作或等待此类操作可能导致死锁。</span><span class="sxs-lookup"><span data-stu-id="61b16-186">Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</span></span>  
  
-   <span data-ttu-id="61b16-187">回调必须不会引发异常;否则行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="61b16-187">The callback must not throw an exception; otherwise behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public void AppendCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="61b16-188">要添加到输出流的 <see cref="T:System.Web.HttpCookie" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-188">The <see cref="T:System.Web.HttpCookie" /> to add to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-189">将 HTTP cookie 添加到内部 cookie 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-189">Adds an HTTP cookie to the intrinsic cookie collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-190">下面的示例创建名为一个新的 cookie `LastVisit`、 将的 cookie 的值设置为当前日期和时间，并将 cookie 追加到当前的 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="61b16-190">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection.</span></span> <span data-ttu-id="61b16-191">Cookie 集合中的所有 cookie 会被都发送到客户端`Set-Cookie`具有 HTTP 标头输出流。</span><span class="sxs-lookup"><span data-stu-id="61b16-191">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-192">在发送了 HTTP 标头之后会追加一个 Cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-192">A cookie is appended after the HTTP headers have been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendHeader(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="61b16-193">要添加到输出流的 HTTP 头的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-193">The name of the HTTP header to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="61b16-194">要追加到头中的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-194">The string to append to the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-195">将 HTTP 头添加到输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-195">Adds an HTTP header to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-196">如果你使用<xref:System.Web.HttpResponse.AppendHeader%2A>方法发送特定于缓存的标头并在同一时间使用的缓存对象模型 (<xref:System.Web.HttpResponse.Cache%2A>) 若要设置缓存策略，适用于缓存的 HTTP 响应标头 (`Cache-Control`， `Expires`， `Last-Modified`， `Pragma`，和`Vary`) 使用的缓存对象模型时可能会删除。</span><span class="sxs-lookup"><span data-stu-id="61b16-196">If you use the <xref:System.Web.HttpResponse.AppendHeader%2A> method to send cache-specific headers and at the same time use the cache object model (<xref:System.Web.HttpResponse.Cache%2A>) to set cache policy, HTTP response headers that pertain to caching (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, and `Vary`) might be deleted when the cache object model is used.</span></span> <span data-ttu-id="61b16-197">此行为使 ASP.NET 能够维护的限制性最强的设置。</span><span class="sxs-lookup"><span data-stu-id="61b16-197">This behavior enables ASP.NET to maintain the most restrictive settings.</span></span> <span data-ttu-id="61b16-198">例如，考虑包括用户控件的页面。</span><span class="sxs-lookup"><span data-stu-id="61b16-198">For example, consider a page that includes user controls.</span></span> <span data-ttu-id="61b16-199">如果这些控件具有冲突的缓存策略，则将使用限制性最强的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="61b16-199">If those controls have conflicting cache policies, the most restrictive cache policy will be used.</span></span> <span data-ttu-id="61b16-200">如果一个用户控件设置的标头"`Cache-Control: Public`"和另一个用户控件设置的限制性更强的标头"`Cache-Control: Private`"通过调用<xref:System.Web.HttpCachePolicy.SetCacheability%2A>，则"`Cache-Control: Private`"标头将与响应一起发送。</span><span class="sxs-lookup"><span data-stu-id="61b16-200">If one user control sets the header "`Cache-Control: Public`" and another user control sets the more restrictive header "`Cache-Control: Private`" via calls to <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, then the "`Cache-Control: Private`" header will be sent with the response.</span></span>  
  
 <span data-ttu-id="61b16-201">有关标准 HTTP/1.1 标头的列表，请参阅部分 14 中，"标头字段定义，"[超文本传输协议-HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) World Wide Web Consortium (W3C) 网站上的规范。</span><span class="sxs-lookup"><span data-stu-id="61b16-201">For a list of standard HTTP/1.1 headers, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-202">下面的示例调用<xref:System.Web.HttpResponse.AppendHeader%2A>方法添加到自定义标头<xref:System.Web.HttpResponse>对象发送到请求的客户端。</span><span class="sxs-lookup"><span data-stu-id="61b16-202">The following example calls the <xref:System.Web.HttpResponse.AppendHeader%2A> method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/CS/responseappendheader.cs.aspx#1)]
 [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/VB/responseappendheader.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-203">发送 HTTP 标头后追加该标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-203">The header is appended after the HTTP headers have been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendToLog">
      <MemberSignature Language="C#" Value="public void AppendToLog (string param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendToLog(string param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendToLog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendToLog (param As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendToLog(System::String ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="param">
          <span data-ttu-id="61b16-204">要添加到日志文件的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-204">The text to add to the log file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-205">将自定义日志信息添加到 Internet Information Services (IIS)日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-205">Adds custom log information to the Internet Information Services (IIS) log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-206">若要允许要记录在日志文件中的指定字符串，必须先启用**URI 查询**选项**扩展日志记录属性**对话框中，你想要在 IIS 中记录的活动的站点.</span><span class="sxs-lookup"><span data-stu-id="61b16-206">To allow for the specified string to be recorded in the log file, you first must enable the **URI Query** option of the **Extended Logging Properties** dialog box for the site that you want to log activity for in IIS.</span></span>  
  
 <span data-ttu-id="61b16-207">要自定义扩展中的日志记录 IIS 6.0，请按照下列步骤：</span><span class="sxs-lookup"><span data-stu-id="61b16-207">To customize extended logging in IIS 6.0, follow these steps:</span></span>  
  
1.  <span data-ttu-id="61b16-208">在 IIS 管理器中，展开本地计算机节点，展开 Web 或 FTP 站点文件夹，右键单击 Web 或 FTP 站点，然后单击**属性**。</span><span class="sxs-lookup"><span data-stu-id="61b16-208">In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click **Properties**.</span></span>  
  
2.  <span data-ttu-id="61b16-209">单击**Web 或 FTP 站点**选项卡上，然后选择**启用日志记录**复选框 （如果尚未选择）。</span><span class="sxs-lookup"><span data-stu-id="61b16-209">Click the **Web or FTP Site** tab, and then select the **Enable logging** check box (if it is not already selected).</span></span>  
  
3.  <span data-ttu-id="61b16-210">在**活动日志格式**框中，单击**W3C 扩展日志文件格式**。</span><span class="sxs-lookup"><span data-stu-id="61b16-210">In the **Active log format** box, click **W3C Extended Log File Format**.</span></span>  
  
4.  <span data-ttu-id="61b16-211">单击**属性**。</span><span class="sxs-lookup"><span data-stu-id="61b16-211">Click **Properties**.</span></span>  
  
5.  <span data-ttu-id="61b16-212">单击**高级**选项卡上，选择你想要登录，然后单击属性**确定**。</span><span class="sxs-lookup"><span data-stu-id="61b16-212">Click the **Advanced** tab, select the properties that you want to log, and then click **OK**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-213">下面的示例演示如何将一个字符串追加到日志。</span><span class="sxs-lookup"><span data-stu-id="61b16-213">The following example shows how to append a string to the log.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAppPathModifier">
      <MemberSignature Language="C#" Value="public string ApplyAppPathModifier (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ApplyAppPathModifier(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyAppPathModifier (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ApplyAppPathModifier(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="61b16-214">资源的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-214">The virtual path to a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-215">如果会话正在使用 <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> 会话状态，则将会话 ID 添加到虚拟路径中，并返回组合路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-215">Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state and returns the combined path.</span>
          </span>
          <span data-ttu-id="61b16-216">如果不使用 <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> 会话状态，则 <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> 将返回原始虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-216">If <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state is not used, <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> returns the original virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61b16-217">已插入会话 ID 的 <paramref name="virtualPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-217">The <paramref name="virtualPath" /> with the session ID inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-218"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> 用于无 cookie 会话仅构造绝对 Href。</span><span class="sxs-lookup"><span data-stu-id="61b16-218"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> is used only with cookieless sessions to construct absolute HREFs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-219">下面的示例声明一个名为的字符串变量`urlConverted`，并将其设置到的结果<xref:System.Web.HttpResponse.ApplyAppPathModifier%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="61b16-219">The following example declares a string variable named `urlConverted`, and sets it to the result of an <xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> method call.</span></span> <span data-ttu-id="61b16-220">在代码然后传递到的变量的值<xref:System.Web.UI.WebControls.HyperLink>控件的<xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="61b16-220">The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/responseapppathmodifiercs.aspx#5)]
 [!code-vb[System.Web.HttpResponse_Sample5#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/responseapppathmodifiervb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginFlush (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="61b16-221">回调对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-221">The callback object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61b16-222">响应状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-222">The response state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-223">向客户端发送当前所有缓冲的响应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-223">Sends the currently buffered response to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61b16-224">异步结果对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-224">The asynchronous result object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-225">如果基础<xref:System.Web.HttpWorkerRequest>对象支持异步刷新操作，从异步模块事件或从异步处理程序调用此方法以异步方式执行刷新操作。</span><span class="sxs-lookup"><span data-stu-id="61b16-225">If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.</span></span> <span data-ttu-id="61b16-226">否则，会以同步方式执行刷新操作。</span><span class="sxs-lookup"><span data-stu-id="61b16-226">Otherwise, the flush operation is performed synchronously.</span></span> <span data-ttu-id="61b16-227">IIS 6.0 及更高版本支持异步刷新。</span><span class="sxs-lookup"><span data-stu-id="61b16-227">Asynchronous flush is supported for IIS 6.0 and later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-228">响应已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-228">The response is already completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinaryWrite">
      <MemberSignature Language="C#" Value="public void BinaryWrite (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BinaryWrite(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub BinaryWrite (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BinaryWrite(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="61b16-229">要写入输出流的字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-229">The bytes to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-230">将二进制字符串写入 HTTP 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-230">Writes a string of binary characters to the HTTP output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-231">下面的示例读入缓冲区的文本文件，并将缓冲区写入 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="61b16-231">The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-232">获取或设置一个值，该值指示是否缓冲输出并在处理完整个响应之后发送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-232">Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-233">如果缓冲了发送到客户端的输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-233">
              <see langword="true" /> if the output to client is buffered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-234"><xref:System.Web.HttpResponse.Buffer%2A>属性已弃用鉴于<xref:System.Web.HttpResponse.BufferOutput%2A>属性，仅为与 ASP 的早期版本的兼容性提供。</span><span class="sxs-lookup"><span data-stu-id="61b16-234">The <xref:System.Web.HttpResponse.Buffer%2A> property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="61b16-235">使用 ASP.NET， <xref:System.Web.HttpResponse.BufferOutput%2A>。</span><span class="sxs-lookup"><span data-stu-id="61b16-235">With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferOutput">
      <MemberSignature Language="C#" Value="public bool BufferOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferOutput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.BufferOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-236">获取或设置一个值，该值指示是否缓冲输出并在处理完整个页之后发送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-236">Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-237">如果缓冲了发送到客户端的输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-237">
              <see langword="true" /> if the output to client is buffered; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="61b16-238">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-238">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-239">下面的示例设置<xref:System.Web.HttpResponse.ContentType%2A>为 image/jpeg，响应属性调用<xref:System.Web.HttpResponse.Clear%2A>方法来删除其他内容，可能会附加到响应，然后设置<xref:System.Web.HttpResponse.BufferOutput%2A>属性设置为 true，以便将整个页面处理的任何内容发送到请求的客户端之前。</span><span class="sxs-lookup"><span data-stu-id="61b16-239">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the entire page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="61b16-240">有关完整示例，请参阅<xref:System.Web.HttpResponse>类。</span><span class="sxs-lookup"><span data-stu-id="61b16-240">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.HttpCachePolicy Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCachePolicy Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As HttpCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCachePolicy ^ Cache { System::Web::HttpCachePolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-241">获取网页的缓存策略(例如，过期时间、保密性设置和变化条款)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-241">Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-242">包含当前响应的缓存策略相关信息的 <see cref="T:System.Web.HttpCachePolicy" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-242">An <see cref="T:System.Web.HttpCachePolicy" /> object that contains information about the caching policy of the current response.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-243">下面的示例将当前的缓存策略的属性写入 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="61b16-243">The following example writes properties of the current cache policy to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cache Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cache Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheControl">
      <MemberSignature Language="C#" Value="public string CacheControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.CacheControl" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CacheControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-244">获取或设置与 <see cref="T:System.Web.HttpCacheability" /> 枚举值之一匹配的 <see langword="Cache-Control" /> HTTP 标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-244">Gets or sets the <see langword="Cache-Control" /> HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-245">
            <see cref="T:System.Web.HttpCacheability" /> 枚举值的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-245">A string representation of the <see cref="T:System.Web.HttpCacheability" /> enumeration value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-246">值`Private`， `Public`，和`No-Cache`是字符串，并且必须用引号引起来 ("")。</span><span class="sxs-lookup"><span data-stu-id="61b16-246">The values for `Private`, `Public`, and `No-Cache` are strings and must be enclosed in quotation marks (" ").</span></span> <span data-ttu-id="61b16-247">如果<xref:System.Web.HttpResponse.CacheControl%2A>属性设置为一个值，与任一都不匹配<xref:System.Web.HttpCacheability>枚举值，则<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="61b16-247">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is set to a value that does not match one of the <xref:System.Web.HttpCacheability> enumeration values, then an <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="61b16-248">如果<xref:System.Web.HttpResponse.CacheControl%2A>未设置属性、 的响应可缓存性设置为<xref:System.Web.HttpCacheability.NoCache>。</span><span class="sxs-lookup"><span data-stu-id="61b16-248">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is not set, the cacheability of the response is set to <xref:System.Web.HttpCacheability.NoCache>.</span></span>  
  
 <span data-ttu-id="61b16-249">`CacheControl`， <xref:System.Web.HttpResponse.Expires%2A>，和<xref:System.Web.HttpResponse.ExpiresAbsolute%2A>属性已被否决。</span><span class="sxs-lookup"><span data-stu-id="61b16-249">The `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> properties have been deprecated.</span></span> <span data-ttu-id="61b16-250">相反的方法<xref:System.Web.HttpCachePolicy>类均可通过<xref:System.Web.HttpResponse.Cache%2A>内部函数的对象以控制 Internet 信息服务 (IIS) 输出缓存和客户端缓存。</span><span class="sxs-lookup"><span data-stu-id="61b16-250">Instead, the methods of the <xref:System.Web.HttpCachePolicy> class are available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-251">设置的字符串值与 <see cref="T:System.Web.HttpCacheability" /> 枚举值之一不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-251">The string value set does not match one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Charset" />
      <MemberSignature Language="VB.NET" Value="Public Property Charset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Charset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-252">获取或设置输出流的 HTTP 字符集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-252">Gets or sets the HTTP character set of the output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-253">输出流的 HTTP 字符集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-253">The HTTP character set of the output stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-254">`Charset`属性可以设置为`null`以禁止 HTTP`Content-Type`标头。</span><span class="sxs-lookup"><span data-stu-id="61b16-254">The `Charset` property can be set to `null` to suppress the HTTP `Content-Type` header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-255">下面的示例检查输出流的字符集是否为中央欧洲 (ISO)。</span><span class="sxs-lookup"><span data-stu-id="61b16-255">The following example checks whether the character set of the output stream is Central European (ISO).</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.Charset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.Charset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-256">发送标头后设置 <see langword="Charset" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-256">The <see langword="Charset" /> property was set after headers were sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-257">清除缓冲区流中的所有内容输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-257">Clears all content output from the buffer stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-258"><xref:System.Web.HttpResponse.Clear%2A>方法并不会清除标头信息。</span><span class="sxs-lookup"><span data-stu-id="61b16-258">The <xref:System.Web.HttpResponse.Clear%2A> method does not clear header information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-259">下面的示例设置<xref:System.Web.HttpResponse.ContentType%2A>为 image/jpeg，响应属性调用<xref:System.Web.HttpResponse.Clear%2A>方法来删除其他内容，可能会附加到响应，然后设置<xref:System.Web.HttpResponse.BufferOutput%2A>属性设置为 true，以便将完成页处理的任何内容发送到请求的客户端之前。</span><span class="sxs-lookup"><span data-stu-id="61b16-259">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="61b16-260">有关完整示例，请参阅<xref:System.Web.HttpResponse>类。</span><span class="sxs-lookup"><span data-stu-id="61b16-260">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-261">清除缓冲区流中的所有内容输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-261">Clears all content output from the buffer stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-262"><xref:System.Web.HttpResponse.ClearContent%2A>方法并不会清除标头信息。</span><span class="sxs-lookup"><span data-stu-id="61b16-262">The <xref:System.Web.HttpResponse.ClearContent%2A> method does not clear header information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-263">下面的示例清除缓冲区流中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="61b16-263">The following example clears all content from the buffer stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearHeaders">
      <MemberSignature Language="C#" Value="public void ClearHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHeaders ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHeaders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-264">清除缓冲区流中的所有头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-264">Clears all headers from the buffer stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-265">下面的示例调用<xref:System.Web.HttpResponse.ClearHeaders%2A>以确保没有标头会发送与当前响应的方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-265">The following example calls the <xref:System.Web.HttpResponse.ClearHeaders%2A> method to ensure that no headers are sent with the current response.</span></span> <span data-ttu-id="61b16-266">此方法可以是如果 ASP.NET 响应生成的一个映像，如 JPEG 文件尤其重要。</span><span class="sxs-lookup"><span data-stu-id="61b16-266">This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file.</span></span> <span data-ttu-id="61b16-267">在此示例中<xref:System.Web.HttpResponse.ContentType%2A>属性设置为 image/jpeg。</span><span class="sxs-lookup"><span data-stu-id="61b16-267">In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponseclearheaderscs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Sample5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponseclearheadersvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-268">发送 HTTP 标头后清除标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-268">Headers are cleared after the HTTP headers have been sent.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpResponse.ClearContent" />
      </Docs>
    </Member>
    <Member MemberName="ClientDisconnectedToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken ClientDisconnectedToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ClientDisconnectedToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ClientDisconnectedToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientDisconnectedToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken ClientDisconnectedToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-269">获取客户端断开连接时触发的 <see cref="T:System.Threading.CancellationToken" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-269">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when the client disconnects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-270">取消标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-270">The cancellation token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-271">此 API 是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="61b16-271">This API is thread-safe.</span></span> <span data-ttu-id="61b16-272">但是，有一些限制有关应如何使用取消标记。</span><span class="sxs-lookup"><span data-stu-id="61b16-272">However, there are some restrictions on how the cancellation token should be used.</span></span> <span data-ttu-id="61b16-273">使用不当可能导致争用条件、 死锁或其他意外的行为。</span><span class="sxs-lookup"><span data-stu-id="61b16-273">Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.</span></span> <span data-ttu-id="61b16-274">请记住以下准则：</span><span class="sxs-lookup"><span data-stu-id="61b16-274">Keep in mind the following guidelines:</span></span>  
  
-   <span data-ttu-id="61b16-275">由于 ASP.NET 将释放的末尾的请求的取消标记，因此，请确保你不到单个请求的范围之外此 API 调用。</span><span class="sxs-lookup"><span data-stu-id="61b16-275">Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.</span></span> <span data-ttu-id="61b16-276">就释放之前，令牌曾经将转换为已取消状态不能保证。</span><span class="sxs-lookup"><span data-stu-id="61b16-276">There is no guarantee that the token will ever transition to a canceled state before it is disposed.</span></span> <span data-ttu-id="61b16-277">例如，如果没有具有断开连接使用客户端完成请求，该令牌将释放而无需首先具有已取消。</span><span class="sxs-lookup"><span data-stu-id="61b16-277">For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.</span></span>  
  
-   <span data-ttu-id="61b16-278">不等待的<xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType>，如这与异步通知的初衷背道而驰并且会导致死锁。</span><span class="sxs-lookup"><span data-stu-id="61b16-278">Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.</span></span>  
  
-   <span data-ttu-id="61b16-279">不要调用<xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType>原始调用回调的重载<xref:System.Threading.SynchronizationContext>对象。</span><span class="sxs-lookup"><span data-stu-id="61b16-279">Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object.</span></span>  
  
-   <span data-ttu-id="61b16-280">不要使用<xref:System.Web.HttpContext>对象或其他非线程安全 ASP.NET 内部对象从在回调提供给<xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-280">Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="61b16-281">回调可能会与其他 ASP.NET 并发运行或应用程序代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-281">The callback may be running concurrently with other ASP.NET or application code.</span></span>  
  
-   <span data-ttu-id="61b16-282">保留的短时间运行的回调方法和非阻止。</span><span class="sxs-lookup"><span data-stu-id="61b16-282">Keep the callback methods short-running and non-blocking.</span></span>  
  
-   <span data-ttu-id="61b16-283">请尽量避免引发从回调方法中的异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-283">Make every effort to avoid throwing exceptions from within the callback methods.</span></span>  
  
 <span data-ttu-id="61b16-284">在集成模式下此属性才适用到 Internet 信息服务 (IIS) 7.5。</span><span class="sxs-lookup"><span data-stu-id="61b16-284">This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode.</span></span> <span data-ttu-id="61b16-285">如果你调用它而无需右 IIS 版本或管道模式下，<xref:System.PlatformNotSupportedException>引发。</span><span class="sxs-lookup"><span data-stu-id="61b16-285">If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown.</span></span> <span data-ttu-id="61b16-286">若要确定 IIS 版本，请使用<xref:System.Web.HttpRuntime.IISVersion%2A>。</span><span class="sxs-lookup"><span data-stu-id="61b16-286">To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>.</span></span> <span data-ttu-id="61b16-287">若要确定管道模式，请使用<xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>。</span><span class="sxs-lookup"><span data-stu-id="61b16-287">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-288">关闭到客户端的套接字连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-288">Closes the socket connection to a client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-289">此方法以突然的方式终止客户端连接，并不用于正常处理 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="61b16-289">This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.</span></span> <span data-ttu-id="61b16-290">该方法将重置数据包发送到客户端，可能会导致在服务器、 客户端，或在某处之间会删除已缓冲的响应数据。</span><span class="sxs-lookup"><span data-stu-id="61b16-290">The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.</span></span>  
  
 <span data-ttu-id="61b16-291">但是，通常你应调用<xref:System.Web.HttpApplication.CompleteRequest%2A>而是如果你想要跳转到<xref:System.Web.HttpApplication.EndRequest>事件，将发送到客户端的响应。</span><span class="sxs-lookup"><span data-stu-id="61b16-291">However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-292">获取或设置输出流的 HTTP 字符集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-292">Gets or sets the HTTP character set of the output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-293">包含当前响应的字符集相关信息的 <see cref="T:System.Text.Encoding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-293">A <see cref="T:System.Text.Encoding" /> object that contains information about the character set of the current response.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-294">默认`ContentEncoding`可以在 ASP.NET 配置文件中指定[全球化元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)部分。</span><span class="sxs-lookup"><span data-stu-id="61b16-294">Default `ContentEncoding` can be specified in an ASP.NET configuration file in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) section.</span></span> <span data-ttu-id="61b16-295">如果<xref:System.Web.HttpResponse.ContentEncoding%2A>指定客户端，则将重写默认配置设置。</span><span class="sxs-lookup"><span data-stu-id="61b16-295">If <xref:System.Web.HttpResponse.ContentEncoding%2A> is specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-296">下面的示例编写的字符集编码到输出流的用户可读说明。</span><span class="sxs-lookup"><span data-stu-id="61b16-296">The following example writes a human-readable description of the character set encoding to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-297">尝试将 <see cref="P:System.Web.HttpResponse.ContentEncoding" /> 设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-297">Attempted to set <see cref="P:System.Web.HttpResponse.ContentEncoding" /> to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-298">获取或设置输出流的 HTTP MIME 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-298">Gets or sets the HTTP MIME type of the output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-299">输出流的 HTTP MIME 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-299">The HTTP MIME type of the output stream.</span>
          </span>
          <span data-ttu-id="61b16-300">默认值为“<see langword="text/html" />”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-300">The default value is "<see langword="text/html" />".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-301">下面的示例设置<xref:System.Web.HttpResponse.ContentType%2A>为 image/jpeg，响应属性调用<xref:System.Web.HttpResponse.Clear%2A>方法来删除其他内容，可能会附加到响应，然后设置<xref:System.Web.HttpResponse.BufferOutput%2A>属性设置为 true，以便将完成页处理的任何内容发送到请求的客户端之前。</span><span class="sxs-lookup"><span data-stu-id="61b16-301">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="61b16-302">有关完整示例，请参阅<xref:System.Web.HttpResponse>类。</span><span class="sxs-lookup"><span data-stu-id="61b16-302">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-303">
            <see cref="P:System.Web.HttpResponse.ContentType" /> 属性设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-303">The <see cref="P:System.Web.HttpResponse.ContentType" /> property is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-304">获取响应 cookie 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-304">Gets the response cookie collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-305">响应 cookie 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-305">The response cookie collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-306">ASP.NET 包括两个内部 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="61b16-306">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="61b16-307">通过访问的集合<xref:System.Web.HttpRequest.Cookies%2A>集合<xref:System.Web.HttpRequest>包含传输到中的服务器客户端的 cookie`Cookie`标头。</span><span class="sxs-lookup"><span data-stu-id="61b16-307">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="61b16-308">通过访问的集合<xref:System.Web.HttpResponse.Cookies%2A>集合<xref:System.Web.HttpResponse>包含新 cookie 在服务器上创建和传输到客户端在`Set-Cookie`标头。</span><span class="sxs-lookup"><span data-stu-id="61b16-308">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
 <span data-ttu-id="61b16-309">通过使用添加 cookie 后<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType>集合，cookie 可立即在<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType>集合，即使不向客户端发送响应。</span><span class="sxs-lookup"><span data-stu-id="61b16-309">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-310">下面的示例创建名为一个新的 cookie `LastVisit`，将 cookie 的值设置为当前日期和时间，并将 cookie 添加到当前的 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="61b16-310">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection.</span></span> <span data-ttu-id="61b16-311">Cookie 集合中的所有 cookie 会被都发送到客户端`Set-Cookie`具有 HTTP 标头输出流。</span><span class="sxs-lookup"><span data-stu-id="61b16-311">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableKernelCache">
      <MemberSignature Language="C#" Value="public void DisableKernelCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableKernelCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableKernelCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableKernelCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableKernelCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-312">禁用当前响应的内核缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-312">Disables kernel caching for the current response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-313">如果不支持的内核缓存，则此方法无效。</span><span class="sxs-lookup"><span data-stu-id="61b16-313">If kernel caching is not supported, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableUserCache">
      <MemberSignature Language="C#" Value="public void DisableUserCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableUserCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableUserCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableUserCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableUserCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-314">禁用 IIS 用户-方式来缓存反映。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-314">Disables IIS user-mode caching for this response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-315">如果不支持 IIS 用户-方式来缓存，此方法将返回而不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="61b16-315">If IIS user-mode caching is not supported, this method returns without performing any action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void End() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.End" />
      <MemberSignature Language="VB.NET" Value="Public Sub End ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void End();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-316">将当前所有缓冲的输出发送到客户端，停止该页的执行，并引发 <see cref="E:System.Web.HttpApplication.EndRequest" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-316">Sends all currently buffered output to the client, stops execution of the page, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-317">提供此方法仅为了与 ASP 的兼容性-即，与前面 ASP.NET 的基于 COM 的 Web 编程技术的兼容性。</span><span class="sxs-lookup"><span data-stu-id="61b16-317">This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.</span></span> <span data-ttu-id="61b16-318">如果你想要跳转到<xref:System.Web.HttpApplication.EndRequest>事件发送到客户端的响应，它是通常更可取的方法调用<xref:System.Web.HttpApplication.CompleteRequest%2A>相反。</span><span class="sxs-lookup"><span data-stu-id="61b16-318">If you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client, it is usually preferable to call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead.</span></span>  
  
 <span data-ttu-id="61b16-319">若要模拟的行为`End`方法 ASP 中的，此方法尝试引发<xref:System.Threading.ThreadAbortException>异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-319">To mimic the behavior of the `End` method in ASP, this method tries to raise a <xref:System.Threading.ThreadAbortException> exception.</span></span> <span data-ttu-id="61b16-320">如果此尝试成功，将中止调用线程，这是对站点的性能造成不利影响。</span><span class="sxs-lookup"><span data-stu-id="61b16-320">If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.</span></span> <span data-ttu-id="61b16-321">在这种情况下，在调用后没有代码<xref:System.Web.HttpResponse.End%2A>执行方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-321">In that case, no code after the call to the <xref:System.Web.HttpResponse.End%2A> method is executed.</span></span>  
  
 <span data-ttu-id="61b16-322">如果<xref:System.Web.HttpResponse.End%2A>方法不能引发<xref:System.Threading.ThreadAbortException>，而是将响应字节数刷新到客户端。</span><span class="sxs-lookup"><span data-stu-id="61b16-322">If the <xref:System.Web.HttpResponse.End%2A> method is not able to raise a <xref:System.Threading.ThreadAbortException>, it instead flushes the response bytes to the client.</span></span> <span data-ttu-id="61b16-323">这是以同步方式，也可以是对站点的性能造成不利影响。</span><span class="sxs-lookup"><span data-stu-id="61b16-323">It does this synchronously, which can also be detrimental to your site's performance.</span></span>  
  
 <span data-ttu-id="61b16-324">在任一情况下 (是否<xref:System.Threading.ThreadAbortException>成功引发异常)，响应管道向前跳到<xref:System.Web.HttpApplication.EndRequest>事件。</span><span class="sxs-lookup"><span data-stu-id="61b16-324">In either case (whether or not a <xref:System.Threading.ThreadAbortException> exception is successfully raised), the response pipeline jumps ahead to the <xref:System.Web.HttpApplication.EndRequest> event.</span></span>  
  
 <span data-ttu-id="61b16-325"><xref:System.Web.HttpApplication.CompleteRequest%2A>方法不会引发异常，并在调用之后的代码<xref:System.Web.HttpApplication.CompleteRequest%2A>可能执行方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-325">The <xref:System.Web.HttpApplication.CompleteRequest%2A> method does not raise an exception, and code after the call to the <xref:System.Web.HttpApplication.CompleteRequest%2A> method might be executed.</span></span> <span data-ttu-id="61b16-326">如果您的意图是为了避免执行的后续代码，并且对性能的影响<xref:System.Web.HttpResponse.End%2A>都可以接受，您可以调用<xref:System.Web.HttpResponse.End%2A>而不是<xref:System.Web.HttpApplication.CompleteRequest%2A>。</span><span class="sxs-lookup"><span data-stu-id="61b16-326">If your intention is to avoid execution of subsequent code, and if the performance penalty of <xref:System.Web.HttpResponse.End%2A> is acceptable, you can call <xref:System.Web.HttpResponse.End%2A> instead of <xref:System.Web.HttpApplication.CompleteRequest%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadAbortException">
          <span data-ttu-id="61b16-327">对 <see cref="M:System.Web.HttpResponse.End" /> 的调用已终止当前请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-327">The call to <see cref="M:System.Web.HttpResponse.End" /> has terminated the current request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndFlush (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndFlush(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="61b16-328">异步结果对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-328">The asynchronous result object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-329">完成异步刷新操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-329">Completes an asynchronous flush operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-330">不支持异步刷新，且 <paramref name="asyncResult" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-330">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-331">不支持异步刷新，且 <paramref name="asyncResult" /> 参数不能转换到 FlushAsyncResult<c></c> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-331">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter cannot be cast to a <c>FlushAsyncResult</c> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public int Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Expires { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-332">获取或设置在浏览器上缓存的页过期之前的分钟数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-332">Gets or sets the number of minutes before a page cached on a browser expires.</span>
          </span>
          <span data-ttu-id="61b16-333">如果用户在页面过期之前返回到该页，则显示缓存的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-333">If the user returns to the same page before it expires, the cached version is displayed.</span>
          </span>
          <span data-ttu-id="61b16-334">提供 <see cref="P:System.Web.HttpResponse.Expires" />，以便兼容 ASP 的早期版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-334">
              <see cref="P:System.Web.HttpResponse.Expires" /> is provided for compatibility with earlier versions of ASP.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-335">在页过期之前的分钟数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-335">The number of minutes before the page expires.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-336">`Expires`，<xref:System.Web.HttpResponse.ExpiresAbsolute%2A>和<xref:System.Web.HttpResponse.CacheControl%2A>的方法已弃用属性<xref:System.Web.HttpCachePolicy>类可通过<xref:System.Web.HttpResponse.Cache%2A>内部函数的对象以控制 Internet 信息服务 (IIS) 输出缓存并且客户端缓存。</span><span class="sxs-lookup"><span data-stu-id="61b16-336">The `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAbsolute">
      <MemberSignature Language="C#" Value="public DateTime ExpiresAbsolute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpiresAbsolute" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ExpiresAbsolute" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresAbsolute As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpiresAbsolute { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-337">获取或设置从缓存中移删除缓存信息的绝对日期和时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-337">Gets or sets the absolute date and time at which to remove cached information from the cache.</span>
          </span>
          <span data-ttu-id="61b16-338">提供 <see cref="P:System.Web.HttpResponse.ExpiresAbsolute" />，以便兼容 ASP 的早期版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-338">
              <see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> is provided for compatibility with earlier versions of ASP.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-339">该页过期时的日期和时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-339">The date and time at which the page expires.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-340">`ExpiresAbsolute`， <xref:System.Web.HttpResponse.Expires%2A>，和<xref:System.Web.HttpResponse.CacheControl%2A>的方法已弃用属性<xref:System.Web.HttpCachePolicy>类可通过<xref:System.Web.HttpResponse.Cache%2A>内部函数的对象以控制 Internet 信息服务 (IIS) 输出缓存并且客户端缓存。</span><span class="sxs-lookup"><span data-stu-id="61b16-340">The `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-341">获取或设置一个包装筛选器对象，该对象用于在传输之前修改 HTTP 实体主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-341">Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-342">作为输出筛选器的 <see cref="T:System.IO.Stream" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-342">The <see cref="T:System.IO.Stream" /> object that acts as the output filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-343">当你创建`Stream`对象，并将<xref:System.Web.HttpResponse.Filter%2A>属性`Stream`对象，所有 HTTP 发送的输出<xref:System.Web.HttpResponse.Write%2A>通过筛选器。</span><span class="sxs-lookup"><span data-stu-id="61b16-343">When you create a `Stream` object and set the <xref:System.Web.HttpResponse.Filter%2A> property to the `Stream` object, all HTTP output sent by <xref:System.Web.HttpResponse.Write%2A> passes through the filter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-344">下面的示例是一个 ASP.NET 页，设置<xref:System.Web.HttpResponse.Filter%2A>属性的新实例`UpperCaseFilter`类，自定义<xref:System.IO.Stream>将转换为大写形式传递它的所有文本的类。</span><span class="sxs-lookup"><span data-stu-id="61b16-344">The following example is an ASP.NET page that sets the <xref:System.Web.HttpResponse.Filter%2A> property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase.</span></span> <span data-ttu-id="61b16-345">有关请求的信息保存到一个文本文件，然后<xref:System.Web.HttpResponse.Filter%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="61b16-345">The information about the request is saved to a text file, and then the <xref:System.Web.HttpResponse.Filter%2A> property is set.</span></span> <span data-ttu-id="61b16-346">响应筛选器已到位后，代码会调用<xref:System.Web.HttpRequest.MapPath%2A>方法以获取名为的文本文件的绝对路径`TestFile.txt`用作响应的内容的源。</span><span class="sxs-lookup"><span data-stu-id="61b16-346">After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response.</span></span> <span data-ttu-id="61b16-347">该代码随后创建一个新<xref:System.IO.StreamReader>对象来读取该文本文件从开始到结束，然后调用<xref:System.Web.HttpResponse.Write%2A>方法以显示在页面上的文件的内容。</span><span class="sxs-lookup"><span data-stu-id="61b16-347">The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-348">不允许对实体进行筛选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-348">Filtering is not allowed with the entity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-349">向客户端发送当前所有缓冲的输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-349">Sends all currently buffered output to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-350">强制所有当前缓冲的输出发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="61b16-350">Forces all currently buffered output to be sent to the client.</span></span> <span data-ttu-id="61b16-351"><xref:System.Web.HttpResponse.Flush%2A>方法可以多次调用请求处理过程。</span><span class="sxs-lookup"><span data-stu-id="61b16-351">The <xref:System.Web.HttpResponse.Flush%2A> method can be called multiple times during request processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-352">下面的示例调用<xref:System.Drawing.Graphics.Save%2A>方法以将保存<xref:System.Drawing.Bitmap>对象传递给<xref:System.Web.HttpResponse.OutputStream%2A>属性，并将为 JPEG 图像格式。</span><span class="sxs-lookup"><span data-stu-id="61b16-352">The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format.</span></span> <span data-ttu-id="61b16-353">然后，代码调用`Dispose`方法<xref:System.Drawing.Bitmap>对象和一个<xref:System.Drawing.Graphics>对象，释放自己正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="61b16-353">The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="61b16-354">然后，它调用<xref:System.Web.HttpResponse.Flush%2A>方法发送请求的客户端的响应的内容。</span><span class="sxs-lookup"><span data-stu-id="61b16-354">It then calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>  
  
 <span data-ttu-id="61b16-355">有关完整示例，请参阅<xref:System.Web.HttpResponse>类。</span><span class="sxs-lookup"><span data-stu-id="61b16-355">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-356">发送响应后刷新缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-356">The cache is flushed after the response has been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61b16-357">向客户端异步发送当前缓冲的所有输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-357">Asynchronously sends all currently buffered output to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61b16-358">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-358">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeaderEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeaderEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeaderEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-359">获取或设置表示当前标头输出流的编码的 <see cref="T:System.Text.Encoding" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-359">Gets or sets an <see cref="T:System.Text.Encoding" /> object that represents the encoding for the current header output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-360">包含当前标头的字符集相关信息的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-360">An <see cref="T:System.Text.Encoding" /> that contains information about the character set for the current header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-361"><xref:System.Web.HttpResponse.HeaderEncoding%2A>属性使您能够禁用或更改<xref:System.Text.Encoding>上使用的响应标头对象<xref:System.Text.ASCIIEncoding>， <xref:System.Text.UnicodeEncoding>， <xref:System.Text.UTF7Encoding>，或<xref:System.Text.UTF8Encoding>对象。</span><span class="sxs-lookup"><span data-stu-id="61b16-361">The <xref:System.Web.HttpResponse.HeaderEncoding%2A> property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="61b16-362">默认编码值是<xref:System.Text.UTF8Encoding>类。</span><span class="sxs-lookup"><span data-stu-id="61b16-362">The default encoding value is the <xref:System.Text.UTF8Encoding> class.</span></span>  
  
 <span data-ttu-id="61b16-363">通过将类型更改<xref:System.Web.HttpResponse.HeaderEncoding%2A>属性，你可能会增加特定恶意攻击或原因通过响应标头发送敏感数据的风险。</span><span class="sxs-lookup"><span data-stu-id="61b16-363">By changing the type of the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.</span></span> <span data-ttu-id="61b16-364">标头注入式攻击可以避免，情况情况下，通过使<xref:System.Web.HttpResponse.HeaderEncoding%2A>的响应的默认设置的属性。</span><span class="sxs-lookup"><span data-stu-id="61b16-364">Header injection attacks can be avoided, in part, by leaving the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property of a response to the default setting.</span></span> <span data-ttu-id="61b16-365">易受攻击的应用程序的攻击无法回显导致将受信任数据作为响应标头的一部分。</span><span class="sxs-lookup"><span data-stu-id="61b16-365">An attack against a vulnerable application could echo back entrusted data as part of a response header.</span></span> <span data-ttu-id="61b16-366">如果<xref:System.Web.HttpResponse.HeaderEncoding%2A>延续行标头中，或如果任何标头构造基于的不受信任的数据的结果，应在发送到响应流之前验证标头数据，由于要求而禁用。</span><span class="sxs-lookup"><span data-stu-id="61b16-366">If the <xref:System.Web.HttpResponse.HeaderEncoding%2A> is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-367">编码值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-367">The encoding value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-368">编码值为 <see cref="P:System.Text.Encoding.Unicode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-368">The encoding value is <see cref="P:System.Text.Encoding.Unicode" />.</span>
          </span>
          <span data-ttu-id="61b16-369">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-369">\- or -</span>
          </span>
          <span data-ttu-id="61b16-370">已发送标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-370">The headers have already been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-371">获取响应标头的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-371">Gets the collection of response headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-372">响应标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-372">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of response headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-373"><xref:System.Web.HttpResponse.Headers%2A>属性只支持使用[!INCLUDE[iisver](~/includes/iisver-md.md)]集成的管道模式并且至少.NET Framework 3.0。</span><span class="sxs-lookup"><span data-stu-id="61b16-373">The <xref:System.Web.HttpResponse.Headers%2A> property is only supported with the [!INCLUDE[iisver](~/includes/iisver-md.md)] integrated pipeline mode and at least the .NET Framework 3.0.</span></span> <span data-ttu-id="61b16-374">当你尝试访问<xref:System.Web.HttpResponse.Headers%2A>属性和这两个条件之一不满足，<xref:System.PlatformNotSupportedException>引发。</span><span class="sxs-lookup"><span data-stu-id="61b16-374">When you try to access the <xref:System.Web.HttpResponse.Headers%2A> property and either of these two conditions is not met, a <xref:System.PlatformNotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61b16-375">该操作要求使用 [!INCLUDE[iisver](~/includes/iisver-md.md)] 中的集成管道模式，并且 .NET Framework 至少为 3.0 版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-375">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HeadersWritten">
      <MemberSignature Language="C#" Value="public bool HeadersWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeadersWritten" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeadersWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeadersWritten As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HeadersWritten { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-376">[仅在 .NET Framework 4.5.2 及更高版本中受支持]</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-376">[Supported in the .NET Framework 4.5.2 and later versions]</span>
          </span>
          <span data-ttu-id="61b16-377">获取指示是否已写入响应标头的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-377">Gets a value indicating whether the response headers have been written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-378">如果已写入响应标头，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-378">
              <see langword="true" /> if the response headers have been written; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public bool IsClientConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClientConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClientConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClientConnected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-379">获取指示客户端是否仍连接在服务器上的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-379">Gets a value indicating whether the client is still connected to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-380">如果客户端当前仍在连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-380">
              <see langword="true" /> if the client is currently connected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-381"><xref:System.Web.HttpResponse.IsClientConnected%2A>属性返回`false`当以下条件都为真：</span><span class="sxs-lookup"><span data-stu-id="61b16-381">The <xref:System.Web.HttpResponse.IsClientConnected%2A> property returns `false` when the following conditions are true:</span></span>  
  
-   <span data-ttu-id="61b16-382">与客户端的连接已终止。</span><span class="sxs-lookup"><span data-stu-id="61b16-382">The connection to the client was terminated.</span></span> <span data-ttu-id="61b16-383">发生这种情况<xref:System.Web.HttpResponse.Close%2A>调用方法，或者如果客户端停止 Web 页的执行，或浏览到另一页。</span><span class="sxs-lookup"><span data-stu-id="61b16-383">This can occur if the <xref:System.Web.HttpResponse.Close%2A> method was invoked, or if the client stopped execution of the Web page or browsed to another page.</span></span>  
  
-   <span data-ttu-id="61b16-384"><xref:System.Web.HttpWorkerRequest>正在处理请求的对象是`null`或<xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType>方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-384">The <xref:System.Web.HttpWorkerRequest> object that is handling the request is `null` or the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method returns `false`.</span></span> <span data-ttu-id="61b16-385">如果自定义<xref:System.Web.HttpWorkerRequest>对象处理该请求，则<xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType>方法可能基于设置自定义的条件。</span><span class="sxs-lookup"><span data-stu-id="61b16-385">If a custom <xref:System.Web.HttpWorkerRequest> object handles the request, then the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method might be set based on custom criteria.</span></span> <span data-ttu-id="61b16-386">例如，自定义的辅助请求可能会在一段时间后强制超时。</span><span class="sxs-lookup"><span data-stu-id="61b16-386">For example, the custom worker request might force a time-out after a period of time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-387">下面的示例使用<xref:System.Web.HttpResponse.IsClientConnected%2A>属性检查请求该页的客户端是否仍连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="61b16-387">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="61b16-388">如果<xref:System.Web.HttpResponse.IsClientConnected%2A>为 true，该代码调用<xref:System.Web.HttpResponse.Redirect%2A>方法和客户端将查看另一页。</span><span class="sxs-lookup"><span data-stu-id="61b16-388">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="61b16-389">如果<xref:System.Web.HttpResponse.IsClientConnected%2A>为 false，则该代码调用<xref:System.Web.HttpResponse.End%2A>方法，并且所有的页处理会终止。</span><span class="sxs-lookup"><span data-stu-id="61b16-389">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequestBeingRedirected">
      <MemberSignature Language="C#" Value="public bool IsRequestBeingRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestBeingRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsRequestBeingRedirected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequestBeingRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequestBeingRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-390">获取指示客户端是否正在被传输到新位置的布尔值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-390">Gets a Boolean value indicating whether the client is being transferred to a new location.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-391">如果位置响应标头的值与当前位置不同，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-391">
              <see langword="true" /> if the value of the location response header is different than the current location; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-392">使用<xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A>具有属性<xref:System.Web.HttpResponse.RedirectLocation%2A>属性测试，并确定是否的绝对 URI 都传输到客户端在 HTTP`Location`标头是不同于当前的 URI 和新的目标的 URI 正在将传输到</span><span class="sxs-lookup"><span data-stu-id="61b16-392">Use the <xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A> property with the <xref:System.Web.HttpResponse.RedirectLocation%2A> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP `Location` header is different than the current URI and what the new intended URI that is being transferred to will be.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Output { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Output" />
      <MemberSignature Language="VB.NET" Value="Public Property Output As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-393">实现到传出 HTTP 响应流的文本输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-393">Enables output of text to the outgoing HTTP response stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-394">实现到客户端的自定义输出的 <see cref="T:System.IO.TextWriter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-394">A <see cref="T:System.IO.TextWriter" /> object that enables custom output to the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-395">下面的示例是一个 ASP.NET 页，包含<xref:System.Web.UI.WebControls.TextBox>具有的控制其<xref:System.Web.UI.WebControls.TextBox.TextMode%2A>属性设置为<xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>。</span><span class="sxs-lookup"><span data-stu-id="61b16-395">The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>.</span></span> <span data-ttu-id="61b16-396">该页的代码接受用户输入中的文本<xref:System.Web.UI.WebControls.TextBox.TextMode%2A>，使用<xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法为 HTML 编码，和<xref:System.Web.HttpResponse.Output%2A>属性显示到页的编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="61b16-396">The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the <xref:System.Web.HttpResponse.Output%2A> property to display the encoded string to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/CS/responseoutputcs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/VB/responseoutputvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.OutputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ OutputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-397">实现到传出 HTTP 内容主体的二进制输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-397">Enables binary output to the outgoing HTTP content body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-398">表示传出 HTTP 内容主体的原始内容的 IO <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-398">An IO <see cref="T:System.IO.Stream" /> representing the raw contents of the outgoing HTTP content body.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-399">从.NET Framework 2.0 版本开始，在你使用<xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>方法返回的 IO 流<xref:System.Web.HttpResponse.OutputStream%2A>属性，可能会引发以下异常：</span><span class="sxs-lookup"><span data-stu-id="61b16-399">Starting with the .NET Framework version 2.0, when you use the <xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method of the IO stream returned by the <xref:System.Web.HttpResponse.OutputStream%2A> property, the following exceptions might be thrown:</span></span>  
  
-   <span data-ttu-id="61b16-400"><xref:System.ArgumentOutOfRangeException>如果`offset`或`count`参数是负数或如果`buffer`参数的长度减去`offset`参数是否小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="61b16-400"><xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.</span></span>  
  
-   <span data-ttu-id="61b16-401"><xref:System.ArgumentNullException>如果`buffer`参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="61b16-401"><xref:System.ArgumentNullException>, if the `buffer` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-402">下面的示例调用<xref:System.Drawing.Image.Save%2A>方法以将保存<xref:System.Drawing.Bitmap>对象传递给<xref:System.Web.HttpResponse.OutputStream%2A>属性，并将图像转换为 JPEG 格式。</span><span class="sxs-lookup"><span data-stu-id="61b16-402">The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property, and converts the image to the JPEG format.</span></span> <span data-ttu-id="61b16-403">然后，代码调用的 Dispose 方法上<xref:System.Drawing.Bitmap>对象和一个<xref:System.Drawing.Graphics>对象，释放自己正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="61b16-403">The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="61b16-404">最后，该代码调用<xref:System.Web.HttpResponse.Flush%2A>方法发送请求的客户端的响应的内容。</span><span class="sxs-lookup"><span data-stu-id="61b16-404">Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>  
  
 <span data-ttu-id="61b16-405">有关完整示例，请参阅<xref:System.Web.HttpResponse>类。</span><span class="sxs-lookup"><span data-stu-id="61b16-405">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-406">
            <paramref name="OutputStream" /> 不可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-406">
              <paramref name="OutputStream" /> is not available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Pics">
      <MemberSignature Language="C#" Value="public void Pics (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pics(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Pics(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pics (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pics(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61b16-407">要添加到 <see langword="PICS-Label" /> 标头的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-407">The string to add to the <see langword="PICS-Label" /> header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-408">将 HTTP <see langword="PICS-Label" /> 标头追加到输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-408">Appends a HTTP <see langword="PICS-Label" /> header to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-409">平台 Internet 内容所选内容 （图片） 是万维网联合会 (W3C) 标准，用于内容标签。</span><span class="sxs-lookup"><span data-stu-id="61b16-409">Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.</span></span> <span data-ttu-id="61b16-410">图片是实质上是用于创建的分级系统的语言。</span><span class="sxs-lookup"><span data-stu-id="61b16-410">PICS is essentially a language for creating a ratings system.</span></span>  
  
 <span data-ttu-id="61b16-411">任何该值可以为图片标签;ASP.NET 不会验证标签。</span><span class="sxs-lookup"><span data-stu-id="61b16-411">Any value can be a PICS label; ASP.NET does not validate the label.</span></span> <span data-ttu-id="61b16-412">字符串的最大长度为 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="61b16-412">The maximum length of the string is 255 characters.</span></span> <span data-ttu-id="61b16-413">有关图片标准和语法的详细信息，请参阅[World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) Web 站点。</span><span class="sxs-lookup"><span data-stu-id="61b16-413">For more information about PICS standards and syntax, see the [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-414">下面的示例是一个 ASP.NET 页，显示图像。</span><span class="sxs-lookup"><span data-stu-id="61b16-414">The following example is an ASP.NET page that displays an image.</span></span> <span data-ttu-id="61b16-415">该页的代码调用<xref:System.Web.HttpResponse.Pics%2A>方法以设置 HTTP`PICS-Label`响应的标头。</span><span class="sxs-lookup"><span data-stu-id="61b16-415">The page code calls the <xref:System.Web.HttpResponse.Pics%2A> method to set the HTTP `PICS-Label` header for the response.</span></span> <span data-ttu-id="61b16-416">作为参数传递的字符串<xref:System.Web.HttpResponse.Pics%2A>方法表示从 Internet 内容分级关联 (ICRA) 网站上生成的分级标签。</span><span class="sxs-lookup"><span data-stu-id="61b16-416">The string that is passed as the parameter to the <xref:System.Web.HttpResponse.Pics%2A> method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page2cs.aspx#2)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushPromise">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-417">提升承诺的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-417">Promotes a promised object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61b16-418">推送请求的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-418">The URL of the push request.</span>
          </span>
          <span data-ttu-id="61b16-419">它应为服务器想要推送到客户端的相对资源的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-419">It should be the virtual path of the relative resource that the server wants to push to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-420">此 API 用于支持将推送承诺发送到 HTTP 2.0 客户端的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-420">This API is to support applications sending push promises to HTTP 2.0 clients.</span>
          </span>
          <span data-ttu-id="61b16-421">有关 Http2 服务器推送的详细信息，请参阅 [HTTP/2 规范第 8.2 节：服务器推送](http://http2.github.io/http2-spec/#PushResources)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-421">You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-422">PushPromise 是不确定的而且应用程序不应具有依赖于它的逻辑。</span><span class="sxs-lookup"><span data-stu-id="61b16-422">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="61b16-423">其唯一的目的是在某些情况下的性能优势。</span><span class="sxs-lookup"><span data-stu-id="61b16-423">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="61b16-424">有可能会导致完全忽略推送请求的多个条件 （协议和实现）。</span><span class="sxs-lookup"><span data-stu-id="61b16-424">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="61b16-425">假定条件下基于即发即弃。</span><span class="sxs-lookup"><span data-stu-id="61b16-425">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61b16-426">推送请求的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-426">The URL of the push request.</span>
          </span>
          <span data-ttu-id="61b16-427">它应为服务器想要推送到客户端的相对资源的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-427">It should be the virtual path of the relative resource that the server wants to push to the client.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="61b16-428">将由推送请求使用的 http 请求方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-428">Http request method that would be used by the push request.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="61b16-429">将由推送请求使用的 http 请求头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-429">Http request header that would be used by the push request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-430">此 API 用于支持将推送承诺发送到 HTTP 2.0 客户端的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-430">This API is to support applications sending push promises to HTTP 2.0 clients.</span>
          </span>
          <span data-ttu-id="61b16-431">有关 Http2 服务器推送的详细信息，请参阅 [HTTP/2 规范第 8.2 节：服务器推送](http://http2.github.io/http2-spec/#PushResources)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-431">You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-432">PushPromise 是不确定的而且应用程序不应具有依赖于它的逻辑。</span><span class="sxs-lookup"><span data-stu-id="61b16-432">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="61b16-433">其唯一的目的是在某些情况下的性能优势。</span><span class="sxs-lookup"><span data-stu-id="61b16-433">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="61b16-434">有可能会导致完全忽略推送请求的多个条件 （协议和实现）。</span><span class="sxs-lookup"><span data-stu-id="61b16-434">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="61b16-435">假定条件下基于即发即弃。</span><span class="sxs-lookup"><span data-stu-id="61b16-435">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Redirect">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-436">将客户端重定向到新的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-436">Redirects a client to a new URL.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="61b16-437">目标位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-437">The target location.</span>
          </span>
          <span data-ttu-id="61b16-438">这可能是相对于应用程序的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-438">This may be an application-relative virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-439">将请求重定向到新 URL 并指定该新 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-439">Redirects a request to a new URL and specifies the new URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-440">调用<xref:System.Web.HttpResponse.Redirect%2A>等效于调用<xref:System.Web.HttpResponse.Redirect%2A>第二个参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="61b16-440">Calling <xref:System.Web.HttpResponse.Redirect%2A> is equivalent to calling <xref:System.Web.HttpResponse.Redirect%2A> with the second parameter set to `true`.</span></span>  
  
 <span data-ttu-id="61b16-441"><xref:System.Web.HttpResponse.Redirect%2A> 调用<xref:System.Web.HttpResponse.End%2A>该类会引发<xref:System.Threading.ThreadAbortException>完成后的异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-441"><xref:System.Web.HttpResponse.Redirect%2A> calls <xref:System.Web.HttpResponse.End%2A> which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span> <span data-ttu-id="61b16-442">此异常有不利的影响对 Web 应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="61b16-442">This exception has a detrimental effect on Web application performance.</span></span> <span data-ttu-id="61b16-443">因此，我们建议，而不是此重载使用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>重载，并传递`false`为`endResponse`参数，，然后调用<xref:System.Web.HttpApplication.CompleteRequest%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-443">Therefore, we recommend that instead of this overload you use the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> overload and pass `false` for the `endResponse` parameter, and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="61b16-444">有关更多信息，请参见 <xref:System.Web.HttpResponse.End%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-444">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61b16-445">移动的页面，如果你的应用程序依赖于无 cookie 会话，或可能会收到来自移动设备的需要无 cookie 会话的请求路径中使用波形符 （~） 可以导致创建新的会话和可能会丢失会话数据。</span><span class="sxs-lookup"><span data-stu-id="61b16-445">For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data.</span></span> <span data-ttu-id="61b16-446">具有路径移动控件上设置属性，如"~ / 路径"，解决路径使用<xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>"~ / 路径"之前将其分配给属性。</span><span class="sxs-lookup"><span data-stu-id="61b16-446">To set a property on a mobile control with a path such as "~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "~/path" before assigning it to the property.</span></span>  
  
 <span data-ttu-id="61b16-447">ASP.NET 执行通过返回 HTTP 状态代码为 302 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-447">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="61b16-448">一种替代方式，将控制转移到另一页是<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-448">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="61b16-449"><xref:System.Web.HttpServerUtility.Transfer%2A>方法是通常更高效，因为它不会往返过程导致向客户端。</span><span class="sxs-lookup"><span data-stu-id="61b16-449">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="61b16-450">有关详细信息，请参阅[如何： 将用户重定向到另一页](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)。</span><span class="sxs-lookup"><span data-stu-id="61b16-450">For more information, see [How to: Redirect Users to Another Page](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-451">下面的示例强制无条件重定向到另一个网站。</span><span class="sxs-lookup"><span data-stu-id="61b16-451">The following example forces an unconditional redirection to another Web site.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Redirect Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Redirect Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-452">发送 HTTP 标头之后尝试重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-452">A redirection is attempted after the HTTP headers have been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url, bool endResponse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="61b16-453">目标的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-453">The location of the target.</span>
          </span>
        </param>
        <param name="endResponse">
          <span data-ttu-id="61b16-454">指示当前页的执行是否应终止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-454">Indicates whether execution of the current page should terminate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-455">将客户端重定向到新的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-455">Redirects a client to a new URL.</span>
          </span>
          <span data-ttu-id="61b16-456">指定新的 URL 并指定当前页的执行是否应终止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-456">Specifies the new URL and whether execution of the current page should terminate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-457">绝对 URL (例如，http://www.contoso.com/default.aspx)或相对 URL (例如，Default.aspx) 可为指定的目标位置，但是某些浏览器可能拒绝相对 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-457">An absolute URL (for example, http://www.contoso.com/default.aspx) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.</span></span>  
  
 <span data-ttu-id="61b16-458">当你使用此方法在页处理程序中一页并开始新请求的另一页，设置终止请求`endResponse`到`false`，然后调用<xref:System.Web.HttpApplication.CompleteRequest%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-458">When you use this method in a page handler to terminate a request for one page and start a new request for another page, set `endResponse` to `false` and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="61b16-459">如果指定`true`为`endResponse`参数，此方法调用<xref:System.Web.HttpResponse.End%2A>原始请求，将引发方法<xref:System.Threading.ThreadAbortException>完成时的异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-459">If you specify `true` for the `endResponse` parameter, this method calls the <xref:System.Web.HttpResponse.End%2A> method for the original request, which throws a <xref:System.Threading.ThreadAbortException> exception when it completes.</span></span> <span data-ttu-id="61b16-460">此异常有不利的影响对 Web 应用程序性能，这正是传递`false`为`endResponse`建议参数。</span><span class="sxs-lookup"><span data-stu-id="61b16-460">This exception has a detrimental effect on Web application performance, which is why passing `false` for the `endResponse` parameter is recommended.</span></span> <span data-ttu-id="61b16-461">有关更多信息，请参见 <xref:System.Web.HttpResponse.End%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-461">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61b16-462">移动页面，如果你的应用程序依赖于无 cookie 会话，或可能会收到来自移动设备的需要无 cookie 会话的请求路径中使用波形符 （~） 可以创建新会话，可能会丢失会话数据。</span><span class="sxs-lookup"><span data-stu-id="61b16-462">For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data.</span></span> <span data-ttu-id="61b16-463">具有路径移动控件上设置属性，如"~ / 路径"，解决路径使用<xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>"~ / 路径"之前将其分配给属性。</span><span class="sxs-lookup"><span data-stu-id="61b16-463">To set a property on a mobile control with a path such as "~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "~/path" before assigning it to the property.</span></span>  
  
 <span data-ttu-id="61b16-464">ASP.NET 执行通过返回 HTTP 状态代码为 302 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-464">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="61b16-465">一种替代方式，将控制转移到另一页是<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-465">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="61b16-466"><xref:System.Web.HttpServerUtility.Transfer%2A>方法是通常更高效，因为它不会往返过程导致向客户端。</span><span class="sxs-lookup"><span data-stu-id="61b16-466">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="61b16-467">有关详细信息，请参阅[如何： 将用户重定向到另一页](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)。</span><span class="sxs-lookup"><span data-stu-id="61b16-467">For more information, see [How to: Redirect Users to Another Page](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-468">下面的示例使用<xref:System.Web.HttpResponse.IsClientConnected%2A>属性检查请求该页的客户端是否仍连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="61b16-468">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="61b16-469">如果<xref:System.Web.HttpResponse.IsClientConnected%2A>为 true，该代码调用<xref:System.Web.HttpResponse.Redirect%2A>方法和客户端将查看另一页。</span><span class="sxs-lookup"><span data-stu-id="61b16-469">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="61b16-470">如果<xref:System.Web.HttpResponse.IsClientConnected%2A>为 false，则该代码调用<xref:System.Web.HttpResponse.End%2A>方法，并且所有的页处理会终止。</span><span class="sxs-lookup"><span data-stu-id="61b16-470">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-471">
            <paramref name="url" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-471">
              <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-472">
            <paramref name="url" /> 包含换行符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-472">
              <paramref name="url" /> contains a newline character.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-473">发送 HTTP 标头之后尝试重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-473">A redirection is attempted after the HTTP headers have been sent.</span>
          </span>
        </exception>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="61b16-474">该页面请求是回调的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-474">The page request is the result of a callback.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.RedirectLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedirectLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-475">获取或设置 HTTP <see langword="Location" /> 标头的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-475">Gets or sets the value of the HTTP <see langword="Location" /> header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-476">通过 HTTP <see langword="Location" /> 标头传输到客户端的绝对 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-476">The absolute URI that is transmitted to the client in the HTTP <see langword="Location" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-477">下面的示例演示如何使用此属性指定当你通过使用 HTTP 301 响应代码的代码的永久重定向时重定向 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-477">The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.</span></span>  
  
```csharp  
Response.StatusCode = 301;  
Response.Status = "301 Moved Permanently";  
Response.RedirectLocation = "http://www.newurl.com ";  
Response.End();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-478">已编写 HTTP 标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-478">The HTTP headers have already been written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectPermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-479">执行从所请求 URL 到所指定 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-479">Performs a permanent redirection from a requested URL to a specified URL.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="61b16-480">要将请求重定向到其中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-480">The location to redirect the request to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-481">执行从所请求 URL 到所指定 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-481">Performs a permanent redirection from the requested URL to the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-482"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29>方法重载提供了在响应中的一个 301 HTTP 状态代码，并且包含重定向到请求的 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-482">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="61b16-483">HTTP 状态代码为 301 是标准 HTTP 响应代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-483">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="61b16-484">则表示永久重定向存在，并且它提供了重定向位置。</span><span class="sxs-lookup"><span data-stu-id="61b16-484">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>  
  
 <span data-ttu-id="61b16-485">调用<xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29>方法重载终止响应。</span><span class="sxs-lookup"><span data-stu-id="61b16-485">Calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload terminates the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-486">
            <paramref name="url" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-486">
              <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-487">
            <paramref name="url" /> 包括一个换行符 (<c>\n</c>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-487">
              <paramref name="url" /> includes a newline character (<c>\n</c>).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url, bool endResponse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="61b16-488">要将请求重定向到其中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-488">The location to redirect the request to.</span>
          </span>
        </param>
        <param name="endResponse">
          <span data-ttu-id="61b16-489">若要终止响应，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-489">
              <see langword="true" /> to terminate the response; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="61b16-490">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-490">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-491">执行从所请求 URL 到所指定 URL 的永久重定向，并提供用于完成响应的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-491">Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-492"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>方法重载提供了在响应中的一个 301 HTTP 状态代码，并且包含重定向到请求的 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-492">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="61b16-493">此方法重载还提供了用于指定是否终止或用于完成响应执行重定向后的选项。</span><span class="sxs-lookup"><span data-stu-id="61b16-493">This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.</span></span> <span data-ttu-id="61b16-494">HTTP 状态代码为 301 是标准 HTTP 响应代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-494">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="61b16-495">则表示永久重定向存在，并且它提供了重定向位置。</span><span class="sxs-lookup"><span data-stu-id="61b16-495">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-496">
            <paramref name="url" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-496">
              <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-497">
            <paramref name="url" /> 包括一个换行符 (<c>\n</c>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-497">
              <paramref name="url" /> includes a newline character (<c>\n</c>).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-498">使用路由参数值和/或路由名称将请求重定向到新 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-498">Redirects a request to a new URL by using route parameter values, a route name, or both.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">
          <span data-ttu-id="61b16-499">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-499">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-500">使用路由参数值将请求重定向到新 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-500">Redirects a request to a new URL by using route parameter values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-501">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-501">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-502">它等效于调用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-502">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-503">此方法中传递的对象转换为`routeValues`到<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>通过使用对象<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="61b16-503">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="61b16-504"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-504">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-505">ASP.NET 执行通过返回 HTTP 状态代码为 302 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-505">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-506">下面的示例演示如何调用此方法将重定向到的已命名的参数，路由`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-506">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoute(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-507">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-507">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-508">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-508">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="61b16-509">路由的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-509">The name of the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-510">使用路由名称将请求重定向到新 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-510">Redirects a request to a new URL by using a route name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-511">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-511">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-512">它等效于调用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-512">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-513">此方法会将传入的路由名称`routeName`到通过 URL<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-513">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="61b16-514">ASP.NET 执行通过返回 HTTP 状态代码为 302 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-514">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-515">下面的示例演示如何调用此方法将重定向到名为的路由`Products`。</span><span class="sxs-lookup"><span data-stu-id="61b16-515">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>  
  
```vb  
Response.RedirectToRoute("Products")  
```  
  
```csharp  
Response.RedirectToRoute("Products");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-516">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-516">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-517">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-517">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues">
          <span data-ttu-id="61b16-518">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-518">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-519">使用路由参数值将请求重定向到新 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-519">Redirects a request to a new URL by using route parameter values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-520">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-520">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-521">它等效于调用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-521">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-522">此方法调用<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>方法来确定的 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-522">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-523">ASP.NET 执行通过返回 HTTP 状态代码为 302 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-523">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-524">下面的示例演示如何调用此方法将重定向到的已命名的参数，路由`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-524">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoute(  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-525">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-525">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-526">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-526">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="61b16-527">路由的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-527">The name of the route.</span>
          </span>
        </param>
        <param name="routeValues">
          <span data-ttu-id="61b16-528">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-528">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-529">使用路由参数值和路由名称将请求重定向到新 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-529">Redirects a request to a new URL by using route parameter values and a route name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-530">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-530">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-531">它等效于调用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-531">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-532">此方法中传递的对象转换为`routeValues`到<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>通过使用对象<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="61b16-532">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="61b16-533"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-533">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-534">ASP.NET 执行通过返回 HTTP 状态代码为 302 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-534">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-535">下面的示例演示如何调用此方法将重定向到名为的路由`Product`具有命名的参数和`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-535">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoute("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-536">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-536">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-537">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-537">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="61b16-538">路由的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-538">The name of the route.</span>
          </span>
        </param>
        <param name="routeValues">
          <span data-ttu-id="61b16-539">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-539">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-540">使用路由参数值和路由名称将请求重定向到新 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-540">Redirects a request to a new URL by using route parameter values and a route name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-541">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-541">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-542">它等效于调用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-542">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-543"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-543">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is called to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-544">ASP.NET 执行通过返回 HTTP 状态代码为 302 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-544">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-545">下面的示例演示如何调用此方法将重定向到名为的路由`Product`具有命名的参数和`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-545">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoute("Product",  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-546">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-546">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-547">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-547">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoutePermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-548">使用路由参数值和/或路由名称执行从所请求 URL 到新 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-548">Performs a permanent redirection from a requested URL to a new URL by using route parameter values, a route name, or both.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">
          <span data-ttu-id="61b16-549">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-549">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-550">使用路由参数值执行从所请求 URL 到新 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-550">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-551">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-551">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-552">它等效于调用<xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-552">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-553">此方法中传递的对象转换为`routeValues`到<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>通过使用对象<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="61b16-553">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="61b16-554"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-554">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-555">ASP.NET 执行通过返回 HTTP 状态代码为 301 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-555">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-556">下面的示例演示如何调用此方法将重定向到的已命名的参数，路由`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-556">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-557">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-557">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-558">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-558">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="61b16-559">路由的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-559">The name of the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-560">使用路由名称执行从所请求 URL 到新 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-560">Performs a permanent redirection from a requested URL to a new URL by using a route name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-561">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-561">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-562">它等效于调用<xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-562">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-563">此方法会将传入的路由名称`routeName`到通过 URL<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-563">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="61b16-564">ASP.NET 执行通过返回 HTTP 状态代码为 301 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-564">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-565">下面的示例演示如何调用此方法将重定向到名为的路由`Products`。</span><span class="sxs-lookup"><span data-stu-id="61b16-565">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Products")  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Products");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-566">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-566">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-567">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-567">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues">
          <span data-ttu-id="61b16-568">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-568">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-569">使用路由参数值执行从所请求 URL 到新 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-569">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-570">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-570">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-571">它等效于调用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-571">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-572">此方法调用<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>方法来确定的 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-572">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-573">ASP.NET 执行通过返回 HTTP 状态代码为 301 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-573">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-574">下面的示例演示如何调用此方法将重定向到的已命名的参数，路由`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-574">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent(  
  new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-575">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-575">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-576">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-576">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="61b16-577">路由的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-577">The name of the route.</span>
          </span>
        </param>
        <param name="routeValues">
          <span data-ttu-id="61b16-578">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-578">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-579">使用路由参数值以及与新 URL 对应的路由的名称执行从所请求 URL 到新 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-579">Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-580">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-580">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-581">它等效于调用<xref:System.Web.HttpResponse.RedirectPermanent%2A>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-581">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%2A> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-582">此方法中传递的对象转换为`routeValues`到<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>通过使用对象<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="61b16-582">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="61b16-583"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-583">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-584">ASP.NET 执行通过返回 HTTP 状态代码为 301 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-584">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-585">下面的示例演示如何调用此方法将重定向到名为的路由`Product`具有命名的参数和`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-585">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-586">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-586">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-587">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-587">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="61b16-588">路由的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-588">The name of the route.</span>
          </span>
        </param>
        <param name="routeValues">
          <span data-ttu-id="61b16-589">路由参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-589">The route parameter values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-590">使用路由参数值和路由名称执行从所请求 URL 到新 URL 的永久重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-590">Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-591">提供此方法是为了方便编码。</span><span class="sxs-lookup"><span data-stu-id="61b16-591">This method is provided for coding convenience.</span></span> <span data-ttu-id="61b16-592">它等效于调用<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>方法与第二个参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-592">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="61b16-593">此方法调用<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>方法来确定的 URL。</span><span class="sxs-lookup"><span data-stu-id="61b16-593">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="61b16-594">ASP.NET 执行通过返回 HTTP 状态代码为 301 重定向。</span><span class="sxs-lookup"><span data-stu-id="61b16-594">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-595">下面的示例演示如何调用此方法将重定向到名为的路由`Product`具有命名的参数和`productid`和`category`。</span><span class="sxs-lookup"><span data-stu-id="61b16-595">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Product",  
  new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61b16-596">没有与指定路由参数对应的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-596">No route corresponds to the specified route parameters.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-597">在发送 HTTP 标头之后尝试进行重定向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-597">Redirection was attempted after the HTTP headers had been sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveOutputCacheItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-598">使用默认的输出缓存提供程序从输出缓存中删除缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-598">Removes cached items from the output cache by using the default output-cache provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61b16-599">已从缓存中删除的项的虚拟绝对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-599">The virtual absolute path to the items that are removed from the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-600">从缓存中删除与默认输出缓存提供程序关联的所有缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-600">Removes from the cache all cached items that are associated with the default output-cache provider.</span>
          </span>
          <span data-ttu-id="61b16-601">此方法是静态的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-601">This method is static.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-602">调用此方法以删除与默认输出缓存提供程序关联的输出缓存项。</span><span class="sxs-lookup"><span data-stu-id="61b16-602">Call this method to remove output-cache items that are associated with the default output-cache provider.</span></span> <span data-ttu-id="61b16-603">调用<xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>方法移除与网站配置文件中指定的自定义输出缓存提供程序关联的输出缓存项。</span><span class="sxs-lookup"><span data-stu-id="61b16-603">Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-604">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-604">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-605">
            <paramref name="path" /> 并非绝对虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-605">
              <paramref name="path" /> is not an absolute virtual path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path, string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path, string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String, providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path, System::String ^ providerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="61b16-606">从缓存中删除的项的虚拟绝对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-606">The virtual absolute path of the items that are removed from the cache.</span>
          </span>
        </param>
        <param name="providerName">
          <span data-ttu-id="61b16-607">用于删除与指定路径关联的输出缓存项的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-607">The provider that is used to remove the output-cache artifacts that are associated with the specified path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-608">使用指定的输出缓存提供程序删除所有与指定路径关联的输出缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-608">Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-609">调用此方法以删除与网站配置文件中指定的自定义输出缓存提供程序关联的输出缓存项。</span><span class="sxs-lookup"><span data-stu-id="61b16-609">Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</span></span> <span data-ttu-id="61b16-610">若要删除与默认输出缓存提供程序关联的输出缓存项，请调用<xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="61b16-610">To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-611">
            <paramref name="path" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-611">
              <paramref name="path" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-612">
            <paramref name="path" /> 是无效路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-612">
              <paramref name="path" /> is an invalid path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public void SetCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="61b16-613">集合中要更新的 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-613">The cookie in the collection to be updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-614">因为 HttpResponse.SetCookie<b></b> 方法仅供内部使用，所以不应在代码中调用该方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-614">Because the <b>HttpResponse.SetCookie</b> method is intended for internal use only, you should not call it in your code.</span>
          </span>
          <span data-ttu-id="61b16-615">可以改为调用 HttpResponse.Cookies.Set<b></b> 方法，如以下示例所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-615">Instead, you can call the <b>HttpResponse.Cookies.Set</b> method, as the following example shows.</span>
          </span>
          <br />
          <span data-ttu-id="61b16-616">更新 cookie 集合中的现有 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-616">Updates an existing cookie in the cookie collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-617">下面的示例更新的现有 cookie 的值。</span><span class="sxs-lookup"><span data-stu-id="61b16-617">The following example updates the value of an existing cookie.</span></span>  
  
 [!code-csharp[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-618">已尝试在发送 HTTP 标头之后设置 Cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-618">Attempted to set the cookie after the HTTP headers were sent.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.HttpRequestHeader.Cookie" />
        <altmember cref="T:System.Web.HttpCookie" />
        <altmember cref="T:System.Web.HttpCookieMode" />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public string Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Status" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Status { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-619">设置返回到客户端的 <see langword="Status" /> 行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-619">Sets the <see langword="Status" /> line that is returned to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-620">设置状态代码会使描述 HTTP 输出状态的字符串返回到客户端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-620">Setting the status code causes a string describing the status of the HTTP output to be returned to the client.</span>
          </span>
          <span data-ttu-id="61b16-621">默认值为 200 (OK)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-621">The default value is 200 (OK).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-622"><xref:System.Web.HttpResponse.Status%2A> 已弃用鉴于<xref:System.Web.HttpResponse.StatusDescription%2A>，仅为与 ASP 的早期版本的兼容性提供。</span><span class="sxs-lookup"><span data-stu-id="61b16-622"><xref:System.Web.HttpResponse.Status%2A> has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="61b16-623">使用 ASP.NET，<xref:System.Web.HttpResponse.StatusDescription%2A>相反。</span><span class="sxs-lookup"><span data-stu-id="61b16-623">With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-624">状态设置为无效的状态代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-624">Status is set to an invalid status code.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StatusCode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-625">获取或设置返回给客户端的输出的 HTTP 状态代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-625">Gets or sets the HTTP status code of the output returned to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-626">表示返回到客户端的 HTTP 输出状态的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-626">An Integer representing the status of the HTTP output returned to the client.</span>
          </span>
          <span data-ttu-id="61b16-627">默认值为 200 (OK)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-627">The default value is 200 (OK).</span>
          </span>
          <span data-ttu-id="61b16-628">有关有效状态代码的列表，请参阅[Http 状态代码](http://go.microsoft.com/fwlink/?LinkId=73157)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-628">For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-629">下面的示例检查输出流的状态的代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-629">The following example checks the status code of the output stream.</span></span> <span data-ttu-id="61b16-630">如果状态代码不等于 200，则执行其他代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-630">If the status code is not equal to 200, additional code is executed.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-631">发送 HTTP 标头后设置 <see cref="P:System.Web.HttpResponse.StatusCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-631">
              <see cref="P:System.Web.HttpResponse.StatusCode" /> is set after the HTTP headers have been sent.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpResponse.SubStatusCode" />
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StatusDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-632">获取或设置返回给客户端的输出的 HTTP 状态字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-632">Gets or sets the HTTP status string of the output returned to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-633">描述返回到客户端的 HTTP 输出的状态的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-633">A string that describes the status of the HTTP output returned to the client.</span>
          </span>
          <span data-ttu-id="61b16-634">默认值为 "OK"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-634">The default value is "OK".</span>
          </span>
          <span data-ttu-id="61b16-635">有关有效状态代码的列表，请参阅[Http 状态代码](http://go.microsoft.com/fwlink/?LinkId=73157)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-635">For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-636">下面的示例检查输出流的状态字符串。</span><span class="sxs-lookup"><span data-stu-id="61b16-636">The following example checks the status string of the output stream.</span></span> <span data-ttu-id="61b16-637">如果状态不等于"确定"，则执行其他代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-637">If the status is not equal to "OK", additional code is executed.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-638">发送 HTTP 标头后设置 <paramref name="StatusDescription" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-638">
              <paramref name="StatusDescription" /> is set after the HTTP headers have been sent.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61b16-639">所选值的长度大于 512。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-639">The selected value has a length greater than 512.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubStatusCode">
      <MemberSignature Language="C#" Value="public int SubStatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubStatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SubStatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property SubStatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubStatusCode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-640">获取或设置限定响应的状态代码的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-640">Gets or sets a value qualifying the status code of the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-641">表示 [!INCLUDE[iisver](~/includes/iisver-md.md)] 子状态代码的整数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-641">An integer value that represents the [!INCLUDE[iisver](~/includes/iisver-md.md)] sub status code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-642"><xref:System.Web.HttpResponse.SubStatusCode%2A>中的集成的管道模式仅支持属性[!INCLUDE[iisver](~/includes/iisver-md.md)]并且至少.NET Framework 版本 3.0。</span><span class="sxs-lookup"><span data-stu-id="61b16-642">The <xref:System.Web.HttpResponse.SubStatusCode%2A> property is only supported with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span> <span data-ttu-id="61b16-643">当你将设置<xref:System.Web.HttpResponse.SubStatusCode%2A>属性，则状态将记录在[!INCLUDE[iisver](~/includes/iisver-md.md)]如果配置失败请求跟踪。</span><span class="sxs-lookup"><span data-stu-id="61b16-643">When you set the <xref:System.Web.HttpResponse.SubStatusCode%2A> property, the status is logged on [!INCLUDE[iisver](~/includes/iisver-md.md)] if failed-request tracing is configured.</span></span> <span data-ttu-id="61b16-644">独立于跟踪的配置是否，代码永远不会发送到请求的最终响应的一部分。</span><span class="sxs-lookup"><span data-stu-id="61b16-644">Independent of whether tracing is configured, the code is never sent as part of the final response to the request.</span></span> <span data-ttu-id="61b16-645">有关详细信息，请参阅[故障排除失败的请求使用失败请求跟踪在 IIS 7.0 中](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)。</span><span class="sxs-lookup"><span data-stu-id="61b16-645">For more information, see [Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-646">下面的示例设置<xref:System.Web.HttpResponse.SubStatusCode%2A>的事件处理程序中的属性<xref:System.Web.HttpApplication>实例<xref:System.Web.HttpApplication.PostAuthenticateRequest>事件。</span><span class="sxs-lookup"><span data-stu-id="61b16-646">The following example sets the <xref:System.Web.HttpResponse.SubStatusCode%2A> property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event.</span></span> <span data-ttu-id="61b16-647">将 Web 应用程序的 App_Code 文件夹中的代码文件和配置要注册模块的 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="61b16-647">Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module.</span></span> <span data-ttu-id="61b16-648">有关详细信息，请参阅[演练： 创建和注册自定义 HTTP 模块](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453)。</span><span class="sxs-lookup"><span data-stu-id="61b16-648">For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453).</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61b16-649">该操作要求使用 [!INCLUDE[iisver](~/includes/iisver-md.md)] 中的集成管道模式，并且 .NET Framework 至少为 3.0 版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-649">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-650">状态代码在发送完所有 HTTP 标头之后设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-650">The status code is set after all HTTP headers have been sent.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpResponse.StatusCode" />
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SupportsAsyncFlush" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsAsyncFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsAsyncFlush { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-651">获取指示集合是否支持异步刷新操作的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-651">Gets a value that indicates whether the connection supports asynchronous flush operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-652">如果连接支持异步刷新操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-652">
              <see langword="true" /> if the connection supports asynchronous flush operations; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-653">此属性返回的值<xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="61b16-653">This property returns the value of the <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressContent">
      <MemberSignature Language="C#" Value="public bool SuppressContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressContent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-654">获取或设置指示是否将 HTTP 内容发送到客户端的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-654">Gets or sets a value indicating whether to send HTTP content to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-655">若要取消输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-655">
              <see langword="true" /> to suppress output; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-656">下面的示例检查是否<xref:System.Web.HttpRequest.IsSecureConnection%2A>属性设置为 false。</span><span class="sxs-lookup"><span data-stu-id="61b16-656">The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="61b16-657">如果是，<xref:System.Web.HttpResponse.SuppressContent%2A>属性设置为 true，以停止从所发送响应。</span><span class="sxs-lookup"><span data-stu-id="61b16-657">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressDefaultCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SuppressDefaultCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressDefaultCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressDefaultCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-658">[仅在 .NET Framework 4.5.2 及更高版本中受支持]</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-658">[Supported in the .NET Framework 4.5.2 and later versions]</span>
          </span>
          <span data-ttu-id="61b16-659">获取或设置一个值，该值指示是否取消默认缓存控件：当前 HTTP 响应的专用<c></c>标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-659">Gets or sets a value indicating whether to suppress the default <c>Cache Control: private</c> header for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-660">
            <see langword="true" /> 若要取消默认<c>Cache-control： 私有</c>标头为当前 HTTP 响应中; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-660">
              <see langword="true" /> to suppress the default <c>Cache Control: private</c> header for the current HTTP response; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-661">默认情况下，ASP.NET 将发送`Cache-Control: private`响应标头除非已为此响应指定一个显式的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="61b16-661">By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response.</span></span> <span data-ttu-id="61b16-662">此属性允许取消基于每个请求此默认响应标头。</span><span class="sxs-lookup"><span data-stu-id="61b16-662">This property allows suppressing this default response header on a per-request basis.</span></span> <span data-ttu-id="61b16-663">标头仍整个应用程序通过设置抑制<xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>中[httpRuntime 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)或[outputCache 元素的缓存 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee).</span><span class="sxs-lookup"><span data-stu-id="61b16-663">The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) or [outputCache Element for caching (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee).</span></span>  
  
 <span data-ttu-id="61b16-664">禁止显示默认值时要格外小心`Cache-Control: private`标头，为代理和其他中间方可能将没有此标头的响应视为可缓存默认情况下。</span><span class="sxs-lookup"><span data-stu-id="61b16-664">Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</span></span> <span data-ttu-id="61b16-665">此处理可能导致意外的缓存的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="61b16-665">This treatment can lead to the inadvertent caching of sensitive information.</span></span> <span data-ttu-id="61b16-666">请参阅[RFC 2616、 sec。 13.4](http://tools.ietf.org/html/rfc2616)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="61b16-666">See [RFC 2616, Sec. 13.4](http://tools.ietf.org/html/rfc2616) for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressFormsAuthenticationRedirect">
      <MemberSignature Language="C#" Value="public bool SuppressFormsAuthenticationRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressFormsAuthenticationRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressFormsAuthenticationRedirect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-667">获取或设置指定重定向至登录页的 forms 身份验证是否应取消的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-667">Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-668">如果应取消窗体身份认证重定向，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-668">
              <see langword="true" /> if forms authentication redirection should be suppressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-669">默认情况下，窗体身份验证都将重定向到登录页以便将 HTTP 401 状态代码转换为 302。</span><span class="sxs-lookup"><span data-stu-id="61b16-669">By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.</span></span> <span data-ttu-id="61b16-670">这不适合某些类别的错误，例如当身份验证成功但授权失败，或者在当前请求的 AJAX 或 web 服务请求。</span><span class="sxs-lookup"><span data-stu-id="61b16-670">This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.</span></span> <span data-ttu-id="61b16-671">此属性提供一种方法来取消重定向行为，并向客户端发送的原始状态代码。</span><span class="sxs-lookup"><span data-stu-id="61b16-671">This property provides a way to suppress the redirect behavior and send the original status code to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransmitFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-672">将指定的文件直接写入 HTTP 响应输出流，而不在内存中缓冲该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-672">Writes the specified file directly to an HTTP response output stream without buffering it in memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="61b16-673">要写入 HTTP 输出的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-673">The name of the file to write to the HTTP output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-674">将指定的文件直接写入 HTTP 响应输出流，而不在内存中缓冲该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-674">Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-675">
            <paramref name="filename" /> 参数为 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-675">The <paramref name="filename" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename, long offset, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="61b16-676">要写入 HTTP 输出的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-676">The name of the file to write to the HTTP output.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="61b16-677">文件中的位置，将从该位置开始将内容写入到 HTTP 输出中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-677">The position in the file to begin to write to the HTTP output.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="61b16-678">要传输的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-678">The number of bytes to be transmitted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-679">将文件的指定部分直接写入 HTTP 响应输出流，而不在内存中缓冲它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-679">Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-680">如果指定 0 作为`offset`参数和-1 作为`length`参数，发送整个文件。</span><span class="sxs-lookup"><span data-stu-id="61b16-680">If you specify 0 as the `offset` parameter and -1 as the `length` parameter, the whole file is sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-681">
            <paramref name="offset" /> 参数小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-681">The <paramref name="offset" /> parameter is less than zero.</span>
          </span>
          <span data-ttu-id="61b16-682">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-682">\- or -</span>
          </span>
          <span data-ttu-id="61b16-683">
            <paramref name="length" /> 参数小于 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-683">The <paramref name="length" /> parameter is less than -1.</span>
          </span>
          <span data-ttu-id="61b16-684">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-684">\- or -</span>
          </span>
          <span data-ttu-id="61b16-685">
            <paramref name="length" /> 参数指定的字节数大于文件包含的字节数减去偏移值得到的数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-685">The <paramref name="length" /> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61b16-686">不支持辅助进程外请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-686">The out-of-process worker request is not supported.</span>
          </span>
          <span data-ttu-id="61b16-687">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-687">\- or -</span>
          </span>
          <span data-ttu-id="61b16-688">响应不使用 <see cref="T:System.Web.HttpWriter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-688">The response is not using an <see cref="T:System.Web.HttpWriter" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-689">
            <paramref name="offset" /> 参数小于零或大于文件大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-689">The <paramref name="offset" /> parameter is less than zero or greater than the file size.</span>
          </span>
          <span data-ttu-id="61b16-690">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-690">\- or -</span>
          </span>
          <span data-ttu-id="61b16-691">
            <paramref name="length" /> 参数小于 -1 或大于 <paramref name="offset" /> 参数加上文件大小的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-691">The <paramref name="length" /> parameter is less than -1 or greater than the value of the <paramref name="offset" /> parameter plus the file size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrySkipIisCustomErrors">
      <MemberSignature Language="C#" Value="public bool TrySkipIisCustomErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrySkipIisCustomErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.TrySkipIisCustomErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TrySkipIisCustomErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrySkipIisCustomErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-692">获取或设置指定是否禁用 [!INCLUDE[iisver](~/includes/iisver-md.md)] 自定义错误的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-692">Gets or sets a value that specifies whether [!INCLUDE[iisver](~/includes/iisver-md.md)] custom errors are disabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61b16-693">若要禁用 IIS 自定义错误，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-693">
              <see langword="true" /> to disable IIS custom errors; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-694"><xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A>属性仅在你的应用程序承载在 IIS 7.0 中使用。</span><span class="sxs-lookup"><span data-stu-id="61b16-694">The <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property is used only when your application is hosted in IIS 7.0.</span></span> <span data-ttu-id="61b16-695">在 IIS 7.0 中的经典模式下运行时<xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A>属性默认值是`true`。</span><span class="sxs-lookup"><span data-stu-id="61b16-695">When running in Classic mode in IIS 7.0 the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `true`.</span></span> <span data-ttu-id="61b16-696">在集成模式下，运行时<xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A>属性默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="61b16-696">When running in Integrated mode, the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-697">将信息写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-697">Writes information to an HTTP response output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="61b16-698">要写入 HTTP 输出流的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-698">The character to write to the HTTP output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-699">将字符写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-699">Writes a character to an HTTP response output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-700">下面的示例创建一的系列写入到 ASP.NET 页使用 Write 方法的常量。</span><span class="sxs-lookup"><span data-stu-id="61b16-700">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="61b16-701">该代码调用 Write 方法写入页的单个字符常量的此版本。</span><span class="sxs-lookup"><span data-stu-id="61b16-701">The code calls this version of the Write method to write individual character constants to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="61b16-702">要写入 HTTP 输出流的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-702">The <see cref="T:System.Object" /> to write to the HTTP output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-703">将 <see cref="T:System.Object" /> 写入 HTTP 响应流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-703">Writes an <see cref="T:System.Object" /> to an HTTP response stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="61b16-704">要写入 HTTP 输出流的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-704">The string to write to the HTTP output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-705">将字符串写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-705">Writes a string to an HTTP response output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-706">如果从 Web 客户端接收的输入未通过验证从客户端接收或传输到客户端时，动态生成的 HTML 页面可以带来安全风险。</span><span class="sxs-lookup"><span data-stu-id="61b16-706">Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.</span></span> <span data-ttu-id="61b16-707">输入提交给 Web 站点并随后写回给客户端中嵌入的恶意脚本可能看上去来自受信任的源。</span><span class="sxs-lookup"><span data-stu-id="61b16-707">Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.</span></span> <span data-ttu-id="61b16-708">此安全风险称为跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="61b16-708">This security risk is referred to as a cross-site scripting attack.</span></span> <span data-ttu-id="61b16-709">始终应验证时它会将传输从您的网站到客户端浏览器从客户端收到的数据。</span><span class="sxs-lookup"><span data-stu-id="61b16-709">You should always validate data that is received from a client when it will be transmitted from your site to client browsers.</span></span>  
  
 <span data-ttu-id="61b16-710">此外，每当任何已作为输入接收的数据以 HTML 的形式写出时，你应对其进行编码使用一种技术，如<xref:System.Web.HttpServerUtility.HtmlEncode%2A>或<xref:System.Web.HttpServerUtility.UrlEncode%2A>阻止执行恶意脚本。</span><span class="sxs-lookup"><span data-stu-id="61b16-710">Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <xref:System.Web.HttpServerUtility.HtmlEncode%2A> or <xref:System.Web.HttpServerUtility.UrlEncode%2A> to prevent malicious script from executing.</span></span> <span data-ttu-id="61b16-711">此方法十分适用于未进行验证时它收到的数据。</span><span class="sxs-lookup"><span data-stu-id="61b16-711">This technique is useful for data that was not validated when it was received.</span></span>  
  
 <span data-ttu-id="61b16-712">当你进行编码或筛选数据时，必须指定为您的 Web 页设置，以便你的筛选器可以标识并删除任何的字节序列不属于设置 （如非字母数字序列），并且可能无法让中嵌入的恶意脚本的字符它们。</span><span class="sxs-lookup"><span data-stu-id="61b16-712">When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.</span></span>  
  
 <span data-ttu-id="61b16-713">有关跨站点脚本攻击的详细信息，请参阅文章 Q252985，"如何为防止跨站点脚本安全问题"上[Microsoft 知识库文章](http://go.microsoft.com/fwlink/?LinkID=37115)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="61b16-713">For more information about cross-site scripting attacks, see article Q252985, "How to Prevent Cross-Site Scripting Security Issues" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-714">下面的示例回显到客户端的浏览器的客户端的名称。</span><span class="sxs-lookup"><span data-stu-id="61b16-714">The following example echoes the client's name back to the client's browser.</span></span> <span data-ttu-id="61b16-715"><xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法中抽出任何恶意脚本和在中提交的无效字符`UserName`输入的字段。</span><span class="sxs-lookup"><span data-stu-id="61b16-715">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.Write#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Write/CS/systemwebhttpresponsewrite.cs#1)]
 [!code-vb[System.Web.HttpResponse.Write#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Write/vb/systemwebhttpresponsewrite.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="61b16-716">要写入的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-716">The character array to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="61b16-717">字符数组中开始进行写入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-717">The position in the character array where writing starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="61b16-718">从 index<c></c> 开始的要写入的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-718">The number of characters to write, beginning at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-719">将字符数组写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-719">Writes an array of characters to an HTTP response output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61b16-720">下面的示例创建一的系列写入到 ASP.NET 页使用 Write 方法的常量。</span><span class="sxs-lookup"><span data-stu-id="61b16-720">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="61b16-721">该代码调用 Write 方法写入页的单个字符常量的此版本。</span><span class="sxs-lookup"><span data-stu-id="61b16-721">The code calls this version of the Write method to write individual character constants to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61b16-722">将指定的文件直接写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-722">Writes the specified file directly to an HTTP response output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="61b16-723">要写入 HTTP 输出的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-723">The name of the file to write to the HTTP output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-724">将指定文件的内容作为文件块直接写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-724">Writes the contents of the specified file directly to an HTTP response output stream as a file block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-725">此方法是使用较大的文件，则调用该方法可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-725">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="61b16-726">可以使用此方法使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="61b16-726">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="61b16-727">有关详细信息，参见位于，"PRB:: Response.WriteFile 无法下载大文件"上[Microsoft 知识库文章](http://go.microsoft.com/fwlink/?linkid=149903)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="61b16-727">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-728">下面的示例将名为的文本文件的所有内容都写入`Login.txt`（其中可能包含文本的 HTML 文本和输入控件） 直接写入输出流。</span><span class="sxs-lookup"><span data-stu-id="61b16-728">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-729">
            <paramref name="filename" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-729">The <paramref name="filename" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, bool readIntoMemory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, bool readIntoMemory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, readIntoMemory As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, bool readIntoMemory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="readIntoMemory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="61b16-730">要写入内存块的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-730">The name of the file to write into a memory block.</span>
          </span>
        </param>
        <param name="readIntoMemory">
          <span data-ttu-id="61b16-731">指示是否将把文件写入内存块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-731">Indicates whether the file will be written into a memory block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-732">将指定文件的内容作为内存块直接写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-732">Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-733">此方法是使用较大的文件，则调用该方法可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-733">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="61b16-734">可以使用此方法使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="61b16-734">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="61b16-735">有关详细信息，参见位于，"PRB:: Response.WriteFile 无法下载大文件"上[Microsoft 知识库文章](http://go.microsoft.com/fwlink/?linkid=149903)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="61b16-735">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-736">下面的示例将文件写入内存。</span><span class="sxs-lookup"><span data-stu-id="61b16-736">The following example writes a file to memory.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-737">
            <paramref name="filename" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-737">The <paramref name="filename" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(native int fileHandle, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (fileHandle As IntPtr, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(IntPtr fileHandle, long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileHandle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileHandle">
          <span data-ttu-id="61b16-738">要写入 HTTP 输出流的文件的文件句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-738">The file handle of the file to write to the HTTP output stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="61b16-739">文件中将开始进行写入的字节位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-739">The byte position in the file where writing will start.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="61b16-740">要写入输出流的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-740">The number of bytes to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-741">将指定的文件直接写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-741">Writes the specified file directly to an HTTP response output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-742">此方法是使用较大的文件，则调用该方法可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-742">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="61b16-743">可以使用此方法使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="61b16-743">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="61b16-744">有关详细信息，参见位于，"PRB:: Response.WriteFile 无法下载大文件"上[Microsoft 知识库文章](http://go.microsoft.com/fwlink/?linkid=149903)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="61b16-744">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-745">下面的示例将名为的文本文件的所有内容都写入`Login.txt`（其中可能包含文本的 HTML 文本和输入控件） 直接写入输出流。</span><span class="sxs-lookup"><span data-stu-id="61b16-745">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-746">
            <paramref name="fileHandler" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-746">
              <paramref name="fileHandler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-747">
            <paramref name="offset" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-747">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="61b16-748">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-748">\- or -</span>
          </span>
          <span data-ttu-id="61b16-749">
            <paramref name="size" /> 大于文件大小与 <paramref name="offset" /> 之差。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-749">
              <paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="61b16-750">要写入 HTTP 输出流的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-750">The name of the file to write to the HTTP output stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="61b16-751">文件中将开始进行写入的字节位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-751">The byte position in the file where writing will start.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="61b16-752">要写入输出流的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-752">The number of bytes to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-753">将指定的文件直接写入 HTTP 响应输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-753">Writes the specified file directly to an HTTP response output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-754">此方法是使用较大的文件，则调用该方法可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="61b16-754">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="61b16-755">可以使用此方法使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="61b16-755">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="61b16-756">有关详细信息，参见位于，"PRB:: Response.WriteFile 无法下载大文件"上[Microsoft 知识库文章](http://go.microsoft.com/fwlink/?linkid=149903)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="61b16-756">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61b16-757">下面的示例将名为的文本文件的所有内容都写入`Login.txt`（其中可能包含文字文本和 HTML 输入控件） 直接写入输出流。</span><span class="sxs-lookup"><span data-stu-id="61b16-757">The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="61b16-758">
            <paramref name="offset" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-758">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="61b16-759">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-759">\- or -</span>
          </span>
          <span data-ttu-id="61b16-760">
            <paramref name="size" /> 大于文件大小与 <paramref name="offset" /> 之差。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-760">
              <paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61b16-761">
            <paramref name="filename" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-761">The <paramref name="filename" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubstitution">
      <MemberSignature Language="C#" Value="public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSubstitution(class System.Web.HttpResponseSubstitutionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSubstitution (callback As HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSubstitution(System::Web::HttpResponseSubstitutionCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpResponseSubstitutionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="61b16-762">要替换的方法、用户控件或对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-762">The method, user control, or object to substitute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61b16-763">允许将响应替换块插入响应，从而允许为缓存的输出响应动态生成指定的响应区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-763">Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61b16-764">你可以使用<xref:System.Web.HttpResponse.WriteSubstitution%2A>缓存输出的页面中的缓存后替换的方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-764">You can use the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method for post-cache substitution in your output-cached pages.</span></span> <span data-ttu-id="61b16-765">通过将传递<xref:System.Web.HttpContext>具有规定的回调方法的对象<xref:System.Web.HttpResponseSubstitutionCallback>签名，你可以将输出缓存的页面缓存中任何给定位置的内容。</span><span class="sxs-lookup"><span data-stu-id="61b16-765">By passing a <xref:System.Web.HttpContext> object to a callback method with a prescribed <xref:System.Web.HttpResponseSubstitutionCallback> signature, you can replace output cached content at any given location in the page cache.</span></span> <span data-ttu-id="61b16-766">若要开始替换，调用<xref:System.Web.HttpResponse.WriteSubstitution%2A>方法，将其传递回调方法，它必须是线程安全，并可以是下列操作之一：</span><span class="sxs-lookup"><span data-stu-id="61b16-766">To initiate the replacement, call the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method, passing it the callback method, which must be thread safe and can be either of the following:</span></span>  
  
-   <span data-ttu-id="61b16-767">容器页或用户控件上的静态方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-767">A static method on the container page or user control.</span></span>  
  
-   <span data-ttu-id="61b16-768">静态或实例对另一个任意对象的方法。</span><span class="sxs-lookup"><span data-stu-id="61b16-768">A static or instance method on another arbitrary object.</span></span>  
  
 <span data-ttu-id="61b16-769">在第一页上，请求<xref:System.Web.HttpResponse.WriteSubstitution%2A>调用<xref:System.Web.HttpResponseSubstitutionCallback>委托以生成输出。</span><span class="sxs-lookup"><span data-stu-id="61b16-769">On the first request to the page, the <xref:System.Web.HttpResponse.WriteSubstitution%2A> calls the <xref:System.Web.HttpResponseSubstitutionCallback> delegate to produce the output.</span></span> <span data-ttu-id="61b16-770">然后，它将替换缓冲区添加到响应，也可保留要在今后的请求调用的委托。</span><span class="sxs-lookup"><span data-stu-id="61b16-770">Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.</span></span> <span data-ttu-id="61b16-771">最后，它将会降低客户端可缓存性从公开为仅服务器通过不缓存客户端上确保今后的请求到页重新调用委托。</span><span class="sxs-lookup"><span data-stu-id="61b16-771">Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61b16-772">缓存后替换不支持其中输出缓存在用户控件级别应用的缓存的用户控件。</span><span class="sxs-lookup"><span data-stu-id="61b16-772">Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.</span></span> <span data-ttu-id="61b16-773">这也称为片段缓存。</span><span class="sxs-lookup"><span data-stu-id="61b16-773">This is also known as fragment caching.</span></span> <span data-ttu-id="61b16-774">有关详细信息，请参阅[缓存的 ASP.NET 页的部分](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)。</span><span class="sxs-lookup"><span data-stu-id="61b16-774">For more information, see [Caching Portions of an ASP.NET Page](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61b16-775">
            <paramref name="callback" /> 参数的目标的为 <see cref="T:System.Web.UI.Control" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61b16-775">The target of the <paramref name="callback" /> parameter is of type <see cref="T:System.Web.UI.Control" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpResponseSubstitutionCallback" />
        <altmember cref="T:System.Web.UI.WebControls.Substitution" />
      </Docs>
    </Member>
  </Members>
</Type>