<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IHttpHandler.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac598b2f8e81292b161daf8dee4c4562f466a977207.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98b2f8e81292b161daf8dee4c4562f466a977207</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.IHttpHandler">
          <source>Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.</source>
          <target state="translated">定义 ASP.NET 为使用自定义 HTTP 处理程序同步处理 HTTP Web 请求而实现的协定。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.</source>
          <target state="translated">你可以编写自定义 HTTP 处理程序来处理特定的预定义任何的类型公共语言规范 (CLS) 符合语言中的 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>Executable code defined in the <ph id="ph1">`HttpHandler`</ph> classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.</source>
          <target state="translated">在中定义的可执行代码<ph id="ph1">`HttpHandler`</ph>到这些特定请求的类，而不是传统的 ASP 或 ASP.NET Web 页，进行响应。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">HTTP 处理程序为你提供一种与低级别的请求和响应服务的 IIS Web 服务器交互，并提供功能非常类似于 ISAPI 扩展但了一个更简单的编程模型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>If your handler will access session state values, it must implement the <ph id="ph1">&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;</ph> interface (a marker interface with no methods).</source>
          <target state="translated">如果您的处理程序将访问会话状态的值，它必须实现<ph id="ph1">&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;</ph>接口 （不包含任何方法的标记接口）。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>Gets a value indicating whether another request can use the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> instance.</source>
          <target state="translated">获取一个值，该值指示其他请求是否可以使用 <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> instance is reusable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 实例可再次使用，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>You explicitly set the <ph id="ph1">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph> by code you provide that overrides the <ph id="ph4">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property accessor (getter).</source>
          <target state="translated">显式设置<ph id="ph1">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph>属性<ph id="ph2">`true`</ph>或<ph id="ph3">`false`</ph>由你提供的代码重写<ph id="ph4">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph>属性访问器 (getter)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</source>
          <target state="translated">下面的代码示例将写入到一个名为 handler.aspx 页的客户端请求的响应中的 HTTP 输出流的文本的四个行。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>All requests for handler.aspx are serviced by the <ph id="ph1">`MyHttpHandler`</ph> class in the namespace <ph id="ph2">`HandlerExample`</ph> contained in the assembly HandlerTest.dll.</source>
          <target state="translated">对 handler.aspx 的所有请求提供都服务的<ph id="ph1">`MyHttpHandler`</ph>命名空间中的类<ph id="ph2">`HandlerExample`</ph>包含在程序集中 HandlerTest.dll。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object that provides references to the intrinsic server objects (for example, <ph id="ph2">&lt;see langword="Request" /&gt;</ph>, <ph id="ph3">&lt;see langword="Response" /&gt;</ph>, <ph id="ph4">&lt;see langword="Session" /&gt;</ph>, and <ph id="ph5">&lt;see langword="Server" /&gt;</ph>) used to service HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> 对象，该对象提供对用于为 HTTP 请求提供服务的内部服务器对象（如 <ph id="ph2">&lt;see langword="Request" /&gt;</ph>、<ph id="ph3">&lt;see langword="Response" /&gt;</ph>、<ph id="ph4">&lt;see langword="Session" /&gt;</ph> 和 <ph id="ph5">&lt;see langword="Server" /&gt;</ph>）的引用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>Enables processing of HTTP Web requests by a custom <ph id="ph1">&lt;see langword="HttpHandler" /&gt;</ph> that implements the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface.</source>
          <target state="translated">通过实现 <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 接口的自定义 <ph id="ph1">&lt;see langword="HttpHandler" /&gt;</ph> 启用 HTTP Web 请求的处理。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>Place your custom <ph id="ph1">`HttpHandler`</ph> code in the <ph id="ph2">&lt;xref:System.Web.IHttpHandler.ProcessRequest%2A&gt;</ph> virtual method, as shown in the following example.</source>
          <target state="translated">将您的自定义<ph id="ph1">`HttpHandler`</ph>中的代码<ph id="ph2">&lt;xref:System.Web.IHttpHandler.ProcessRequest%2A&gt;</ph>虚拟方法，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</source>
          <target state="translated">下面的代码示例将写入到一个名为 handler.aspx 页的客户端请求的响应中的 HTTP 输出流的文本的四个行。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>All requests for handler.aspx are serviced by the <ph id="ph1">`MyHttpHandler`</ph> class in the namespace <ph id="ph2">`HandlerExample`</ph> contained in the assembly HandlerTest.dll.</source>
          <target state="translated">对 handler.aspx 的所有请求提供都服务的<ph id="ph1">`MyHttpHandler`</ph>命名空间中的类<ph id="ph2">`HandlerExample`</ph>包含在程序集中 HandlerTest.dll。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>