<Type Name="HttpException" FullName="System.Web.HttpException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1864e8fe52f0eb87b7c23fbfe505d15cf9681ede" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610021" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HttpException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpException" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpException : System::Runtime::InteropServices::ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="87822-101">描述在处理 HTTP 请求期间发生的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="87822-101">Describes an exception that occurred during the processing of HTTP requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87822-102"><xref:System.Web.HttpException>类是使 ASP.NET 生成异常信息的 HTTP 特定异常类。</span><span class="sxs-lookup"><span data-stu-id="87822-102">The <xref:System.Web.HttpException> class is an HTTP-specific exception class that enables ASP.NET to generate exception information.</span></span> <span data-ttu-id="87822-103">有关引发和处理异常的详细信息，请参阅[异常](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735)。</span><span class="sxs-lookup"><span data-stu-id="87822-103">For more information about throwing and handling exceptions, see [Exceptions](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87822-104">下面的代码示例演示如何使用<xref:System.Web.HttpException>类引发自定义的异常。</span><span class="sxs-lookup"><span data-stu-id="87822-104">The following code example demonstrates how to use the <xref:System.Web.HttpException> class to raise customized exceptions.</span></span> <span data-ttu-id="87822-105">`Button_Click`方法确定哪个按钮被单击，然后调用是`CheckNumber`或`CheckBoolean`方法。</span><span class="sxs-lookup"><span data-stu-id="87822-105">The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method.</span></span> <span data-ttu-id="87822-106">如果在文本框中的用户输入的值不对应于预期的类型，<xref:System.Web.HttpException>创建并与基于错误类型的自定义消息引发异常。</span><span class="sxs-lookup"><span data-stu-id="87822-106">If the user-entered value in the text box does not correspond to the expected type, an <xref:System.Web.HttpException> exception is created and thrown with a customized message based on the error type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="87822-107">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="87822-107">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="87822-108">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="87822-108">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="87822-109">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="87822-109">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException/cs/httpexceptioncs.aspx#1)]
 [!code-aspx-vb[HttpException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException/vb/httpexceptionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87822-110">初始化 <see cref="T:System.Web.HttpException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-110">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87822-111">初始化 <see cref="T:System.Web.HttpException" /> 类的新实例并创建一个空 <see cref="T:System.Web.HttpException" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-111">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class and creates an empty <see cref="T:System.Web.HttpException" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87822-112">当处理异常时，它可用于捕获一系列相关与外部异常因响应内部异常引发的异常。</span><span class="sxs-lookup"><span data-stu-id="87822-112">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="87822-113">对导致外部异常的内部异常的引用位于<xref:System.Exception.InnerException%2A>外部异常的属性。</span><span class="sxs-lookup"><span data-stu-id="87822-113">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="87822-114">此机制保留早期的异常，包括原始异常，同时使你可以创建更有意义的外部异常携带的错误信息。</span><span class="sxs-lookup"><span data-stu-id="87822-114">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="87822-115">有关详情，请参阅<xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="87822-115">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87822-116">下面的代码示例演示<xref:System.Web.HttpException.%23ctor%2A>构造函数的<xref:System.Web.HttpException>类。</span><span class="sxs-lookup"><span data-stu-id="87822-116">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="87822-117">`CheckNumber`方法接受用户输入的值，通过在文本框中，并检查它是否为整数。</span><span class="sxs-lookup"><span data-stu-id="87822-117">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="87822-118">如果值不是一个整数，则引发异常，和一个新<xref:System.Web.HttpException>创建并引发对象。</span><span class="sxs-lookup"><span data-stu-id="87822-118">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="87822-119">中捕获到异常`Button_Click`事件处理程序和错误消息显示在浏览器。</span><span class="sxs-lookup"><span data-stu-id="87822-119">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="87822-120">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="87822-120">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="87822-121">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="87822-121">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="87822-122">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="87822-122">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor1/CS/httpexception_constructor1.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor1/VB/httpexception_constructor1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="87822-123">当发生异常时向客户端显示的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-123">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-124">使用所提供的错误消息初始化 <see cref="T:System.Web.HttpException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-124">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using a supplied error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87822-125">下面的代码示例演示<xref:System.Web.HttpException.%23ctor%2A>构造函数的<xref:System.Web.HttpException>类。</span><span class="sxs-lookup"><span data-stu-id="87822-125">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="87822-126"><xref:System.Web.HttpException>如果用户输入的值为 0，将引发。</span><span class="sxs-lookup"><span data-stu-id="87822-126">An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="87822-127">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="87822-127">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="87822-128">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="87822-128">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="87822-129">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="87822-129">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="87822-130">发送到对应于此错误的客户端的 HTTP 响应状态代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-130">The HTTP response status code sent to the client corresponding to this error.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="87822-131">当发生异常时向客户端显示的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-131">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-132">使用 HTTP 响应状态代码和错误消息初始化 <see cref="T:System.Web.HttpException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-132">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code and an error message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="87822-133">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-133">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="87822-134">
            <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-134">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-135">用序列化数据初始化 <see cref="T:System.Web.HttpException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-135">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87822-136"><xref:System.Web.HttpException.%23ctor%2A>反序列化，以便重建通过流传输的异常对象期间调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="87822-136">The <xref:System.Web.HttpException.%23ctor%2A> constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span> <span data-ttu-id="87822-137">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="87822-137">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="87822-138">当发生异常时向客户端显示的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-138">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="87822-139">引发当前异常的 <see cref="P:System.Exception.InnerException" />（如果有的话）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-139">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-140">使用错误消息和 <see cref="T:System.Web.HttpException" /> 属性初始化 <see cref="P:System.Exception.InnerException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-140">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87822-141">当处理异常时，它可用于捕获一系列相关与外部异常因响应内部异常引发的异常。</span><span class="sxs-lookup"><span data-stu-id="87822-141">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="87822-142">对导致外部异常的内部异常的引用位于<xref:System.Exception.InnerException%2A>外部异常的属性。</span><span class="sxs-lookup"><span data-stu-id="87822-142">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="87822-143">此机制保留早期的异常，包括原始异常，同时使你可以创建更有意义的外部异常携带的错误信息。</span><span class="sxs-lookup"><span data-stu-id="87822-143">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="87822-144">有关详情，请参阅<xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="87822-144">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87822-145">下面的代码示例演示<xref:System.Web.HttpException.%23ctor%2A>构造函数的<xref:System.Web.HttpException>类。</span><span class="sxs-lookup"><span data-stu-id="87822-145">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="87822-146">`CheckNumber`方法接受用户输入的值，通过在文本框中，并检查它是否为整数。</span><span class="sxs-lookup"><span data-stu-id="87822-146">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="87822-147">如果值不是一个整数，则引发异常，然后在 catch 块中，新<xref:System.Web.HttpException>创建并引发对象。</span><span class="sxs-lookup"><span data-stu-id="87822-147">If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="87822-148">中捕获到异常`Button_Click`事件处理程序和错误消息显示在浏览器。</span><span class="sxs-lookup"><span data-stu-id="87822-148">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="87822-149">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="87822-149">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="87822-150">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="87822-150">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="87822-151">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="87822-151">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor2/CS/httpexception_constructor2.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor2/VB/httpexception_constructor2.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, int hr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="87822-152">当发生异常时向客户端显示的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-152">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="87822-153">定义错误的异常代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-153">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-154">使用错误消息和异常代码初始化 <see cref="T:System.Web.HttpException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-154">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87822-155">下面的代码示例演示<xref:System.Web.HttpException.%23ctor%2A>构造函数的<xref:System.Web.HttpException>类。</span><span class="sxs-lookup"><span data-stu-id="87822-155">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="87822-156"><xref:System.Web.HttpException>如果用户输入的值为 0 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="87822-156">An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="87822-157">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="87822-157">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="87822-158">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="87822-158">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="87822-159">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="87822-159">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="87822-160">在客户端上显示的 HTTP 响应状态代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-160">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="87822-161">当发生异常时向客户端显示的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-161">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="87822-162">引发当前异常的 <see cref="P:System.Exception.InnerException" />（如果有的话）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-162">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-163">使用 HTTP 响应状态代码、错误消息以及 <see cref="T:System.Web.HttpException" /> 属性初始化 <see cref="P:System.Exception.InnerException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-163">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87822-164">当处理异常时，它可用于捕获一系列相关与外部异常因响应内部异常引发的异常。</span><span class="sxs-lookup"><span data-stu-id="87822-164">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="87822-165">对导致外部异常的内部异常的引用位于<xref:System.Exception.InnerException%2A>外部异常的属性。</span><span class="sxs-lookup"><span data-stu-id="87822-165">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="87822-166">此机制保留早期的异常，包括原始异常，同时使你可以创建更有意义的外部异常携带的错误信息。</span><span class="sxs-lookup"><span data-stu-id="87822-166">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="87822-167">有关详情，请参阅<xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="87822-167">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87822-168">下面的代码示例演示<xref:System.Web.HttpException.%23ctor%2A>构造函数的<xref:System.Web.HttpException>类。</span><span class="sxs-lookup"><span data-stu-id="87822-168">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="87822-169">`CheckNumber`方法接受用户输入的值，并检查它是否为整数。</span><span class="sxs-lookup"><span data-stu-id="87822-169">The `CheckNumber` method accepts a user-entered value and checks whether it is an integer.</span></span> <span data-ttu-id="87822-170">如果值不是一个整数，则引发异常，和一个新<xref:System.Web.HttpException>创建对象，其中包含 HTTP 响应状态代码、 异常的消息和任何内部异常。</span><span class="sxs-lookup"><span data-stu-id="87822-170">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created.</span></span> <span data-ttu-id="87822-171">中捕获到异常`Button_Click`显示事件处理程序的错误消息、 错误代码和内部异常。</span><span class="sxs-lookup"><span data-stu-id="87822-171">That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="87822-172">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="87822-172">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="87822-173">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="87822-173">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="87822-174">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="87822-174">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor3/CS/httpexception_constructor3.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor3/VB/httpexception_constructor3.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, int hr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="87822-175">在客户端上显示的 HTTP 响应状态代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-175">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="87822-176">当发生异常时向客户端显示的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-176">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="87822-177">定义错误的异常代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-177">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-178">使用 HTTP 响应状态代码、错误消息和异常代码初始化 <see cref="T:System.Web.HttpException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-178">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="87822-179">下面的代码示例演示<xref:System.Web.HttpException.%23ctor%2A>构造函数的<xref:System.Web.HttpException>类。</span><span class="sxs-lookup"><span data-stu-id="87822-179">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="87822-180">用户在提供的文本框中输入用户名和电子邮件信息。</span><span class="sxs-lookup"><span data-stu-id="87822-180">The user name and email information are entered by the user in the provided text boxes.</span></span> <span data-ttu-id="87822-181">如果任何文本框留空，<xref:System.Web.HttpException>创建并引发对象。</span><span class="sxs-lookup"><span data-stu-id="87822-181">If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="87822-182">错误代码的<xref:System.Web.HttpException>通过获取<xref:System.Web.HttpException.GetHttpCode%2A>方法并在网页上显示。</span><span class="sxs-lookup"><span data-stu-id="87822-182">The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="87822-183">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="87822-183">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="87822-184">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="87822-184">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="87822-185">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="87822-185">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor/CS/httpexception_constructor5.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor/VB/httpexception_constructor5.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromLastError">
      <MemberSignature Language="C#" Value="public static System.Web.HttpException CreateFromLastError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpException CreateFromLastError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.CreateFromLastError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLastError (message As String) As HttpException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpException ^ CreateFromLastError(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpException</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="87822-186">当发生异常时向客户端显示的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-186">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-187">基于从 Win32 API <see langword="GetLastError()" /> 方法返回的错误代码创建一个新的 <see cref="T:System.Web.HttpException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-187">Creates a new <see cref="T:System.Web.HttpException" /> exception based on the error code that is returned from the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87822-188">一个 <see cref="T:System.Web.HttpException" />，它基于从对 Win32 API <see langword="GetLastError()" /> 方法的调用返回的错误代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-188">An <see cref="T:System.Web.HttpException" /> based on the error code that is returned from a call to the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHtmlErrorMessage">
      <MemberSignature Language="C#" Value="public string GetHtmlErrorMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlErrorMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHtmlErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHtmlErrorMessage () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHtmlErrorMessage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87822-189">获取要返回给客户端的 HTML 错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-189">Gets the HTML error message to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87822-190">HTML 错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-190">The HTML error message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpCode">
      <MemberSignature Language="C#" Value="public int GetHttpCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHttpCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHttpCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHttpCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHttpCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87822-191">获取要返回给客户端的 HTTP 响应状态代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-191">Gets the HTTP response status code to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87822-192">表示异常或 <see cref="P:System.Exception.InnerException" /> 代码的非零 HTTP 代码；否则为 HTTP 响应状态代码 500。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-192">A non-zero HTTP code representing the exception or the <see cref="P:System.Exception.InnerException" /> code; otherwise, HTTP response status code 500.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87822-193">如果非零 HTTP 代码，它将返回。</span><span class="sxs-lookup"><span data-stu-id="87822-193">If there is a non-zero HTTP code, it is returned.</span></span> <span data-ttu-id="87822-194">否则为<xref:System.Exception.InnerException%2A>返回代码。</span><span class="sxs-lookup"><span data-stu-id="87822-194">Otherwise, the <xref:System.Exception.InnerException%2A> code is returned.</span></span> <span data-ttu-id="87822-195">如果既没有<xref:System.Exception.InnerException%2A>代码和非零 HTTP 代码为可用，则返回 HTTP 响应状态代码 500。</span><span class="sxs-lookup"><span data-stu-id="87822-195">If neither an <xref:System.Exception.InnerException%2A> code nor a non-zero HTTP code is available, the HTTP response status code 500 is returned.</span></span> <span data-ttu-id="87822-196">HTTP 响应状态代码的详细信息，请参阅超文本传输协议的世界上的 HTTP/1.1 状态代码定义[宽万维网联合会 (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。</span><span class="sxs-lookup"><span data-stu-id="87822-196">For more information on HTTP response status codes, see the Status Code Definitions of the Hypertext Transfer Protocol - HTTP/1.1 on the World [Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="87822-197">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-197">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="87822-198">
            <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-198">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87822-199">获取关于异常的信息并将其添加到 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-199">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87822-200"><xref:System.Web.HttpException.GetObjectData%2A>方法将添加到异常有关的信息<xref:System.Runtime.Serialization.SerializationInfo>针对于序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="87822-200">The <xref:System.Web.HttpException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="87822-201">在反序列化期间重建异常从<xref:System.Runtime.Serialization.SerializationInfo>通过流传输。</span><span class="sxs-lookup"><span data-stu-id="87822-201">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="WebEventCode">
      <MemberSignature Language="C#" Value="public int WebEventCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WebEventCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpException.WebEventCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebEventCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WebEventCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87822-202">获取与 HTTP 异常相关联的事件代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-202">Gets the event codes that are associated with the HTTP exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87822-203">一个表示 Web 事件代码的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87822-203">An integer representing a Web event code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>