<Type Name="XmlSiteMapProvider" FullName="System.Web.XmlSiteMapProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7615850d434518e08f1edd75865e5db0d9aa51ea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39932366" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSiteMapProvider : System.Web.StaticSiteMapProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSiteMapProvider extends System.Web.StaticSiteMapProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.XmlSiteMapProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSiteMapProvider&#xA;Inherits StaticSiteMapProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSiteMapProvider : System::Web::StaticSiteMapProvider, IDisposable" />
  <TypeSignature Language="F#" Value="type XmlSiteMapProvider = class&#xA;    inherit StaticSiteMapProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.StaticSiteMapProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Web.XmlSiteMapProvider" /> 类是从 <see cref="T:System.Web.SiteMapProvider" /> 类派生的，并且是 ASP.NET 的默认站点地图提供者。 <see cref="T:System.Web.XmlSiteMapProvider" /> 类根据文件扩展名为 .sitemap 的 XML 文件生成站点地图树。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类从遵循已知的架构的 XML 文件加载站点地图数据。 站点地图数据受到`<siteMap>`标记，并包含嵌套`<siteMapNode>`标记。 两个约束所规定<xref:System.Web.SiteMapProvider>和<xref:System.Web.XmlSiteMapProvider>类上的网站结构映射数据：  
  
-   只有一个根节点可以存在。  
  
-   有关<xref:System.Web.SiteMapNode>指定 Url，Url 必须是唯一的提供程序的作用域内的对象。 （对于未指定 Url 的节点，所有键必须都是唯一的。）  
  
 下面的代码示例显示了可用于的 XML 文件示例<xref:System.Web.XmlSiteMapProvider>。  
  
```  
<siteMap>  
  <siteMapNode title="RootNode" description="This is the root node of the site map. There can be only one root node." url="Page1.aspx" >  
    <siteMapNode title="ChildofRootNode" description="Descriptions do not have to be unique." url="Page2.aspx">  
      <siteMapNode title="ChildOfChildNode" description="SiteMapNode objects can be nested to any level." url="Page3.aspx"/>  
    </siteMapNode>  
    <siteMapNode title="ChildofRootNode" description="Descriptions do not have to be unique." url="Page4.aspx"/>  
  </siteMapNode>  
</siteMap>  
```  
  
 <xref:System.Web.XmlSiteMapProvider>是 ASP.NET 的默认提供程序和它从一个名为位于 ASP.NET 应用程序的目录结构中的 Web.sitemap 文件读取 XML 数据。 默认情况下的 Web.sitemap 文件位于应用程序根目录中;但是，如果你想要从其更改的名称或文件的位置<xref:System.Web.XmlSiteMapProvider>加载数据，则可以在 Web.config 文件中替代默认配置。 通过重写默认配置设置在 Web.config 文件中的，您可以量身定制的行为<xref:System.Web.XmlSiteMapProvider>对于每个 ASP.NET 应用程序，根据需要。  
  
 下面的代码示例演示一个示例 Web.config 文件，其中<xref:System.Web.XmlSiteMapProvider>仍然使用，但不同站点映射文件使用。 因为中的所有提供程序<xref:System.Web.SiteMapProviderCollection>对象必须具有唯一名称，在 Web.config 文件中指定一个使用非默认名称，但也将设置为默认提供程序，以便将使用它而不是<xref:System.Web.XmlSiteMapProvider>，它是中的指定日e 默认 ASP.NET 配置。  
  
> [!NOTE]
>  您可以更改站点导航数据文件的名称，但不能更改其扩展名。 <xref:System.Web.XmlSiteMapProvider>只从与文件名称扩展.sitemap 命名的文件中读取数据。  
  
```  
<siteMap defaultProvider="MyXmlSiteMapProvider" enabled="true">  
  <providers>  
    <add name="MyXmlSiteMapProvider"  
      description="SiteMap provider that reads in .sitemap files."  
      type="System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"  
      siteMapFile="CustomWeb.sitemap" />  
  </providers>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.StaticSiteMapProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSiteMapProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSiteMapProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.XmlSiteMapProvider" /> 类的未命名的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="protected internal override void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddNode(class System.Web.SiteMapNode node, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddNode (node As SiteMapNode, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddNode(System::Web::SiteMapNode ^ node, System::Web::SiteMapNode ^ parentNode);" />
      <MemberSignature Language="F#" Value="override this.AddNode : System.Web.SiteMapNode * System.Web.SiteMapNode -&gt; unit" Usage="xmlSiteMapProvider.AddNode (node, parentNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要添加到提供程序的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <param name="parentNode">
          <see cref="T:System.Web.SiteMapNode" />，将在它的下面添加节点<c></c>。</param>
        <summary>在当前提供程序维护的集合中添加一个 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `node`参数添加到内部集合，并且它之间创建父/子关系和`parentNode`。  
  
 <xref:System.Web.XmlSiteMapProvider>类，派生自<xref:System.Web.StaticSiteMapProvider>类和 ASP.NET 中，使用的默认站点映射提供程序<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>作为在其内部集合中，默认情况下的查找键的对象。 如果<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>，则它必须是唯一的提供程序的作用域内。 <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A>方法尝试检索节点根据其<xref:System.Web.SiteMapNode.Url%2A>。 否则，可以使用<xref:System.Web.SiteMapNode.Key%2A>属性，以及相应<xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A>方法，以检索的节点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> 或 <paramref name="parentNode" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">当前 <see cref="T:System.Web.XmlSiteMapProvider" /> 不是与 <paramref name="node" /> 关联的提供程序。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.XmlSiteMapProvider" /> 中已经注册了具有相同 URL 或键的节点。 - 或 - 
以编程方式发现重复的站点地图节点，例如在链接两个站点地图提供程序时。  
  
\- 或 - 
 <paramref name="node" /> 是 <see cref="T:System.Web.XmlSiteMapProvider" /> 的根节点。</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="protected virtual void AddProvider (string providerName, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddProvider(string providerName, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.AddProvider(System.String,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddProvider (providerName As String, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddProvider(System::String ^ providerName, System::Web::SiteMapNode ^ parentNode);" />
      <MemberSignature Language="F#" Value="abstract member AddProvider : string * System.Web.SiteMapNode -&gt; unit&#xA;override this.AddProvider : string * System.Web.SiteMapNode -&gt; unit" Usage="xmlSiteMapProvider.AddProvider (providerName, parentNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="providerName">当前已在 <see cref="T:System.Web.SiteMapProvider" /> 中注册的某个 <see cref="P:System.Web.SiteMap.Providers" /> 对象的名称。</param>
        <param name="parentNode">当前站点地图提供程序的站点地图节点，根节点和子提供程序的所有节点都将添加到该站点地图节点下面。</param>
        <summary>将一个子站点地图提供程序链接到当前提供程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider.AddProvider%2A>方法链接`providerName`到当前提供程序作为当前提供程序的子级。 根节点`providerName`作为子节点添加到当前提供程序的层次结构`parentNode`。 由于父提供程序调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法`providerName`中, 所述的异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法可能会引发。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentNode" /> 的 <see cref="P:System.Web.SiteMapNode.Provider" /> 属性引用的不是当前提供者。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentNode" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">无法解析 <paramref name="providerName" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="providerName" /> 所使用的站点地图文件已经在提供程序层次结构中使用。  
  
- 或 - 
<paramref name="providerName" /> 返回的根节点为 <see langword="null" />。  
  
- 或 - 
<paramref name="providerName" /> 返回的根节点所具有的 URL 或键已在父 <see cref="T:System.Web.XmlSiteMapProvider" /> 中注册。</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.RemoveProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BuildSiteMap">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode BuildSiteMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode BuildSiteMap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildSiteMap () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ BuildSiteMap();" />
      <MemberSignature Language="F#" Value="override this.BuildSiteMap : unit -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.BuildSiteMap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 XML 文件加载站点地图信息，并在内存中生成它。</summary>
        <returns>返回站点地图导航结构的根 <see cref="T:System.Web.SiteMapNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>调用方法来加载和生成从持久性存储区的站点映射。  
  
 有关默认行为时启用了安全修整，请参阅"备注"中<xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>。  
  
 之后<xref:System.Web.XmlSiteMapProvider>对象分析并加载站点地图数据的所有已加载<xref:System.Web.SiteMapNode>对象和<xref:System.Web.SiteMapNodeCollection>集合都是只读的。 当<xref:System.Web.XmlSiteMapProvider>分析<xref:System.Web.SiteMapNode.Url%2A>属性从站点地图文件，它将转换应用程序相对 Url，以及相对 Url，为应用程序绝对虚拟路径。  
  
 <xref:System.Web.XmlSiteMapProvider> .Sitemap 文件的文件更改通知订阅。 如果对.sitemap 文件进行任何更改<xref:System.Web.XmlSiteMapProvider>重新加载，并重新生成站点地图结构。  
  
   
  
## Examples  
 下面的代码示例演示如何创建的新实例<xref:System.Web.XmlSiteMapProvider>类，并将其初始化以生成从 XML 数据的站点映射。  
  
```csharp  
<%@ Page Language="c#" %>  
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">  
 <SCRIPT runat="server">  
 private void Page_Load(object sender, System.EventArgs e)  
 {  
     // Create an instance of the XmlSiteMapProvider class.  
     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  
     NameValueCollection providerAttributes = new NameValueCollection(1);  
     providerAttributes.Add("siteMapFile","test.sitemap");  
     // Initialize the provider with a provider name and file name.  
     testXmlProvider.Initialize("testProvider", providerAttributes);  
  
     // The BuildSiteMap method is implicitly called when the   
     // RootNode propety is accessed.  
  
     // Prints "/myvirtualdirectory/WebForm1.aspx"  
     Response.Write(testXmlProvider.RootNode.Url + "<BR>");  
     // Prints "/myvirtualdirectory/WebForm2.aspx"  
     Response.Write(testXmlProvider.CurrentNode.Url + "<BR>");  
 }  
```  
  
 前面的代码示例使用 XML 文件中的虚拟根目录的 ASP.NET 应用程序。 该文件的格式如下：  
  
```  
<siteMap>  
     <siteMapNode title="RootNode" description="The root page." url="WebForm1.aspx">  
         <siteMapNode title="CurrentNode" description="Some sub page." url="WebForm2.aspx"/>  
     </siteMapNode>  
 </siteMap>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.XmlSiteMapProvider" /> 未正确地初始化。  
  
\- 或 - 
分析 <see langword="siteMapFile" /> 时发现不唯一的 <see langword="&lt;siteMapNode&gt;" />。  
  
\- 或 - 
<see langword="siteMapFile" /> 所指定的文件的扩展名不是 .sitemap。  
  
\- 或 - 
<see langword="siteMapFile" /> 所指定的文件不存在。  
  
\- 或 - 
<see langword="provider" /> 的 <see langword="&lt;siteMapNode&gt;" /> 中配置的提供程序返回空根节点。</exception>
        <exception cref="T:System.ArgumentException">指定了 <see langword="siteMapFile" />，但是该路径位于应用程序的当前目录结构之外。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">加载配置文件时出错。  
  
\- 或 - 
配置文件的顶层元素不是 <see langword="named &lt;siteMap&gt;" />。  
  
\- 或 - 
配置文件中存在多个顶层节点。  
  
\- 或 - 
<see langword="&lt;siteMap&gt;" /> 的子级具有不同于 <see langword="&lt;siteMapNode&gt;" /> 的名称。  
  
\- 或 - 
分析 <see langword="&lt;siteMapNode&gt;" /> 时发现意外特性。  
  
\- 或 - 
子元素嵌套在设置了 <see langword="&lt;siteMapNode&gt;" /> 的 <see langword="provider" /> 下面。  
  
\- 或 - 
<see langword="roles" /> 的 <see langword="&lt;siteMapNode&gt;" /> 包含无效字符。  
  
\- 或 - 
分析 <see langword="url" /> 时发现不唯一的 <see langword="&lt;siteMapNode&gt;" />。  
  
\- 或 - 
发现具有重复 <see cref="T:System.Web.SiteMapNode" /> 值的 <see cref="P:System.Web.SiteMapNode.Key" />。  
  
\- 或 - 
在为包含显式资源表达式的节点定义的 <see cref="P:System.Web.SiteMapNode.ResourceKey" /> 或 <see langword="custom" /> 特性上指定了 <see cref="P:System.Web.SiteMapNode.Title" /> 或 <see cref="T:System.Web.SiteMapNode" />。  
  
\- 或 - 
向 <see cref="P:System.Web.SiteMapNode.Title" /> 或 <see cref="P:System.Web.SiteMapNode.Description" /> 或向 <see cref="T:System.Web.SiteMapNode" /> 的 <see langword="custom" /> 特性应用了显式的资源表达式，但显式信息无效。  
  
\- 或 - 
分析 <see cref="P:System.Web.SiteMapNode.Url" /> 的 <see cref="T:System.Web.SiteMapNode" /> 时出错。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">无法在当前站点地图提供程序集合中找到命名的提供程序。</exception>
        <exception cref="T:System.ArgumentNullException">引用站点地图文件的 <see langword="&lt;siteMapNode&gt;" /> 包含用于 <see langword="siteMapFile" /> 的空字符串。</exception>
        <exception cref="T:System.Web.HttpException">
          <see langword="siteMapFile" /> 的 <see langword="&lt;siteMapNode&gt;" /> 使用了物理路径。  
  
\- 或 - 
在尝试分析 <see langword="siteMapFile" /> 中指定的文件的虚拟路径时发生错误。</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="xmlSiteMapProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除子和父站点地图节点的集合中的所有元素和 <see cref="T:System.Web.XmlSiteMapProvider" /> 对象在内部作为其状态的一部分进行跟踪的站点地图提供程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类重写继承<xref:System.Web.XmlSiteMapProvider.Clear%2A>方法以提供基本之外的其他状态清理<xref:System.Web.StaticSiteMapProvider.Clear%2A?displayProperty=nameWithType>实现，包括清除跟踪其子提供程序和<xref:System.Web.XmlSiteMapProvider.RootNode%2A>属性跟踪机制。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="CurrentNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode CurrentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode CurrentNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.XmlSiteMapProvider.CurrentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CurrentNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ CurrentNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNode : System.Web.SiteMapNode" Usage="System.Web.XmlSiteMapProvider.CurrentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示当前请求页的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <value>表示当前请求页的站点地图对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>通知 Web.sitemap 文件的文件监视器：<see cref="T:System.Web.XmlSiteMapProvider" /> 对象不再要求监视该文件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlSiteMapProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通知 Web.sitemap 文件的文件监视器：<see cref="T:System.Web.XmlSiteMapProvider" /> 对象不再要求监视该文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类实现<xref:System.IDisposable.Dispose%2A>方法的<xref:System.IDisposable>接口以释放其关联的文件监视器时站点映射文件，从内存中卸载。 此重载<xref:System.Web.XmlSiteMapProvider.Dispose%2A>方法调用的重载<xref:System.Boolean>参数并将值设置为`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlSiteMapProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
        <summary>通知 Web.sitemap 文件的文件监视器：<see cref="T:System.Web.XmlSiteMapProvider" /> 对象不再要求监视该文件。 <see cref="M:System.Web.XmlSiteMapProvider.Dispose(System.Boolean)" /> 方法接受一个布尔参数，该参数指示此方法是否由用户代码调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider.Dispose%2A>方法将返回`true`如果<xref:System.Web.XmlSiteMapProvider.Dispose%2A>被用户代码调用方法。 否则它将返回`false`，如果<xref:System.Web.XmlSiteMapProvider.Dispose%2A>在运行时由终结器线程调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IDisposable" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNode (string rawUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNode(string rawUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.FindSiteMapNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNode (rawUrl As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNode(System::String ^ rawUrl);" />
      <MemberSignature Language="F#" Value="override this.FindSiteMapNode : string -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.FindSiteMapNode rawUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawUrl">标识要为其检索 <see cref="T:System.Web.SiteMapNode" /> 的页的 URL。</param>
        <summary>检索表示位于指定 URL 处的页的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <returns>一个 <see cref="T:System.Web.SiteMapNode" />，表示由 <paramref name="rawURL" /> 所标识的页。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>对象重写<xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A>方法，以确保如果基类的实现不为指定的 URL 返回节点的任何链接的子提供程序搜索节点。  
  
 `rawUrl`参数应为绝对虚拟路径或一个应用程序相对路径，具体取决于如何在 XML 站点地图数据文件中指定。  
  
 <xref:System.Web.XmlSiteMapProvider>类和从其派生的类使用的 URL<xref:System.Web.SiteMapNode>作为类维护的各种集合中键的对象。 因此，这些 Url 必须是唯一的站点映射的范围内。 如果由管理的即时站点映射数据中找不到 URL <xref:System.Web.XmlSiteMapProvider>，它将调用<xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A>上每个子提供程序链接到它通过`provider`其站点地图节点的属性。  
  
 <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A>方法间接调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法来检索站点地图中的顶级节点。 因此，对于发生的任何异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法调用时也可能发生<xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">链接到当前站点地图提供程序的子提供程序返回一个无效节点。</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNodeFromKey">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNodeFromKey (key As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNodeFromKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="override this.FindSiteMapNodeFromKey : string -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.FindSiteMapNodeFromKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">用于搜索 <see cref="T:System.Web.SiteMapNode" /> 的查找键。</param>
        <summary>根据指定的键检索 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <returns>表示 <paramref name="key" /> 所标识的页的 <see cref="T:System.Web.SiteMapNode" />；如果启用了安全修整并且不能向当前用户显示该节点，或者未能通过 <paramref name="key" /> 在节点集合中找到该节点，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类将重写<xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A>方法，以确保任何链接的子提供程序将搜索的节点，如果类的基类的实现不返回的节点`key`。  
  
 <xref:System.Web.XmlSiteMapProvider>对象，派生自<xref:System.Web.StaticSiteMapProvider>类和 ASP.NET 中，使用的默认站点映射提供程序<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>作为在其内部集合中，默认情况下的查找键的对象。 如果<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>，则它必须是唯一的提供程序的作用域内。 如果没有<xref:System.Web.SiteMapNode.Url%2A>指定，则<xref:System.Web.XmlSiteMapProvider>会自动生成<xref:System.Web.SiteMapNode.Key%2A>来跟踪节点。  
  
 <xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A>方法可能会调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>上与当前提供程序相关联的任何子提供程序的方法。 因此中, 所述的异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法可能会引发。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">链接到当前站点地图提供程序的子提供程序返回一个无效节点。</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.FindSiteMapNode" />
      </Docs>
    </Member>
    <Member MemberName="GetChildNodes">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNodeCollection GetChildNodes(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildNodes (node As SiteMapNode) As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNodeCollection ^ GetChildNodes(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.GetChildNodes : System.Web.SiteMapNode -&gt; System.Web.SiteMapNodeCollection" Usage="xmlSiteMapProvider.GetChildNodes node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要从中获取子节点的 <see cref="T:System.Web.SiteMapNode" /> 对象。</param>
        <summary>返回站点地图的子节点。</summary>
        <returns>站点地图节点的集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode GetParentNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetParentNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParentNode (node As SiteMapNode) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ GetParentNode(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.GetParentNode : System.Web.SiteMapNode -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.GetParentNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要从其获取父节点的 <see cref="T:System.Web.SiteMapNode" /> 对象。</param>
        <summary>返回站点地图的父节点。</summary>
        <returns>站点地图的父节点。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootNodeCore">
      <MemberSignature Language="C#" Value="protected internal override System.Web.SiteMapNode GetRootNodeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.SiteMapNode GetRootNodeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetRootNodeCore () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Web::SiteMapNode ^ GetRootNodeCore();" />
      <MemberSignature Language="F#" Value="override this.GetRootNodeCore : unit -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.GetRootNodeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索当前站点地图数据结构的顶层节点。</summary>
        <returns>一个 <see cref="T:System.Web.SiteMapNode" />，表示当前站点地图数据结构中的顶层节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider.GetRootNodeCore%2A>方法调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法来检索站点地图中的顶级节点。 因此，对于发生的任何异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法调用时也可能发生<xref:System.Web.XmlSiteMapProvider.GetRootNodeCore%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.XmlSiteMapProvider.RootNode" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, attributes As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="xmlSiteMapProvider.Initialize (name, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的 <see cref="T:System.Web.XmlSiteMapProvider" />。</param>
        <param name="attributes">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />，它可包含附加特性以帮助初始化 <c>name</c>。 这些特性是从 Web.config 文件中的 <see cref="T:System.Web.XmlSiteMapProvider" /> 配置读取的。</param>
        <summary>初始化 <see cref="T:System.Web.XmlSiteMapProvider" /> 对象。 <see cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 方法并不实际生成站点地图，它只是为此而准备 <see cref="T:System.Web.XmlSiteMapProvider" /> 对象的状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类重写继承<xref:System.Web.XmlSiteMapProvider.Initialize%2A>方法以将应用多个属性，例如`siteMapFile`并`description`属性，为`attributes`集合。  
  
   
  
## Examples  
 下面的代码示例演示如何创建的新实例<xref:System.Web.XmlSiteMapProvider>类，并将其初始化以生成从 XML 数据的站点映射。  
  
```csharp  
<%@ Page Language="c#" %>  
<SCRIPT runat="server">  
 private void Page_Load(object sender, System.EventArgs e) {  
     // Create an instance of the XmlSiteMapProvider class.  
     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  
     NameValueCollection providerAttributes = new NameValueCollection(1);  
     providerAttributes.Add("siteMapFile","test.sitemap");  
  
     // Initialize the provider with a provider name and file name.  
     testXmlProvider.Initialize("testProvider", providerAttributes);  
  
     // Call the BuildSiteMap to load the site map information into memory.  
     testXmlProvider.BuildSiteMap();  
  
     // Prints "/myvirtualdirectory/WebForm1.aspx"  
     Response.Write(testXmlProvider.RootNode.Url + "<BR>");  
  
     // Prints "/myvirtualdirectory/WebForm2.aspx"  
     Response.Write(testXmlProvider.CurrentNode.Url + "<BR>");  
 }  
 </SCRIPT>  
```  
  
 前面的代码示例使用 XML 文件中的虚拟根目录的 ASP.NET 应用程序。 该文件的格式如下：  
  
```  
<siteMap>  
  <siteMapNode title="RootNode" description="The root page." url="WebForm1.aspx">  
    <siteMapNode title="CurrentNode" description="Some sub page." url="WebForm2.aspx"/>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">多次初始化 <see cref="T:System.Web.XmlSiteMapProvider" />。</exception>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.SiteMapNode" /> 使用物理路径引用站点地图文件。  
  
\- 或 - 
在尝试分析为 <see langword="siteMapFile" /> 特性提供的虚拟路径时发生错误。</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="C#" Value="protected internal override void RemoveNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RemoveNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RemoveNode (node As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RemoveNode(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.RemoveNode : System.Web.SiteMapNode -&gt; unit" Usage="xmlSiteMapProvider.RemoveNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要从节点集合中移除的节点。</param>
        <summary>从提供程序跟踪的所有节点集合中移除指定的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="node" /> 是拥有它的站点地图提供程序的根节点。  
  
\- 或 - 
 <paramref name="node" /> 既不由此提供者管理，也不由此提供者的父提供者链中的某个提供者管理。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.AddNode" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="protected virtual void RemoveProvider (string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveProvider(string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.RemoveProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveProvider (providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveProvider(System::String ^ providerName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProvider : string -&gt; unit&#xA;override this.RemoveProvider : string -&gt; unit" Usage="xmlSiteMapProvider.RemoveProvider providerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">当前已在 <see cref="T:System.Web.SiteMapProvider" /> 中注册的某个 <see cref="P:System.Web.SiteMap.Providers" /> 对象的名称。</param>
        <summary>从当前提供程序的层次结构中移除链接的子站点地图提供程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider.RemoveProvider%2A>方法移除`providerName`从当前提供程序的层次结构，包括通过建立的任何父/子关系<xref:System.Web.XmlSiteMapProvider.AddProvider%2A>站点地图节点的当前提供程序和已删除的提供程序之间的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">无法解析 <paramref name="providerName" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="providerName" /> 不是当前站点地图提供程序的已注册的子提供程序。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" /> 为 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.AddNode" />
      </Docs>
    </Member>
    <Member MemberName="RootNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode RootNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode RootNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.XmlSiteMapProvider.RootNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RootNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ RootNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNode : System.Web.SiteMapNode" Usage="System.Web.XmlSiteMapProvider.RootNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取站点地图的根节点。</summary>
        <value>表示站点地图根节点的 <see cref="T:System.Web.SiteMapNode" />；如果启用了安全修整并且根节点对于当前用户不可访问，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider.RootNode%2A>属性调用<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法来检索站点地图中的顶级节点。 因此，对于发生的任何异常<xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A>方法访问时也可能发生<xref:System.Web.XmlSiteMapProvider.RootNode%2A>属性。  
  
 <xref:System.Web.SiteMapProvider>并<xref:System.Web.XmlSiteMapProvider>类允许只有一个根<xref:System.Web.SiteMapNode>站点地图中的对象。 <xref:System.Web.XmlSiteMapProvider>类重写抽象<xref:System.Web.SiteMapProvider.RootNode%2A?displayProperty=nameWithType>属性，并提供一个简单的实现，以跟踪根节点。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
        <altmember cref="P:System.Web.SiteMapProvider.RootNode" />
      </Docs>
    </Member>
  </Members>
</Type>