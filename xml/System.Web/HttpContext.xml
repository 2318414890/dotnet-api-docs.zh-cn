<Type Name="HttpContext" FullName="System.Web.HttpContext">
  <TypeSignature Language="C#" Value="public sealed class HttpContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContext sealed : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="432bf-101">封装有关个别 HTTP 请求的所有 HTTP 特定的信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-101">Encapsulates all HTTP-specific information about an individual HTTP request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-102">继承的类<xref:System.Web.IHttpModule>和<xref:System.Web.IHttpHandler>接口提供对引用<xref:System.Web.HttpContext>为当前 HTTP 请求的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-102">Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided a reference to an <xref:System.Web.HttpContext> object for the current HTTP request.</span></span> <span data-ttu-id="432bf-103">对象提供对内部函数访问<xref:System.Web.HttpContext.Request%2A>， <xref:System.Web.HttpContext.Response%2A>，和<xref:System.Web.HttpContext.Server%2A>请求的属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-103">The object provides access to the intrinsic <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>, and <xref:System.Web.HttpContext.Server%2A> properties for the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-104">Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=192422)。</span><span class="sxs-lookup"><span data-stu-id="432bf-104">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192422).</span></span>  
  
 <span data-ttu-id="432bf-105">下面的示例演示如何访问和显示属性<xref:System.Web.HttpContext>对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-105">The following example demonstrates how to access and display properties of the <xref:System.Web.HttpContext> object.</span></span> <span data-ttu-id="432bf-106">当前 HTTP 请求的上下文可通过使用<xref:System.Web.UI.Page.Context%2A>属性<xref:System.Web.UI.Page>对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-106">The context of the current HTTP request is accessed by using the <xref:System.Web.UI.Page.Context%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpContext#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpContext/cs/httpcontextcs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpContext#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpContext/vb/httpcontextvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpModule" />
    <altmember cref="T:System.Web.IHttpHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="432bf-107">初始化 <see cref="T:System.Web.HttpContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="432bf-107">Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpContext (System.Web.HttpWorkerRequest wr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpWorkerRequest wr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wr As HttpWorkerRequest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpContext(System::Web::HttpWorkerRequest ^ wr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wr" Type="System.Web.HttpWorkerRequest" />
      </Parameters>
      <Docs>
        <param name="wr"><span data-ttu-id="432bf-108">当前 HTTP 请求的 <see cref="T:System.Web.HttpWorkerRequest" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-108">The <see cref="T:System.Web.HttpWorkerRequest" /> object for the current HTTP request.</span></span></param>
        <summary><span data-ttu-id="432bf-109">使用指定的辅助请求对象初始化 <see cref="T:System.Web.HttpContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="432bf-109">Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class that uses the specified worker-request object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpContext (System.Web.HttpRequest request, System.Web.HttpResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpRequest request, class System.Web.HttpResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (request As HttpRequest, response As HttpResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpContext(System::Web::HttpRequest ^ request, System::Web::HttpResponse ^ response);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequest" />
        <Parameter Name="response" Type="System.Web.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="432bf-110">当前 HTTP 请求的 <see cref="T:System.Web.HttpRequest" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-110">The <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span></span></param>
        <param name="response"><span data-ttu-id="432bf-111">当前 HTTP 请求的 <see cref="T:System.Web.HttpResponse" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-111">The <see cref="T:System.Web.HttpResponse" /> object for the current HTTP request.</span></span></param>
        <summary><span data-ttu-id="432bf-112">使用指定的请求和响应对象初始化 <see cref="T:System.Web.HttpContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="432bf-112">Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class by using the specified request and response objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="432bf-113">接受 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-113">Accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userFunc"><span data-ttu-id="432bf-114">用户函数。</span><span class="sxs-lookup"><span data-stu-id="432bf-114">The user function.</span></span></param>
        <summary><span data-ttu-id="432bf-115">接受一个使用指定用户函数的 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-115">Accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-116">调用此方法等效于调用<xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>方法重载并传入`null`为`options`参数。</span><span class="sxs-lookup"><span data-stu-id="432bf-116">Calling this method is equivalent to calling the <xref:System.Web.HttpContext.AcceptWebSocketRequest%2A> method overload and passing `null` for the `options` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="432bf-117"><paramref name="userFunc" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-117">The <paramref name="userFunc" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="432bf-118">该请求不是一个<see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-118">The request is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" />
      </Parameters>
      <Docs>
        <param name="userFunc"><span data-ttu-id="432bf-119">用户函数。</span><span class="sxs-lookup"><span data-stu-id="432bf-119">The user function.</span></span></param>
        <param name="options"><span data-ttu-id="432bf-120">选项对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-120">The options object.</span></span></param>
        <summary><span data-ttu-id="432bf-121">接受一个使用指定用户函数和选项对象 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-121">Accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="432bf-122"><paramref name="userFunc" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-122">The <paramref name="userFunc" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="432bf-123">该请求不是一个<see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-123">The request is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public void AddError (Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddError(class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AddError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddError (errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddError(Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorInfo"><span data-ttu-id="432bf-124">要添加到异常集合中的 <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-124">The <see cref="T:System.Exception" /> to add to the exception collection.</span></span></param>
        <summary><span data-ttu-id="432bf-125">将异常添加到当前 HTTP 请求的异常集合中。</span><span class="sxs-lookup"><span data-stu-id="432bf-125">Adds an exception to the exception collection for the current HTTP request.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContext&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContext&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOnRequestCompleted (callback As Action(Of HttpContext)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContext ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContext&gt;" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="432bf-126">HTTP 上下文对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-126">The HTTP context object.</span></span></param>
        <summary><span data-ttu-id="432bf-127">引发在请求的 HTTP 部分结束时发生的虚拟事件。</span><span class="sxs-lookup"><span data-stu-id="432bf-127">Raises a virtual event that occurs when the HTTP part of the request is ending.</span></span></summary>
        <returns><span data-ttu-id="432bf-128">订阅标记。</span><span class="sxs-lookup"><span data-stu-id="432bf-128">The subscription token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-129">此事件之前发生<xref:System.Web.WebSockets.AspNetWebSocket>连接开始。</span><span class="sxs-lookup"><span data-stu-id="432bf-129">This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="432bf-130"><paramref name="callback" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-130">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public Exception[] AllErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.AllErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllErrors As Exception()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-131">获取在处理 HTTP 请求的过程中累积的错误数组。</span><span class="sxs-lookup"><span data-stu-id="432bf-131">Gets an array of errors accumulated while processing an HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-132">当前 HTTP 请求的 <see cref="T:System.Exception" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="432bf-132">An array of <see cref="T:System.Exception" /> objects for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public bool AllowAsyncDuringSyncStages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.AllowAsyncDuringSyncStages" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAsyncDuringSyncStages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-133">获取或设置一个值，此值指示 ASP.NET 请求处理过程中是否允许非预期的异步操作。</span><span class="sxs-lookup"><span data-stu-id="432bf-133">Gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-134">当异步 API 在不是预期的时间使用时 ASP.NET 将引发异常，则为 <see langword="false" />，否则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-134"><see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="432bf-135">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-135">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-136">如果未将此标志设置为`true`，当它检测到误用异步 API 的应用程序时，ASP.NET 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="432bf-136">If this flag is not set to `true`, ASP.NET will throw an exception when it detects the application misusing the async API.</span></span> <span data-ttu-id="432bf-137">如果你尝试在部分中的请求处理管道，其中异步操作不需要，调用异步方法，或者没有仍未完成的异步工作时异步模块或处理程序发出信号，完成，则可以发生此问题。</span><span class="sxs-lookup"><span data-stu-id="432bf-137">This can occur if you try to call an asynchronous method during a part of the request processing pipeline where asynchronous operations are not expected, or if there is still outstanding asynchronous work when an asynchronous module or handler signals completion.</span></span> <span data-ttu-id="432bf-138">此行为旨在作为网络安全，以让你知道在早期，是否你在编写异步代码不符合预期模式，并且可能具有负的负面影响中。</span><span class="sxs-lookup"><span data-stu-id="432bf-138">This behavior is meant as a safety net to let you know early on if you're writing async code that doesn't fit expected patterns and might have negative side effects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-139">为当前 HTTP 请求获取 <see cref="T:System.Web.HttpApplicationState" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-139">Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-140">当前 HTTP 请求的 <see cref="T:System.Web.HttpApplicationState" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-140">The <see cref="T:System.Web.HttpApplicationState" /> for the current HTTP request.</span></span>  
  
 <span data-ttu-id="432bf-141">若要获取当前 HTTP 请求的 <see cref="T:System.Web.HttpApplication" /> 对象，请使用 <see cref="P:System.Web.HttpContext.ApplicationInstance" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-141">To get the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request, use <see cref="P:System.Web.HttpContext.ApplicationInstance" />.</span></span> <span data-ttu-id="432bf-142">（ASP.NET 使用 <see langword="ApplicationInstance" /> 代替 <see langword="Application" /> 作为属性名来引用当前的 <see cref="T:System.Web.HttpApplication" /> 实例，以避免 ASP.NET 与经典 ASP 之间产生混淆。</span><span class="sxs-lookup"><span data-stu-id="432bf-142">(ASP.NET uses <see langword="ApplicationInstance" /> instead of <see langword="Application" /> as a property name to refer to the current <see cref="T:System.Web.HttpApplication" /> instance in order to avoid confusion between ASP.NET and classic ASP.</span></span> <span data-ttu-id="432bf-143">在经典 ASP 中，<see langword="Application" /> 引用全局应用程序状态字典。）</span><span class="sxs-lookup"><span data-stu-id="432bf-143">In classic ASP, <see langword="Application" /> refers to the global application state dictionary.)</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpContext.ApplicationInstance" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplication ApplicationInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.ApplicationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationInstance As HttpApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-144">为当前 HTTP 请求获取或设置 <see cref="T:System.Web.HttpApplication" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-144">Gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-145">当前 HTTP 请求的 <see cref="T:System.Web.HttpApplication" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-145">The <see cref="T:System.Web.HttpApplication" /> for the current HTTP request.</span></span>  
  
 <span data-ttu-id="432bf-146">ASP.NET 使用 <see langword="ApplicationInstance" /> 代替 <see langword="Application" /> 作为属性名来引用当前的 <see cref="T:System.Web.HttpApplication" /> 实例，以避免 ASP.NET 与经典 ASP 之间产生混淆。</span><span class="sxs-lookup"><span data-stu-id="432bf-146">ASP.NET uses <see langword="ApplicationInstance" /> instead of <see langword="Application" /> as a property name to refer to the current <see cref="T:System.Web.HttpApplication" /> instance in order to avoid confusion between ASP.NET and classic ASP.</span></span> <span data-ttu-id="432bf-147">在经典 ASP 中，<see langword="Application" /> 引用全局应用程序状态字典。</span><span class="sxs-lookup"><span data-stu-id="432bf-147">In classic ASP, <see langword="Application" /> refers to the global application state dictionary.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="432bf-148">Web 应用程序正在 IIS 7.0 集成模式下运行，并且已尝试将属性值从非 NULL 值更改为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-148">The Web application is running under IIS 7.0 in Integrated mode, and an attempt was made to change the property value from a non-null value to <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Web.HttpContext.Application" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-149">获取或设置包含适用于异步预加载模式的标志的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-149">Gets or sets an object that contains flags that pertain to asynchronous preload mode.</span></span></summary>
        <value><span data-ttu-id="432bf-150">包含适用于异步预加载模式的标志的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-150">An object that contains flags that pertain to asynchronous preload mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-151">第一次访问此属性时，包含有关异步预加载模式的标志的对象从加载<xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>在配置文件中设置。</span><span class="sxs-lookup"><span data-stu-id="432bf-151">The first time this property is accessed, the object that contains flags for asynchronous preload mode is loaded from the <xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A> setting in the configuration file.</span></span>  
  
 <span data-ttu-id="432bf-152">尽管可以以编程方式设置此属性，只有该属性在 ASP.NET 请求管道中的 `ExecuteRequestHandler` 步骤之前设置，更改属性值才起作用。</span><span class="sxs-lookup"><span data-stu-id="432bf-152">Although this property can be set programmatically, changing the property value only has effect if the property is set before the `ExecuteRequestHandler` step in the ASP.NET request pipeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-153">获取当前应用程序域的 <see cref="T:System.Web.Caching.Cache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-153">Gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</span></span></summary>
        <value><span data-ttu-id="432bf-154">当前应用程序域的 <see cref="T:System.Web.Caching.Cache" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-154">The <see cref="T:System.Web.Caching.Cache" /> for the current application domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-155">一个实例<xref:System.Web.Caching.Cache>每个应用程序域的类。</span><span class="sxs-lookup"><span data-stu-id="432bf-155">There is one instance of the <xref:System.Web.Caching.Cache> class per application domain.</span></span> <span data-ttu-id="432bf-156">因此，<xref:System.Web.Caching.Cache>返回的对象<xref:System.Web.HttpContext.Cache%2A>属性是<xref:System.Web.Caching.Cache>应用程序域中的所有请求的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-156">As a result, the <xref:System.Web.Caching.Cache> object that is returned by the <xref:System.Web.HttpContext.Cache%2A> property is the <xref:System.Web.Caching.Cache> object for all requests in the application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="432bf-157">清除当前 HTTP 请求的所有错误。</span><span class="sxs-lookup"><span data-stu-id="432bf-157">Clears all errors for the current HTTP request.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpContext.Error" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.HttpContext Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.HttpContext Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpContext ^ Current { System::Web::HttpContext ^ get(); void set(System::Web::HttpContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-158">为当前 HTTP 请求获取或设置 <see cref="T:System.Web.HttpContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-158">Gets or sets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-159">当前 HTTP 请求的 <see cref="T:System.Web.HttpContext" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="432bf-159">The <see cref="T:System.Web.HttpContext" /> instance for the current HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-160">此属性是静态属性的<xref:System.Web.HttpContext>类。</span><span class="sxs-lookup"><span data-stu-id="432bf-160">This property is a static property of the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="432bf-161">属性存储<xref:System.Web.HttpContext>适用于当前请求的实例。</span><span class="sxs-lookup"><span data-stu-id="432bf-161">The property stores the <xref:System.Web.HttpContext> instance that applies to the current request.</span></span> <span data-ttu-id="432bf-162">此实例的属性是的非静态属性<xref:System.Web.HttpContext>类。</span><span class="sxs-lookup"><span data-stu-id="432bf-162">The properties of this instance are the non-static properties of the <xref:System.Web.HttpContext> class.</span></span>  
  
 <span data-ttu-id="432bf-163">你还可以使用<xref:System.Web.UI.Page.Context%2A?displayProperty=nameWithType>属性来访问<xref:System.Web.HttpContext>为当前 HTTP 请求的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-163">You can also use the <xref:System.Web.UI.Page.Context%2A?displayProperty=nameWithType> property to access the <xref:System.Web.HttpContext> object for the current HTTP request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-164">下面的代码示例使用<xref:System.Web.HttpContext.Current%2A>属性来访问<xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType>和<xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType>方法和<xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-164">The following code example uses the <xref:System.Web.HttpContext.Current%2A> property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="432bf-165">该示例创建使用三个自定义异常<xref:System.Web.HttpContext.AddError%2A>方法，并使用<xref:System.Web.HttpContext.AllErrors%2A>属性加载到一个数组，这些异常。</span><span class="sxs-lookup"><span data-stu-id="432bf-165">The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array.</span></span> <span data-ttu-id="432bf-166">然后将数组写入包含页，并使用<xref:System.Web.HttpContext.ClearError%2A>方法来清除所有错误从<xref:System.Web.UI.Page.Context%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-166">It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.</span></span>  
  
```csharp  
protected void Page_Load(object sender, EventArgs e)  
{  
    HttpContext context = HttpContext.Current;  
    Response.Write("<p>HttpContext.Current Example:</p>");  
  
    // Add three custom exceptions.  
    context.AddError(new Exception("New Exception #1"));  
    context.AddError(new Exception("New Exception #2"));  
    context.AddError(new Exception("New Exception #3"));  
  
    // Capture all the new Exceptions in an array.  
    Exception[] errs = context.AllErrors;  
  
    foreach (Exception ex in errs)  
    {  
        Response.Write("<p>" + Server.HtmlEncode(ex.ToString()) + "</p>");  
    }  
  
    // Clear the exceptions so ASP.NET won't handle them.  
    context.ClearError();  
}  
```  
  
```vb  
Protected Sub Page_Load(sender As Object, e As EventArgs)  
Dim context As HttpContext = HttpContext.Current  
Response.Write("<p>HttpContext.Current Example:</p>")  
  
' Add three custom exceptions.  
context.AddError(New Exception("New Exception #1"))  
context.AddError(New Exception("New Exception #2"))  
context.AddError(New Exception("New Exception #3"))  
  
' Capture all the new Exceptions in an array.  
Dim errs As Exception() = context.AllErrors  
  
For Each ex As Exception In errs  
Response.Write("<p>" & Server.HtmlEncode(ex.ToString()) & "</p>")  
Next  
  
' Clear the exceptions so ASP.NET won't handle them.  
context.ClearError()  
End Sub  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.Response" />
        <altmember cref="P:System.Web.HttpContext.Request" />
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler CurrentHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.CurrentHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-167">获取表示当前正在执行的处理程序的 <see cref="T:System.Web.IHttpHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-167">Gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the currently executing handler.</span></span></summary>
        <value><span data-ttu-id="432bf-168">一个 <see cref="T:System.Web.IHttpHandler" />，表示当前正在执行的处理程序。</span><span class="sxs-lookup"><span data-stu-id="432bf-168">An <see cref="T:System.Web.IHttpHandler" /> that represents the currently executing handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-169">当前正在执行的处理程序引用的<xref:System.Web.HttpContext.CurrentHandler%2A>属性可能不同于引用的处理程序<xref:System.Web.HttpContext.Handler%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-169">The currently executing handler that is referenced by the <xref:System.Web.HttpContext.CurrentHandler%2A> property might be different than the handler that is referenced by the <xref:System.Web.HttpContext.Handler%2A> property.</span></span> <span data-ttu-id="432bf-170">这会时发生另一个处理程序请求了使用<xref:System.Web.HttpServerUtility.Execute%2A>方法或<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="432bf-170">This can occur when another handler was requested by using the <xref:System.Web.HttpServerUtility.Execute%2A> method or the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="432bf-171">当前正在执行的处理程序完成处理，将还原先前已确定处理程序。</span><span class="sxs-lookup"><span data-stu-id="432bf-171">When the currently executing handler finishes processing, the previously determined handler is restored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.Handler" />
        <altmember cref="P:System.Web.HttpContext.PreviousHandler" />
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public System.Web.RequestNotification CurrentNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.CurrentNotification" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentNotification As RequestNotification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-172">获取一个 <see cref="T:System.Web.RequestNotification" /> 值，该值指示当前正在处理的 <see cref="T:System.Web.HttpApplication" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="432bf-172">Gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the current <see cref="T:System.Web.HttpApplication" /> event that is processing.</span></span></summary>
        <value><span data-ttu-id="432bf-173"><see cref="T:System.Web.RequestNotification" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="432bf-173">One of the <see cref="T:System.Web.RequestNotification" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-174"><xref:System.Web.HttpContext.CurrentNotification%2A>属性需要中的集成的管道模式[!INCLUDE[iisver](~/includes/iisver-md.md)]并且至少.NET Framework 版本 3.0。</span><span class="sxs-lookup"><span data-stu-id="432bf-174">The <xref:System.Web.HttpContext.CurrentNotification%2A> property requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span> <span data-ttu-id="432bf-175">如果可能，该属性返回<xref:System.Web.RequestNotification>值。</span><span class="sxs-lookup"><span data-stu-id="432bf-175">When available, the property returns a <xref:System.Web.RequestNotification> value.</span></span> <span data-ttu-id="432bf-176">值<xref:System.Web.HttpContext.CurrentNotification%2A>属性指示在哪个事件<xref:System.Web.HttpApplication>实例当前正在处理请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-176">The value of the <xref:System.Web.HttpContext.CurrentNotification%2A> property indicates which event in the <xref:System.Web.HttpApplication> instance is currently processing the request.</span></span>  
  
 <span data-ttu-id="432bf-177"><xref:System.Web.HttpContext.CurrentNotification%2A>属性不应设置。</span><span class="sxs-lookup"><span data-stu-id="432bf-177">The <xref:System.Web.HttpContext.CurrentNotification%2A> property is not intended to be set.</span></span> <span data-ttu-id="432bf-178">相反，通过来设置[!INCLUDE[iisver](~/includes/iisver-md.md)]ASP.NET 管道中的请求的处理过程中。</span><span class="sxs-lookup"><span data-stu-id="432bf-178">Instead, it is set by [!INCLUDE[iisver](~/includes/iisver-md.md)] during the processing of the request in the ASP.NET pipeline.</span></span> <span data-ttu-id="432bf-179">设置<xref:System.Web.HttpContext.CurrentNotification%2A>属性将导致编译错误。</span><span class="sxs-lookup"><span data-stu-id="432bf-179">Setting the <xref:System.Web.HttpContext.CurrentNotification%2A> property will result in a compilation error.</span></span>  
  
 <span data-ttu-id="432bf-180"><xref:System.Web.HttpContext.CurrentNotification%2A> 是.NET Framework 3.5 版中引入的。</span><span class="sxs-lookup"><span data-stu-id="432bf-180"><xref:System.Web.HttpContext.CurrentNotification%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="432bf-181">有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="432bf-181">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-182">下面的示例演示如何使用<xref:System.Web.HttpContext.CurrentNotification%2A>属性来确定哪一个事件<xref:System.Web.HttpApplication>正在处理处理当前请求的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-182">The following example demonstrates how to use the <xref:System.Web.HttpContext.CurrentNotification%2A> property to determine what event of the <xref:System.Web.HttpApplication> object that is handling the current request is being processed.</span></span> <span data-ttu-id="432bf-183">在示例中，事件处理程序处理的多个事件<xref:System.Web.HttpApplication>对象，与<xref:System.Web.HttpContext.CurrentNotification%2A>属性确定每个事件处理调用哪些代码。</span><span class="sxs-lookup"><span data-stu-id="432bf-183">In the example, the event handler handles several events of the <xref:System.Web.HttpApplication> object, and the <xref:System.Web.HttpContext.CurrentNotification%2A> property determines what code is invoked for each event being handled.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="432bf-184">操作要求 [!INCLUDE[iisver](~/includes/iisver-md.md)] 处于集成管道模式，并且要求 .NET Framework 至少为 3.0 版本。</span><span class="sxs-lookup"><span data-stu-id="432bf-184">The operation requires integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span></exception>
        <altmember cref="P:System.Web.HttpContext.IsPostNotification" />
        <altmember cref="T:System.Web.RequestNotification" />
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="432bf-185">在请求的 <see cref="M:System.IDisposable.Dispose" /> 连接部分完成时必须调动用其 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 方法的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-185">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</span></span></param>
        <summary><span data-ttu-id="432bf-186">使对象的 <see cref="M:System.IDisposable.Dispose" /> 方法可以在此请求的 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 连接部分完成时进行调用。</span><span class="sxs-lookup"><span data-stu-id="432bf-186">Enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</span></span></summary>
        <returns><span data-ttu-id="432bf-187">订阅标记。</span><span class="sxs-lookup"><span data-stu-id="432bf-187">The subscription token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-188"><xref:System.IDisposable.Dispose%2A>在请求的 HTTP 一部分之后调用的目标对象的方法和<xref:System.Web.WebSockets.AspNetWebSocket>连接已结束。</span><span class="sxs-lookup"><span data-stu-id="432bf-188">The <xref:System.IDisposable.Dispose%2A> method of the target object is called after both the HTTP part of the request and the <xref:System.Web.WebSockets.AspNetWebSocket> connection have ended.</span></span> <span data-ttu-id="432bf-189"><xref:System.Web.HttpContext>对象不是可用于检查。</span><span class="sxs-lookup"><span data-stu-id="432bf-189">The <xref:System.Web.HttpContext> object is not available for inspection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-190">获取在处理 HTTP 请求的过程中累积的第一个错误（如果有）。</span><span class="sxs-lookup"><span data-stu-id="432bf-190">Gets the first error (if any) accumulated during HTTP request processing.</span></span></summary>
        <value><span data-ttu-id="432bf-191">当前 HTTP 请求/响应过程的第一个 <see cref="T:System.Exception" />；如果在处理 HTTP 请求期间没有发生任何错误，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-191">The first <see cref="T:System.Exception" /> for the current HTTP request/response process; otherwise, <see langword="null" /> if no errors were accumulated during the HTTP request processing.</span></span> <span data-ttu-id="432bf-192">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-192">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpContext.ClearError" />
      </Docs>
    </Member>
    <Member MemberName="GetAppConfig">
      <MemberSignature Language="C#" Value="public static object GetAppConfig (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAppConfig(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetAppConfig(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAppConfig (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAppConfig(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection in System.Web.dll. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="432bf-193">为其请求信息的应用程序配置标记。</span><span class="sxs-lookup"><span data-stu-id="432bf-193">The application configuration tag for which information is requested.</span></span></param>
        <summary><span data-ttu-id="432bf-194">为当前应用程序返回请求的配置信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-194">Returns requested configuration information for the current application.</span></span></summary>
        <returns><span data-ttu-id="432bf-195">包含配置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-195">An object containing configuration information.</span></span> <span data-ttu-id="432bf-196">（在使用之前，将返回的配置节强制转换为适当的配置类型。）</span><span class="sxs-lookup"><span data-stu-id="432bf-196">(Cast the returned configuration section to the appropriate configuration type before use.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-197"><xref:System.Web.HttpContext.GetAppConfig%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="432bf-197">The <xref:System.Web.HttpContext.GetAppConfig%2A> method has been deprecated.</span></span> <span data-ttu-id="432bf-198">使用<xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>方法<xref:System.Web.Configuration.WebConfigurationManager>类，以获取当前应用程序的配置信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-198">Use the <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> method of the <xref:System.Web.Configuration.WebConfigurationManager> class to get configuration information for the current application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetConfig">
      <MemberSignature Language="C#" Value="public object GetConfig (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetConfig(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetConfig(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfig (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetConfig(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is System.Web.HttpContext.GetSection in System.Web.dll. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="432bf-199">为其请求信息的配置标记。</span><span class="sxs-lookup"><span data-stu-id="432bf-199">The configuration tag for which information is requested.</span></span></param>
        <summary><span data-ttu-id="432bf-200">为当前 HTTP 请求返回所请求的配置信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-200">Returns requested configuration information for the current HTTP request.</span></span></summary>
        <returns><span data-ttu-id="432bf-201">指定的 <see cref="T:System.Configuration.ConfigurationSection" />，如果该节不存在，则为 <see langword="null" />，或是如果该节不能在运行时访问，则为一个内部对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-201">The specified <see cref="T:System.Configuration.ConfigurationSection" />, <see langword="null" /> if the section does not exist, or an internal object if the section is not accessible at run time.</span></span> <span data-ttu-id="432bf-202">（在使用之前，将返回的对象强制转换为适当的配置类型。）</span><span class="sxs-lookup"><span data-stu-id="432bf-202">(Cast the returned object to the appropriate configuration type before use.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-203"><xref:System.Web.HttpContext.GetConfig%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="432bf-203">The <xref:System.Web.HttpContext.GetConfig%2A> method has been deprecated.</span></span> <span data-ttu-id="432bf-204">使用<xref:System.Web.HttpContext.GetSection%2A>方法以获取当前 HTTP 请求的配置信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-204">Use the <xref:System.Web.HttpContext.GetSection%2A> method to get configuration information for the current HTTP request.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.GetSection(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="432bf-205">获取应用程序级别的资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-205">Gets an application-level resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetGlobalResourceObject (string classKey, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey"><span data-ttu-id="432bf-206">一个字符串，表示所请求资源对象的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-206">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="432bf-207">一个字符串，表示所请求资源对象的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-207">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="432bf-208">根据指定的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性，获取应用程序级别资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-208">Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span></span></summary>
        <returns><span data-ttu-id="432bf-209">一个 <see cref="T:System.Object" />，表示请求的应用程序级别资源对象；否则，如果未找到资源对象，或找到了资源对象但其没有请求的属性，则为 null。</span><span class="sxs-lookup"><span data-stu-id="432bf-209">An <see cref="T:System.Object" /> that represents the requested application-level resource object; otherwise, null if a resource object is not found or if a resource object is found but it does not have the requested property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-210"><xref:System.Web.HttpContext.GetGlobalResourceObject%2A>方法返回一个全局资源使用中指定的区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-210">The <xref:System.Web.HttpContext.GetGlobalResourceObject%2A> method returns a global resource by using the culture that is specified in the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="432bf-211">在某些编辑环境，如[!INCLUDE[vwprvw](~/includes/vwprvw-md.md)]，编辑器可能引发设计时<xref:System.Resources.MissingManifestResourceException>异常如果在全局资源键名称中使用句点 （.）。</span><span class="sxs-lookup"><span data-stu-id="432bf-211">In some editing environments, such as [!INCLUDE[vwprvw](~/includes/vwprvw-md.md)], the editor might throw a design-time <xref:System.Resources.MissingManifestResourceException> exception if you use a period (.) in the global resource-key name.</span></span> <span data-ttu-id="432bf-212">但是，这不会影响你能够编辑或保存该文件，并且你可以忽略此错误。</span><span class="sxs-lookup"><span data-stu-id="432bf-212">However, this does not affect your ability to edit or save the file, and you can ignore the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="432bf-213">未找到具有指定 <paramref name="classKey" /> 参数的资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-213">A resource object with the specified <paramref name="classKey" /> parameter was not found.</span></span>  
  
 <span data-ttu-id="432bf-214">\- 或 -</span><span class="sxs-lookup"><span data-stu-id="432bf-214">\- or -</span></span>  
  
 <span data-ttu-id="432bf-215">主程序集不包含非特定区域性的资源，但由于缺少适当的附属程序集，又需要这些资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-215">The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="classKey"><span data-ttu-id="432bf-216">一个字符串，表示所请求资源对象的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-216">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="432bf-217">一个表示所请求资源对象的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性的字符串。</span><span class="sxs-lookup"><span data-stu-id="432bf-217">A string that represents a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <param name="culture"><span data-ttu-id="432bf-218">一个字符串，表示所请求资源的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-218">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</span></span></param>
        <summary><span data-ttu-id="432bf-219">根据指定的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性以及 <see cref="T:System.Globalization.CultureInfo" /> 对象，获取一个应用程序级别资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-219">Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="432bf-220">一个 <see cref="T:System.Object" />，表示请求的应用程序级别资源对象（对指定区域性对其进行了本地化）；否则，如果未找到资源对象，或找到了资源对象但其没有请求的属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-220">An <see cref="T:System.Object" /> that represents the requested application-level resource object, which is localized for the specified culture; otherwise, <see langword="null" /> if a resource object is not found or if a resource object is found but it does not have the requested property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-221"><xref:System.Globalization.CultureInfo>对象表示为其本地化资源的区域性。</span><span class="sxs-lookup"><span data-stu-id="432bf-221">The <xref:System.Globalization.CultureInfo> object represents the culture for which the resource was localized.</span></span> <span data-ttu-id="432bf-222">如果没有为此区域性本地化该资源，查找将按照回退过程找到适当的资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-222">If the resource is not localized for this culture, the lookup will follow a fallback process to locate an appropriate resource.</span></span> <span data-ttu-id="432bf-223">有关详细信息，请参阅[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="432bf-223">For more information, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="432bf-224">在某些编辑环境，如 Visual Web Developer 中，编辑器可能引发设计时<xref:System.Resources.MissingManifestResourceException>异常如果在全局资源键名称中使用句点 （.）。</span><span class="sxs-lookup"><span data-stu-id="432bf-224">In some editing environments, such as Visual Web Developer, the editor might throw a design-time <xref:System.Resources.MissingManifestResourceException> exception if you use a period (.) in the global resource-key name.</span></span> <span data-ttu-id="432bf-225">但是，这不会影响你能够编辑或保存该文件，并且你可以忽略此错误。</span><span class="sxs-lookup"><span data-stu-id="432bf-225">However, this does not affect your ability to edit or save the file, and you can ignore the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="432bf-226">未找到具有指定 <paramref name="classKey" /> 参数的资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-226">A resource object for which the specified <paramref name="classKey" /> parameter was not found.</span></span>  
  
 <span data-ttu-id="432bf-227">\- 或 -</span><span class="sxs-lookup"><span data-stu-id="432bf-227">\- or -</span></span>  
  
 <span data-ttu-id="432bf-228">主程序集不包含非特定区域性的资源，但由于缺少适当的附属程序集，又需要这些资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-228">The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="432bf-229">获取页级别的资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-229">Gets a page-level resource.</span></span></summary>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetLocalResourceObject (string virtualPath, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="432bf-230">本地资源对象的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-230">The <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property for the local resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="432bf-231">一个字符串，表示所请求资源对象的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性</span><span class="sxs-lookup"><span data-stu-id="432bf-231">A string that represents a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object</span></span></param>
        <summary><span data-ttu-id="432bf-232">根据指定的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性，获取页级别资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-232">Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span></span></summary>
        <returns><span data-ttu-id="432bf-233"><see cref="T:System.Object" />，表示请求的页级别资源对象；否则，如果找到了匹配的资源对象但不是 <see langword="null" /> 参数，则为 <paramref name="resourceKey" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-233">An <see cref="T:System.Object" /> that represents the requested page-level resource object; otherwise, <see langword="null" /> if a matching resource object is found but not a <paramref name="resourceKey" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-234"><xref:System.Web.HttpContext.GetLocalResourceObject%2A>方法返回本地资源使用中指定的区域性<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-234">The <xref:System.Web.HttpContext.GetLocalResourceObject%2A> method returns a local resource by using the culture that is specified in the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="432bf-235">未找到具有指定 <paramref name="virtualPath" /> 参数的资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-235">A resource object was not found for the specified <paramref name="virtualPath" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="432bf-236">指定的 <paramref name="virtualPath" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-236">The specified <paramref name="virtualPath" /> parameter is not in the current application's root directory.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="432bf-237">未找到页的资源类。</span><span class="sxs-lookup"><span data-stu-id="432bf-237">The resource class for the page was not found.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="432bf-238">本地资源对象的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-238">The <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property for the local resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="432bf-239">一个表示所请求资源对象的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性的字符串。</span><span class="sxs-lookup"><span data-stu-id="432bf-239">A string that represents a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <param name="culture"><span data-ttu-id="432bf-240">一个字符串，表示所请求资源对象的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-240">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="432bf-241">根据指定的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 属性以及 <see cref="T:System.Globalization.CultureInfo" /> 对象，获取一个页级别资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-241">Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="432bf-242"><see cref="T:System.Object" />，表示请求的本地资源对象（针对指定区域性进行了本地化的对象）；否则，如果找到了匹配的资源对象但不是 <see langword="null" /> 参数，则为 <paramref name="resourceKey" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-242">An <see cref="T:System.Object" /> that represents the requested local resource object, which is localized for the specified culture; otherwise <see langword="null" /> if a matching resource object is found but not a <paramref name="resourceKey" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-243">如果没有为此区域性本地化该资源，查找将按照回退过程找到适当的资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-243">If the resource is not localized for this culture, the lookup will follow a fallback process to locate an appropriate resource.</span></span> <span data-ttu-id="432bf-244">有关详细信息，请参阅[打包和部署资源](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="432bf-244">For more information, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException"><span data-ttu-id="432bf-245">未找到具有指定 <paramref name="virtualPath" /> 参数的资源对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-245">A resource object was not found for the specified <paramref name="virtualPath" /> Parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="432bf-246">指定的 <paramref name="virtualPath" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-246">The specified <paramref name="virtualPath" /> parameter is not in the current application's root directory.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="432bf-247">未找到页的资源类。</span><span class="sxs-lookup"><span data-stu-id="432bf-247">The resource class for the page was not found.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="432bf-248">配置节路径（使用 XPath 格式）和配置元素名称。</span><span class="sxs-lookup"><span data-stu-id="432bf-248">The configuration section path (in XPath format) and the configuration element name.</span></span></param>
        <summary><span data-ttu-id="432bf-249">获取当前应用程序的默认配置的指定配置节。</span><span class="sxs-lookup"><span data-stu-id="432bf-249">Gets a specified configuration section for the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="432bf-250">指定的 <see cref="T:System.Configuration.ConfigurationSection" />，如果该节不存在，则为 <see langword="null" />，或是如果该节不能在运行时访问，则为一个内部对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-250">The specified <see cref="T:System.Configuration.ConfigurationSection" />, <see langword="null" /> if the section does not exist, or an internal object if the section is not accessible at run time.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-251">获取或设置负责处理 HTTP 请求的 <see cref="T:System.Web.IHttpHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-251">Gets or sets the <see cref="T:System.Web.IHttpHandler" /> object responsible for processing the HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-252">负责处理 HTTP 请求的 <see cref="T:System.Web.IHttpHandler" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-252">An <see cref="T:System.Web.IHttpHandler" /> responsible for processing the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-253"><xref:System.Web.HttpContext.Handler%2A>属性包含对的处理程序处理 HTTP 请求的引用。</span><span class="sxs-lookup"><span data-stu-id="432bf-253">The <xref:System.Web.HttpContext.Handler%2A> property contains a reference to the handler that processes the HTTP request.</span></span> <span data-ttu-id="432bf-254">通过使用了元素，或通过使用在用户代码中定义的自定义处理程序，可以指定的处理程序。</span><span class="sxs-lookup"><span data-stu-id="432bf-254">The handler can be specified by using the  element, or by using a custom handler defined in user code.</span></span> <span data-ttu-id="432bf-255">有关处理程序的详细信息，请参阅[HTTP 处理程序和 HTTP 模块概述](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b)。</span><span class="sxs-lookup"><span data-stu-id="432bf-255">For more information about handlers, see [HTTP Handlers and HTTP Modules Overview](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span>  
  
 <span data-ttu-id="432bf-256">对引用<xref:System.Web.HttpContext.Handler%2A>属性即使当前页已更改的服务器端方法，如将保持相同<xref:System.Web.HttpServerUtility.Execute%2A>方法或<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="432bf-256">The reference to the <xref:System.Web.HttpContext.Handler%2A> property will remain the same even after the current page has been changed by a server-side method, such as the <xref:System.Web.HttpServerUtility.Execute%2A> method or the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.CurrentHandler" />
        <altmember cref="P:System.Web.HttpContext.PreviousHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public bool IsCustomErrorEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsCustomErrorEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomErrorEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomErrorEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-257">获取一个值，该值指示是否已为当前 HTTP 请求启用自定义错误。</span><span class="sxs-lookup"><span data-stu-id="432bf-257">Gets a value indicating whether custom errors are enabled for the current HTTP request.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-258">如果启用了自定义错误，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-258"><see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebuggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-259">获取一个值，该值指示当前 HTTP 请求是否处于调试模式。</span><span class="sxs-lookup"><span data-stu-id="432bf-259">Gets a value indicating whether the current HTTP request is in debug mode.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-260">如果请求处于调试模式，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-260"><see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public bool IsPostNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsPostNotification" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostNotification { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-261">在 <see cref="T:System.Web.HttpApplication" /> 事件完成处理之后获取 ASP.NET 管道的当前进程点的值。</span><span class="sxs-lookup"><span data-stu-id="432bf-261">Gets a value that is the current processing point in the ASP.NET pipeline just after an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-262">如果启用了自定义错误，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-262"><see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-263"><xref:System.Web.HttpContext.IsPostNotification%2A>中的集成模式仅支持属性[!INCLUDE[iisver](~/includes/iisver-md.md)]并且至少.NET Framework 3.0。</span><span class="sxs-lookup"><span data-stu-id="432bf-263">The <xref:System.Web.HttpContext.IsPostNotification%2A> property is only supported with the integrated mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework 3.0.</span></span> <span data-ttu-id="432bf-264">如果可能，该属性返回一个布尔值，该值指示是否在事件<xref:System.Web.HttpApplication>对象已完成处理。</span><span class="sxs-lookup"><span data-stu-id="432bf-264">When available, the property returns a Boolean value that indicates whether an event in the <xref:System.Web.HttpApplication> object has finished processing.</span></span>  
  
 <span data-ttu-id="432bf-265"><xref:System.Web.HttpContext.IsPostNotification%2A>属性不应设置。</span><span class="sxs-lookup"><span data-stu-id="432bf-265">The <xref:System.Web.HttpContext.IsPostNotification%2A> property is not intended to be set.</span></span> <span data-ttu-id="432bf-266">相反，它由提供[!INCLUDE[iisver](~/includes/iisver-md.md)]到每个通知的 ASP.NET 运行时。</span><span class="sxs-lookup"><span data-stu-id="432bf-266">Instead, it is provided by [!INCLUDE[iisver](~/includes/iisver-md.md)] to the ASP.NET runtime for each notification.</span></span> <span data-ttu-id="432bf-267">设置<xref:System.Web.HttpContext.IsPostNotification%2A>属性将导致编译错误。</span><span class="sxs-lookup"><span data-stu-id="432bf-267">Setting the <xref:System.Web.HttpContext.IsPostNotification%2A> property will result in a compilation error.</span></span>  
  
 <span data-ttu-id="432bf-268">在方案中其中的多个事件<xref:System.Web.HttpApplication>对象由一个事件处理程序处理，则可以使用<xref:System.Web.HttpContext.IsPostNotification%2A>属性结合<xref:System.Web.RequestNotification>枚举准确确定其中在当前的应用程序生命周期请求是。</span><span class="sxs-lookup"><span data-stu-id="432bf-268">In scenarios where multiple events of the <xref:System.Web.HttpApplication> object are handled by one event handler, you can use the <xref:System.Web.HttpContext.IsPostNotification%2A> property in combination with the <xref:System.Web.RequestNotification> enumeration to precisely determine where in the application lifecycle the current request is.</span></span>  
  
 <span data-ttu-id="432bf-269"><xref:System.Web.HttpContext.IsPostNotification%2A> 是.NET Framework 3.5 版中引入的。</span><span class="sxs-lookup"><span data-stu-id="432bf-269"><xref:System.Web.HttpContext.IsPostNotification%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="432bf-270">有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="432bf-270">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-271">下面的示例演示如何使用<xref:System.Web.HttpContext.IsPostNotification%2A>属性来确定的事件时<xref:System.Web.HttpApplication>对象已完成处理所有关联的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="432bf-271">The following example demonstrates how to use the <xref:System.Web.HttpContext.IsPostNotification%2A> property to determine when an event of the <xref:System.Web.HttpApplication> object has finished processing all the associated event handlers.</span></span> <span data-ttu-id="432bf-272">在此示例中的自定义事件处理程序处理的多个事件<xref:System.Web.HttpApplication>对象，与<xref:System.Web.HttpContext.IsPostNotification%2A>属性用于确定调用哪些代码处理特定事件之后。</span><span class="sxs-lookup"><span data-stu-id="432bf-272">The custom event handler in this example handles several events of the <xref:System.Web.HttpApplication> object, and the <xref:System.Web.HttpContext.IsPostNotification%2A> property is used to determine what code is invoked after a specific event is handled.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="432bf-273">操作要求 [!INCLUDE[iisver](~/includes/iisver-md.md)] 中的集成管道模式并且要求至少为 .NET Framework 3.0。</span><span class="sxs-lookup"><span data-stu-id="432bf-273">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework 3.0.</span></span></exception>
        <altmember cref="P:System.Web.HttpContext.CurrentNotification" />
        <altmember cref="T:System.Web.RequestNotification" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-274">获取一个值，该值指示此请求是否是一个 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-274">Gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-275">如果该请求是一个 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-275"><see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-276">此方法返回`true`如果请求包含初始<xref:System.Web.WebSockets.AspNetWebSocket>握手和`WebSocket`的 IIS 模块处于主动状态。</span><span class="sxs-lookup"><span data-stu-id="432bf-276">This method returns `true` if the request contains the initial <xref:System.Web.WebSockets.AspNetWebSocket> handshake and the `WebSocket` module of IIS is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequestUpgrading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsWebSocketRequestUpgrading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequestUpgrading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequestUpgrading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-277">获取指示连接是否从 HTTP 连接升级到 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 连接的值。</span><span class="sxs-lookup"><span data-stu-id="432bf-277">Gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-278">如果连接正在升级，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-278"><see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-279">获取可用于在 HTTP 请求过程中在 <see cref="T:System.Web.IHttpModule" /> 接口和 <see cref="T:System.Web.IHttpHandler" /> 接口之间组织和共享数据的键/值集合。</span><span class="sxs-lookup"><span data-stu-id="432bf-279">Gets a key/value collection that can be used to organize and share data between an <see cref="T:System.Web.IHttpModule" /> interface and an <see cref="T:System.Web.IHttpHandler" /> interface during an HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-280"><see cref="T:System.Collections.IDictionary" /> 键/值集合，按指定的键提供对集合中个别值的访问。</span><span class="sxs-lookup"><span data-stu-id="432bf-280">An <see cref="T:System.Collections.IDictionary" /> key/value collection that provides access to an individual value in the collection by a specified key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.PageInstrumentation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageInstrumentation As PageInstrumentationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-281">获取此要求的页检测服务实例的引用。</span><span class="sxs-lookup"><span data-stu-id="432bf-281">Gets a reference to the page-instrumentation service instance for this request.</span></span></summary>
        <value><span data-ttu-id="432bf-282">此请求的页检测服务实例。</span><span class="sxs-lookup"><span data-stu-id="432bf-282">The page-instrumentation service instance for this request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler PreviousHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.PreviousHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-283">获取父处理程序的 <see cref="T:System.Web.IHttpHandler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-283">Gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</span></span></summary>
        <value><span data-ttu-id="432bf-284"><see cref="T:System.Web.IHttpHandler" /> 实例，如果未找到上一个处理程序，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-284">An <see cref="T:System.Web.IHttpHandler" /> instance, or <see langword="null" /> if no previous handler was found.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-285"><xref:System.Web.HttpContext.PreviousHandler%2A>属性对应于上次处理程序执行当前请求前。</span><span class="sxs-lookup"><span data-stu-id="432bf-285">The <xref:System.Web.HttpContext.PreviousHandler%2A> property corresponds to the last handler before the current request was executed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.Handler" />
        <altmember cref="P:System.Web.HttpContext.CurrentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileBase Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Profile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Profile As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-286">获取当前用户配置文件的 <see cref="T:System.Web.Profile.ProfileBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-286">Gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</span></span></summary>
        <value><span data-ttu-id="432bf-287">如果应用程序配置文件包含配置文件的属性的定义，则为 <see cref="T:System.Web.Profile.ProfileBase" />；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-287">A <see cref="T:System.Web.Profile.ProfileBase" /> if the application configuration file contains a definition for the profile's properties; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-288">A<xref:System.Web.HttpContext.Profile%2A>属性用于持久存储的使用类型安全的 API 的结构化数据。</span><span class="sxs-lookup"><span data-stu-id="432bf-288">A <xref:System.Web.HttpContext.Profile%2A> property is used for persistent storage of structured data using a type-safe API.</span></span> <span data-ttu-id="432bf-289">当<xref:System.Web.HttpContext.Profile%2A>访问属性，但未指定任何值，则返回的空实例`null`不会返回。</span><span class="sxs-lookup"><span data-stu-id="432bf-289">When a <xref:System.Web.HttpContext.Profile%2A> property is accessed but no value is present, an empty instance is returned; `null` is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Web.Profile" />
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public void RemapHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemapHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemapHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="432bf-290">应处理请求的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-290">The object that should process the request.</span></span></param>
        <summary><span data-ttu-id="432bf-291">用于为请求指定处理程序。</span><span class="sxs-lookup"><span data-stu-id="432bf-291">Enables you to specify a handler for the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-292">如果你设置`handler`到`null`，默认处理程序用于处理该请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-292">If you set `handler` to `null`, the default handler is used to process the request.</span></span> <span data-ttu-id="432bf-293">你可以设置`handler`到异步处理程序或同步的处理程序。</span><span class="sxs-lookup"><span data-stu-id="432bf-293">You can set `handler` to either an asynchronous handler or to an synchronous handler.</span></span> <span data-ttu-id="432bf-294">处理程序必须实现<xref:System.Web.IHttpHandler>接口。</span><span class="sxs-lookup"><span data-stu-id="432bf-294">The handler must implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="432bf-295"><see cref="M:System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)" /> 方法是在发生 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> 事件之后调用的。</span><span class="sxs-lookup"><span data-stu-id="432bf-295">The <see cref="M:System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)" /> method was called after the <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-296">为当前 HTTP 请求获取 <see cref="T:System.Web.HttpRequest" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-296">Gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-297">当前 HTTP 请求的 <see cref="T:System.Web.HttpRequest" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-297">The <see cref="T:System.Web.HttpRequest" /> for the current HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-298"><xref:System.Web.HttpContext.Request%2A>属性提供以编程方式访问的属性和方法<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="432bf-298">The <xref:System.Web.HttpContext.Request%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="432bf-299">因为 ASP.NET 页包含对的默认引用<xref:System.Web>命名空间 (其中包含<xref:System.Web.HttpContext>类)，你可以引用的成员<xref:System.Web.HttpRequest>而无需使用完全限定的类参考将.aspx 页上<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="432bf-299">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpRequest> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="432bf-300">例如，你可以使用`Request.Browser`用于获得客户端浏览器的功能。</span><span class="sxs-lookup"><span data-stu-id="432bf-300">For example, you can use `Request.Browser` to get the capabilities of the client browser.</span></span> <span data-ttu-id="432bf-301">但是，如果你想要使用的成员<xref:System.Web.HttpRequest>从 ASP.NET 代码隐藏模块，你必须包括对引用<xref:System.Web>模块和对这两个当前处于活动状态的请求/响应上下文的完全限定的引用命名空间中与类在<xref:System.Web>你想要使用。</span><span class="sxs-lookup"><span data-stu-id="432bf-301">However, if you want to use the members of <xref:System.Web.HttpRequest> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to both the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="432bf-302">例如，在代码隐藏页必须指定完全限定的名称`HttpContext.Current.Request.Browser`。</span><span class="sxs-lookup"><span data-stu-id="432bf-302">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.Request.Browser`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="432bf-303">如果你尝试使用此属性，ASP.NET 将引发异常时<xref:System.Web.HttpRequest>对象不可用。</span><span class="sxs-lookup"><span data-stu-id="432bf-303">ASP.NET will throw an exception if you try to use this property when the <xref:System.Web.HttpRequest> object is not available.</span></span> <span data-ttu-id="432bf-304">例如，这是在 Application_Start 方法的 Global.asax 文件中，或者从 Application_Start 方法调用的方法中则为 true。</span><span class="sxs-lookup"><span data-stu-id="432bf-304">For example, this would be true in the Application_Start method of the Global.asax file, or in a method that is called from the Application_Start method.</span></span> <span data-ttu-id="432bf-305">在该时间具有尚未创建任何 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="432bf-305">At that time no HTTP request has been created yet.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="432bf-306">Web 应用程序正在 IIS 7 的“集成”模式下运行。</span><span class="sxs-lookup"><span data-stu-id="432bf-306">The Web application is running under IIS 7 in Integrated mode.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-307">获取当前 HTTP 响应的 <see cref="T:System.Web.HttpResponse" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-307">Gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="432bf-308">当前 HTTP 响应的 <see cref="T:System.Web.HttpResponse" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-308">The <see cref="T:System.Web.HttpResponse" /> for the current HTTP response.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-309"><xref:System.Web.HttpContext.Response%2A>属性提供以编程方式访问的属性和方法<xref:System.Web.HttpResponse>类。</span><span class="sxs-lookup"><span data-stu-id="432bf-309">The <xref:System.Web.HttpContext.Response%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.HttpResponse> class.</span></span> <span data-ttu-id="432bf-310">因为 ASP.NET 页包含对的默认引用<xref:System.Web>命名空间 (其中包含<xref:System.Web.HttpContext>类)，你可以引用的成员<xref:System.Web.HttpContext>而无需使用完全限定的类参考将.aspx 页上<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="432bf-310">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpContext> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="432bf-311">例如，你可以使用`Response.Write("some output")`要写入 HTTP 输出流的输出。</span><span class="sxs-lookup"><span data-stu-id="432bf-311">For example, you can use `Response.Write("some output")` to write output to an HTTP output stream.</span></span> <span data-ttu-id="432bf-312">但是，如果你想要使用的成员<xref:System.Web.HttpResponse>从 ASP.NET 代码隐藏模块，你必须包括对引用<xref:System.Web>模块和对当前处于活动状态的请求/响应上下文和中的类的完全限定的引用命名空间中<xref:System.Web>你想要使用。</span><span class="sxs-lookup"><span data-stu-id="432bf-312">However, if you want to use the members of <xref:System.Web.HttpResponse> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="432bf-313">例如，在代码隐藏页必须指定完全限定的名称`HttpContext.Current.Response.Write("some output")`。</span><span class="sxs-lookup"><span data-stu-id="432bf-313">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.Response.Write("some output")`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="432bf-314">Web 应用程序正在 IIS 7 的“集成”模式下运行。</span><span class="sxs-lookup"><span data-stu-id="432bf-314">The Web application is running under IIS 7 in Integrated mode.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="432bf-315">将对资源的请求重定向到另一路径，使其不同于所请求 URL 指示的路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-315">Redirects a request for a resource to a different path than the one that is indicated by the requested URL.</span></span> <span data-ttu-id="432bf-316"><see cref="Overload:System.Web.HttpContext.RewritePath" /> 用于无 Cookie 会话状态中，作用是从 URL 中剥离会话 ID。</span><span class="sxs-lookup"><span data-stu-id="432bf-316"><see cref="Overload:System.Web.HttpContext.RewritePath" /> is used in cookieless session state to strip session IDs from URLs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="432bf-317">内部重写路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-317">The internal rewrite path.</span></span></param>
        <summary><span data-ttu-id="432bf-318">使用给定路径重写 URL。</span><span class="sxs-lookup"><span data-stu-id="432bf-318">Rewrites the URL using the given path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-319"><xref:System.Web.HttpContext.RewritePath%28System.String%29>方法将对资源的请求重定向到由所请求 URL 指示的一个以外的其他路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-319">The <xref:System.Web.HttpContext.RewritePath%28System.String%29> method redirects a request for a resource to a different path than the one that is indicated by the requested URL.</span></span> <span data-ttu-id="432bf-320">如果你必须重置虚拟路径，以便从服务器资源的客户端的请求正确解析，请使用采用此方法的重载`rebaseClientPath`参数并将参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="432bf-320">If you have to reset the virtual path so that requests from the client for server resources resolve correctly, use the overload of this method that takes the `rebaseClientPath` parameter and set the parameter to `false`.</span></span>  
  
 <span data-ttu-id="432bf-321">URL 重写可当你想要重新构建 Web 应用程序中的页和你想要确保已将加入书签旧 Url 的人可以仍使用它们后您移动页面的不同而不同。</span><span class="sxs-lookup"><span data-stu-id="432bf-321">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="432bf-322">URL 重写时，可用于以透明方式将请求转发到新页的位置。</span><span class="sxs-lookup"><span data-stu-id="432bf-322">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="432bf-323">如果你想要使站点能够使用搜索引擎，会更加友好的用户进行了优化的 Url，更可靠的替代方法是使用 ASP.NET 路由。</span><span class="sxs-lookup"><span data-stu-id="432bf-323">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="432bf-324">有关详细信息，请参阅[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="432bf-324">For more information, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-325">下面的示例演示如何使用<xref:System.Web.HttpContext.RewritePath%2A>方法，以使网站以响应不反映在网站上的文件结构的 Url。</span><span class="sxs-lookup"><span data-stu-id="432bf-325">The following example shows how to use the <xref:System.Web.HttpContext.RewritePath%2A> method to enable a Web site to respond to URLs that do not reflect the file structure in the Web site.</span></span> <span data-ttu-id="432bf-326">第一个代码块是名为 RewritePath.aspx ASP.NET 网页。</span><span class="sxs-lookup"><span data-stu-id="432bf-326">The first block of code is an ASP.NET Web page that is named RewritePath.aspx.</span></span> <span data-ttu-id="432bf-327">它需要查询字符串。</span><span class="sxs-lookup"><span data-stu-id="432bf-327">It requires a query string.</span></span> <span data-ttu-id="432bf-328">如果你的站点的名称是 WebSite1，URL`http://localhost/WebSite1/RewritePath.aspx?page=1`浏览器中显示"第 1 页"。</span><span class="sxs-lookup"><span data-stu-id="432bf-328">If the name of your site is WebSite1, the URL `http://localhost/WebSite1/RewritePath.aspx?page=1` displays "Page 1" in the browser.</span></span> <span data-ttu-id="432bf-329">遵循网页的代码块是`Application_BeginRequest`Global.asax 文件中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="432bf-329">The block of code that follows the Web page is the `Application_BeginRequest` event handler in the Global.asax file.</span></span> <span data-ttu-id="432bf-330">此代码的 Url 截获请求如`http://localhost/WebSite1/page1`并将它们转换到窗体进行处理之前所需的 RewritePath.aspx。</span><span class="sxs-lookup"><span data-stu-id="432bf-330">This code intercepts requests for URLs such as `http://localhost/WebSite1/page1` and converts them to the form that is required for RewritePath.aspx before they are processed.</span></span> <span data-ttu-id="432bf-331">因此，URL `http://localhost/WebSite1/page1` RewritePath.aspx 调用带有浏览器中显示"第 1 页"的查询字符串参数。</span><span class="sxs-lookup"><span data-stu-id="432bf-331">Therefore, the URL `http://localhost/WebSite1/page1` invokes RewritePath.aspx with the query-string parameter that displays "Page 1" in the browser.</span></span> <span data-ttu-id="432bf-332">如果 URL，例如`http://localhost/WebSite1/page1`收到时，重载<xref:System.Web.HttpContext.RewritePath%2A>调用，使您可以提供一个值<xref:System.Web.HttpRequest.PathInfo%2A>属性，以及查询字符串参数。</span><span class="sxs-lookup"><span data-stu-id="432bf-332">If a URL such as `http://localhost/WebSite1/page1` is received, an overload of <xref:System.Web.HttpContext.RewritePath%2A> is invoked that enables you to provide a value for the <xref:System.Web.HttpRequest.PathInfo%2A> property as well as a query string parameter.</span></span>  
  
 [!code-aspx-csharp[HttpContext_RewritePath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpContext_ReWritePath/CS/rewritepath.aspx#2)]
 [!code-aspx-vb[HttpContext_RewritePath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpContext_ReWritePath/VB/rewritepath.aspx#2)]  
  
 [!code-csharp[HttpContext_RewritePath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpContext_ReWritePath/CS/global.asax#1)]
 [!code-vb[HttpContext_RewritePath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpContext_ReWritePath/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="432bf-333"><paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-333">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="432bf-334"><paramref name="path" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-334">The <paramref name="path" /> parameter is not in the current application's root directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string path, bool rebaseClientPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string path, bool rebaseClientPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (path As String, rebaseClientPath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ path, bool rebaseClientPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="432bf-335">内部重写路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-335">The internal rewrite path.</span></span></param>
        <param name="rebaseClientPath">
          <span data-ttu-id="432bf-336">如果重置虚拟路径，则为 <see langword="true" />；如果保持虚拟路径不变，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-336"><see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</span></span></param>
        <summary><span data-ttu-id="432bf-337">使用给定路径和一个布尔值重写 URL，该布尔值用于指定是否修改服务器资源的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-337">Rewrites the URL using the given path and a Boolean value that specifies whether the virtual path for server resources is modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-338"><xref:System.Web.HttpContext.RewritePath%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>方法由调用<xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=nameWithType>方法替换`rebaseClientPath`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="432bf-338">The <xref:System.Web.HttpContext.RewritePath%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> method is called by the <xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=nameWithType> method with the `rebaseClientPath` parameter set to `true`.</span></span> <span data-ttu-id="432bf-339">若要确保不会修改用于构造资源路径的虚拟路径，将设置`rebaseClientPath`参数`false`。</span><span class="sxs-lookup"><span data-stu-id="432bf-339">To ensure that the virtual path that is used to construct paths to resources is not modified, set the `rebaseClientPath` parameter to `false`.</span></span> <span data-ttu-id="432bf-340">在其中你可能想要设置的常见方案`rebaseClientPath`到`false`时会需要重写 URL，并且是使用主题，并将 URL 重定向到位于比请求的资源的其他文件夹中的资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-340">A common scenario in which you might want to set `rebaseClientPath` to `false` is when you need to rewrite the URL, and you are using themes and redirecting the URL to a resource located in a different folder than the requested resource.</span></span>  
  
 <span data-ttu-id="432bf-341">URL 重写可当你想要重新构建 Web 应用程序中的页和你想要确保已将加入书签旧 Url 的人可以仍使用它们后您移动页面的不同而不同。</span><span class="sxs-lookup"><span data-stu-id="432bf-341">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="432bf-342">URL 重写时，可用于以透明方式将请求转发到新页的位置。</span><span class="sxs-lookup"><span data-stu-id="432bf-342">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="432bf-343">如果你想要使站点能够使用搜索引擎，会更加友好的用户进行了优化的 Url，更可靠的替代方法是使用 ASP.NET 路由。</span><span class="sxs-lookup"><span data-stu-id="432bf-343">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="432bf-344">有关详细信息，请参阅[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="432bf-344">For more information, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-345">有关代码示例，请参阅<xref:System.Web.HttpContext.RewritePath%28System.String%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="432bf-345">For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="432bf-346"><paramref name="path" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-346">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="432bf-347"><paramref name="path" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-347">The <paramref name="path" /> parameter is not in the current application's root directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string filePath, string pathInfo, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="432bf-348">内部重写路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-348">The internal rewrite path.</span></span></param>
        <param name="pathInfo"><span data-ttu-id="432bf-349">资源的附加路径信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-349">Additional path information for a resource.</span></span> <span data-ttu-id="432bf-350">有关详情，请参阅<see cref="P:System.Web.HttpRequest.PathInfo" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-350">For more information, see <see cref="P:System.Web.HttpRequest.PathInfo" />.</span></span></param>
        <param name="queryString"><span data-ttu-id="432bf-351">请求查询字符串。</span><span class="sxs-lookup"><span data-stu-id="432bf-351">The request query string.</span></span></param>
        <summary><span data-ttu-id="432bf-352">使用给定的路径、路径信息和查询字符串信息重写 URL。</span><span class="sxs-lookup"><span data-stu-id="432bf-352">Rewrites the URL by using the given path, path information, and query string information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-353"><xref:System.Web.HttpContext.RewritePath%2A>方法重对资源的请求定向到另一个资源，而无需更改 URL。</span><span class="sxs-lookup"><span data-stu-id="432bf-353">The <xref:System.Web.HttpContext.RewritePath%2A> method redirects a request for a resource to another resource without changing the URL.</span></span>  
  
 <span data-ttu-id="432bf-354">`filePath`参数不包括`pathInfo`参数内容。</span><span class="sxs-lookup"><span data-stu-id="432bf-354">The `filePath` parameter does not include the `pathInfo` parameter content.</span></span> <span data-ttu-id="432bf-355">为 URL http://www.microsoft.com/virdir/page.html/tail、`filePath`参数是http://www.microsoft.com/virdir/page.html，和`pathInfo`参数是结尾。</span><span class="sxs-lookup"><span data-stu-id="432bf-355">For the URL http://www.microsoft.com/virdir/page.html/tail, the `filePath` parameter is http://www.microsoft.com/virdir/page.html, and the `pathInfo` parameter is tail.</span></span>  
  
 <span data-ttu-id="432bf-356">URL 重写可当你想要重新构建 Web 应用程序中的页和你想要确保已将加入书签旧 Url 的人可以仍使用它们后您移动页面的不同而不同。</span><span class="sxs-lookup"><span data-stu-id="432bf-356">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="432bf-357">URL 重写时，可用于以透明方式将请求转发到新页的位置。</span><span class="sxs-lookup"><span data-stu-id="432bf-357">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="432bf-358">如果你想要使站点能够使用搜索引擎，会更加友好的用户进行了优化的 Url，更可靠的替代方法是使用 ASP.NET 路由。</span><span class="sxs-lookup"><span data-stu-id="432bf-358">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="432bf-359">有关详细信息，请参阅[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="432bf-359">For more information, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-360">有关代码示例，包括举例说明了此方法重载时，请参阅<xref:System.Web.HttpContext.RewritePath%28System.String%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="432bf-360">For a code example, including an example of this method overload, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="432bf-361"><paramref name="path" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-361">The <paramref name="path" /> parameter is not in the current application's root directory.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="432bf-362"><paramref name="filePath" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-362">The <paramref name="filePath" /> parameter is not in the current application's root directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="432bf-363">服务请求的资源的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-363">The virtual path to the resource that services the request.</span></span></param>
        <param name="pathInfo"><span data-ttu-id="432bf-364">用于 URL 重定向的附加路径信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-364">Additional path information to use for the URL redirect.</span></span> <span data-ttu-id="432bf-365">有关详情，请参阅<see cref="P:System.Web.HttpRequest.PathInfo" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-365">For more information, see <see cref="P:System.Web.HttpRequest.PathInfo" />.</span></span></param>
        <param name="queryString"><span data-ttu-id="432bf-366">用于 URL 重定向的请求查询字符串。</span><span class="sxs-lookup"><span data-stu-id="432bf-366">The request query string to use for the URL redirect.</span></span></param>
        <param name="setClientFilePath">
          <span data-ttu-id="432bf-367">若要将用于客户端资源的文件路径设置为 filePath<c></c> 参数的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-367"><see langword="true" /> to set the file path used for client resources to the value of the <c>filePath</c> parameter; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="432bf-368">使用给定虚拟路径、路径信息、查询字符串信息和一个布尔值重写 URL，该布尔值用于指定是否将客户端文件路径设置为重写路径。</span><span class="sxs-lookup"><span data-stu-id="432bf-368">Rewrites the URL using the given virtual path, path information, query string information, and a Boolean value that specifies whether the client file path is set to the rewrite path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-369">`filePath`参数不包括的内容`pathInfo`参数。</span><span class="sxs-lookup"><span data-stu-id="432bf-369">The `filePath` parameter does not include the content of the `pathInfo` parameter.</span></span> <span data-ttu-id="432bf-370">为 URL http://www.microsoft.com/virdir/page.html/tail、`filePath`参数是http://www.microsoft.com/virdir/page.html，和`pathInfo`参数是结尾。</span><span class="sxs-lookup"><span data-stu-id="432bf-370">For the URL http://www.microsoft.com/virdir/page.html/tail, the `filePath` parameter is http://www.microsoft.com/virdir/page.html, and the `pathInfo` parameter is tail.</span></span>  
  
 <span data-ttu-id="432bf-371">若要确保不会修改用于构造资源路径的虚拟路径，将设置`setClientFilePath`参数`false`。</span><span class="sxs-lookup"><span data-stu-id="432bf-371">To ensure that the virtual path that is used to construct paths to resources is not modified, set the `setClientFilePath` parameter to `false`.</span></span> <span data-ttu-id="432bf-372">在其中你可能想要设置的常见方案`setClientFilePath`到`false`时会需要重写 URL，并且是使用主题，并将 URL 重定向到位于比请求的资源的其他文件夹中的资源。</span><span class="sxs-lookup"><span data-stu-id="432bf-372">A common scenario in which you might want to set `setClientFilePath` to `false` is when you need to rewrite the URL, and you are using themes and redirecting the URL to a resource located in a different folder than the requested resource.</span></span>  
  
 <span data-ttu-id="432bf-373">URL 重写可当你想要重新构建 Web 应用程序中的页和你想要确保已将加入书签旧 Url 的人可以仍使用它们后您移动页面的不同而不同。</span><span class="sxs-lookup"><span data-stu-id="432bf-373">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="432bf-374">URL 重写时，可用于以透明方式将请求转发到新页的位置。</span><span class="sxs-lookup"><span data-stu-id="432bf-374">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="432bf-375">如果你想要使站点能够使用搜索引擎，会更加友好的用户进行了优化的 Url，更可靠的替代方法是使用 ASP.NET 路由。</span><span class="sxs-lookup"><span data-stu-id="432bf-375">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="432bf-376">有关详细信息，请参阅[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="432bf-376">For more information, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-377">有关代码示例，请参阅<xref:System.Web.HttpContext.RewritePath%28System.String%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="432bf-377">For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="432bf-378"><paramref name="path" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-378">The <paramref name="path" /> parameter is not in the current application's root directory.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="432bf-379"><paramref name="filePath" /> 参数不在当前应用程序的根目录中。</span><span class="sxs-lookup"><span data-stu-id="432bf-379">The <paramref name="filePath" /> parameter is not in the current application's root directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-380">获取提供用于处理 Web 请求的方法的 <see cref="T:System.Web.HttpServerUtility" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-380">Gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods used in processing Web requests.</span></span></summary>
        <value><span data-ttu-id="432bf-381">当前 HTTP 请求的 <see cref="T:System.Web.HttpServerUtility" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-381">The <see cref="T:System.Web.HttpServerUtility" /> for the current HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-382"><xref:System.Web.HttpContext.Server%2A>属性提供以编程方式访问的属性和方法<xref:System.Web.HttpServerUtility>类。</span><span class="sxs-lookup"><span data-stu-id="432bf-382">The <xref:System.Web.HttpContext.Server%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="432bf-383">因为 ASP.NET 页包含对的默认引用<xref:System.Web>命名空间 (其中包含<xref:System.Web.HttpContext>类)，你可以引用的成员<xref:System.Web.HttpContext>而无需使用完全限定的类参考将.aspx 页上<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="432bf-383">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpContext> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="432bf-384">例如，你可以使用`Server.CreateObject("MyCOMComponent")`在服务器上创建 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="432bf-384">For example, you can use `Server.CreateObject("MyCOMComponent")` to create an instance of a COM object on the server.</span></span> <span data-ttu-id="432bf-385">但是，如果你想要使用的成员<xref:System.Web.HttpServerUtility>从 ASP.NET 代码隐藏模块，你必须包括对引用<xref:System.Web>模块和对这两个当前处于活动状态的请求/响应上下文的完全限定的引用命名空间中与类在<xref:System.Web>你想要使用。</span><span class="sxs-lookup"><span data-stu-id="432bf-385">However, if you want to use the members of <xref:System.Web.HttpServerUtility> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to both the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="432bf-386">例如，在代码隐藏页必须指定完全限定的名称`HttpContext.Current.Server.CreateObject("MyCOMComponent")`。</span><span class="sxs-lookup"><span data-stu-id="432bf-386">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.Server.CreateObject("MyCOMComponent")`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-387">为当前 HTTP 请求获取 <see cref="T:System.Web.SessionState.HttpSessionState" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-387">Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-388">当前 HTTP 请求的 <see cref="T:System.Web.SessionState.HttpSessionState" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-388">The <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-389"><xref:System.Web.HttpContext.Session%2A>属性提供以编程方式访问的属性和方法<xref:System.Web.SessionState.HttpSessionState>类。</span><span class="sxs-lookup"><span data-stu-id="432bf-389">The <xref:System.Web.HttpContext.Session%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.SessionState.HttpSessionState> class.</span></span>  
  
 <span data-ttu-id="432bf-390">若要使用会话状态，你必须启用它。</span><span class="sxs-lookup"><span data-stu-id="432bf-390">In order to use session state you have to enable it.</span></span> <span data-ttu-id="432bf-391">有关如何启用会话状态的信息，请参阅**配置会话状态**中[ASP.NET 会话状态概述](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)。</span><span class="sxs-lookup"><span data-stu-id="432bf-391">For information about how to enable session state, see **Configuring Session State** in [ASP.NET Session State Overview](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).</span></span>  
  
 <span data-ttu-id="432bf-392">有关如何将值保存在会话状态的信息，请参阅[如何： 保存会话状态中的值](http://msdn.microsoft.com/library/a6cb2e3a-df49-4b12-9d9a-eed45541c165)。</span><span class="sxs-lookup"><span data-stu-id="432bf-392">For information about how to save values in session state, see [How to: Save Values in Session State](http://msdn.microsoft.com/library/a6cb2e3a-df49-4b12-9d9a-eed45541c165).</span></span> <span data-ttu-id="432bf-393">有关如何从会话状态中读取值的信息，请参阅[如何： 从会话状态的读取值](http://msdn.microsoft.com/library/2ef449bc-5c17-4785-b7cf-378c601af8f5)。</span><span class="sxs-lookup"><span data-stu-id="432bf-393">For information about how to read values from session state, see [How to: Read Values from Session State](http://msdn.microsoft.com/library/2ef449bc-5c17-4785-b7cf-378c601af8f5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-394">下面的示例演示如何将值保存在会话状态以及如何从会话状态中读取值。</span><span class="sxs-lookup"><span data-stu-id="432bf-394">The following examples show how to save values in session state and how to read values from session state.</span></span>  
  
 <span data-ttu-id="432bf-395">这些示例需要：</span><span class="sxs-lookup"><span data-stu-id="432bf-395">These examples require:</span></span>  
  
-   <span data-ttu-id="432bf-396">ASP.NET 应用程序启用了会话状态。</span><span class="sxs-lookup"><span data-stu-id="432bf-396">An ASP.NET application that has session state enabled.</span></span>  
  
-   <span data-ttu-id="432bf-397">有权访问的 Web 窗体页类<xref:System.Web.UI.Page.Session%2A?displayProperty=nameWithType>属性或有权访问任何类<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-397">A Web Forms page class that has access to the <xref:System.Web.UI.Page.Session%2A?displayProperty=nameWithType> property, or any class that has access to the <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
```csharp  
string firstName = "Jeff";  
string lastName = "Smith";  
string city = "Seattle";  
  
// Save to session state in a Web Forms page class.  
Session["FirstName"] = firstName;  
Session["LastName"] = lastName;  
Session["City"] = city;  
  
// Read from session state in a Web Forms page class.  
firstName = (string)(Session["FirstName"]);  
lastName = (string)(Session["LastName"]);  
city = (string)(Session["City"]);  
  
// Outside of Web Forms page class, use HttpContext.Current.  
HttpContext context = HttpContext.Current;  
context.Session["FirstName"] = firstName;  
firstName = (string)(context.Session["FirstName"]);  
  
```  
  
```vb  
Dim firstName As String = "Jeff"  
Dim lastName As String = "Smith"  
Dim city As String = "Seattle"  
  
' Save to session state in a Web Forms page class.  
Session("FirstName") = firstName  
Session("LastName") = lastName  
Session("City") = city  
  
' Read from session state in a Web Forms page class.  
firstName = DirectCast(Session("FirstName"), String)  
lastName = DirectCast(Session("LastName"), String)  
city = DirectCast(Session("City"), String)  
  
' Outside of Web Forms page class, use HttpContext.Current.  
Dim context As HttpContext = HttpContext.Current  
context.Session("FirstName") = firstName  
firstName = DirectCast(context.Session("FirstName"), String)  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior"><span data-ttu-id="432bf-398">枚举值之一，该值指定需要什么类型的会话状态行为。</span><span class="sxs-lookup"><span data-stu-id="432bf-398">One of the enumeration values that specifies what type of session state behavior is required.</span></span></param>
        <summary><span data-ttu-id="432bf-399">设置支持 HTTP 请求所需的会话状态行为的类型。</span><span class="sxs-lookup"><span data-stu-id="432bf-399">Sets the type of session state behavior that is required in order to support an HTTP request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-400">在 ASP.NET 默认实现中，HTTP 请求处理程序指示是否它通过实现需要会话状态<xref:System.Web.SessionState.IRequiresSessionState>接口或<xref:System.Web.SessionState.IReadOnlySessionState>接口。</span><span class="sxs-lookup"><span data-stu-id="432bf-400">In the ASP.NET default implementation, an HTTP request handler indicates whether it requires session state by implementing the <xref:System.Web.SessionState.IRequiresSessionState> interface or the <xref:System.Web.SessionState.IReadOnlySessionState> interface.</span></span> <span data-ttu-id="432bf-401"><xref:System.Web.HttpContext.SetSessionStateBehavior%2A>方法和<xref:System.Web.SessionState.SessionStateBehavior>枚举让你提供有关哪种类型的会话状态支持是处理请求所必需的更多详细信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-401">The <xref:System.Web.HttpContext.SetSessionStateBehavior%2A> method and the <xref:System.Web.SessionState.SessionStateBehavior> enumeration let you provide more detail about what type of session state support is required in order to handle a request.</span></span> <span data-ttu-id="432bf-402">有关详细信息，请参见 <xref:System.Web.SessionState.SessionStateBehavior> 枚举。</span><span class="sxs-lookup"><span data-stu-id="432bf-402">For more information, see the <xref:System.Web.SessionState.SessionStateBehavior> enumeration.</span></span>  
  
 <span data-ttu-id="432bf-403"><xref:System.Web.HttpContext.SetSessionStateBehavior%2A>前，必须调用方法<xref:System.Web.HttpApplication.AcquireRequestState>管道事件。</span><span class="sxs-lookup"><span data-stu-id="432bf-403">The <xref:System.Web.HttpContext.SetSessionStateBehavior%2A> method must be called before the <xref:System.Web.HttpApplication.AcquireRequestState> pipeline event.</span></span> <span data-ttu-id="432bf-404">或此事件发生后会发生的调用将导致<xref:System.InvalidOperationException>异常。</span><span class="sxs-lookup"><span data-stu-id="432bf-404">Calls that occur during or after this event will cause an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="432bf-405">该方法是在引发 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> 事件之后调用的。</span><span class="sxs-lookup"><span data-stu-id="432bf-405">The method was called after the <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event was raised.</span></span></exception>
        <altmember cref="T:System.Web.SessionState.SessionStateBehavior" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public bool SkipAuthorization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.SkipAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipAuthorization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipAuthorization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-406">获取或设置一个值，该值指定 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> 对象是否应跳过对当前请求的授权检查。</span><span class="sxs-lookup"><span data-stu-id="432bf-406">Gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-407">如果 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> 应跳过授权检查，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-407"><see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="432bf-408">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-408">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-409"><xref:System.Web.HttpContext.SkipAuthorization%2A>属性旨在需要重定向到一个页面，让匿名连接的身份验证模块用于高级用途。</span><span class="sxs-lookup"><span data-stu-id="432bf-409">The <xref:System.Web.HttpContext.SkipAuthorization%2A> property is intended for advanced use by authentication modules that need to redirect to a page that allows anonymous connections.</span></span> <span data-ttu-id="432bf-410">窗体身份验证模块和 Passport 身份验证模块都设置<xref:System.Web.HttpContext.SkipAuthorization%2A>时重定向到配置的登录页。</span><span class="sxs-lookup"><span data-stu-id="432bf-410">The Forms authentication module and Passport authentication module both set <xref:System.Web.HttpContext.SkipAuthorization%2A> when redirecting to a configured logon page.</span></span> <span data-ttu-id="432bf-411">设置<xref:System.Web.HttpContext.SkipAuthorization%2A>需要`ControlPrincipal`标志设置。</span><span class="sxs-lookup"><span data-stu-id="432bf-411">Setting <xref:System.Web.HttpContext.SkipAuthorization%2A> requires the `ControlPrincipal` flag to be set.</span></span> <span data-ttu-id="432bf-412">璝惠`ControlPrincipal`标志，请参阅<xref:System.Security.Permissions.SecurityPermissionFlag>。</span><span class="sxs-lookup"><span data-stu-id="432bf-412">For information about the `ControlPrincipal` flag, see <xref:System.Security.Permissions.SecurityPermissionFlag>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (service As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ service) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="432bf-413">要将服务提供商设置为的 <see cref="T:System.Web.HttpContext" /> 服务类型。</span><span class="sxs-lookup"><span data-stu-id="432bf-413">A type of <see cref="T:System.Web.HttpContext" /> service to set the service provider to.</span></span></param>
        <summary><span data-ttu-id="432bf-414">返回当前服务类型的对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-414">Returns an object for the current service type.</span></span></summary>
        <returns><span data-ttu-id="432bf-415">如果找到服务，则为 <see cref="T:System.Web.HttpContext" />；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-415">A <see cref="T:System.Web.HttpContext" />; otherwise, <see langword="null" /> if no service is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-416">此方法可用于访问基础<xref:System.Web.HttpWorkerRequest>对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-416">This method is useful to gain access to the underlying <xref:System.Web.HttpWorkerRequest> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public bool ThreadAbortOnTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.ThreadAbortOnTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreadAbortOnTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-417">获取或设置一个值，此值指示 ASP.NET 运行时是否应在请求超时时，调用为该请求提供服务的线程上的 <see cref="M:System.Threading.Thread.Abort" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-417">Gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</span></span></summary>
        <value>
          <span data-ttu-id="432bf-418">如果在线程超时时调用 <see cref="M:System.Threading.Thread.Abort" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-418"><see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="432bf-419">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-419">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-420">处理程序和使用的模块中<xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType>属性来实现协作取消，您可能希望禁用<xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType>请求超时时，默认情况下执行 ASP.NET 的行为。此属性设置为`false`可以帮助你确保取消和清理例程将不被中断 asp.net 的情况下运行。</span><span class="sxs-lookup"><span data-stu-id="432bf-420">In handlers and modules that are using the <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType> property to implement cooperative cancellation, you might wish to disable the <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType> behavior that ASP.NET performs by default when a request times out. Setting this property to `false` can help you make sure that cancellation and cleanup routines will run without being interrupted by ASP.NET.</span></span>  
  
 <span data-ttu-id="432bf-421">如果将此属性设置为`false`，ASP.NET 将不自动显示"请求的操作已超时"错误页这是发生超时时。</span><span class="sxs-lookup"><span data-stu-id="432bf-421">If you set this property to `false`, ASP.NET will not automatically display a "Request timed out" error page when a timeout occurs.</span></span> <span data-ttu-id="432bf-422">应用程序负责适当地设置响应内容。</span><span class="sxs-lookup"><span data-stu-id="432bf-422">The application is responsible for setting the response content appropriately.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public DateTime Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Timestamp { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-423">获取当前 HTTP 请求的初始时间戳。</span><span class="sxs-lookup"><span data-stu-id="432bf-423">Gets the initial timestamp of the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-424">当前 HTTP 请求的时间戳。</span><span class="sxs-lookup"><span data-stu-id="432bf-424">The timestamp of the current HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-425">从返回的时间戳<xref:System.Web.HttpContext.Timestamp%2A>属性是服务器的本地时间，在的实例化期间设置<xref:System.Web.HttpContext>对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-425">The timestamp returned from the <xref:System.Web.HttpContext.Timestamp%2A> property is the local time of the server and is set during the instantiation of the <xref:System.Web.HttpContext> object.</span></span> <span data-ttu-id="432bf-426">本地时间等于的 UTC 时间加上 UTC 偏移量。</span><span class="sxs-lookup"><span data-stu-id="432bf-426">The local time is equal to the UTC time plus the UTC offset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Trace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-427">获取当前 HTTP 响应的 <see cref="T:System.Web.TraceContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="432bf-427">Gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="432bf-428">当前 HTTP 响应的 <see cref="T:System.Web.TraceContext" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-428">The <see cref="T:System.Web.TraceContext" /> for the current HTTP response.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.User" />
      <MemberSignature Language="VB.NET" Value="Public Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-429">获取或设置当前 HTTP 请求的安全信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-429">Gets or sets security information for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="432bf-430">当前 HTTP 请求的安全信息。</span><span class="sxs-lookup"><span data-stu-id="432bf-430">Security information for the current HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432bf-431"><xref:System.Web.HttpContext.User%2A>属性提供以编程方式访问的属性和方法<xref:System.Security.Principal.IPrincipal>接口。</span><span class="sxs-lookup"><span data-stu-id="432bf-431">The <xref:System.Web.HttpContext.User%2A> property provides programmatic access to the properties and methods of the <xref:System.Security.Principal.IPrincipal> interface.</span></span>  
  
 <span data-ttu-id="432bf-432">因为 ASP.NET 页包含对的默认引用<xref:System.Web>命名空间 (其中包含<xref:System.Web.HttpContext>类)，你可以引用的成员<xref:System.Web.HttpContext>而无需使用完全限定的类参考将.aspx 页上<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="432bf-432">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpContext> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="432bf-433">例如，你可以使用`User.Identity.Name`运行获取代表当前进程的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="432bf-433">For example, you can use `User.Identity.Name` to get the name of the user on whose behalf the current process is running.</span></span> <span data-ttu-id="432bf-434">但是，如果你想要使用的成员<xref:System.Security.Principal.IPrincipal>从 ASP.NET 代码隐藏模块，你必须包括对引用<xref:System.Web>模块和对这两个当前处于活动状态的请求/响应上下文的完全限定的引用命名空间中与类在<xref:System.Web>你想要使用。</span><span class="sxs-lookup"><span data-stu-id="432bf-434">However, if you want to use the members of <xref:System.Security.Principal.IPrincipal> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to both the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="432bf-435">例如，在代码隐藏页必须指定完全限定的名称`HttpContext.Current.User.Identity.Name`。</span><span class="sxs-lookup"><span data-stu-id="432bf-435">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.User.Identity.Name`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="432bf-436">下面的示例演示如何访问通过当前用户的属性<xref:System.Web.HttpContext.User%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="432bf-436">The following example shows how to access properties of the current user through the <xref:System.Web.HttpContext.User%2A> property.</span></span> <span data-ttu-id="432bf-437">这些属性用于设置 Web 页的标题。</span><span class="sxs-lookup"><span data-stu-id="432bf-437">Those properties are used to set the title of the Web page.</span></span>  
  
 <span data-ttu-id="432bf-438">如果应用程序使用 Windows 身份验证，用户名称中包含域。</span><span class="sxs-lookup"><span data-stu-id="432bf-438">If the application uses Windows authentication, the user name includes the domain.</span></span> <span data-ttu-id="432bf-439">例如，页面标题将"域 \ 用户名的主页"。</span><span class="sxs-lookup"><span data-stu-id="432bf-439">For example, the page title would be "Home page for DOMAIN\username".</span></span>  
  
 [!code-csharp[System.Web.HttpContext.User#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpContext.User/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.HttpContext.User#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpContext.User/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public string WebSocketNegotiatedProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.WebSocketNegotiatedProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebSocketNegotiatedProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-440">获取用于 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 连接而从服务器发送到客户端的协商协议。</span><span class="sxs-lookup"><span data-stu-id="432bf-440">Gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="432bf-441">协商协议。</span><span class="sxs-lookup"><span data-stu-id="432bf-441">The negotiated protocol.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.WebSocketRequestedProtocols" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432bf-442">获取客户要求的子协议列表的有序列表。</span><span class="sxs-lookup"><span data-stu-id="432bf-442">Gets the ordered list of protocols requested by the client.</span></span></summary>
        <value><span data-ttu-id="432bf-443">请求的协议，如果不是 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 请求，或者列表不存在则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="432bf-443">The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>