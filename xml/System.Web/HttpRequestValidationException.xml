<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab81d57a6a7701b6a691d0f06c8590e73b45f39a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607851" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b30a6-101">从客户端收到作为请求数据一部分的潜在恶意输入字符串时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b30a6-101">The exception that is thrown when a potentially malicious input string is received from the client as part of the request data.</span>
      </span>
      <span data-ttu-id="b30a6-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b30a6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b30a6-103">通过限制并验证用户输入的 Web 应用，以防止依赖于恶意输入字符串的黑客攻击中至关重要。</span><span class="sxs-lookup"><span data-stu-id="b30a6-103">Constraining and validating user input is essential in a Web application to prevent hacker attacks that rely on malicious input strings.</span></span> <span data-ttu-id="b30a6-104">跨站点脚本攻击是此类攻击的一个示例。</span><span class="sxs-lookup"><span data-stu-id="b30a6-104">Cross-site scripting attacks are one example of such hacks.</span></span> <span data-ttu-id="b30a6-105">其他类型的恶意或不需要的数据可以先通过在请求中各种形式的输入。</span><span class="sxs-lookup"><span data-stu-id="b30a6-105">Other types of malicious or undesired data can be passed in a request through various forms of input.</span></span> <span data-ttu-id="b30a6-106">通过限制的低的级别应用程序中传递的数据类型，可以防止意外事件，即使使用你代码的程序员不要将放在正确验证技术就地。</span><span class="sxs-lookup"><span data-stu-id="b30a6-106">By limiting the kinds of data that is passed at a low level in an application, you can prevent undesirable events, even when programmers who are using your code do not put the proper validation techniques in place.</span></span>  
  
 <span data-ttu-id="b30a6-107">请求验证检测到潜在的恶意客户端输入，并引发此异常，中止处理请求。</span><span class="sxs-lookup"><span data-stu-id="b30a6-107">Request validation detects potentially malicious client input and throws this exception to abort processing of the request.</span></span> <span data-ttu-id="b30a6-108">请求中止可能表示试图从而危及应用程序，如跨站点脚本攻击的安全。</span><span class="sxs-lookup"><span data-stu-id="b30a6-108">A request abort can indicate an attempt to compromise the security of your application, such as a cross-site scripting attack.</span></span> <span data-ttu-id="b30a6-109">强烈建议你的应用程序显式检查与请求中止有关的所有输入。</span><span class="sxs-lookup"><span data-stu-id="b30a6-109">It is strongly recommended that your application explicitly check all input regarding request aborts.</span></span> <span data-ttu-id="b30a6-110">但是，你可以通过设置来禁用请求验证`validateRequest`属性中的指令`false`，下面的示例中所示：</span><span class="sxs-lookup"><span data-stu-id="b30a6-110">However, you can disable request validation by setting the `validateRequest` attribute in the  directive to `false`, as shown in the following example:</span></span>  
  
 `<%@ Page validateRequest="false" %>`  
  
 <span data-ttu-id="b30a6-111">若要禁用请求验证你的应用程序，必须修改或创建 Web.config 文件，你的应用程序并设置`validateRequest`属性`pages`部分到`false`，下面的示例中所示：</span><span class="sxs-lookup"><span data-stu-id="b30a6-111">To disable request validation for your application, you must modify or create a Web.config file for your application and set the `validateRequest` attribute of the `pages` section to `false`, as shown in the following example:</span></span>  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 <span data-ttu-id="b30a6-112">若要禁用请求验证你的服务器上的所有应用程序，你可以使用此修改 Machine.config 文件。</span><span class="sxs-lookup"><span data-stu-id="b30a6-112">To disable request validation for all applications on your server, you can make this modification to the Machine.config file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b30a6-113">强烈建议你的应用程序显式检查所有输入，它使用以及由 ASP.NET 执行请求验证。</span><span class="sxs-lookup"><span data-stu-id="b30a6-113">It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET.</span></span> <span data-ttu-id="b30a6-114">请求验证功能无法捕捉所有攻击，尤其是那些制作专门针对你的应用程序逻辑。</span><span class="sxs-lookup"><span data-stu-id="b30a6-114">The request validation feature cannot catch all attacks, especially those crafted specifically against your application logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b30a6-115">下面的代码示例演示如何通过检查恶意用户输入<xref:System.Web.HttpRequestValidationException>。</span><span class="sxs-lookup"><span data-stu-id="b30a6-115">The following code example demonstrates how to check for malicious user input by using an <xref:System.Web.HttpRequestValidationException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b30a6-116">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="b30a6-116">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="b30a6-117">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="b30a6-117">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="b30a6-118">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="b30a6-118">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b30a6-119">已重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-119">Overloaded.</span>
          </span>
          <span data-ttu-id="b30a6-120">创建 <see cref="T:System.Web.HttpRequestValidationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-120">Creates a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b30a6-121">创建 <see cref="T:System.Web.HttpRequestValidationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-121">Creates a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b30a6-122">描述错误的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-122">A string that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b30a6-123">创建具有指定错误消息的新的 <see cref="T:System.Web.HttpRequestValidationException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-123">Creates a new <see cref="T:System.Web.HttpRequestValidationException" /> exception with the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b30a6-124">内容`message`参数用于人工可读。</span><span class="sxs-lookup"><span data-stu-id="b30a6-124">The content of the `message` parameter is intended to be human readable.</span></span> <span data-ttu-id="b30a6-125">调用方<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29>构造函数需要确保`message`字符串已进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="b30a6-125">The caller of the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29> constructor is required to ensure that the `message` string has been localized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b30a6-126">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-126">An error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="b30a6-127">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-127">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="b30a6-128">如果此参数不为 <see langword="null" />，则在处理内部异常的 <see langword="catch" /> 块中会引发当前异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-128">If this parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b30a6-129">使用指定的错误消息和内部异常（导致此异常的原因）的引用来初始化 <see cref="T:System.Web.HttpRequestValidationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b30a6-129">Initializes a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b30a6-130">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="b30a6-130">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="b30a6-131"><xref:System.Exception.InnerException%2A>属性返回相同的值传递到<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>构造函数，或`null`如果<xref:System.Exception.InnerException%2A>属性不会提供内部异常值到<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="b30a6-131">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>