<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9021dfeb52e52baae75a5f4bd4ad108f46f25dba" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52366799" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <TypeSignature Language="F#" Value="type HttpRequestValidationException = class&#xA;    inherit HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>从客户端收到作为请求数据一部分的潜在恶意输入字符串时引发的异常。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 约束和验证用户输入是在 Web 应用程序以阻止黑客攻击，依赖于恶意输入字符串中必不可少。 跨站点脚本攻击是此类攻击的一个示例。 通过各种形式的输入，可以在请求中传递其他类型的恶意或不需要的数据。 通过限制的低级别的应用程序中传递的数据类型，可以防止不需要的事件，即使编程人员使用的你的代码不落实到位，有适当的验证方法。  
  
 请求验证检测到潜在的恶意客户端输入并引发此异常来中止处理请求。 请求中止可以表明攻击者尝试破坏应用程序，如跨站点脚本攻击的安全。 强烈建议你的应用程序显式检查所有输入有关请求中止。 但是，可以通过设置禁用请求验证`validateRequest`到指令中的属性`false`，如以下示例所示：  
  
 `<%@ Page validateRequest="false" %>`  
  
 若要为应用程序禁用请求验证，必须修改或创建一个 Web.config 文件对应用程序和组`validateRequest`的属性`pages`部分`false`，如以下示例所示：  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 若要禁用请求验证的服务器上的所有应用程序，可以执行此项修改 Machine.config 文件。  
  
> [!NOTE]
>  强烈建议你的应用程序显式检查所有输入，它使用以及由 ASP.NET 请求验证。 请求验证功能不能捕获所有攻击，尤其是那些专门针对应用程序逻辑精心设计。  
  
   
  
## Examples  
 下面的代码示例演示如何使用检查恶意用户输入<xref:System.Web.HttpRequestValidationException>。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>已重载。 创建 <see cref="T:System.Web.HttpRequestValidationException" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.HttpRequestValidationException" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">描述错误的字符串。</param>
        <summary>创建具有指定错误消息的新的 <see cref="T:System.Web.HttpRequestValidationException" /> 异常。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容`message`参数用于人工可读。 调用方<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29>构造函数需要确保`message`本地化字符串。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string * Exception -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">解释异常原因的错误消息。</param>
        <param name="innerException">导致当前异常的异常。 如果此参数不为 <see langword="null" />，则在处理内部异常的 <see langword="catch" /> 块中会引发当前异常。</param>
        <summary>使用指定的错误消息和内部异常（导致此异常的原因）的引用来初始化 <see cref="T:System.Web.HttpRequestValidationException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。 <xref:System.Exception.InnerException%2A>属性将返回相同的值传递到<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>构造函数，或`null`如果<xref:System.Exception.InnerException%2A>属性不提供对内部异常值<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>