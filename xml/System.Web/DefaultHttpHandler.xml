<Type Name="DefaultHttpHandler" FullName="System.Web.DefaultHttpHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3ae51d18f50d031db15fc74c22836ad06f02cbb" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52212354" /></Metadata><TypeSignature Language="C#" Value="public class DefaultHttpHandler : System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHttpHandler extends System.Object implements class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DefaultHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHttpHandler&#xA;Implements IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultHttpHandler : System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type DefaultHttpHandler = class&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ea030-101">表示默认 HTTP 处理程序的属性和方法。</span><span class="sxs-lookup"><span data-stu-id="ea030-101">Represents the properties and methods of a default HTTP handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-102">一个<xref:System.Web.DefaultHttpHandler>对象截获 HTTP 管道中的传入请求时都请求拦截已配置通过 Internet 信息服务 (IIS) 6.0，并且没有显式绑定应用于请求的扩展。</span><span class="sxs-lookup"><span data-stu-id="ea030-102">A <xref:System.Web.DefaultHttpHandler> object intercepts incoming requests in the HTTP pipeline when both request interception has been configured through Internet Information Services (IIS) 6.0 and no explicit  bindings apply to the requested extension.</span></span>  
  
 <span data-ttu-id="ea030-103">可以通过在 IIS 6.0 中引入的通配符应用程序映射功能设置请求拦截。</span><span class="sxs-lookup"><span data-stu-id="ea030-103">Request interception can be set up through the wildcard application mapping feature introduced in IIS 6.0.</span></span> <span data-ttu-id="ea030-104">有关详细信息，搜索[MSDN 库](https://go.microsoft.com/fwlink/?linkid=37118)有关使用通配符应用程序映射来将 URL 重新映射信息。</span><span class="sxs-lookup"><span data-stu-id="ea030-104">For more information, search the [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118) for information about using wildcard application maps to remap a URL.</span></span>  
  
 <span data-ttu-id="ea030-105"><xref:System.Web.DefaultHttpHandler>类实现<xref:System.Web.IHttpAsyncHandler>接口，以提供异步请求处理。</span><span class="sxs-lookup"><span data-stu-id="ea030-105">The <xref:System.Web.DefaultHttpHandler> class implements the <xref:System.Web.IHttpAsyncHandler> interface to provide asynchronous request processing.</span></span> <span data-ttu-id="ea030-106">有关 HTTP 处理程序的常规信息，请参阅[HTTP 处理程序和 HTTP 模块概述](https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b)。</span><span class="sxs-lookup"><span data-stu-id="ea030-106">For general information about HTTP handlers, see [HTTP Handlers and HTTP Modules Overview](https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span> <span data-ttu-id="ea030-107">此外，有关详细信息，请参阅以下：</span><span class="sxs-lookup"><span data-stu-id="ea030-107">Additionally, for more information see the following:</span></span>  
  
-   <span data-ttu-id="ea030-108">有关创建异步 HTTP 处理程序，请参阅[演练： 创建异步 HTTP 处理程序](https://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9)。</span><span class="sxs-lookup"><span data-stu-id="ea030-108">About creating asynchronous HTTP handlers, see [Walkthrough: Creating an Asynchronous HTTP Handler](https://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span></span>  
  
-   <span data-ttu-id="ea030-109">有关注册 HTTP 处理程序，请参阅[如何： 注册 HTTP 处理程序](https://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)。</span><span class="sxs-lookup"><span data-stu-id="ea030-109">About registering HTTP handlers, see [How to: Register HTTP Handlers](https://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="ea030-110">类可以派生<xref:System.Web.DefaultHttpHandler>类以提供自定义的处理的请求。</span><span class="sxs-lookup"><span data-stu-id="ea030-110">Classes can derive from the <xref:System.Web.DefaultHttpHandler> class to provide customized handling of requests.</span></span> <span data-ttu-id="ea030-111">异步 HTTP 处理程序派生自<xref:System.Web.DefaultHttpHandler>可以重写<xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>方法，以更改请求的处理方式。</span><span class="sxs-lookup"><span data-stu-id="ea030-111">An asynchronous HTTP handler that is derived from the <xref:System.Web.DefaultHttpHandler> could override the <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> method to change how requests are processed.</span></span>  
  
 <span data-ttu-id="ea030-112">一个<xref:System.Web.DefaultHttpHandler>不使用 ASP.NET 错误。</span><span class="sxs-lookup"><span data-stu-id="ea030-112">A <xref:System.Web.DefaultHttpHandler> does not use ASP.NET errors.</span></span> <span data-ttu-id="ea030-113">现有内容，它使用 IIS 错误或适当 ISAPI 自定义错误机制将工作不变。</span><span class="sxs-lookup"><span data-stu-id="ea030-113">Existing content that uses IIS errors or a propriety ISAPI custom error mechanism would work unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea030-114">下面的代码示例演示如何通过派生自实现自定义的 HTTP 处理程序<xref:System.Web.DefaultHttpHandler>类。</span><span class="sxs-lookup"><span data-stu-id="ea030-114">The following code example demonstrates how to implement a customized HTTP handler by deriving from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 [!code-csharp[System.Web.DefaultHttpHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/CS/source.cs#1)]
 [!code-vb[System.Web.DefaultHttpHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60"><span data-ttu-id="ea030-115">如何： 注册 HTTP 处理程序</span><span class="sxs-lookup"><span data-stu-id="ea030-115">How to: Register HTTP Handlers</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9"><span data-ttu-id="ea030-116">如何： 创建异步 HTTP 处理程序</span><span class="sxs-lookup"><span data-stu-id="ea030-116">How to: Create an Asynchronous HTTP Handler</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea030-117">初始化 <see cref="T:System.Web.DefaultHttpHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ea030-117">Initializes a new instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginProcessRequest (context As HttpContext, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="defaultHttpHandler.BeginProcessRequest (context, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ea030-118">为用于服务 HTTP 请求的内部服务器对象提供引用的对象。</span><span class="sxs-lookup"><span data-stu-id="ea030-118">An object that provides references to intrinsic server objects that are used to service HTTP requests.</span></span></param>
        <param name="callback"><span data-ttu-id="ea030-119">将在完成异步方法调用时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ea030-119">The method to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="ea030-120">如果 <paramref name="callback" /> 为 <see langword="null" />，则不调用委托。</span><span class="sxs-lookup"><span data-stu-id="ea030-120">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="state"><span data-ttu-id="ea030-121">处理请求所需的所有状态数据。</span><span class="sxs-lookup"><span data-stu-id="ea030-121">Any state data that is needed to process the request.</span></span></param>
        <summary><span data-ttu-id="ea030-122">启动对 HTTP 处理程序的异步调用。</span><span class="sxs-lookup"><span data-stu-id="ea030-122">Initiates an asynchronous call to the HTTP handler.</span></span></summary>
        <returns><span data-ttu-id="ea030-123">包含有关进程状态信息的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ea030-123">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-124">在创建用于异步 HTTP 处理程序时，您的处理程序必须实现异步<xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>和<xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>asp.net 以异步方式调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ea030-124">When creating an HTTP handler for asynchronous use, your handler must implement the asynchronous <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> and <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> methods that are called asynchronously by ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="ea030-125">处理请求的前提条件未满足，被请求的文件具有 .asp 后缀或请求是通过 POST 发送的。</span><span class="sxs-lookup"><span data-stu-id="ea030-125">The preconditions for processing a request fail and either the requested file has the suffix .asp or the request was sent through POST.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.DefaultHttpHandler.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea030-126">获取与当前 <see cref="T:System.Web.DefaultHttpHandler" /> 对象关联的上下文。</span><span class="sxs-lookup"><span data-stu-id="ea030-126">Gets the context that is associated with the current <see cref="T:System.Web.DefaultHttpHandler" /> object.</span></span></summary>
        <value><span data-ttu-id="ea030-127">一个包含当前上下文的 <see cref="T:System.Web.HttpContext" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ea030-127">An <see cref="T:System.Web.HttpContext" /> object that contains the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-128"><xref:System.Web.DefaultHttpHandler.Context%2A>属性提供对当前访问<xref:System.Web.HttpContext>派生类的对象。</span><span class="sxs-lookup"><span data-stu-id="ea030-128">The <xref:System.Web.DefaultHttpHandler.Context%2A> property provides access to the current <xref:System.Web.HttpContext> object for derived classes.</span></span> <span data-ttu-id="ea030-129"><xref:System.Web.HttpContext>对象提供对内部函数访问<xref:System.Web.HttpApplication.Request%2A>， <xref:System.Web.HttpApplication.Response%2A>，和<xref:System.Web.HttpApplication.Server%2A>请求的属性。</span><span class="sxs-lookup"><span data-stu-id="ea030-129">An <xref:System.Web.HttpContext> object provides access to the intrinsic <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, and <xref:System.Web.HttpApplication.Server%2A> properties for the request.</span></span> <span data-ttu-id="ea030-130">有关访问的上下文信息的详细信息，请参阅<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="ea030-130">For more information about accessing contextual information, see <xref:System.Web.HttpContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessRequest : IAsyncResult -&gt; unit&#xA;override this.EndProcessRequest : IAsyncResult -&gt; unit" Usage="defaultHttpHandler.EndProcessRequest result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ea030-131">一个包含有关进程状态的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ea030-131">An object that contains information about the status of the process.</span></span></param>
        <summary><span data-ttu-id="ea030-132">为异步进程提供一种结束方法。</span><span class="sxs-lookup"><span data-stu-id="ea030-132">Provides an end method for an asynchronous process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-133">可以使用<xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>方法会引发异步过程中捕获的任何异常。</span><span class="sxs-lookup"><span data-stu-id="ea030-133">You can use the <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> method to throw any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUrlHeaders">
      <MemberSignature Language="C#" Value="protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ExecuteUrlHeaders As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Specialized::NameValueCollection ^ ExecuteUrlHeaders { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteUrlHeaders : System.Collections.Specialized.NameValueCollection" Usage="System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea030-134">获取要随请求一起传输的请求标头和请求值的集合。</span><span class="sxs-lookup"><span data-stu-id="ea030-134">Gets a collection of request headers and request values to transfer along with the request.</span></span></summary>
        <value><span data-ttu-id="ea030-135">包含请求标头和值的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ea030-135">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing request headers and values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-136"><xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A>属性返回一个空集合，除非在派生类中填充<xref:System.Web.DefaultHttpHandler>类。</span><span class="sxs-lookup"><span data-stu-id="ea030-136">The <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> property returns an empty collection unless it is populated in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span> <span data-ttu-id="ea030-137">添加的标头追加到然后再将请求传递到 Internet 信息服务 (IIS) 中的返回在请求中的标头的集合。</span><span class="sxs-lookup"><span data-stu-id="ea030-137">The headers that are added are appended to the collection of headers in the request before passing the request back to Internet Information Services (IIS).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.DefaultHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea030-138">获取一个布尔值，该值指示另一个请求可以使用 <see cref="T:System.Web.DefaultHttpHandler" /> 类的当前实例。</span><span class="sxs-lookup"><span data-stu-id="ea030-138">Gets a Boolean value indicating that another request can use the current instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <value><span data-ttu-id="ea030-139">如果 <see cref="T:System.Web.DefaultHttpHandler" /> 是可重用的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea030-139"><see langword="true" /> if the <see cref="T:System.Web.DefaultHttpHandler" /> is reusable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-140">若要显式设置<xref:System.Web.DefaultHttpHandler.IsReusable%2A>属性设置为`true`或`false`，重写<xref:System.Web.DefaultHttpHandler.IsReusable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="ea030-140">To explicitly set the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property to `true` or `false`, override the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnExecuteUrlPreconditionFailure">
      <MemberSignature Language="C#" Value="public virtual void OnExecuteUrlPreconditionFailure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExecuteUrlPreconditionFailure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExecuteUrlPreconditionFailure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExecuteUrlPreconditionFailure();" />
      <MemberSignature Language="F#" Value="abstract member OnExecuteUrlPreconditionFailure : unit -&gt; unit&#xA;override this.OnExecuteUrlPreconditionFailure : unit -&gt; unit" Usage="defaultHttpHandler.OnExecuteUrlPreconditionFailure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea030-141">在前提条件阻止 <see cref="T:System.Web.DefaultHttpHandler" /> 对象处理请求时被调用。</span><span class="sxs-lookup"><span data-stu-id="ea030-141">Called when preconditions prevent the <see cref="T:System.Web.DefaultHttpHandler" /> object from processing a request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-142">前置条件指定的请求标头字段中的客户端和 Web 服务器上计算。</span><span class="sxs-lookup"><span data-stu-id="ea030-142">Preconditions are specified by the client in the request-header fields and are evaluated on the Web server.</span></span> <span data-ttu-id="ea030-143">例如，通过使用前置条件，客户端可以防止 （例如 GET） 请求的方法应用于之外的资源。</span><span class="sxs-lookup"><span data-stu-id="ea030-143">For example, by using preconditions, clients can prevent a requested method (for example, GET) from being applied to a resource other than the one intended.</span></span> <span data-ttu-id="ea030-144">详细信息，请参阅第 14，"标头字段定义"节中[超文本传输协议-HTTP/1.1](https://go.microsoft.com/fwlink/?LinkID=73147) World Wide Web 联合会 (W3C) 网站上的规范。</span><span class="sxs-lookup"><span data-stu-id="ea030-144">For more information, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](https://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 <span data-ttu-id="ea030-145"><xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>前提条件阻止时，调用方法<xref:System.Web.DefaultHttpHandler>处理请求的对象。</span><span class="sxs-lookup"><span data-stu-id="ea030-145">The <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method is called when preconditions prevent the <xref:System.Web.DefaultHttpHandler> object from processing a request.</span></span> <span data-ttu-id="ea030-146">派生类可能会替代<xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>方法前置条件失败时引发异常。</span><span class="sxs-lookup"><span data-stu-id="ea030-146">A deriving class might override the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method to throw an exception when the preconditions fail.</span></span> <span data-ttu-id="ea030-147"><xref:System.Web.DefaultHttpHandler>不会引发异常<xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ea030-147">The <xref:System.Web.DefaultHttpHandler> does not throw an exception in the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method.</span></span>  
  
 <span data-ttu-id="ea030-148">以下任何操作都会导致前置条件失败：</span><span class="sxs-lookup"><span data-stu-id="ea030-148">Any of the following will cause the preconditions to fail:</span></span>  
  
-   <span data-ttu-id="ea030-149">调用 <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ea030-149">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea030-150">调用 <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ea030-150">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea030-151">调用 <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ea030-151">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea030-152">更改响应的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="ea030-152">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="ea030-153">添加<xref:System.IO.Stream>对象作为一个筛选器，<xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="ea030-153">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideExecuteUrlPath">
      <MemberSignature Language="C#" Value="public virtual string OverrideExecuteUrlPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OverrideExecuteUrlPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OverrideExecuteUrlPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ OverrideExecuteUrlPath();" />
      <MemberSignature Language="F#" Value="abstract member OverrideExecuteUrlPath : unit -&gt; string&#xA;override this.OverrideExecuteUrlPath : unit -&gt; string" Usage="defaultHttpHandler.OverrideExecuteUrlPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea030-154">重写当前请求的目标 URL。</span><span class="sxs-lookup"><span data-stu-id="ea030-154">Overrides the target URL for the current request.</span></span></summary>
        <returns><span data-ttu-id="ea030-155">要在请求中使用的被重写的 URL；如果未提供被重写的 URL，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ea030-155">The overridden URL to use in the request; or <see langword="null" /> if an overridden URL is not provided.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-156"><xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A>方法将返回`null`除非在派生自的类中重写<xref:System.Web.DefaultHttpHandler>类。</span><span class="sxs-lookup"><span data-stu-id="ea030-156">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method returns `null` unless it is overridden in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 <span data-ttu-id="ea030-157"><xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A>只有如果 ASP.NET 工作进程隔离模式在运行在 IIS 6.0 和响应不是修改之前调用方法<xref:System.Web.DefaultHttpHandler>调用对象。</span><span class="sxs-lookup"><span data-stu-id="ea030-157">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method is called only if ASP.NET is running in worker process isolation mode on IIS 6.0, and if the response was not modified before the <xref:System.Web.DefaultHttpHandler> object was called.</span></span> <span data-ttu-id="ea030-158">通过以下任一操作都会修改响应：</span><span class="sxs-lookup"><span data-stu-id="ea030-158">The response is modified by any of the following:</span></span>  
  
-   <span data-ttu-id="ea030-159">调用 <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ea030-159">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea030-160">调用 <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ea030-160">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea030-161">调用 <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ea030-161">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea030-162">更改响应的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="ea030-162">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="ea030-163">添加<xref:System.IO.Stream>对象作为一个筛选器，<xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="ea030-163">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="defaultHttpHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ea030-164">为用于服务 HTTP 请求的内部服务器对象提供引用的对象。</span><span class="sxs-lookup"><span data-stu-id="ea030-164">An object that provides references to intrinsic server objects used to service HTTP requests.</span></span></param>
        <summary><span data-ttu-id="ea030-165">使 <see cref="T:System.Web.DefaultHttpHandler" /> 对象能够处理 HTTP Web 请求。</span><span class="sxs-lookup"><span data-stu-id="ea030-165">Enables a <see cref="T:System.Web.DefaultHttpHandler" /> object to process of HTTP Web requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea030-166"><xref:System.Web.DefaultHttpHandler.ProcessRequest%2A>不应以同步方式调用方法。</span><span class="sxs-lookup"><span data-stu-id="ea030-166">The <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> method should not be called synchronously.</span></span> <span data-ttu-id="ea030-167">类派生自<xref:System.Web.DefaultHttpHandler>类可以重写<xref:System.Web.DefaultHttpHandler.ProcessRequest%2A>以提供自定义的请求处理。</span><span class="sxs-lookup"><span data-stu-id="ea030-167">Classes that are derived from the <xref:System.Web.DefaultHttpHandler> class can override the <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> to provide customized request processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea030-168"><see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> 被同步地调用。</span><span class="sxs-lookup"><span data-stu-id="ea030-168">The <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> is called synchronously.</span></span></exception>
        <altmember cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
  </Members>
</Type>