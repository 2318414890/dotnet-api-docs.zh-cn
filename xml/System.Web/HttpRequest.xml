<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edf5d278fb185c3d5b75d5f515c9dc36633e6464" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37586972" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8ef25-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ef25-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-102">方法和属性<xref:System.Web.HttpRequest>类通过公开`Request`的属性<xref:System.Web.HttpApplication>， <xref:System.Web.HttpContext>， <xref:System.Web.UI.Page>，并<xref:System.Web.UI.UserControl>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="8ef25-103">从访问数据<xref:System.Web.HttpRequest.QueryString%2A>， <xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Cookies%2A>，或<xref:System.Web.HttpRequest.ServerVariables%2A>集合，您可以编写`Request["key"]`中的示例所示<xref:System.Web.HttpRequest.QueryString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ef25-104">对 Unicode 支持<xref:System.Web.HttpRequest>类成员需要 IIS 6.0 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="8ef25-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-105">以下示例访问<xref:System.Web.HttpRequest>通过使用当前请求的实例<xref:System.Web.UI.Page.Request%2A>属性的<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="8ef25-106">可用于访问数据从简化的语法<xref:System.Web.HttpRequest.QueryString%2A>， <xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Cookies%2A>，或<xref:System.Web.HttpRequest.ServerVariables%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="8ef25-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="8ef25-107">您可以编写`Request["key"]`。</span><span class="sxs-lookup"><span data-stu-id="8ef25-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="8ef25-108">第一个示例演示如何在加载页面时检索查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="8ef25-109">以下示例演示如何检查请求进行身份验证并检索原始 URL。</span><span class="sxs-lookup"><span data-stu-id="8ef25-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="8ef25-110">Visual Studio Web 站点项目的源代码是可随附于本主题：[下载](http://go.microsoft.com/fwlink/?LinkID=191455)。</span><span class="sxs-lookup"><span data-stu-id="8ef25-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="8ef25-111">此示例使用<xref:System.IO.StreamWriter>类来编写多个值<xref:System.Web.HttpRequest>类到文件的属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="8ef25-112">对于字符串类型的属性，值为 HTML 编码的文件写入时。</span><span class="sxs-lookup"><span data-stu-id="8ef25-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="8ef25-113">表示集合的属性将遍历，并且它们包含每个键/值对会写入到文件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ef25-114">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="8ef25-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8ef25-115">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="8ef25-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8ef25-116">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="8ef25-116">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="8ef25-117">The name of the file associated with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-117">The name of the file associated with the request.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="8ef25-118">The information regarding the URL of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-118">The information regarding the URL of the current request.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="8ef25-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-121">不需要创建你自己的实例的<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="8ef25-122">方法和属性<xref:System.Web.HttpRequest>类通过公开`Request`的属性<xref:System.Web.HttpApplication>， <xref:System.Web.HttpContext>， <xref:System.Web.UI.Page>，并<xref:System.Web.UI.UserControl>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span>
          </span>
          <span data-ttu-id="8ef25-124">You might use this method in response to an attack by a malicious HTTP client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-124">You might use this method in response to an attack by a malicious HTTP client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-125">此方法是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="8ef25-125">This method is thread-safe.</span></span> <span data-ttu-id="8ef25-126">任何线程可能在任何时候对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="8ef25-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="8ef25-127">仅可以在集成模式下使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="8ef25-128">如果在经典模式下调用它，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="8ef25-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="8ef25-129">若要确定管道模式，请使用<xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>。</span><span class="sxs-lookup"><span data-stu-id="8ef25-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-130">Gets a string array of client-supported MIME accept types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-130">Gets a string array of client-supported MIME accept types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-131">客户端支持的 MIME 接受类型的字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-131">A string array of client-supported MIME accept types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-132">下面的代码示例捕获返回的多个值<xref:System.Web.HttpRequest.AcceptTypes%2A>到对象变量的属性和写入 HTTP 输出的单独的行的数量和每个值设置的名称。</span><span class="sxs-lookup"><span data-stu-id="8ef25-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-133">Gets the anonymous identifier for the user, if present.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-133">Gets the anonymous identifier for the user, if present.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-134">表示当前匿名用户标识符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-134">A string representing the current anonymous user identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-135"><xref:System.Web.HttpRequest.AnonymousID%2A>属性将长期存在的唯一标识符分配给未经身份验证用户，这可用于跟踪用户或分配给该用户的配置文件属性，但不存储中的数据`Session`对象。</span><span class="sxs-lookup"><span data-stu-id="8ef25-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="8ef25-136">默认情况下<xref:System.Web.HttpRequest.AnonymousID%2A>使用一个 cookie，跟踪属性，但可以将其设置为使用 URI 时<xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>匿名标识配置节中的属性设置为<xref:System.Web.HttpCookieMode.UseUri>， <xref:System.Web.HttpCookieMode.UseDeviceProfile>，或<xref:System.Web.HttpCookieMode.AutoDetect>值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="8ef25-137">如果您不再需要可用，例如匿名用户进行身份验证时，必须显式清除 cookie。</span><span class="sxs-lookup"><span data-stu-id="8ef25-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="8ef25-138">当需要未经过身份验证的实体进行标识和授权时需要使用匿名标识。</span><span class="sxs-lookup"><span data-stu-id="8ef25-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="8ef25-139">有关详细信息，请参阅[anonymousIdentification 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span><span class="sxs-lookup"><span data-stu-id="8ef25-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-140">下面的示例演示如何使用<xref:System.Web.HttpRequest.AnonymousID%2A>属性通过处理<xref:System.Web.Security.AnonymousIdentificationModule.Creating>Global.asax 文件中的事件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="8ef25-141">此示例包含两个部分：</span><span class="sxs-lookup"><span data-stu-id="8ef25-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="8ef25-142">处理在 Global.asax 文件中的方法<xref:System.Web.Security.AnonymousIdentificationModule.Creating>事件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="8ef25-143">Web 窗体页中。</span><span class="sxs-lookup"><span data-stu-id="8ef25-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="8ef25-144">代码示例的第一部分演示如何设置<xref:System.Web.HttpRequest.AnonymousID%2A>属性通过处理<xref:System.Web.Security.AnonymousIdentificationModule.Creating>Global.asax 文件中的事件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="8ef25-145">名为的方法`AnonymousIdentification_Creating`设置<xref:System.Web.HttpRequest.AnonymousID%2A>属性时创建的匿名 ID。</span><span class="sxs-lookup"><span data-stu-id="8ef25-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="8ef25-146">代码示例的第二部分演示如何显示的新<xref:System.Web.HttpRequest.AnonymousID%2A>，它由创建`AnonymousIdentification_Creating`前面的示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8ef25-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-147">Gets the ASP.NET application's virtual application root path on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-147">Gets the ASP.NET application's virtual application root path on the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-148">当前应用程序的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-148">The virtual path of the current application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-149">此属性用于构造相对于页面或不在根目录下的 Web 用户控件中的应用程序根 URL。</span><span class="sxs-lookup"><span data-stu-id="8ef25-149">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="8ef25-150">这使得页面和存在于目录结构，以便使用相同的代码链接到应用程序中的固定位置的资源的不同级别的共享的控件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-150">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-151">下面的示例使用<xref:System.IO.StreamWriter.Write%2A>进行 HTML 编码的方法，然后将的值写入<xref:System.Web.HttpRequest.ApplicationPath%2A>到文本文件的属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-151">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="8ef25-152">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-152">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="8ef25-153">它假定存在<xref:System.IO.StreamWriter>名为对象`sw`。</span><span class="sxs-lookup"><span data-stu-id="8ef25-153">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="8ef25-154">下面的示例使用<xref:System.Web.HttpRequest.ApplicationPath%2A>属性以编程方式构造一个资源，可在应用程序中的固定位置的路径。</span><span class="sxs-lookup"><span data-stu-id="8ef25-154">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="8ef25-155">引用的资源的页没有位于资源所在的目录。</span><span class="sxs-lookup"><span data-stu-id="8ef25-155">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="8ef25-156">如果运行此示例中，名为 WebSite1，Web 应用程序`/WebSite1`将显示的值为<xref:System.Web.HttpRequest.ApplicationPath%2A>属性和`/WebSite1/images/Image1.gif`将显示为映像的完整路径。</span><span class="sxs-lookup"><span data-stu-id="8ef25-156">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-157">Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-157">Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-158">当前请求的应用程序根的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-158">The virtual path of the application root for the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-159">此属性用于提供 URL 信息将保持不变的即使应用程序更改位置。</span><span class="sxs-lookup"><span data-stu-id="8ef25-159">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="8ef25-160">这样，相同的 URL 映射代码以用于测试环境中，并在最后的部署环境中，或由不同的域中的 Web 应用程序的副本。</span><span class="sxs-lookup"><span data-stu-id="8ef25-160">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-161">下面的示例使用<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A>属性设置的 URL<xref:System.Web.UI.WebControls.Image>页所在的目录中的图像的控件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-161">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="8ef25-162">运行此页，在不同级别的目录结构，并查看最终<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-162">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="8ef25-163">下面的示例使用<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A>属性以编程方式将路径设置为一种资源，根据当前页的路径。</span><span class="sxs-lookup"><span data-stu-id="8ef25-163">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="8ef25-164">The number of bytes to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-164">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-165">Performs a binary read of a specified number of bytes from the current input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-165">Performs a binary read of a specified number of bytes from the current input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-166">A byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-166">A byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-167"><xref:System.Web.HttpRequest.BinaryRead%2A>方法提供与 ASP 的兼容性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-167">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8ef25-168">
            <paramref name="count" /> is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-168">
              <paramref name="count" /> is 0.</span>
          </span>
          <span data-ttu-id="8ef25-169">\- or -  <paramref name="count" /> is greater than the number of bytes available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-169">\- or -  <paramref name="count" /> is greater than the number of bytes available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-170">Gets or sets information about the requesting client's browser capabilities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-170">Gets or sets information about the requesting client's browser capabilities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-171">列出客户端浏览器功能的 <see cref="T:System.Web.HttpBrowserCapabilities" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-171">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-172">下面的代码示例将发送回客户端 HTML 页中的浏览器的功能的列表。</span><span class="sxs-lookup"><span data-stu-id="8ef25-172">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-173">Gets the current request's client security certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-173">Gets the current request's client security certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-174">包含有关客户端安全证书设置的信息的 <see cref="T:System.Web.HttpClientCertificate" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-174">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-175">下面的代码示例将发送回客户端 HTML 页中的客户端证书设置。</span><span class="sxs-lookup"><span data-stu-id="8ef25-175">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-176">Gets or sets the character set of the entity-body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-176">Gets or sets the character set of the entity-body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-177">表示客户端的字符集的 <see cref="T:System.Text.Encoding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-177">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-178">中可以指定默认的内容编码[全球化元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)的配置文件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-178">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="8ef25-179">如果客户端还指定内容编码，将重写默认配置设置。</span><span class="sxs-lookup"><span data-stu-id="8ef25-179">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-180">下面的代码示例将分配一个值，表示当前 HTTP 编码为一个字符串变量的说明。</span><span class="sxs-lookup"><span data-stu-id="8ef25-180">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-181">Specifies the length, in bytes, of content sent by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-181">Specifies the length, in bytes, of content sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-182">客户端发送的内容的长度(以字节为单位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-182">The length, in bytes, of content sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-183">下面的代码示例将分配给整型变量表示传入请求的内容长度的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-183">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-184">Gets or sets the MIME content type of the incoming request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-184">Gets or sets the MIME content type of the incoming request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-185">表示传入请求的 MIME 内容类型的字符串，例如，"text/html"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-185">A string representing the MIME content type of the incoming request, for example, "text/html".</span>
          </span>
          <span data-ttu-id="8ef25-186">其他常见 MIME 类型包括 "audio.wav"、"image/gif" 和 "application/pdf"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-186">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-187">下面的代码示例将分配给字符串变量表示传入请求的内容类型的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-187">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8ef25-188">下面的示例显示了可能由下面的代码生成的输出。</span><span class="sxs-lookup"><span data-stu-id="8ef25-188">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-189">Gets a collection of cookies sent by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-189">Gets a collection of cookies sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-190">表示客户端的 cookie 变量的 <see cref="T:System.Web.HttpCookieCollection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-190">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-191">ASP.NET 包括两个内部 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="8ef25-191">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="8ef25-192">通过访问的集合<xref:System.Web.HttpRequest.Cookies%2A>的集合<xref:System.Web.HttpRequest>包含传输中的服务器到客户端的 cookie`Cookie`标头。</span><span class="sxs-lookup"><span data-stu-id="8ef25-192">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="8ef25-193">通过访问的集合<xref:System.Web.HttpResponse.Cookies%2A>的集合<xref:System.Web.HttpResponse>包含在服务器上创建和传输到客户端中的新 cookie`Set-Cookie`标头。</span><span class="sxs-lookup"><span data-stu-id="8ef25-193">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ef25-194">使用添加 cookie 后<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType>集合，cookie 可立即在<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType>集合，即使尚未发送到客户端响应。</span><span class="sxs-lookup"><span data-stu-id="8ef25-194">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-195">下面的代码示例循环访问客户端发送的所有 cookie，并将名称、 到期日期、 安全参数和每个 cookie 的值发送到 HTTP 输出。</span><span class="sxs-lookup"><span data-stu-id="8ef25-195">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-196">Gets the virtual path of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-196">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-197">当前请求的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-197">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-198"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> 返回当前正在执行的页处理程序文件路径。</span><span class="sxs-lookup"><span data-stu-id="8ef25-198"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="8ef25-199">对于使用重定向方案<xref:System.Web.HttpServerUtility.Execute%2A>并<xref:System.Web.HttpServerUtility.Transfer%2A>方法，这意味着，<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>属性返回的路径重定向到 （子页） 的页。</span><span class="sxs-lookup"><span data-stu-id="8ef25-199">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="8ef25-200">但是，客户端定向到另一个页面，<xref:System.Web.HttpRequest.FilePath%2A>属性返回原始页的路径。</span><span class="sxs-lookup"><span data-stu-id="8ef25-200">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-201">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-201">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-202">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-202">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-203">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-203">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-204">
            <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> 属性中指定的文件名的扩展名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-204">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-205">Gets the virtual path of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-205">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-206">当前请求的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-206">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-207"><xref:System.Web.HttpRequest.FilePath%2A>属性不包括<xref:System.Web.HttpRequest.PathInfo%2A>尾部。</span><span class="sxs-lookup"><span data-stu-id="8ef25-207">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="8ef25-208">例如，对于 URL http://www.contoso.com/virdir/page.html/tail，则<xref:System.Web.HttpRequest.FilePath%2A>值是 /virdir/page.html。</span><span class="sxs-lookup"><span data-stu-id="8ef25-208">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-209">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.FilePath%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-209">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-210">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-210">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-211">Gets the collection of files uploaded by the client, in multipart MIME format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-211">Gets the collection of files uploaded by the client, in multipart MIME format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-212">
            <see cref="T:System.Web.HttpFileCollection" /> 对象，表示客户端上载的文件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-212">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span>
          </span>
          <span data-ttu-id="8ef25-213">
            <see cref="T:System.Web.HttpFileCollection" /> 对象的项属于 <see cref="T:System.Web.HttpPostedFile" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-213">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-214">仅填充文件收集 HTTP 请求时`Content-Type`值是"多部分/窗体的数据"。</span><span class="sxs-lookup"><span data-stu-id="8ef25-214">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-215">下面的代码示例显示中的所有文件的名称<xref:System.Web.HttpRequest.Files%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="8ef25-215">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-216">Gets or sets the filter to use when reading the current input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-216">Gets or sets the filter to use when reading the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-217">要用作筛选器的 <see cref="T:System.IO.Stream" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-217">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-218">下面的代码示例创建两个新类`QQQ1`并`QQQ2`该筛选器<xref:System.Web.HttpRequest.InputStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="8ef25-218">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="8ef25-219">将类放入 ASP.NET 应用程序的目录中的 Global.asax 文件，以便将筛选所有 ASP.NET Web pages 应用程序中的所有输入。</span><span class="sxs-lookup"><span data-stu-id="8ef25-219">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8ef25-220">The specified <see cref="T:System.IO.Stream" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-220">The specified <see cref="T:System.IO.Stream" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-221">Gets a collection of form variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-221">Gets a collection of form variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-222">表示窗体变量集合的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-222">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-223"><xref:System.Web.HttpRequest.Form%2A>填充属性的 HTTP 请求时`Content-Type`值为"应用程序/x-www 的窗体的 urlencoded"或"多部分/窗体的数据"。</span><span class="sxs-lookup"><span data-stu-id="8ef25-223">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-224">下面的示例演示如何读取从浏览器发布窗体集合中的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-224">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="8ef25-225">集合中的每个名称/值对表示窗体和其值的控件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-225">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-226">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-226">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-227">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-227">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-228">此方法等同于<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>只不过它还将读取的字节复制到 ASP.NET 用于填充的内部存储<xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Files%2A>，和<xref:System.Web.HttpRequest.InputStream%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-228">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="8ef25-229">由于保留了此信息，如 ASP.NET Web 窗体页面(.aspx 文件)这样的下游代码将成功运行。</span><span class="sxs-lookup"><span data-stu-id="8ef25-229">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="8ef25-230">这不同于使用 <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 方法的情况。</span><span class="sxs-lookup"><span data-stu-id="8ef25-230">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8ef25-231">The request's entity body has already been loaded and parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-231">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="8ef25-232">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-232">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          </span>
          <span data-ttu-id="8ef25-233">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-233">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          </span>
          <span data-ttu-id="8ef25-234">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-234">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          </span>
          <span data-ttu-id="8ef25-235">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-235">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span>
          </span>
          <span data-ttu-id="8ef25-236">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-236">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="8ef25-237">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-237">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-238">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-238">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-239">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-239">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-240">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-240">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-241">此方法提供了一种方式使用<xref:System.Web.HttpRequest.InputStream%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-241">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="8ef25-242"><xref:System.Web.HttpRequest.InputStream%2A>属性等待，直到它返回之前已收到整个请求<xref:System.IO.Stream>对象。</span><span class="sxs-lookup"><span data-stu-id="8ef25-242">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="8ef25-243">与此相反，<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>方法将返回<xref:System.IO.Stream>立即对象。</span><span class="sxs-lookup"><span data-stu-id="8ef25-243">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="8ef25-244">可以使用该方法以开始处理的实体正文之前已收到正文的完整内容。</span><span class="sxs-lookup"><span data-stu-id="8ef25-244">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="8ef25-245">实体正文 （或其作为你的请求，并已接收） 仅当您使用的对象时，才返回通过调用方法，如读取流，此方法返回<xref:System.IO.Stream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-245">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="8ef25-246">使用参数<xref:System.IO.Stream.Read%2A>方法，以指定要读取的实体正文。</span><span class="sxs-lookup"><span data-stu-id="8ef25-246">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="8ef25-247"><xref:System.IO.Stream>从此方法返回由 ASP.NET 对象支持同步和异步读取的方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-247">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="8ef25-248"><xref:System.IO.Stream>对象同时实现了<xref:System.IO.Stream.BeginRead%2A>和<xref:System.IO.Stream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-248">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="8ef25-249">异步方法，可以以异步方式读取请求实体的区块，而 ASP.NET 释放当前线程之间的异步读取循环每次迭代。</span><span class="sxs-lookup"><span data-stu-id="8ef25-249">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="8ef25-250">如果该请求将上传大型文件和你想要上传完成之前访问文件内容，此方法会很有用。</span><span class="sxs-lookup"><span data-stu-id="8ef25-250">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="8ef25-251">但是，您应仅使用此方法的情况下你想要接管的实体正文的所有处理。</span><span class="sxs-lookup"><span data-stu-id="8ef25-251">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="8ef25-252">这意味着，不能使用此方法从.aspx 页面，因为.aspx 页在运行时，实体正文已经被读取。</span><span class="sxs-lookup"><span data-stu-id="8ef25-252">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8ef25-253">The request's entity body has already been loaded and parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-253">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="8ef25-254">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-254">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="8ef25-255">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-255">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength">
          <span data-ttu-id="8ef25-256">
            <see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-256">
              <see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-257">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-257">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-258">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-258">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-259">有关此方法的详细信息，请参阅<xref:System.Web.HttpRequest.GetBufferlessInputStream>重载。</span><span class="sxs-lookup"><span data-stu-id="8ef25-259">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8ef25-260">The request's entity body has already been loaded and parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-260">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="8ef25-261">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-261">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          </span>
          <span data-ttu-id="8ef25-262">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-262">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          </span>
          <span data-ttu-id="8ef25-263">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-263">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          </span>
          <span data-ttu-id="8ef25-264">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-264">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span>
          </span>
          <span data-ttu-id="8ef25-265">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-265">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="8ef25-266">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-266">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-267">Gets a collection of HTTP headers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-267">Gets a collection of HTTP headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-268">标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-268">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-269">有关所有可能的标头的列表，请参阅[请求标头字段](http://go.microsoft.com/fwlink/?LinkId=73147)W3C 网站上。</span><span class="sxs-lookup"><span data-stu-id="8ef25-269">For a listing of all possible headers, see [Request Header Fields](http://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-270">下面的代码示例显示在 HTTP 请求中的名称和所有标头的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-270">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-271">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-271">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-272">当前 <see cref="T:System.Web.HttpWorkerRequest" /> 实例的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-272">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8ef25-273">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-273">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-274">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-274">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-275">客户端所用的 HTTP 数据传输方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-275">The HTTP data transfer method used by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-276">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.HttpMethod%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-276">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-277">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-277">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="8ef25-278">下面的示例演示由下面的代码生成的输出。</span><span class="sxs-lookup"><span data-stu-id="8ef25-278">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-279">Gets the contents of the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-279">Gets the contents of the incoming HTTP entity body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-280">表示传入 HTTP 内容主体的内容的 <see cref="T:System.IO.Stream" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-280">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-281">下面的代码示例的内容复制<xref:System.Web.HttpRequest.InputStream%2A>转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="8ef25-281">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-282">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-282">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-283"><xref:System.Web.HttpRequest.InsertEntityBody%2A>方法重载提供对 IIS 7 的托管的访问`IHttpRequest::InsertEntityBody`方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-283">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="8ef25-284">IIS 方法将 HTTP 请求实体主体 （客户端发布的数据） 插入到内存。</span><span class="sxs-lookup"><span data-stu-id="8ef25-284">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="8ef25-285">这很有用，因为 IIS 已读取之后不保留请求实体的副本。</span><span class="sxs-lookup"><span data-stu-id="8ef25-285">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="8ef25-286"><xref:System.Web.HttpRequest.InsertEntityBody%2A>方法创建的 HTTP 请求实体数据的副本，并使其可供 IIS 以进行额外的自定义处理。</span><span class="sxs-lookup"><span data-stu-id="8ef25-286">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ef25-287"><xref:System.Web.HttpRequest.InsertEntityBody%2A>方法重载工作仅在 IIS 7.0 或更高版本，因为`IHttpRequest::InsertEntityBody`方法已添加在 IIS 7.0 中。</span><span class="sxs-lookup"><span data-stu-id="8ef25-287">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-288">Provides IIS with a copy of the HTTP request entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-288">Provides IIS with a copy of the HTTP request entity body.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-289">已读取后，IIS 不维护请求的副本。</span><span class="sxs-lookup"><span data-stu-id="8ef25-289">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="8ef25-290">因此，建议仅 HTTP 请求的处理程序应读取请求实体。</span><span class="sxs-lookup"><span data-stu-id="8ef25-290">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="8ef25-291"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType>方法重载向 IIS 提供一份请求实体如果 asp.net 以前读取该行。</span><span class="sxs-lookup"><span data-stu-id="8ef25-291">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="8ef25-292">此方法的重载可用于 ASP.NET 具有读取实体请求，并且你想要重复使用现有的请求数据。</span><span class="sxs-lookup"><span data-stu-id="8ef25-292">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8ef25-293">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-293">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="8ef25-294">用于在托管环境中操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-294">For operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="8ef25-295">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-295">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="8ef25-296">关联的枚举： <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-296">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8ef25-297">An array that contains the request entity data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-297">An array that contains the request entity data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8ef25-298">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-298">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8ef25-299">The number of bytes to read into the <c>buffer</c> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-299">The number of bytes to read into the <c>buffer</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-300">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-300">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-301">已读取后，IIS 不维护请求的副本。</span><span class="sxs-lookup"><span data-stu-id="8ef25-301">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="8ef25-302">因此，建议仅 HTTP 请求的处理程序应读取请求实体。</span><span class="sxs-lookup"><span data-stu-id="8ef25-302">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="8ef25-303"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType>方法重载时，你想要执行自定义处理，如不同的实体正文插入内存。</span><span class="sxs-lookup"><span data-stu-id="8ef25-303">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8ef25-304">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-304">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ef25-305">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-305">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8ef25-306">
            <paramref name="offset" /> is a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-306">
              <paramref name="offset" /> is a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8ef25-307">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-307">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="8ef25-308">用于在托管环境中操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-308">for operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="8ef25-309">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-309">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="8ef25-310">关联的枚举： <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-310">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-311">Gets a value indicating whether the request has been authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-311">Gets a value indicating whether the request has been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-312">如果请求已经过身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-312">
              <see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-313">下面的代码示例使用<xref:System.Web.HttpRequest.IsAuthenticated%2A>属性来确定当前请求是否已验证。</span><span class="sxs-lookup"><span data-stu-id="8ef25-313">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="8ef25-314">如果它未经过验证，则会将请求重定向到可以在其中用户输入其凭据到 Web 应用程序的另一页。</span><span class="sxs-lookup"><span data-stu-id="8ef25-314">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="8ef25-315">这是一种为应用程序中的默认页使用的常用技术。</span><span class="sxs-lookup"><span data-stu-id="8ef25-315">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-316">Gets a value indicating whether the request is from the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-316">Gets a value indicating whether the request is from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-317">如果请求来自本地计算机，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-317">
              <see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-318"><xref:System.Web.HttpRequest.IsLocal%2A>属性返回`true`如果请求发起方的 IP 地址 127.0.0.1 或该请求的 IP 地址是服务器的 IP 地址相同。</span><span class="sxs-lookup"><span data-stu-id="8ef25-318">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-319">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-319">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-320">如果连接为 SSL 连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-320">
              <see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-321">下面的代码示例确定是否<xref:System.Web.HttpRequest.IsSecureConnection%2A>属性设置为 false。</span><span class="sxs-lookup"><span data-stu-id="8ef25-321">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="8ef25-322">如果是，<xref:System.Web.HttpResponse.SuppressContent%2A>属性设置为 true，则停止发送响应。</span><span class="sxs-lookup"><span data-stu-id="8ef25-322">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="8ef25-323">The name of the collection member to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-323">The name of the collection member to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-324">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-324">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-325">
            <see cref="P:System.Web.HttpRequest.QueryString" /> 参数中指定的 <see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" />、<see cref="P:System.Web.HttpRequest.ServerVariables" /> 或 <paramref name="key" /> 集合成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-325">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span>
          </span>
          <span data-ttu-id="8ef25-326">如果未找到指定的 <paramref name="key" />，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-326">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-327">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-327">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-328">当前 Microsoft Internet Information Services (IIS)身份验证设置的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-328">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-329"><xref:System.Web.HttpRequest.LogonUserIdentity%2A>属性公开的属性和方法的<xref:System.Security.Principal.WindowsIdentity>当前连接的用户对 Microsoft Internet 信息服务 (IIS) 的对象。</span><span class="sxs-lookup"><span data-stu-id="8ef25-329">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="8ef25-330">实例<xref:System.Security.Principal.WindowsIdentity>通过公开的类<xref:System.Web.HttpRequest.LogonUserIdentity%2A>跟踪 IIS 请求令牌，并可轻松访问此令牌为在 ASP.NET 内处理的当前 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="8ef25-330">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="8ef25-331">实例<xref:System.Security.Principal.WindowsIdentity>类会自动创建，因此它不需要为构造才能获得访问其方法和属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-331">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-332">下面的代码示例演示如何检索<xref:System.Web.HttpRequest.LogonUserIdentity%2A>属性的当前用户并将写出在文本文件中每个项的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-332">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="8ef25-333">将此代码放置在窗体的引用的 ASP.NET 页面上`ACTION`属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-333">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8ef25-334">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-334">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="8ef25-335">The name of the form image map.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-335">The name of the form image map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-336">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-336">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-337">A two-dimensional array of integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-337">A two-dimensional array of integers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-338">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-338">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="8ef25-339">The virtual path (absolute or relative) for the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-339">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-340">Maps the specified virtual path to a physical path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-340">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-341">The physical path on the server specified by <paramref name="virtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-341">The physical path on the server specified by <paramref name="virtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="8ef25-342"><xref:System.Web.HttpRequest.MapPath%2A>属性可能包含敏感信息的宿主环境。</span><span class="sxs-lookup"><span data-stu-id="8ef25-342">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="8ef25-343">返回值不应显示给用户。</span><span class="sxs-lookup"><span data-stu-id="8ef25-343">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-344">下面的代码示例使用<xref:System.Web.HttpRequest.MapPath%2A>方法以将虚拟路径转换为在服务器上的完全限定物理路径。</span><span class="sxs-lookup"><span data-stu-id="8ef25-344">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="8ef25-345">此示例包含两个部分：</span><span class="sxs-lookup"><span data-stu-id="8ef25-345">This example has two parts:</span></span>  
  
-   <span data-ttu-id="8ef25-346">.Aspx 页的路径映射、 读取该文件，并显示读取操作的结果。</span><span class="sxs-lookup"><span data-stu-id="8ef25-346">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="8ef25-347">一个类`UpperCaseFilterStream`，更改为大写形式传递它的所有字符。</span><span class="sxs-lookup"><span data-stu-id="8ef25-347">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="8ef25-348">该示例的第一部分演示如何将虚拟路径转换为完全限定的物理路径使用<xref:System.Web.HttpRequest.MapPath%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-348">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="8ef25-349">然后将此物理路径传递给<xref:System.IO.StreamReader>对象，获取该文件的内容。</span><span class="sxs-lookup"><span data-stu-id="8ef25-349">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="8ef25-350"><xref:System.Web.HttpResponse.Write%2A>然后调用方法来显示页面上的文件的内容。</span><span class="sxs-lookup"><span data-stu-id="8ef25-350">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="8ef25-351"><xref:System.Web.HttpResponse.Filter%2A>属性用于将筛选器附加到响应流，使向全部大写页上显示的文本。</span><span class="sxs-lookup"><span data-stu-id="8ef25-351">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="8ef25-352">该示例的第二部分显示了继承自一个类<xref:System.IO.Stream>并将流中的所有字符都转换为大写。</span><span class="sxs-lookup"><span data-stu-id="8ef25-352">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="8ef25-353">将此代码放入`App_Code`为应用程序的文件夹。</span><span class="sxs-lookup"><span data-stu-id="8ef25-353">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8ef25-354">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-354">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="8ef25-355">The virtual path (absolute or relative) for the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-355">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <param name="baseVirtualDir">
          <span data-ttu-id="8ef25-356">The virtual base directory path used for relative resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-356">The virtual base directory path used for relative resolution.</span>
          </span>
        </param>
        <param name="allowCrossAppMapping">
          <span data-ttu-id="8ef25-357">
            <see langword="true" /> to indicate that <c>virtualPath</c> may belong to another application; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-357">
              <see langword="true" /> to indicate that <c>virtualPath</c> may belong to another application; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-358">Maps the specified virtual path to a physical path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-358">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-359">The physical path on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-359">The physical path on the server.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="8ef25-360"><xref:System.Web.HttpRequest.MapPath%2A>属性可能包含敏感信息的宿主环境。</span><span class="sxs-lookup"><span data-stu-id="8ef25-360">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="8ef25-361">返回值不应显示给用户。</span><span class="sxs-lookup"><span data-stu-id="8ef25-361">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8ef25-362">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-362">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="8ef25-363">The name of the image field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-363">The name of the image field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-364">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-364">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef25-365">The x and y coordinate values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-365">The x and y coordinate values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-366">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-366">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-367">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-367">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-368">名称-值对添加到集合按以下顺序：</span><span class="sxs-lookup"><span data-stu-id="8ef25-368">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="8ef25-369">查询字符串参数。</span><span class="sxs-lookup"><span data-stu-id="8ef25-369">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="8ef25-370">窗体字段。</span><span class="sxs-lookup"><span data-stu-id="8ef25-370">Form fields.</span></span>  
  
3.  <span data-ttu-id="8ef25-371">Cookie。</span><span class="sxs-lookup"><span data-stu-id="8ef25-371">Cookies.</span></span>  
  
4.  <span data-ttu-id="8ef25-372">服务器变量。</span><span class="sxs-lookup"><span data-stu-id="8ef25-372">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-373">下面的代码示例演示如何循环访问<xref:System.Web.HttpRequest.Params%2A>页以及如何显示每个键/值对的属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-373">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-374">Gets the virtual path of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-374">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-375">当前请求的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-375">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-376"><xref:System.Web.HttpRequest.Path%2A>是串联<xref:System.Web.HttpRequest.FilePath%2A>和<xref:System.Web.HttpRequest.PathInfo%2A>尾部。</span><span class="sxs-lookup"><span data-stu-id="8ef25-376">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="8ef25-377">例如，对于 URL http://www.contoso.com/virdir/page.html/tail，则<xref:System.Web.HttpRequest.Path%2A>是 /virdir/page.html/tail。</span><span class="sxs-lookup"><span data-stu-id="8ef25-377">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-378">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.Path%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-378">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-379">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-379">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-380">Gets the additional path information for a resource with a URL extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-380">Gets the additional path information for a resource with a URL extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-381">资源的附加路径信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-381">The additional path information for a resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-382">Url Http://www.contoso.com/virdir/page.html/tail，则<xref:System.Web.HttpRequest.PathInfo%2A>值为 /tail。</span><span class="sxs-lookup"><span data-stu-id="8ef25-382">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-383">下面的代码示例确定是否<xref:System.Web.HttpRequest.PathInfo%2A>属性包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="8ef25-383">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="8ef25-384">如果是这样，<xref:System.IO.StreamWriter.Write%2A>方法写入一个字符串，这指示到文件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-384">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="8ef25-385">如果不是，请<xref:System.Web.HttpUtility.HtmlEncode%2A>的方法对值进行 HTML 编码<xref:System.Web.HttpRequest.PathInfo%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入已编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-385">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="8ef25-386">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-386">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-387">Gets the physical file system path of the currently executing server application's root directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-387">Gets the physical file system path of the currently executing server application's root directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-388">当前应用程序的根目录的文件系统路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-388">The file system path of the current application's root directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-389">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.PhysicalApplicationPath%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-389">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-390">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-390">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-391">Gets the physical file system path corresponding to the requested URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-391">Gets the physical file system path corresponding to the requested URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-392">当前请求的文件系统路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-392">The file system path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-393">在重定向方案中使用<xref:System.Web.HttpServerUtility.Execute%2A>并<xref:System.Web.HttpServerUtility.Transfer%2A>，则<xref:System.Web.HttpRequest.PhysicalPath%2A>属性返回原始页的路径。</span><span class="sxs-lookup"><span data-stu-id="8ef25-393">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="8ef25-394">若要查找当前正在执行的页使用的物理路径<xref:System.Web.HttpRequest.MapPath%2A>方法并将输入参数设置为<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-394">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-395">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.PhysicalPath%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-395">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-396">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-396">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-397">Gets the collection of HTTP query string variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-397">Gets the collection of HTTP query string variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-398">客户端发送的查询字符串变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-398">The query string variables sent by the client.</span>
          </span>
          <span data-ttu-id="8ef25-399">键和值是 URL 解码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-399">Keys and values are URL-decoded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-400">下面的代码示例演示两种方式获取名为"fullname"的查询字符串变量的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-400">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="8ef25-401">每种情况下，如果 URL 是`http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`，则返回的值为"Fadi Fakhouri"，因为`%20`是 URL 解码为一个空格字符。</span><span class="sxs-lookup"><span data-stu-id="8ef25-401">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="8ef25-402">如果 URL 不一定`fullname`查询字符串 ID，返回的值将是`null`。</span><span class="sxs-lookup"><span data-stu-id="8ef25-402">If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="8ef25-403">第一行代码将查找密钥仅在; 在查询字符串中的"fullname"第二行查找"fullname"中的所有 HTTP 请求集合的键。</span><span class="sxs-lookup"><span data-stu-id="8ef25-403">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="8ef25-404">第二行的详细信息，请参阅<xref:System.Web.HttpRequest.Item%2A>。</span><span class="sxs-lookup"><span data-stu-id="8ef25-404">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-405">Gets the raw URL of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-405">Gets the raw URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-406">当前请求的原始 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-406">The raw URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-407">原始 URL 定义为以下域信息的 URL 的一部分。</span><span class="sxs-lookup"><span data-stu-id="8ef25-407">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="8ef25-408">URL 字符串中http://www.contoso.com/articles/recent.aspx，原始 URL 是 /articles/recent.aspx。</span><span class="sxs-lookup"><span data-stu-id="8ef25-408">In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="8ef25-409">原始 URL 包括查询字符串中，如果存在。</span><span class="sxs-lookup"><span data-stu-id="8ef25-409">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-410">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.RawUrl%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-410">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-411">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-411">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-412">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-412">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-413">该值指示是否已读取请求实体主体，若已读取，是以何方式读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-413">The value that indicates how the request entity body was read, or that it has not been read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-414">此方法用于避免如果已读取实体正文，并尝试通过使用不兼容的方法读取，将引发的异常。</span><span class="sxs-lookup"><span data-stu-id="8ef25-414">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="8ef25-415">读取实体正文的方法和属性包括：</span><span class="sxs-lookup"><span data-stu-id="8ef25-415">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="8ef25-416"><xref:System.Web.HttpRequest.Form%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-416">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="8ef25-417"><xref:System.Web.HttpRequest.Files%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-417">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="8ef25-418"><xref:System.Web.HttpRequest.InputStream%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-418">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="8ef25-419"><xref:System.Web.HttpRequest.GetBufferedInputStream%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-419">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="8ef25-420"><xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8ef25-420">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-421">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-421">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-422">当前请求的 <see cref="T:System.Web.Routing.RequestContext" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-422">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
          <span data-ttu-id="8ef25-423">对于非路由请求，返回的 <see cref="T:System.Web.Routing.RequestContext" /> 对象为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-423">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-424">此属性提供对访问<xref:System.Web.Routing.RouteData>当前请求的对象。</span><span class="sxs-lookup"><span data-stu-id="8ef25-424">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="8ef25-425">有关 ASP.NET 路由的详细信息，请参阅。[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="8ef25-425">For more information about ASP.NET routing, see.[ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-426">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-426">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-427">表示客户端发送的 HTTP 调用类型的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-427">A string representing the HTTP invocation type sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-428">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.RequestType%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-428">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-429">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-429">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="8ef25-430">The physical drive path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-430">The physical drive path.</span>
          </span>
        </param>
        <param name="includeHeaders">
          <span data-ttu-id="8ef25-431">A Boolean value specifying whether an HTTP header should be saved to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-431">A Boolean value specifying whether an HTTP header should be saved to disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef25-432">Saves an HTTP request to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-432">Saves an HTTP request to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-433">保存到磁盘的请求上下文可以是在调试中非常有用。</span><span class="sxs-lookup"><span data-stu-id="8ef25-433">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-434">下面的代码示例调用<xref:System.Web.HttpRequest.SaveAs%2A>方法时都在加载页面。</span><span class="sxs-lookup"><span data-stu-id="8ef25-434">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="8ef25-435">调用指定该请求将保存为文本文件的目录中的 ASP.NET 进程标识已授予写权限，并在请求中包括的任何标头信息包含在文件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-435">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="8ef25-436">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-436">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-437">Gets a collection of Web server variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-437">Gets a collection of Web server variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-438">服务器变量的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-438">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-439">有关支持的 IIS 服务器变量的列表，请参阅[IIS 服务器变量](http://go.microsoft.com/fwlink/?LinkId=52471)。</span><span class="sxs-lookup"><span data-stu-id="8ef25-439">For a list of server variables supported by IIS, see [IIS Server Variables](http://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ef25-440">下面的代码示例显示的名称和所有命名的服务器变量的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-440">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-441">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-441">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-442">取消标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-442">The cancellation token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-443">可以在 Web.config 文件中指定的超时期限 (请参阅<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) 或以编程方式 (请参阅<xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="8ef25-443">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="8ef25-444">从传入请求的时间为单位的超时期限。</span><span class="sxs-lookup"><span data-stu-id="8ef25-444">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="8ef25-445">如果为 110 秒的默认超时值有效，将不早于 110 秒后，开始请求处理去除的取消标记。</span><span class="sxs-lookup"><span data-stu-id="8ef25-445">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="8ef25-446">您可以更改<xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>属性值，并且在此令牌长时间未尚未触发，因为将遵循新的超时值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-446">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="8ef25-447">令牌目前仅提供 15 秒的粒度，这意味着，如果超时值是 110 秒，令牌将触发一段时间后开始请求处理的 110 和 125 秒之间。</span><span class="sxs-lookup"><span data-stu-id="8ef25-447">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="8ef25-448">粒度可能在将来更改。</span><span class="sxs-lookup"><span data-stu-id="8ef25-448">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="8ef25-449">即使此属性是线程安全的没有对其使用限制。</span><span class="sxs-lookup"><span data-stu-id="8ef25-449">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="8ef25-450">有关详细信息，请参阅<xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8ef25-450">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8ef25-451">此属性是 Websocket 请求处理已启动的情况下没有意义。</span><span class="sxs-lookup"><span data-stu-id="8ef25-451">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-452">Gets the TLS token binding information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-452">Gets the TLS token binding information.</span>
          </span>
          <span data-ttu-id="8ef25-453">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-453">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-454">当前连接的绑定令牌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-454">The binding token for the current connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-455">此属性返回`null`非 windows10 平台上。</span><span class="sxs-lookup"><span data-stu-id="8ef25-455">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-456">Gets the number of bytes in the current input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-456">Gets the number of bytes in the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-457">输入流中的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-457">The number of bytes in the input stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-458">下面的代码示例确定是否<xref:System.Web.HttpRequest.TotalBytes%2A>属性值大于 1000 个字节，并将该信息写入到文件。</span><span class="sxs-lookup"><span data-stu-id="8ef25-458">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-459">Gets the HTTP request values without triggering request validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-459">Gets the HTTP request values without triggering request validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-460">尚未使用请求验证检查的 HTTP 请求值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-460">The HTTP request values that have not been checked using request validation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-461">请求 HTML 标记和脚本，可能表示潜在的跨站点脚本攻击的验证的检查。</span><span class="sxs-lookup"><span data-stu-id="8ef25-461">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="8ef25-462">默认情况下，使用请求验证检查的所有值，如果任何值包含标记或脚本，ASP.NET 将引发<xref:System.Web.HttpRequestValidationException>异常。</span><span class="sxs-lookup"><span data-stu-id="8ef25-462">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="8ef25-463">如果你预计该请求将包含标记，请使用此方法 （例如，将允许用户发布的内容，其中包含标记） 和你想要获取请求的原始值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-463">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ef25-464">如果使用此属性，你必须手动检查潜在的跨站点脚本攻击的数据。</span><span class="sxs-lookup"><span data-stu-id="8ef25-464">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-465">Gets information about the URL of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-465">Gets information about the URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-466">包含当前请求的 URL <see cref="T:System.Uri" /> 的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-466">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-467">下面的代码示例分配<xref:System.Uri>到 HTTP 输出对象的 URL 的两个属性的值为对象变量，并显示当前请求的对象。</span><span class="sxs-lookup"><span data-stu-id="8ef25-467">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-468">Gets information about the URL of the client's previous request that linked to the current URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-468">Gets information about the URL of the client's previous request that linked to the current URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-469">一个 <see cref="T:System.Uri" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-469">A <see cref="T:System.Uri" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-470">下面的代码示例显示的 url 的客户端与当前应用程序的两个属性的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-470">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="8ef25-471">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-471">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-472">Gets the raw user agent string of the client browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-472">Gets the raw user agent string of the client browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-473">客户端浏览器的原始用户代理信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-473">The raw user agent string of the client browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-474">下面的代码示例将请求浏览器的类型标识分配给字符串变量。</span><span class="sxs-lookup"><span data-stu-id="8ef25-474">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-475">Gets the IP host address of the remote client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-475">Gets the IP host address of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-476">远程客户端的 IP 地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-476">The IP address of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-477">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.UserHostAddress%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-477">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-478">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-478">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-479">Gets the DNS name of the remote client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-479">Gets the DNS name of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-480">远程客户端的 DNS 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-480">The DNS name of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-481">下面的代码示例使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法进行 HTML 编码的值<xref:System.Web.HttpRequest.UserHostName%2A>属性和<xref:System.IO.TextWriter.WriteLine%2A>方法向文件写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="8ef25-481">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="8ef25-482">此代码示例是为提供一个更大示例的一部分<xref:System.Web.HttpRequest>类。</span><span class="sxs-lookup"><span data-stu-id="8ef25-482">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-483">Gets a sorted string array of client language preferences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-483">Gets a sorted string array of client language preferences.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef25-484">经过排序的客户端语言首选项的字符串数组，或者，如果为空，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-484">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ef25-485">下面的代码示例捕获返回的多个值<xref:System.Web.HttpRequest.UserLanguages%2A>属性转换成一个字符串数组，并将事件写入每个语言名称写入 HTTP 输出的单独的行。</span><span class="sxs-lookup"><span data-stu-id="8ef25-485">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="8ef25-486">语言名称由浏览器中，并且没有明确的列表的所有可能的代码。</span><span class="sxs-lookup"><span data-stu-id="8ef25-486">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="8ef25-487">通常这些包含两个字符代码的语言、 连字符和两个字符代码对于区域性，例如"en-我们"适用于美国英语和"fr-ca"表示加拿大法语。</span><span class="sxs-lookup"><span data-stu-id="8ef25-487">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ef25-488">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-488">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef25-489"><xref:System.Web.HttpRequest>类使用输入的验证标志来跟踪是否执行验证，通过访问的请求集合<xref:System.Web.HttpRequest.Cookies%2A>， <xref:System.Web.HttpRequest.Form%2A>，和<xref:System.Web.HttpRequest.QueryString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8ef25-489">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="8ef25-490"><xref:System.Web.HttpRequest.ValidateInput%2A>方法设置这些标志这样，当的 get 访问器<xref:System.Web.HttpRequest.Cookies%2A>， <xref:System.Web.HttpRequest.Form%2A>，或<xref:System.Web.HttpRequest.QueryString%2A>调用属性，将执行输入的验证。</span><span class="sxs-lookup"><span data-stu-id="8ef25-490">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="8ef25-491">验证工作原理是检查所有输入的数据与潜在的危险数据的硬编码列表。</span><span class="sxs-lookup"><span data-stu-id="8ef25-491">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="8ef25-492">如果通过页面指令或配置来启用验证功能，这种方法称为在页面的过程`ProcessRequest`处理阶段。</span><span class="sxs-lookup"><span data-stu-id="8ef25-492">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="8ef25-493"><xref:System.Web.HttpRequest.ValidateInput%2A>你的代码可以调用方法，如果未启用验证功能。</span><span class="sxs-lookup"><span data-stu-id="8ef25-493">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException">
          <span data-ttu-id="8ef25-494">Potentially dangerous data was received from the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef25-494">Potentially dangerous data was received from the client.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>