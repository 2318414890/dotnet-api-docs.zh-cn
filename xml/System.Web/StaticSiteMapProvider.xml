<Type Name="StaticSiteMapProvider" FullName="System.Web.StaticSiteMapProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1abbaaf7209b538d32488a7a70e1b59220235fb" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229436" /></Metadata><TypeSignature Language="C#" Value="public abstract class StaticSiteMapProvider : System.Web.SiteMapProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StaticSiteMapProvider extends System.Web.SiteMapProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.StaticSiteMapProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StaticSiteMapProvider&#xA;Inherits SiteMapProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class StaticSiteMapProvider abstract : System::Web::SiteMapProvider" />
  <TypeSignature Language="F#" Value="type StaticSiteMapProvider = class&#xA;    inherit SiteMapProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.SiteMapProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>作为 <see cref="T:System.Web.SiteMapProvider" /> 抽象类的部分实现和 <see cref="T:System.Web.XmlSiteMapProvider" /> 类（它是 ASP.NET 中的默认站点地图提供程序）的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.StaticSiteMapProvider>类是抽象的部分实现<xref:System.Web.SiteMapProvider>类，并提供了两个其他的方法：<xref:System.Web.StaticSiteMapProvider.AddNode%2A>并<xref:System.Web.StaticSiteMapProvider.RemoveNode%2A>，以及抽象<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>和受保护<xref:System.Web.StaticSiteMapProvider.Clear%2A>方法。  
  
 <xref:System.Web.StaticSiteMapProvider>类支持编写站点地图提供程序 (例如， <xref:System.Web.XmlSiteMapProvider>) 转换为存储在内存中的持久存储中存储的站点地图。 <xref:System.Web.StaticSiteMapProvider>类提供基本实现，用于存储和检索<xref:System.Web.SiteMapNode>对象。  
  
 <xref:System.Web.SiteMapProvider>和<xref:System.Web.StaticSiteMapProvider>类支持的站点映射提供程序层次结构，其中，站点地图提供程序可以与其他站点映射提供程序具有层次结构关系的概念。 此模式通过实现<xref:System.Web.SiteMapProvider.RootProvider%2A>和<xref:System.Web.SiteMapProvider.ParentProvider%2A>属性。  
  
 <xref:System.Web.StaticSiteMapProvider>类存储其<xref:System.Web.SiteMapNode>哈希表中的对象，并在内部使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>的页面，由站点地图节点，作为键的属性。 （如果站点地图节点不指定 URL，它会跟踪使用自动生成的唯一键。）因此，不能具有站点地图节点站点地图节点，使用相同的 URL 使用其中一次。 例如，尝试加载站点地图节点中使用下面的代码示例所示<xref:System.Web.XmlSiteMapProvider>类，该类是默认 ASP.NET 站点映射提供程序或任何站点映射提供程序派生自<xref:System.Web.StaticSiteMapProvider>由于无法工作类AboutUs.aspx 页被多次使用。  
  
```  
<sitemap>  
  <sitemapnode title="Home" description="Home" url="default.aspx" >  
    <sitemapnode title="Catalog" description="Our catalog" url="catalog.aspx"/>  
    <sitemapnode title="About Us" description="All about our company" url="aboutus.aspx"/>  
    <sitemapnode title="Driving Directions" description="Directions to our store" url="aboutus.aspx"/>  
  </sitemapnode>  
</sitemap>  
```  
  
 当扩展<xref:System.Web.StaticSiteMapProvider>类中，三个最重要的方法是<xref:System.Web.SiteMapProvider.GetRootNodeCore%2A>， <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>，和<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法。 <xref:System.Web.StaticSiteMapProvider.Clear%2A>和<xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A>方法具有足够用于大多数自定义站点映射提供程序实现的默认实现。  
  
 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法调用以初始化派生的站点地图提供程序，包括加载站点地图数据的所需的任何资源，但它会尝试生成站点地图节点在内存中的。 如果派生的类使用文件存储站点地图数据，可以在这里执行的任何文件初始化。 如果站点地图节点使用某些其他类型的数据存储，如关系数据库中，初始化连接可以在此执行。 其他属性，如处理的 ASP.NET 配置系统以及传递给文件的名称或在配置中的站点映射提供程序元素放置的连接字符串<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法替换`attributes`参数。  
  
 <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>所有派生自的类必须重写方法<xref:System.Web.StaticSiteMapProvider>类，并调用以从持久性存储区加载站点地图节点，并将其转换为内部表示形式。 <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法将在内部调用中的默认成员实现的许多<xref:System.Web.StaticSiteMapProvider>和<xref:System.Web.XmlSiteMapProvider>类。 如果您实现您自己的站点地图提供程序，确保站点映射数据处理发生一次，并且对后续调用<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法立即返回，如果已加载站点地图信息。 当您实现<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法中，确保它是线程安全的因为多个并发的页请求可以间接导致多个调用来加载站点地图信息。 站点地图基础结构支持基于用户的角色的显示站点映射信息。 具体取决于<xref:System.Web.SiteMapNode.Roles%2A>支持的单个属性<xref:System.Web.SiteMapNode>存在的对象，不同的导航结构可以为不同的用户。 该站点的默认实现将映射的节点检索成员<xref:System.Web.StaticSiteMapProvider>类执行安全修整自动通过调用<xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>方法。  
  
 <xref:System.Web.StaticSiteMapProvider.AddNode%2A>，<xref:System.Web.StaticSiteMapProvider.Clear%2A>和<xref:System.Web.StaticSiteMapProvider.RemoveNode%2A>方法操作用来以线程安全的方式跟踪站点地图节点的内部集合。  
  
   
  
## Examples  
 下面的代码示例演示如何扩展<xref:System.Web.StaticSiteMapProvider>类，以使用 Microsoft Access 作为站点地图提供程序。 `AccessSiteMapProvider`类是支持仅简单、 一个级别深度层次结构的站点映射提供程序。 站点地图数据存储中的表具有以下结构：  
  
```  
NODEID URL            NAME       PARENTNODEID  
 ---------------------------------------------  
 1      default.aspx   Default    <NULL>  
 2      catalog.aspx   Catalog    1  
 3      aboutus.aspx   Contact Us 1  
...  
```  
  
 `AccessSiteMapProvider`类派生自<xref:System.Web.StaticSiteMapProvider>类，并从 Microsoft Access 数据库使用基本的 SQL 查询中检索其信息和<xref:System.Data.OleDb.OleDbCommand>和<xref:System.Data.OleDb.OleDbDataReader>对象。  
  
 [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#1](~/samples/snippets/cpp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CPP/accesssitemapprovider.cpp#1)]
 [!code-csharp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CS/accesssitemapprovider.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/VB/accesssitemapprovider.vb#1)]  
  
 最后，`AccessSiteMapProvider`配置为以下 Web.config 文件中的默认提供程序。  
  
```  
<configuration>  
  <system.web>  
    <siteMap defaultProvider="AccessSiteMapProvider">  
     <providers>  
       <add   
         name="AccessSiteMapProvider"  
         type="Samples.AspNet.AccessSiteMapProvider,Samples.AspNet "  
         accessSiteMapConnectionString="PROVIDER=MICROSOFT.JET.OLEDB.4.0;DATA SOURCE=sitemap.mdb "/>  
     </providers>   
    </siteMap>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>继承自<see cref="T:System.Web.StaticSiteMapProvider" />类，必须重写以下成员： <see cref="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />。</para></block>
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.XmlSiteMapProvider" />
    <altmember cref="T:System.Web.SiteMapNode" />
    <altmember cref="T:System.Web.SiteMap" />
    <related type="Article" href="https://msdn.microsoft.com/library/23de8a05-cac3-4693-b508-39f1d4b7053d">ASP.NET 站点导航概述</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20">ASP.NET 站点地图</related>
    <related type="Article" href="https://msdn.microsoft.com/library/4f3ce72a-4fa3-4c3a-94c8-3e2bc4a92d85">ASP.NET 站点导航提供程序</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StaticSiteMapProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StaticSiteMapProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.StaticSiteMapProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **请注意**不直接实例化此类。 从派生自的类的构造函数调用此构造函数<xref:System.Web.StaticSiteMapProvider>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="protected internal override void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddNode(class System.Web.SiteMapNode node, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddNode (node As SiteMapNode, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddNode(System::Web::SiteMapNode ^ node, System::Web::SiteMapNode ^ parentNode);" />
      <MemberSignature Language="F#" Value="override this.AddNode : System.Web.SiteMapNode * System.Web.SiteMapNode -&gt; unit" Usage="staticSiteMapProvider.AddNode (node, parentNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要添加到站点地图提供程序的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <param name="parentNode"><see cref="T:System.Web.SiteMapNode" />，将在它的下面添加 <paramref name="node" />。</param>
        <summary>向站点地图提供程序维护的集合添加一个 <see cref="T:System.Web.SiteMapNode" />，并建立 <see cref="T:System.Web.SiteMapNode" /> 对象之间的父/子关系。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过标识的站点地图节点`node`参数添加到内部集合，它由标识的站点地图节点之间创建父-子关系`parentNode`参数。  
  
 添加到内部集合时，可能会解释站点地图节点的 URL。 应用程序相对和相对 Url 扩展到应用程序绝对虚拟路径，然后使用在内部存储和访问的各个实例<xref:System.Web.SiteMapNode>类。 其他 Url，如物理路径、 路径替换为在其中，协议和 UNC 路径，不会被解释。  
  
 <xref:System.Web.XmlSiteMapProvider>类，该类派生自<xref:System.Web.StaticSiteMapProvider>类，并且是 ASP.NET 的默认站点映射提供程序，使用<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>作为在其内部集合中，默认情况下的查找键的对象。 如果<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>，则它必须是唯一的站点地图提供程序作用域内。 <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A>方法尝试检索站点地图节点根据其<xref:System.Web.SiteMapNode.Url%2A>属性。 否则，可以使用<xref:System.Web.SiteMapNode.Key%2A>属性和相应<xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A>方法来检索站点地图节点。 如果没有<xref:System.Web.SiteMapNode.Url%2A>或<xref:System.Web.SiteMapNode.Key%2A>站点地图提供程序会自动生成的指定<xref:System.Web.SiteMapNode.Key%2A>要跟踪的站点地图节点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="node" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.SiteMapNode.Url" /> 或 <see cref="P:System.Web.SiteMapNode.Key" /> 已经注册到 <see cref="T:System.Web.StaticSiteMapProvider" />。 站点地图节点必须由具有唯一 URL 或键的页构成。</exception>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.StaticSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)" />方法中，确保<see cref="P:System.Web.SiteMapNode.Key" />属性设置为唯一值时添加站点映射节点使用<see cref="Overload:System.Web.StaticSiteMapProvider.AddNode" />方法。</para></block>
        <altmember cref="M:System.Web.StaticSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="BuildSiteMap">
      <MemberSignature Language="C#" Value="public abstract System.Web.SiteMapNode BuildSiteMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode BuildSiteMap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BuildSiteMap () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SiteMapNode ^ BuildSiteMap();" />
      <MemberSignature Language="F#" Value="abstract member BuildSiteMap : unit -&gt; System.Web.SiteMapNode" Usage="staticSiteMapProvider.BuildSiteMap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，从持久性存储区加载站点地图信息，并在内存中构建它。</summary>
        <returns>站点地图导航结构的根 <see cref="T:System.Web.SiteMapNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法是一个抽象成员<xref:System.Web.StaticSiteMapProvider>类。 <xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>调用方法来加载和生成站点地图节点从持久性存储区。 当您实现<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法中，确保它是线程安全的因为多个并发的页请求可以间接导致多个调用来加载站点地图信息。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法以从 Microsoft Access 数据库中检索数据并生成<xref:System.Web.SiteMapNode>添加到的对象<xref:System.Web.SiteMapNode.ChildNodes%2A>根站点地图节点的集合。 最后，<xref:System.Web.SiteMapProvider.RootNode%2A>属性返回给调用方。  
  
 此代码示例是为提供一个更大示例的一部分<xref:System.Web.StaticSiteMapProvider>类。  
  
 [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/samples/snippets/cpp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CPP/accesssitemapprovider.cpp#4)]
 [!code-csharp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CS/accesssitemapprovider.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/VB/accesssitemapprovider.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />方法在派生类中，请确保规范化的 Url<see cref="T:System.Web.SiteMapNode" />对象添加到你的站点地图提供程序，以便<see cref="M:System.Web.StaticSiteMapProvider.FindSiteMapNode(System.String)" />方法可以检索站点地图节点，而不管是否站点地图的 URL节点被提供作为应用程序相对路径或绝对虚拟路径。 使用的站点映射提供程序实施者<see cref="Overload:System.Web.StaticSiteMapProvider.AddNode" />方法应存储在存储之前规范化的任何 Url<see cref="T:System.Web.SiteMapNode" />代表站点地图提供程序的内部哈希表中的对象。  
  
安全修整行为已被纳入<see cref="T:System.Web.SiteMapProvider" />和<see cref="T:System.Web.StaticSiteMapProvider" />类实现。 但是，对于派生类中对函数的安全修整，必须设置<see cref="P:System.Web.SiteMapNode.Roles" />属性的任何<see cref="T:System.Web.SiteMapNode" />重写时，生成站点地图提供程序时创建的对象<see cref="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />方法。</para></block>
        <altmember cref="P:System.Web.SiteMapProvider.RootNode" />
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.StaticSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="staticSiteMapProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除 <see cref="T:System.Web.StaticSiteMapProvider" /> 作为其状态的一部分来跟踪的父和子站点地图节点的集合中的所有元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类派生自<xref:System.Web.StaticSiteMapProvider>类可以重写<xref:System.Web.StaticSiteMapProvider.Clear%2A>方法来执行其他清理操作，具体取决于何种状态的派生的类维护。  
  
 <xref:System.Web.StaticSiteMapProvider.Clear%2A>方法不重置状态初始化期间<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法-它将重置期间初始化的唯一状态<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.StaticSiteMapProvider.Clear%2A>方法来执行其他清理操作由类保持的状态。  
  
 此代码示例是为提供一个更大示例的一部分<xref:System.Web.StaticSiteMapProvider>类。  
  
 [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CPP/accesssitemapprovider.cpp#3)]
 [!code-csharp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CS/accesssitemapprovider.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/VB/accesssitemapprovider.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNode (string rawUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNode(string rawUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.FindSiteMapNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNode (rawUrl As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNode(System::String ^ rawUrl);" />
      <MemberSignature Language="F#" Value="override this.FindSiteMapNode : string -&gt; System.Web.SiteMapNode" Usage="staticSiteMapProvider.FindSiteMapNode rawUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawUrl">标识要为其检索 <see cref="T:System.Web.SiteMapNode" /> 的页的 URL。</param>
        <summary>检索表示位于指定 URL 处的页的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <returns>表示 <paramref name="rawURL" /> 所标识的页的 <see cref="T:System.Web.SiteMapNode" />；如果没有找到对应的站点地图节点，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所提供的 URL 通常是虚拟或绝对 URL。 它还可使用 ASP.NET 应用程序相关的语法，如 URL `"~/apprelativedirectory"`。 <xref:System.Web.StaticSiteMapProvider>类自动标准化应用程序相对到绝对虚拟路径的原始 Url。  
  
 <xref:System.Web.XmlSiteMapProvider>对象，该类派生自<xref:System.Web.StaticSiteMapProvider>和 ASP.NET 的默认站点映射提供程序，使用<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>作为在其内部集合中，默认情况下的查找键的对象。 如果<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>，则它必须是唯一的站点地图提供程序作用域内。 <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A>方法尝试检索站点地图节点根据其<xref:System.Web.SiteMapNode.Url%2A>。 否则，可以使用<xref:System.Web.SiteMapNode.Key%2A>属性和相应<xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A>方法来检索站点地图节点。 如果没有<xref:System.Web.SiteMapNode.Url%2A>或<xref:System.Web.SiteMapNode.Key%2A>站点地图提供程序会自动生成的指定<xref:System.Web.SiteMapNode.Key%2A>要跟踪的站点地图节点属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rawURL" /> 为 <see langword="null" />。</exception>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.StaticSiteMapProvider.FindSiteMapNode(System.String)" />方法在派生类中，请确保规范化的 Url<see cref="T:System.Web.SiteMapNode" />对象添加到你的站点地图提供程序，以便<see cref="M:System.Web.StaticSiteMapProvider.FindSiteMapNode(System.String)" />方法可以检索站点地图节点，而不管是否站点地图的 URL节点被提供为绝对虚拟路径或应用程序相对路径。  
  
安全修整行为已被纳入<see cref="T:System.Web.SiteMapProvider" />和<see cref="T:System.Web.StaticSiteMapProvider" />类实现。 但是，对于派生类中对函数的安全修整，必须设置<see cref="P:System.Web.SiteMapNode.Roles" />属性的任何<see cref="T:System.Web.SiteMapNode" />重写时，生成站点地图提供程序时创建的对象<see cref="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />方法。</para></block>
        <altmember cref="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />
        <altmember cref="M:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNodeFromKey">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNodeFromKey (key As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNodeFromKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="override this.FindSiteMapNodeFromKey : string -&gt; System.Web.SiteMapNode" Usage="staticSiteMapProvider.FindSiteMapNodeFromKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">用于创建 <see cref="T:System.Web.SiteMapNode" /> 的查找键。</param>
        <summary>根据指定的键检索 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <returns>表示 <paramref name="key" /> 所标识的页的 <see cref="T:System.Web.SiteMapNode" />；如果启用了安全修整而不能向当前用户显示该站点地图节点，或者未在站点地图节点集合中按 <paramref name="key" /> 找到该站点地图节点，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A>方法检索站点地图节点从内部<xref:System.Collections.Hashtable>对象，基于`key`。  
  
 <xref:System.Web.XmlSiteMapProvider>对象，该类派生自<xref:System.Web.StaticSiteMapProvider>类和是 ASP.NET 的默认站点映射提供程序，将使用<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>作为在其内部集合中，默认情况下的查找键的对象。 如果<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>，则它必须是唯一的站点地图提供程序作用域内。 <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A>方法尝试检索站点地图节点根据其<xref:System.Web.SiteMapNode.Url%2A>。 否则，可以使用<xref:System.Web.SiteMapNode.Key%2A>属性和相应<xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A>方法来检索站点地图节点。  
  
 <xref:System.Web.StaticSiteMapProvider>有一个查找的实例的默认实现<xref:System.Web.SiteMapNode>类，根据`key`参数。 如果使用站点映射提供程序实现器<xref:System.Web.StaticSiteMapProvider.AddNode%2A>方法，<xref:System.Web.StaticSiteMapProvider>已将存储到每个引用<xref:System.Web.SiteMapNode>值的基础<xref:System.Web.SiteMapNode.Key%2A?displayProperty=nameWithType>属性。 默认情况下<xref:System.Web.XmlSiteMapProvider>生成的 Guid 的实例<xref:System.Web.SiteMapNode>不具有值的类<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性。  自定义站点地图提供程序实施者必须提供其自己的机制来生成的唯一值<xref:System.Web.SiteMapNode.Key%2A?displayProperty=nameWithType>属性的事件中的实例<xref:System.Web.SiteMapNode>类不具有的值<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性。  
  
 <xref:System.Web.SiteMapProvider>并<xref:System.Web.XmlSiteMapProvider>类，类是 ASP.NET 的默认站点地图提供程序实现，使用的 URL<xref:System.Web.SiteMapNode>作为类所维护的各种集合中键的对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.StaticSiteMapProvider.FindSiteMapNode" />
      </Docs>
    </Member>
    <Member MemberName="GetChildNodes">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNodeCollection GetChildNodes(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildNodes (node As SiteMapNode) As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNodeCollection ^ GetChildNodes(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.GetChildNodes : System.Web.SiteMapNode -&gt; System.Web.SiteMapNodeCollection" Usage="staticSiteMapProvider.GetChildNodes node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要检索其全部子站点地图节点的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>检索特定 <see cref="T:System.Web.SiteMapNode" /> 对象的子站点地图节点。</summary>
        <returns>包含 <paramref name="node" /> 的子站点地图节点的只读 <see cref="T:System.Web.SiteMapNodeCollection" />。 如果启用了安全修整，则该集合仅包含允许用户查看的站点地图节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode>对象委托给站点地图提供程序来跟踪其子和父站点地图节点。 因此，实现层次结构的站点的站点映射提供程序的类映射的结构，如<xref:System.Web.StaticSiteMapProvider>，并使用<xref:System.Web.SiteMapNode>对象来表示站点地图节点，必须为，可以跟踪所有站点地图节点的层次结构关系导航整个层次结构树。  
  
 <xref:System.Web.StaticSiteMapProvider.GetChildNodes%2A>方法调用<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法在内部检索只读<xref:System.Web.SiteMapNodeCollection>相对于指定的站点地图节点且与当前用户相关的站点地图节点的集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="GetParentNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode GetParentNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.GetParentNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParentNode (node As SiteMapNode) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ GetParentNode(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.GetParentNode : System.Web.SiteMapNode -&gt; System.Web.SiteMapNode" Usage="staticSiteMapProvider.GetParentNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要检索其父站点地图节点的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>检索特定 <see cref="T:System.Web.SiteMapNode" /> 对象的父站点地图节点。</summary>
        <returns>表示指定 <see cref="T:System.Web.SiteMapNode" /> 的父级的 <see cref="T:System.Web.SiteMapNode" />；如果不存在父站点地图节点，或者不允许用户查看父站点地图节点，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode>对象委托给站点地图提供程序来跟踪其子和父站点地图节点。 因此，实现层次结构的站点的站点映射提供程序的类映射的结构，如<xref:System.Web.StaticSiteMapProvider>类，并使用<xref:System.Web.SiteMapNode>对象来表示站点地图节点，必须为跟踪所有站点地图节点的层次结构关系能够导航整个层次结构树。  
  
 如果<xref:System.Web.SiteMapNode.ParentNode%2A>找不到属性，<xref:System.Web.StaticSiteMapProvider>类检测到当前站点地图提供程序是否具有<xref:System.Web.SiteMapProvider.ParentProvider%2A>属性。 因此，站点地图提供程序调用如果<xref:System.Web.StaticSiteMapProvider.GetParentNode%2A>父站点地图提供程序的属性。 这使其中站点地图节点的父站点地图节点由不同的站点地图提供程序维护的方案。  
  
 <xref:System.Web.StaticSiteMapProvider.GetParentNode%2A>方法调用<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法在内部检索<xref:System.Web.SiteMapNode>，表示指定的站点地图节点的父级。 如果启用了安全修整，仅当该用户可以看到它，则返回站点地图节点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="C#" Value="protected internal override void RemoveNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RemoveNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.StaticSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RemoveNode (node As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RemoveNode(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.RemoveNode : System.Web.SiteMapNode -&gt; unit" Usage="staticSiteMapProvider.RemoveNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要从站点地图节点集合中移除的站点地图节点。</param>
        <summary>从站点地图提供程序跟踪的所有站点地图节点集合中移除指定的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Web.StaticSiteMapProvider.AddNode" />
      </Docs>
    </Member>
  </Members>
</Type>