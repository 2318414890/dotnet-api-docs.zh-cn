<Type Name="HttpCachePolicy" FullName="System.Web.HttpCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ba322bb815f72d0683f609417f6ec14b371876f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type HttpCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关 HTTP 标头和控制缓存的背景信息，请参阅 RFC 2616： 超文本传输协议-HTTP/1.1，可在上找到[World Wide Web Consortium (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValidationCallback">
      <MemberSignature Language="C#" Value="public void AddValidationCallback (System.Web.HttpCacheValidateHandler handler, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationCallback(class System.Web.HttpCacheValidateHandler handler, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationCallback (handler As HttpCacheValidateHandler, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationCallback(System::Web::HttpCacheValidateHandler ^ handler, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.AddValidationCallback : System.Web.HttpCacheValidateHandler * obj -&gt; unit" Usage="httpCachePolicy.AddValidationCallback (handler, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.HttpCacheValidateHandler" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handler">The <see cref="T:System.Web.HttpCacheValidateHandler" /> value.</param>
        <param name="data">The arbitrary user-supplied data that is passed back to the <see cref="M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" /> delegate.</param>
        <summary>Registers a validation callback for the current response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A>方法提供了一种机制之前由输出缓存的响应返回到客户端检查以编程方式中缓存的响应。  
  
 从 Web 服务器缓存中提供响应之前，所有已注册处理程序进行查询，以确保资源的有效性。 如果任何处理程序将设置一个标志，指示缓存的响应不有效，该条目为无效，排除标记从缓存中。 在这种情况下，作为以及任何处理程序指示缓存的响应应忽略此请求，请求，然后处理就像它是缓存未命中。  
  
 <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何添加委托，以验证查询字符串值为基础的请求。  
  
 [!code-aspx-csharp[Cache Validation Callback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache validation callback/CS/ValidationCallbackcs.aspx#1)]
 [!code-aspx-vb[Cache Validation Callback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache validation callback/VB/ValidationCallbackvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The specified <paramref name="handler" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendCacheExtension">
      <MemberSignature Language="C#" Value="public void AppendCacheExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCacheExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.AppendCacheExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendCacheExtension (extension As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCacheExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.AppendCacheExtension : string -&gt; unit" Usage="httpCachePolicy.AppendCacheExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">The text to append to the <see langword="Cache-Control" /> header.</param>
        <summary>Appends the specified text to the <see langword="Cache-Control" /> HTTP header.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果浏览器不能识别缓存控制指令或扩展，浏览器必须忽略无法识别的条款。 有关详细信息，请参阅 RFC 2616： 超文本传输协议-HTTP/1.1，可在上找到[World Wide Web Consortium (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。  
  
 <xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将支持由 Internet Explorer 的缓存控制扩展。 服务器指示到浏览器的内容将不更改为一小时 (`pre-check=3600`) 并指示它用于直接从本地缓存中检索内容。 但是，如果修改了内容，由服务器和页上请求的用户在 15 分钟 (`post-check= 900`) 到 1 小时内浏览器显示在本地缓存中找到的信息，但还要执行后台检查和可选获取服务器上的新内容。  
  
 [!code-csharp[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extension" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCacheability">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheability GetCacheability ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.HttpCacheability GetCacheability() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetCacheability" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCacheability () As HttpCacheability" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCacheability GetCacheability();" />
      <MemberSignature Language="F#" Value="member this.GetCacheability : unit -&gt; System.Web.HttpCacheability" Usage="httpCachePolicy.GetCacheability " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheability</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the cache-control directive.</summary>
        <returns>The cache-control directive.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheExtensions">
      <MemberSignature Language="C#" Value="public string GetCacheExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCacheExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetCacheExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCacheExtensions () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCacheExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetCacheExtensions : unit -&gt; string" Usage="httpCachePolicy.GetCacheExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the cache extensions.</summary>
        <returns>The cache extensions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetETag">
      <MemberSignature Language="C#" Value="public string GetETag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetETag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetETag" />
      <MemberSignature Language="VB.NET" Value="Public Function GetETag () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetETag();" />
      <MemberSignature Language="F#" Value="member this.GetETag : unit -&gt; string" Usage="httpCachePolicy.GetETag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the ETag.</summary>
        <returns>The ETag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetETagFromFileDependencies">
      <MemberSignature Language="C#" Value="public bool GetETagFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetETagFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetETagFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetETagFromFileDependencies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetETagFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.GetETagFromFileDependencies : unit -&gt; bool" Usage="httpCachePolicy.GetETagFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the status indicating whether the <see langword="ETag" /> header has been set  based on the timestamps of the file   dependencies of the handler.</summary>
        <returns>
          <see langword="true" /> if the <see langword="ETag" /> header has been set  based on the timestamps of the file   dependencies of the handler; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpires">
      <MemberSignature Language="C#" Value="public DateTime GetExpires ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetExpires() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetExpires" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpires () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetExpires();" />
      <MemberSignature Language="F#" Value="member this.GetExpires : unit -&gt; DateTime" Usage="httpCachePolicy.GetExpires " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the expire header.</summary>
        <returns>The expire header.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIgnoreRangeRequests">
      <MemberSignature Language="C#" Value="public bool GetIgnoreRangeRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIgnoreRangeRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetIgnoreRangeRequests" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIgnoreRangeRequests () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIgnoreRangeRequests();" />
      <MemberSignature Language="F#" Value="member this.GetIgnoreRangeRequests : unit -&gt; bool" Usage="httpCachePolicy.GetIgnoreRangeRequests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the status of ignore range requests.</summary>
        <returns>
          <see langword="true" /> if range requests are ignored; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastModifiedFromFileDependencies">
      <MemberSignature Language="C#" Value="public bool GetLastModifiedFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetLastModifiedFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastModifiedFromFileDependencies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetLastModifiedFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.GetLastModifiedFromFileDependencies : unit -&gt; bool" Usage="httpCachePolicy.GetLastModifiedFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the status of the Last-Modified headerset to base on the timestamps of the   file dependencies of the handler.</summary>
        <returns>
          <see langword="true" /> if the Last-Modified header  is set to base on the timestamps of the   file dependencies of the handler; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan GetMaxAge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetMaxAge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetMaxAge" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxAge () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetMaxAge();" />
      <MemberSignature Language="F#" Value="member this.GetMaxAge : unit -&gt; TimeSpan" Usage="httpCachePolicy.GetMaxAge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the cache-control max age.</summary>
        <returns>The cache-control max age.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoServerCaching">
      <MemberSignature Language="C#" Value="public bool GetNoServerCaching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoServerCaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoServerCaching" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoServerCaching () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoServerCaching();" />
      <MemberSignature Language="F#" Value="member this.GetNoServerCaching : unit -&gt; bool" Usage="httpCachePolicy.GetNoServerCaching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the status of server caching for the current response.</summary>
        <returns>
          <see langword="true" /> if server caching is stopped for the current response; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoStore">
      <MemberSignature Language="C#" Value="public bool GetNoStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoStore" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoStore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoStore();" />
      <MemberSignature Language="F#" Value="member this.GetNoStore : unit -&gt; bool" Usage="httpCachePolicy.GetNoStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the status of the store.</summary>
        <returns>
          <see langword="true" /> if no store is set; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoTransforms">
      <MemberSignature Language="C#" Value="public bool GetNoTransforms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoTransforms() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoTransforms () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoTransforms();" />
      <MemberSignature Language="F#" Value="member this.GetNoTransforms : unit -&gt; bool" Usage="httpCachePolicy.GetNoTransforms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the status of the HTTP No-Transform Directive.</summary>
        <returns>
          <see langword="true" /> if the HTTP No-Transform Directive is set; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 允许的缓存控制 HTTP 标头发送。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOmitVaryStar">
      <MemberSignature Language="C#" Value="public int GetOmitVaryStar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOmitVaryStar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetOmitVaryStar" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOmitVaryStar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOmitVaryStar();" />
      <MemberSignature Language="F#" Value="member this.GetOmitVaryStar : unit -&gt; int" Usage="httpCachePolicy.GetOmitVaryStar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the status of the <see langword="vary:*" /> header.</summary>
        <returns>
          <see langword="true" /> if the <see langword="vary:*" /> header is omitted; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyMaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan GetProxyMaxAge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetProxyMaxAge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetProxyMaxAge" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyMaxAge () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetProxyMaxAge();" />
      <MemberSignature Language="F#" Value="member this.GetProxyMaxAge : unit -&gt; TimeSpan" Usage="httpCachePolicy.GetProxyMaxAge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the HTTP Cache-Control: Proxy Max Age.</summary>
        <returns>The HTTP Cache-Control: Proxy Max Age.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRevalidation">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheRevalidation GetRevalidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.HttpCacheRevalidation GetRevalidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetRevalidation" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRevalidation () As HttpCacheRevalidation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCacheRevalidation GetRevalidation();" />
      <MemberSignature Language="F#" Value="member this.GetRevalidation : unit -&gt; System.Web.HttpCacheRevalidation" Usage="httpCachePolicy.GetRevalidation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheRevalidation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.</summary>
        <returns>The Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值是不发送这些指令之一，除非显式启用使用此方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime GetUtcLastModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetUtcLastModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetUtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUtcLastModified () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetUtcLastModified();" />
      <MemberSignature Language="F#" Value="member this.GetUtcLastModified : unit -&gt; DateTime" Usage="httpCachePolicy.GetUtcLastModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the value of the <see langword="Last-Modified" /> HTTP header in Coordinated Universal Time (UTC).</summary>
        <returns>The value of the <see langword="Last-Modified" /> HTTP header.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVaryByCustom">
      <MemberSignature Language="C#" Value="public string GetVaryByCustom ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetVaryByCustom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetVaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVaryByCustom () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetVaryByCustom();" />
      <MemberSignature Language="F#" Value="member this.GetVaryByCustom : unit -&gt; string" Usage="httpCachePolicy.GetVaryByCustom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the custom string that is used to vary the HTTP caching.</summary>
        <returns>The custom string for varying the HTTP caching.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSlidingExpiration">
      <MemberSignature Language="C#" Value="public bool HasSlidingExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSlidingExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.HasSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSlidingExpiration () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSlidingExpiration();" />
      <MemberSignature Language="F#" Value="member this.HasSlidingExpiration : unit -&gt; bool" Usage="httpCachePolicy.HasSlidingExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a value which specifies whether the cache has a sliding expiration policy.</summary>
        <returns>
          <see langword="true" /> if the cache has a sliding expiration policy; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsModified();" />
      <MemberSignature Language="F#" Value="member this.IsModified : unit -&gt; bool" Usage="httpCachePolicy.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a value which specifies whether the HTTP cache has been modified.</summary>
        <returns>
          <see langword="true" /> if the cache has been modified; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidUntilExpires">
      <MemberSignature Language="C#" Value="public bool IsValidUntilExpires ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValidUntilExpires() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.IsValidUntilExpires" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidUntilExpires () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidUntilExpires();" />
      <MemberSignature Language="F#" Value="member this.IsValidUntilExpires : unit -&gt; bool" Usage="httpCachePolicy.IsValidUntilExpires " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a value which specifies whether the ASP.NET cache should ignore HTTP <see langword="Cache-Control" /> headers sent by the client that invalidate the cache.</summary>
        <returns>
          <see langword="true" /> if the ASP.NET cache should ignore HTTP <see langword="Cache-Control" /> headers sent by the client; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowResponseInBrowserHistory">
      <MemberSignature Language="C#" Value="public void SetAllowResponseInBrowserHistory (bool allow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllowResponseInBrowserHistory(bool allow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllowResponseInBrowserHistory (allow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllowResponseInBrowserHistory(bool allow);" />
      <MemberSignature Language="F#" Value="member this.SetAllowResponseInBrowserHistory : bool -&gt; unit" Usage="httpCachePolicy.SetAllowResponseInBrowserHistory allow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allow">
          <see langword="true" /> to direct the client browser to store responses in the History folder; otherwise <see langword="false" />. The default is <see langword="false" />.</param>
        <summary>Makes the response is available in the client browser History cache, regardless of the <see cref="T:System.Web.HttpCacheability" /> setting made on the server, when the <paramref name="allow" /> parameter is <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.HttpCacheability>设置为<xref:System.Web.HttpCacheability.NoCache>或<xref:System.Web.HttpCacheability.ServerAndNoCache> `Expires` HTTP 标头是默认情况下设置为-1; 这将告知未响应缓存客户端在历史记录文件夹中，以便在使用后/前向按钮时客户端请求的新版本每次响应。 可以通过调用重写此行为<xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A>方法替换`allow`参数设置为`true`。  
  
 如果<xref:System.Web.HttpCacheability>设置为值非<xref:System.Web.HttpCacheability.NoCache>或<xref:System.Web.HttpCacheability.ServerAndNoCache>，则调用<xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A>方法替换为上述任意值`allow`不起作用。  
  
 <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A>方法以将客户端在自定义的历史记录中存储响应定向<xref:System.Web.HttpCachePolicy>。  
  
 [!code-aspx-csharp[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/CS/httpcachepolicy_setallowresponseinbrowserhistorycs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/VB/httpcachepolicy_setallowresponseinbrowserhistoryvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCacheability">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the <see langword="Cache-Control" /> HTTP header. The <see langword="Cache-Control" /> HTTP header controls how documents are to be cached on the network.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCacheability">
      <MemberSignature Language="C#" Value="public void SetCacheability (System.Web.HttpCacheability cacheability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheability(valuetype System.Web.HttpCacheability cacheability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheability (cacheability As HttpCacheability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheability(System::Web::HttpCacheability cacheability);" />
      <MemberSignature Language="F#" Value="member this.SetCacheability : System.Web.HttpCacheability -&gt; unit" Usage="httpCachePolicy.SetCacheability cacheability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheability" Type="System.Web.HttpCacheability" />
      </Parameters>
      <Docs>
        <param name="cacheability">An <see cref="T:System.Web.HttpCacheability" /> enumeration value.</param>
        <summary>Sets the <see langword="Cache-Control" /> header to one of the values of <see cref="T:System.Web.HttpCacheability" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetCacheability%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置`Cache-Control`为的枚举值的标头`no-cache`。  
  
 [!code-csharp[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="cacheability" /> is not one of the enumeration values.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCacheability">
      <MemberSignature Language="C#" Value="public void SetCacheability (System.Web.HttpCacheability cacheability, string field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheability(valuetype System.Web.HttpCacheability cacheability, string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheability (cacheability As HttpCacheability, field As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheability(System::Web::HttpCacheability cacheability, System::String ^ field);" />
      <MemberSignature Language="F#" Value="member this.SetCacheability : System.Web.HttpCacheability * string -&gt; unit" Usage="httpCachePolicy.SetCacheability (cacheability, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheability" Type="System.Web.HttpCacheability" />
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheability">The <see cref="T:System.Web.HttpCacheability" /> enumeration value to set the header to.</param>
        <param name="field">The cache control extension to add to the header.</param>
        <summary>Sets the <see langword="Cache-Control" /> header to one of the values of <see cref="T:System.Web.HttpCacheability" /> and appends an extension to the directive.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 域扩展名无效只有在使用`private`或`no-cache`指令。 有关详细信息，请参阅 RFC 2616： 超文本传输协议-HTTP/1.1，可在上找到[World Wide Web Consortium (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。  
  
 如果不兼容的指令和扩展将合并，则此方法将引发无效参数异常。  
  
 <xref:System.Web.HttpCachePolicy.SetCacheability%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何`Cache-Control`标头设置为枚举值`private`并将缓存控制扩展添加。 已修改的指令意味着，任何非共享的缓存，除了仅由名为"DEV"社区的成员共享任何缓存可以缓存响应。  
  
 [!code-csharp[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="field" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cacheability" /> is not <see cref="F:System.Web.HttpCacheability.Private" /> or <see cref="F:System.Web.HttpCacheability.NoCache" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetETag">
      <MemberSignature Language="C#" Value="public void SetETag (string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetETag(string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetETag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetETag (etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetETag(System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.SetETag : string -&gt; unit" Usage="httpCachePolicy.SetETag etag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="etag">The text to use for the <see langword="ETag" /> header.</param>
        <summary>Sets the <see langword="ETag" /> HTTP header to the specified string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ETag`标头是文档的特定版本的唯一标识符。 客户端使用它以验证客户端缓存的内容以避免再次请求。 一次`ETag`标头设置，因为在后续尝试将其设置失败并且引发异常。  
  
 <xref:System.Web.HttpCachePolicy.SetETag%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置`ETag`为自定义值的标头。  
  
 [!code-csharp[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="etag" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see langword="ETag" /> header has already been set.  \- or -  The <see cref="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies" /> has already been called.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetETagFromFileDependencies">
      <MemberSignature Language="C#" Value="public void SetETagFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetETagFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetETagFromFileDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetETagFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.SetETagFromFileDependencies : unit -&gt; unit" Usage="httpCachePolicy.SetETagFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see langword="ETag" /> HTTP header based on the time stamps of the handler's file dependencies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A>方法设置`ETag`方法检索该处理程序依赖在其上的所有文件的上次修改的时间戳，将所有文件的名称和时间戳都组合成单个字符串中，然后到单个摘要的哈希该字符串的标头用作`ETag`。  
  
 <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置`ETag`标头。  
  
 [!code-csharp[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see langword="ETag" /> header has already been set.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime date);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="httpCachePolicy.SetExpires date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The absolute <see cref="T:System.DateTime" /> value to set the <see langword="Expires" /> header to.</param>
        <summary>Sets the <see langword="Expires" /> HTTP header to an absolute date and time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果到期日期违反了顺序的原则，此方法将失败。  
  
   
  
## Examples  
 下面的代码示例演示如何将过期时间设置为下午 6:00 在当前的过期日期上的本地时间。  
  
 [!code-csharp[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastModified">
      <MemberSignature Language="C#" Value="public void SetLastModified (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastModified(valuetype System.DateTime date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastModified (date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastModified(DateTime date);" />
      <MemberSignature Language="F#" Value="member this.SetLastModified : DateTime -&gt; unit" Usage="httpCachePolicy.SetLastModified date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">The new <see cref="T:System.DateTime" /> value for the <see langword="Last-Modified" /> header.</param>
        <summary>Sets the <see langword="Last-Modified" /> HTTP header to the <see cref="T:System.DateTime" /> value supplied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Last-Modified` HTTP 标头时间戳与文档`DateTime`值，该值指示上次修改该文档。  
  
 如果违反缓存限制层次结构，此方法将失败。  
  
 <xref:System.Web.HttpCachePolicy.SetLastModified%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置`Last-Modified`到新的日期的标头。  
  
 [!code-csharp[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/cs/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="date" /> is later than the current <see langword="DateTime" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLastModifiedFromFileDependencies">
      <MemberSignature Language="C#" Value="public void SetLastModifiedFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastModifiedFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastModifiedFromFileDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastModifiedFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.SetLastModifiedFromFileDependencies : unit -&gt; unit" Usage="httpCachePolicy.SetLastModifiedFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see langword="Last-Modified" /> HTTP header based on the time stamps of the handler's file dependencies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置`Last-Modified`标头使用<xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A>方法。  
  
 [!code-csharp[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxAge">
      <MemberSignature Language="C#" Value="public void SetMaxAge (TimeSpan delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxAge(valuetype System.TimeSpan delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxAge (delta As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxAge(TimeSpan delta);" />
      <MemberSignature Language="F#" Value="member this.SetMaxAge : TimeSpan -&gt; unit" Usage="httpCachePolicy.SetMaxAge delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delta">The time span used to set the <see langword="Cache" /> - <see langword="Control: max-age" /> header.</param>
        <summary>Sets the <see langword="Cache-Control: max-age" /> HTTP header based on the specified time span.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Max-age` 是文档允许在被视为陈旧之前存在的最大绝对时间。  
  
 <xref:System.Web.HttpCachePolicy.SetMaxAge%2A>方法不使用滑动过期，如果过期日期违反限制原则将失败。  
  
 <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
> [!NOTE]
>  如果<xref:System.Web.HttpCachePolicy.SetMaxAge%2A>方法调用重复，第二个和后续调用，只能减少最大存留期的值。  
  
   
  
## Examples  
 下面的代码示例演示如何设置`Cache-Control: max-age`于 0 小时，30 分钟和 0 秒的标头。  
  
 [!code-csharp[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="delta" /> is less than 0 or greater than one year.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetNoServerCaching">
      <MemberSignature Language="C#" Value="public void SetNoServerCaching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoServerCaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoServerCaching" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoServerCaching ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoServerCaching();" />
      <MemberSignature Language="F#" Value="member this.SetNoServerCaching : unit -&gt; unit" Usage="httpCachePolicy.SetNoServerCaching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops all origin-server caching for the current response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 显式拒绝缓存的源服务器上的文档。 设置后，完全处理文档的所有请求。 调用此方法，则不能为当前响应重新启用缓存。  
  
 <xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何禁用输出缓存响应的其余部分。  
  
 [!code-csharp[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoStore">
      <MemberSignature Language="C#" Value="public void SetNoStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoStore" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoStore ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoStore();" />
      <MemberSignature Language="F#" Value="member this.SetNoStore : unit -&gt; unit" Usage="httpCachePolicy.SetNoStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see langword="Cache-Control: no-store" /> HTTP header.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.HttpCachePolicy.SetNoStore%2A>方法<xref:System.Web.HttpCachePolicy>类，以指示客户端不在其历史记录中存储响应。  
  
 [!code-aspx-csharp[HttpCachePolicySetNoStore#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetNoStore/CS/httpcachepolicy_setnostorecs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicySetNoStore#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetNoStore/VB/httpcachepolicy_setnostorevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoTransforms">
      <MemberSignature Language="C#" Value="public void SetNoTransforms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoTransforms() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoTransforms ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoTransforms();" />
      <MemberSignature Language="F#" Value="member this.SetNoTransforms : unit -&gt; unit" Usage="httpCachePolicy.SetNoTransforms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see langword="Cache-Control: no-transform" /> HTTP header.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Cache-Control: no-transform` HTTP 标头指示网络缓存应用程序不能修改文档。  
  
 `Cache-Control: no-transform` HTTP 标头可防止下游的代理服务器更改任何指定的标头值`Content-Encoding`， `Content-Range`，或`Content-Type`标头 （这包括的实体正文）。 例如，它会阻止代理将 GIF 图像转换为 PNG。  
  
 对缓存，一次的其他限制与<xref:System.Web.HttpCachePolicy.SetNoTransforms%2A>调用时， `Cache-Control: no-transform` HTTP 标头不能禁用通过<xref:System.Web.HttpCachePolicy>接口。  
  
 <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何发送`Cache-Control: no-transform`指令与当前的响应。  
  
 [!code-csharp[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOmitVaryStar">
      <MemberSignature Language="C#" Value="public void SetOmitVaryStar (bool omit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOmitVaryStar(bool omit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOmitVaryStar (omit As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOmitVaryStar(bool omit);" />
      <MemberSignature Language="F#" Value="member this.SetOmitVaryStar : bool -&gt; unit" Usage="httpCachePolicy.SetOmitVaryStar omit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="omit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="omit">
          <see langword="true" /> to direct the <see cref="T:System.Web.HttpCachePolicy" /> to not use the * value for its <see cref="P:System.Web.HttpCachePolicy.VaryByHeaders" /> property; otherwise, <see langword="false" />.</param>
        <summary>Specifies whether the response should contain the <see langword="vary:*" /> header when varying by parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可以防止输出响应添加`vary:*`到传出的响应时缓存的响应因参数的标头。 这可用于客户端不同的缓存的查询字符串，因为大多数客户端将自动因查询字符串而无需`vary:*`标头。  
  
> [!NOTE]
>  使用`vary:*`标头可以禁用所有客户端缓存。  
  
 这是一种简便方法，以影响<xref:System.Web.HttpCachePolicy.VaryByHeaders%2A>属性。 传递`true`给该方法将定向<xref:System.Web.HttpCachePolicy>若要忽略 * 值，则为<xref:System.Web.HttpCachePolicy.VaryByHeaders%2A>属性。  
  
 <xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProxyMaxAge">
      <MemberSignature Language="C#" Value="public void SetProxyMaxAge (TimeSpan delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProxyMaxAge(valuetype System.TimeSpan delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProxyMaxAge (delta As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProxyMaxAge(TimeSpan delta);" />
      <MemberSignature Language="F#" Value="member this.SetProxyMaxAge : TimeSpan -&gt; unit" Usage="httpCachePolicy.SetProxyMaxAge delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delta">The time span used to set the <see langword="Cache-Control: s-maxage" /> header.</param>
        <summary>Sets the <see langword="Cache-Control: s-maxage" /> HTTP header based on the specified time span.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A>方法不使用滑动过期，如果过期日期违反限制原则将失败。  
  
 <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置`Cache-Control: s-maxage`于 0 小时，30 分钟和 0 秒的标头。  
  
 [!code-csharp[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="delta" /> is less than 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetRevalidation">
      <MemberSignature Language="C#" Value="public void SetRevalidation (System.Web.HttpCacheRevalidation revalidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRevalidation(valuetype System.Web.HttpCacheRevalidation revalidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRevalidation (revalidation As HttpCacheRevalidation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRevalidation(System::Web::HttpCacheRevalidation revalidation);" />
      <MemberSignature Language="F#" Value="member this.SetRevalidation : System.Web.HttpCacheRevalidation -&gt; unit" Usage="httpCachePolicy.SetRevalidation revalidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="revalidation" Type="System.Web.HttpCacheRevalidation" />
      </Parameters>
      <Docs>
        <param name="revalidation">The <see cref="T:System.Web.HttpCacheRevalidation" /> enumeration value to set the <see langword="Cache-Control" /> header to.</param>
        <summary>Sets the <see langword="Cache-Control" /> HTTP header to either the <see langword="must-revalidate" /> or the <see langword="proxy-revalidate" /> directives based on the supplied enumeration value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，相当于<xref:System.Web.HttpCacheRevalidation.None>，是将这两个指令发送标头中，除非显式指定此方法。  
  
 <xref:System.Web.HttpCachePolicy.SetRevalidation%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何将缓存重新设置为<xref:System.Web.HttpCacheRevalidation.AllCaches>。  
  
 [!code-csharp[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="revalidation" /> is not one of the enumeration values.</exception>
        <altmember cref="T:System.Web.HttpCacheRevalidation" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool slide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool slide) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (slide As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool slide);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="httpCachePolicy.SetSlidingExpiration slide" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slide" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="slide">
          <see langword="true" /> or <see langword="false" />.</param>
        <summary>Sets cache expiration to from absolute to sliding.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当缓存过期时间设置为滑动，`Cache-Control`将使用每个响应续订 HTTP 标头。 此到期模式等同于用于将过期标头添加到所有输出相对于当前时间设置的 IIS 配置选项。  
  
 如果你显式设置相对过期机制为 off (`false`)、 将保留该设置和启用滑动过期的任何尝试将以静默方式失败。 此方法未直接映射到 HTTP 标头。 它由后续的模块或辅助请求用来设置源服务器缓存策略。  
  
 <xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置滑动到过期`true`。  
  
 [!code-csharp[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidUntilExpires">
      <MemberSignature Language="C#" Value="public void SetValidUntilExpires (bool validUntilExpires);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidUntilExpires(bool validUntilExpires) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidUntilExpires (validUntilExpires As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidUntilExpires(bool validUntilExpires);" />
      <MemberSignature Language="F#" Value="member this.SetValidUntilExpires : bool -&gt; unit" Usage="httpCachePolicy.SetValidUntilExpires validUntilExpires" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validUntilExpires" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validUntilExpires">
          <see langword="true" /> if the cache ignores <see langword="Cache-Control" /> invalidation headers; otherwise, <see langword="false" />.</param>
        <summary>Specifies whether the ASP.NET cache should ignore HTTP <see langword="Cache-Control" /> headers sent by the client that invalidate the cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A>方法设置为`true`时自动高级`<%@ OutputCache … %>`使用页指令。  
  
 提供此方法，因为刷新查看页面时，某些浏览器到 Web 服务器发送 HTTP 缓存失效标头和逐出来自缓存的页。 当`validUntilExpires`参数是`true`、 ASP.NET 忽略缓存失效标头，并在缓存中保留的页，直到它过期。  
  
 <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A>方法以指示客户端发送任何缓存失效标头将被忽略。  
  
 [!code-aspx-csharp[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/CS/httpcachepolicy_setvaliduntilexpirescs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/VB/httpcachepolicy_setvaliduntilexpiresvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string custom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string custom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (custom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ custom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="httpCachePolicy.SetVaryByCustom custom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="custom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="custom">The text string to vary cached output by.</param>
        <summary>Specifies a custom text string to vary cached output responses by.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何设置为"接受的字符集"，这会导致源服务器的缓存选择一个具体取决于浏览器的多个缓存响应的自定义 vary 字符串`Accept-Charset`标头。  
  
 [!code-csharp[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="custom" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)" /> method has already been called.</exception>
      </Docs>
    </Member>
    <Member MemberName="UtcTimestampCreated">
      <MemberSignature Language="C#" Value="public DateTime UtcTimestampCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcTimestampCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.UtcTimestampCreated" />
      <MemberSignature Language="VB.NET" Value="Public Property UtcTimestampCreated As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcTimestampCreated { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.UtcTimestampCreated : DateTime with get, set" Usage="System.Web.HttpCachePolicy.UtcTimestampCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the timestamp in Coordinated Universal Iime (UTC) for the <see cref="T:System.Web.HttpCachePolicy" />.</summary>
        <value>
          <see cref="T:System.DateTime" /> 的 <see cref="T:System.Web.HttpCachePolicy" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncodings">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByContentEncodings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByContentEncodings As HttpCacheVaryByContentEncodings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByContentEncodings ^ VaryByContentEncodings { System::Web::HttpCacheVaryByContentEncodings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncodings : System.Web.HttpCacheVaryByContentEncodings" Usage="System.Web.HttpCachePolicy.VaryByContentEncodings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByContentEncodings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of <see langword="Content-Encoding" /> headers that will be used to vary the output cache.</summary>
        <value>指定哪些对象<see langword="Content-Encoding" />用于选择缓存的响应标头。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>属性返回的 Content-encoding 标头表示压缩的方案，以区分输出缓存的列表。 缓存动态压缩的响应，则意味着压缩的成本会产生一次，在资源的第一个请求。  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>属性用于`Accept-Encoding`标头的请求，以确定如何处理缓存的响应，则为动态压缩的不同内容编码。 Accept-encoding 标头列出客户端可以解压缩的编码。  
  
 当你设置缓存因内容编码时，它允许间接因中的值的响应`Accept-Encoding`标头。 处理请求时，`Accept-Encoding`检查标头和第一个可接受编码出以及用于执行以下操作之一：  
  
-   如果在中找到相匹配的编码<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>列表和缓存的响应存在，则发送缓存的响应。  
  
-   如果在中找到相匹配的编码<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>列表，但缓存的响应不存在，生成响应并将其插入缓存。  
  
-   如果在找不到相匹配的编码<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>有非编码的响应，也称为标识响应搜索列表，缓存。 如果找到未经过编码响应，则将它发送。 否则为新的非编码响应是生成，发送，并且存储在缓存中。  
  
 有关详细信息<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>属性，请参阅"RFC 2616:: 超文本传输协议--HTTP/1.1，"适用于[World Wide Web Consortium (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。 有关内容的编码的信息位于第 14 节"标头字段定义。"  
  
 你可以设置<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>属性使用`VaryByContentEncodings`指令的特性。 你还可以将缓存配置文件添加到 Web.config 文件中的元素。  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
   
  
## Examples  
 下面的示例演示如何启用页后，可以从输出缓存中提供的动态压缩的响应。 可接受的编码为"gzip"并通过使用设置`VaryByContentEncodings`指令的特性。 如果承载该页面的 Web 服务器没有启用动态压缩功能，则输出缓存将没有缓存的响应基于指定的内容编码。  
  
 [!code-aspx-csharp[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/VB/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.ContentEncoding" />
        <altmember cref="T:System.Web.HttpCacheVaryByContentEncodings" />
      </Docs>
    </Member>
    <Member MemberName="VaryByHeaders">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByHeaders VaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByHeaders VaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByHeaders As HttpCacheVaryByHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByHeaders ^ VaryByHeaders { System::Web::HttpCacheVaryByHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByHeaders : System.Web.HttpCacheVaryByHeaders" Usage="System.Web.HttpCachePolicy.VaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of all HTTP headers that will be used to vary cache output.</summary>
        <value>
          <see cref="T:System.Web.HttpCacheVaryByHeaders" /> ，它指定的 HTTP 标头用于选择缓存的响应。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 缓存的项具有多个不同的标头，请求的文档的单独版本时，可从缓存中用于每个 HTTP 标头类型。  
  
 <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)" />
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.HttpCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of parameters received by an HTTP <see langword="GET" /> or HTTP <see langword="POST" /> that affect caching.</summary>
        <value>
          <see cref="T:System.Web.HttpCacheVaryByParams" /> ，它指定用于选择缓存的响应的缓存控制标头。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从缓存中每个命名参数提供了请求的文档的单独版本<xref:System.Web.HttpCachePolicy.VaryByParams%2A>集合。  
  
 <xref:System.Web.HttpCachePolicy.VaryByParams%2A> 是.NET Framework 3.5 版中引入的。  有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>