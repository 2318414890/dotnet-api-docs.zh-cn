<Type Name="HttpUtility" FullName="System.Web.HttpUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d93e9f7673050e1c521b86a75e0a8aa4c4380c1" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51916913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpUtility sealed" />
  <TypeSignature Language="F#" Value="type HttpUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.HttpUtility</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e7f0d-101">提供在处理 Web 请求时用于编码和解码 URL 的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7f0d-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
      <span data-ttu-id="e7f0d-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7f0d-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-103"><xref:System.Web.HttpUtility>类在内部使用<xref:System.Web.HttpServerUtility>类，其方法和属性公开通过内部 ASP.NET<xref:System.Web.HttpContext.Server%2A>对象。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-103">The <xref:System.Web.HttpUtility> class is used internally by the <xref:System.Web.HttpServerUtility> class, whose methods and properties are exposed through the intrinsic ASP.NET <xref:System.Web.HttpContext.Server%2A> object.</span></span> <span data-ttu-id="e7f0d-104">此外，<xref:System.Web.HttpUtility>类包含编码和解码实用工具方法，用于不能从访问<xref:System.Web.HttpContext.Server%2A>。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-104">Additionally, the <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods that are not accessible from the <xref:System.Web.HttpContext.Server%2A>.</span></span>  
  
 <span data-ttu-id="e7f0d-105">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-105">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7f0d-106">下面的代码示例演示如何将<xref:System.Web.HttpUtility.UrlEncode%2A>，<xref:System.Web.HttpUtility.UrlDecode%2A>并<xref:System.Web.HttpUtility.ParseQueryString%2A>方法的<xref:System.Web.HttpUtility>类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-106">The following code example demonstrates the use of the <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> and <xref:System.Web.HttpUtility.ParseQueryString%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span>  
  
 [!code-aspx-csharp[HttpUtilityExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtilityExample/cs/httputilityexample.aspx#1)]
 [!code-aspx-vb[HttpUtilityExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtilityExample/vb/httputilityexample.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
      <span data-ttu-id="e7f0d-107">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7f0d-107">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-108">初始化 <see cref="T:System.Web.HttpUtility" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-108">Initializes a new instance of the <see cref="T:System.Web.HttpUtility" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-109"><xref:System.Web.HttpUtility>类公开方法来编码和解码字符串基于 Url，URL 令牌和路径。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-109">The <xref:System.Web.HttpUtility> class exposes methods for encoding and decoding string based URLs, URL tokens, and paths.</span></span> <span data-ttu-id="e7f0d-110"><xref:System.Web.HttpUtility>在内部使用<xref:System.Web.HttpServerUtility>类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-110">The <xref:System.Web.HttpUtility> is used internally by the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlAttributeEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-111">将字符串最小限度地转换为 HTML 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-111">Minimally converts a string into an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string HtmlAttributeEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlAttributeEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlAttributeEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlAttributeEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlAttributeEncode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlAttributeEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e7f0d-112">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-112">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-113">将字符串最小限度地转换为 HTML 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-113">Minimally converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-114">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-114">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-115"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法将适用于插入的 HTML 特性值的字符编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-115">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method encodes characters appropriate for insertion into an HTML attribute value.</span></span>  
  
 <span data-ttu-id="e7f0d-116">从字符串结果<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法应只用于双引号中的特性。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-116">The string result from the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method should be used only for double-quoted attributes.</span></span> <span data-ttu-id="e7f0d-117">使用时，可能会出现安全问题<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>使用单引号属性的方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-117">Security issues might arise when using the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method with single-quoted attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-118">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-118">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static void HtmlAttributeEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlAttributeEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlAttributeEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlAttributeEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlAttributeEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e7f0d-119">要编码的字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-119">The string to encode</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e7f0d-120">
            <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-120">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-121">将字符串最小限度地转换为 HTML 编码的字符串，并将编码的字符串发送到 <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-121">Minimally converts a string into an HTML-encoded string and sends the encoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-122"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法将转换仅引号 （"）、 与号 (&) 和左尖括号 (<) 到等效的字符实体。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-122">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method converts only quotation marks ("), ampersands (&), and left angle brackets (<) to equivalent character entities.</span></span> <span data-ttu-id="e7f0d-123">它是远远快于<xref:System.Web.HttpUtility.HtmlEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-123">It is considerably faster than the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span>  
  
 <span data-ttu-id="e7f0d-124">从字符串结果<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法应只用于双引号中的特性。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-124">The string result from the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method should be used only for double-quoted attributes.</span></span> <span data-ttu-id="e7f0d-125">使用时，可能会出现安全问题<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>使用单引号属性的方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-125">Security issues might arise when using the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method with single-quoted attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-126">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-126">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-127">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-127">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
          <span data-ttu-id="e7f0d-128">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-128">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e7f0d-129">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-129">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-130">将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-130">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-131">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-131">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-132">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-133">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-134">例如，在嵌入的文本，字符块\<和 > 编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-134">For example, when embedded in a block of text, the characters \< and > are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e7f0d-135">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-135">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7f0d-136">下面的代码示例演示<xref:System.Web.HttpUtility.HtmlEncode%2A>并<xref:System.Web.HttpUtility.HtmlDecode%2A>方法的<xref:System.Web.HttpUtility>类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-136">The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span> <span data-ttu-id="e7f0d-137">使用编码的输入的字符串<xref:System.Web.HttpUtility.HtmlEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-137">The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span> <span data-ttu-id="e7f0d-138">然后使用解码已编码的字符串获取<xref:System.Web.HttpUtility.HtmlDecode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-138">The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.</span></span>  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e7f0d-139">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-139">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e7f0d-140">
            <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-140">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-141">将已经过 HTML 编码的字符串转换为已解码的字符串并将其发送给 <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-141">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-142">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-143">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-143">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-144">例如，在嵌入的文本，字符块\<和 > 编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-144">For example, when embedded in a block of text, the characters \< and > are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e7f0d-145">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-145">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-146">将字符串转换为 HTML 编码格式的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-146">Converts a string into an HTML-encoded string.</span>
          </span>
          <span data-ttu-id="e7f0d-147">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-147">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : obj -&gt; string" Usage="System.Web.HttpUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e7f0d-148">一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-148">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-149">将对象的字符串表示形式转换为 HTML 编码的字符串，并返回已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-149">Converts an object's string representation into an HTML-encoded string, and returns the encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-150">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-150">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-151">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-151">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e7f0d-152">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-152">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-153">将字符串转换为 HTML 编码字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-153">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-154">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-154">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-155">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-155">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-156">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-156">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-157">例如，在嵌入的文本，字符块\<和 > 编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-157">For example, when embedded in a block of text, the characters \< and > are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e7f0d-158">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-158">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7f0d-159">下面的代码示例演示<xref:System.Web.HttpUtility.HtmlEncode%2A>并<xref:System.Web.HttpUtility.HtmlDecode%2A>方法的<xref:System.Web.HttpUtility>类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-159">The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span> <span data-ttu-id="e7f0d-160">使用编码的输入的字符串<xref:System.Web.HttpUtility.HtmlEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-160">The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span> <span data-ttu-id="e7f0d-161">然后使用解码已编码的字符串获取<xref:System.Web.HttpUtility.HtmlDecode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-161">The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.</span></span>  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-162">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-162">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e7f0d-163">要编码的字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-163">The string to encode</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e7f0d-164">
            <see cref="T:System.IO.TextWriter" /> 输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-164">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-165">将字符串转换为 HTML 编码的字符串，并以 <see cref="T:System.IO.TextWriter" /> 输出流的形式返回输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-165">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-166">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-166">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-167">HTML 编码将转换为字符实体等效项; 不允许在 HTML 中的字符HTML 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-167">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-168">例如，在嵌入的文本，字符块\<和 >，编码为`&lt;`和`&gt;`HTTP 传输。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-168">For example, when embedded in a block of text, the characters \< and >, are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e7f0d-169">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-169">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-170">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-170">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="JavaScriptStringEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-171">对字符串进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-171">Encodes a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-172">此方法对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-172">This method encodes strings.</span></span> <span data-ttu-id="e7f0d-173">例如，单引号和双引号是作为包含`\'`和`\"`中编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-173">For instance, single quotation marks and double quotation marks are included as `\'` and `\"` in the encoded string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member JavaScriptStringEncode : string -&gt; string" Usage="System.Web.HttpUtility.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e7f0d-174">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-174">A string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-175">对字符串进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-175">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-176">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-176">An encoded string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value, bool addDoubleQuotes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value, bool addDoubleQuotes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String, addDoubleQuotes As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value, bool addDoubleQuotes);" />
      <MemberSignature Language="F#" Value="static member JavaScriptStringEncode : string * bool -&gt; string" Usage="System.Web.HttpUtility.JavaScriptStringEncode (value, addDoubleQuotes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="addDoubleQuotes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e7f0d-177">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-177">A string to encode.</span>
          </span>
        </param>
        <param name="addDoubleQuotes">
          <span data-ttu-id="e7f0d-178">一个指示双引号是否将包含在已编码字符串周围的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-178">A value that indicates whether double quotation marks will be included around the encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-179">对字符串进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-179">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-180">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-180">An encoded string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseQueryString">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-181">将查询字符串解析为 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-181">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseQueryString (query As String) As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query);" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : string -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpUtility.ParseQueryString query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="e7f0d-182">要分析的查询字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-182">The query string to parse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-183">使用 <see cref="P:System.Text.Encoding.UTF8" /> 编码将查询字符串分析成一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-183">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" /> using <see cref="P:System.Text.Encoding.UTF8" /> encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-184">查询参数和值的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-184">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of query parameters and values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-185"><xref:System.Web.HttpUtility.ParseQueryString%2A>方法使用<xref:System.Text.Encoding.UTF8%2A>格式来分析查询字符串中返回<xref:System.Collections.Specialized.NameValueCollection>、 URL 编码字符进行解码和相同的查询字符串参数的多个匹配项作为单个条目所列用逗号分隔每个值。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-185">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses <xref:System.Text.Encoding.UTF8%2A> format to parse the query string In the returned <xref:System.Collections.Specialized.NameValueCollection>, URL-encoded characters are decoded and multiple occurrences of the same query string parameter are listed as a single entry with a comma separating each value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7f0d-186"><xref:System.Web.HttpUtility.ParseQueryString%2A>方法使用查询字符串可能包含用户输入，这是潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-186">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses query strings that might contain user input, which is a potential security threat.</span></span> <span data-ttu-id="e7f0d-187">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-187">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e7f0d-188">有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-188">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7f0d-189">下面的代码示例演示如何使用 <xref:System.Web.HttpUtility.ParseQueryString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-189">The following code example demonstrates how to use the <xref:System.Web.HttpUtility.ParseQueryString%2A> method.</span></span> <span data-ttu-id="e7f0d-190">相同的查询字符串变量的多个实例合并在返回的一个条目<xref:System.Collections.Specialized.NameValueCollection>。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-190">Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
 [!code-aspx-csharp[HttpUtility_ParseQueryString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_ParseQueryString/cs/httputility_parsequerystring.aspx#1)]
 [!code-aspx-vb[HttpUtility_ParseQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_ParseQueryString/vb/httputility_parsequerystring.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f0d-191">
            <paramref name="query" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-191">
              <paramref name="query" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : string * System.Text.Encoding -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpUtility.ParseQueryString (query, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="e7f0d-192">要分析的查询字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-192">The query string to parse.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="e7f0d-193">要使用的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-193">The <see cref="T:System.Text.Encoding" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-194">使用指定的 <see cref="T:System.Text.Encoding" /> 将查询字符串分析成一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-194">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" /> using the specified <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-195">查询参数和值的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-195">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of query parameters and values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-196">在返回<xref:System.Collections.Specialized.NameValueCollection>、 URL 编码字符进行解码和相同的查询字符串参数的多个匹配项作为单个条目列出使用逗号分隔每个值。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-196">In the returned <xref:System.Collections.Specialized.NameValueCollection>, URL-encoded characters are decoded and multiple occurrences of the same query string parameter are listed as a single entry with a comma separating each value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7f0d-197"><xref:System.Web.HttpUtility.ParseQueryString%2A>方法使用查询字符串可能包含用户输入，这是潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-197">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses query strings that might contain user input, which is a potential security threat.</span></span> <span data-ttu-id="e7f0d-198">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-198">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e7f0d-199">有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-199">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f0d-200">
            <paramref name="query" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-200">
              <paramref name="query" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e7f0d-201">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-201">\- or -</span>
          </span>
          <span data-ttu-id="e7f0d-202">
            <paramref name="encoding" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-202">
              <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-203">将已编码用于 URL 传输的字符串转换为解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-203">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
          <span data-ttu-id="e7f0d-204">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-204">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Web.HttpUtility.UrlDecode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-205">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-205">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-206">将已编码用于 URL 传输的字符串转换为解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-206">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-207">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-207">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-208">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-208">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-209">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-209">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-210">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-210">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-211">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-211">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : byte[] * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (bytes, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-212">要解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-212">The array of bytes to decode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e7f0d-213">指定解码方案的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-213">The <see cref="T:System.Text.Encoding" /> that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-214">使用指定的解码对象将 URL 编码的字节数组转换为解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-214">Converts a URL-encoded byte array into a decoded string using the specified decoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-215">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-215">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-216">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-216">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-217">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-217">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-218">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-218">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-219">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-219">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static string UrlDecode (string s, System.Text.Encoding e);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string s, class System.Text.Encoding e) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (s As String, e As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ s, System::Text::Encoding ^ e);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (s, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-220">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-220">The string to decode.</span>
          </span>
        </param>
        <param name="s">
          <span data-ttu-id="e7f0d-221">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-221">The string to decode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e7f0d-222">指定解码方案的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-222">The <see cref="T:System.Text.Encoding" /> that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-223">使用指定的编码对象将 URL 编码的字符串转换为解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-223">Converts a URL-encoded string into a decoded string, using the specified encoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-224">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-224">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-225">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-225">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-226">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-226">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-227">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-227">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-228">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-228">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, int offset, int count, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, int32 offset, int32 count, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), offset As Integer, count As Integer, e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : byte[] * int * int * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (bytes, offset, count, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-229">要解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-229">The array of bytes to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7f0d-230">字节中开始解码的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-230">The position in the byte to begin decoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7f0d-231">要解码的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-231">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e7f0d-232">指定解码方案的 <see cref="T:System.Text.Encoding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-232">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-233">使用指定的编码对象将 URL 编码字节数据转换为已解码的字符串，从数组中的指定位置开始，直到指定的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-233">Converts a URL-encoded byte array into a decoded string using the specified encoding object, starting at the specified position in the array, and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-234">已解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-234">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-235">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-235">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-236">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-236">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-237">例如，当嵌入在 URL 中传输的文本块中的字符\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-237">For example, when embedded in a block of text to be transmitted in a URL the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-238">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-238">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f0d-239">
            <paramref name="bytes" /> 为 <see langword="null" />，但是 <paramref name="count" /> 不等于 <see langword="0" />。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-239">
              <paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7f0d-240">
            <paramref name="offset" /> 小于 <see langword="0" /> 或大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-240">
              <paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="e7f0d-241">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-241">\- or -</span>
          </span>
          <span data-ttu-id="e7f0d-242">
            <paramref name="count" /> 小于 <see langword="0" />，或 <paramref name="count" /> + <paramref name="offset" /> 大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-242">
              <paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-243">将 URL 编码的字符串或字节数组转换为已解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-243">Converts a URL-encoded string or byte array into a decoded array of bytes.</span>
          </span>
          <span data-ttu-id="e7f0d-244">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-244">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-245">要解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-245">The array of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-246">将 URL 编码的字节数组转换为解码后的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-246">Converts a URL-encoded array of bytes into a decoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-247">一个已解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-247">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-248">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-248">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-249">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-249">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-250">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-250">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-251">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-251">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-252">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-252">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-253">将 URL 编码的字符串转换为解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-253">Converts a URL-encoded string into a decoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-254">一个已解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-254">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-255">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-255">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-256">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-256">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-257">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-257">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-258">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-258">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : string * System.Text.Encoding -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes (str, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-259">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-259">The string to decode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e7f0d-260">指定解码方案的 <see cref="T:System.Text.Encoding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-260">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-261">使用指定的解码对象将 URL 编码的字符串转换为已解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-261">Converts a URL-encoded string into a decoded array of bytes using the specified decoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-262">一个已解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-262">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-263">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-263">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-264">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-264">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-265">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-265">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-266">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-266">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-267">要解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-267">The array of bytes to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7f0d-268">字节数组中开始解码的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-268">The position in the byte array at which to begin decoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7f0d-269">要解码的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-269">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-270">从数组中的指定位置开始一直到指定的字节数为止，将 URL 编码的字节数组转换为已解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-270">Converts a URL-encoded array of bytes into a decoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-271">一个已解码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-271">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-272">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-272">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-273">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-273">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-274">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-274">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-275">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-275">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f0d-276">
            <paramref name="bytes" /> 为 <see langword="null" />，但是 <paramref name="count" /> 不等于 <see langword="0" />。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-276">
              <paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7f0d-277">
            <paramref name="offset" /> 小于 <see langword="0" /> 或大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-277">
              <paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="e7f0d-278">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-278">\- or -</span>
          </span>
          <span data-ttu-id="e7f0d-279">
            <paramref name="count" /> 小于 <see langword="0" />，或 <paramref name="count" /> + <paramref name="offset" /> 大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-279">
              <paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-280">对 URL 字符串进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-280">Encodes a URL string.</span>
          </span>
          <span data-ttu-id="e7f0d-281">可以使用这些方法重载来编码整个 URL，包括查询字符串的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-281">These method overloads can be used to encode the entire URL, including query-string values.</span>
          </span>
          <span data-ttu-id="e7f0d-282">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-282">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : byte[] -&gt; string" Usage="System.Web.HttpUtility.UrlEncode bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-283">要编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-283">The array of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-284">将字节数组转换为编码的 URL 字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-284">Converts a byte array into an encoded URL string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-285">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-285">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-286"><xref:System.Web.HttpUtility.UrlEncode%2A>方法可用来编码整个 URL，包括查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-286">The <xref:System.Web.HttpUtility.UrlEncode%2A> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="e7f0d-287">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-287">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-288">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-288">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-289">例如，当字符\<和 > 嵌入在要在 URL 中传输的文本块中，它们编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-289">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-290">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-290">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-291">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-291">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlEncode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-292">要编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-292">The text to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-293">对 URL 字符串进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-293">Encodes a URL string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-294">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-294">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-295"><xref:System.Web.HttpUtility.UrlEncode%28System.String%29>方法可用来编码整个 URL，包括查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-295">The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="e7f0d-296">如果空白和标点符号等字符无需编码即可传递 HTTP 流中的它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-296">If characters such as blanks and punctuation are passed in an HTTP stream without encoding, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-297">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-297">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-298">例如，当字符\<和 > 嵌入在要在 URL 中传输的文本块中，它们编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-298">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-299">可以对使用的 URL 进行编码<xref:System.Web.HttpUtility.UrlEncode%2A>方法或<xref:System.Web.HttpUtility.UrlPathEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-299">You can encode a URL using with the <xref:System.Web.HttpUtility.UrlEncode%2A> method or the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="e7f0d-300">但是，这些方法返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-300">However, the methods return different results.</span></span> <span data-ttu-id="e7f0d-301"><xref:System.Web.HttpUtility.UrlEncode%2A>方法将每个空格字符转换为加号字符 （+）。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-301">The <xref:System.Web.HttpUtility.UrlEncode%2A> method converts each space character to a plus character (+).</span></span> <span data-ttu-id="e7f0d-302"><xref:System.Web.HttpUtility.UrlPathEncode%2A>方法将为每个空格字符到字符串"%20"，它表示空间以十六进制表示法。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-302">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method converts each space character into the string "%20", which represents a space in hexadecimal notation.</span></span> <span data-ttu-id="e7f0d-303">使用<xref:System.Web.HttpUtility.UrlPathEncode%2A>方法时才能确保一致的已解码的 URL，无论哪一个平台或浏览器编码 URL 的路径部分执行解码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-303">Use the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method when you encode the path portion of a URL in order to guarantee a consistent decoded URL, regardless of which platform or browser performs the decoding.</span></span>  
  
 <span data-ttu-id="e7f0d-304"><xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>方法使用 utf-8 编码，方法是默认值。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-304">The <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method uses UTF-8 encoding by default.</span></span> <span data-ttu-id="e7f0d-305">因此，使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法提供了与使用相同的结果<xref:System.Web.HttpUtility.UrlEncode%2A>方法并指定<xref:System.Text.Encoding.UTF8%2A>第二个参数。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-305">Therefore, using the <xref:System.Web.HttpUtility.UrlEncode%2A> method provides the same results as using the <xref:System.Web.HttpUtility.UrlEncode%2A> method and specifying <xref:System.Text.Encoding.UTF8%2A> as the second parameter.</span></span>  
  
 <span data-ttu-id="e7f0d-306"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 为方便地访问<xref:System.Web.HttpUtility.UrlEncode%2A>方法在运行时从 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-306"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="e7f0d-307">在内部，<xref:System.Web.HttpServerUtility.UrlEncode%2A>使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-307">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode strings.</span></span>  
  
 <span data-ttu-id="e7f0d-308">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-308">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-309">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-309">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : byte[] * int * int -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-310">要编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-310">The array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7f0d-311">从其开始编码的字节数组中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-311">The position in the byte array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7f0d-312">要编码的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-312">The number of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-313">从数组中指定位置开始，按照指定字节数量，将字节数组转换为 URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-313">Converts a byte array into a URL-encoded string, starting at the specified position in the array and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-314">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-314">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-315"><xref:System.Web.HttpUtility.UrlEncode%28System.String%29>方法可用来编码整个 URL，包括查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-315">The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="e7f0d-316">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-316">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-317">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-317">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-318">例如，当字符\<和 > 嵌入在要在 URL 中传输的文本块中，它们编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-318">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-319">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-319">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-320">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-320">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static string UrlEncode (string s, System.Text.Encoding Enc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string s, class System.Text.Encoding Enc) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (s As String, Enc As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ s, System::Text::Encoding ^ Enc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (s, Enc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="Enc" Type="System.Text.Encoding" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-321">要编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-321">The text to encode.</span>
          </span>
        </param>
        <param name="s">
          <span data-ttu-id="e7f0d-322">要编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-322">The text to encode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e7f0d-323">指定编码方案的 <see cref="T:System.Text.Encoding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-323">The <see cref="T:System.Text.Encoding" /> object that specifies the encoding scheme.</span>
          </span>
        </param>
        <param name="Enc">
          <span data-ttu-id="e7f0d-324">指定编码方案的 <see cref="T:System.Text.Encoding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-324">The <see cref="T:System.Text.Encoding" /> object that specifies the encoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-325">使用指定的编码对象，对 URL 字符串进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-325">Encodes a URL string using the specified encoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-326">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-326">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-327">可以使用此方法来编码整个 URL，包括查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-327">This method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="e7f0d-328">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-328">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-329">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-329">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-330">例如，当字符\<和 > 嵌入在要在 URL 中传输的文本块中，它们编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-330">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-331">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-331">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-332">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-332">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-333">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-333">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7f0d-334">将字符串或字节数组转换为编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-334">Converts a string or a byte array into an encoded array of bytes.</span>
          </span>
          <span data-ttu-id="e7f0d-335">若要对 Web 应用程序之外的值进行编码或解码，请使用 <see cref="T:System.Net.WebUtility" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-335">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-336">要编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-336">The array of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-337">将字节数组转换为 URL 编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-337">Converts an array of bytes into a URL-encoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-338">编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-338">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-339">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-339">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-340">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-340">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-341">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-341">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-342">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-342">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-343">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-343">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-344">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-344">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-345">将字符串转换为 URL 编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-345">Converts a string into a URL-encoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-346">编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-346">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-347">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-347">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-348">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-348">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-349">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-349">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-350">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-350">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-351">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-351">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : string * System.Text.Encoding -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes (str, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-352">要编码的字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-352">The string to encode</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="e7f0d-353">指定编码方案的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-353">The <see cref="T:System.Text.Encoding" /> that specifies the encoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-354">使用指定的编码对象将字符串转换为 URL 编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-354">Converts a string into a URL-encoded array of bytes using the specified encoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-355">编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-355">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-356">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-356">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-357">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-357">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-358">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-358">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-359">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-359">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-360">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-360">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="e7f0d-361">要编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-361">The array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e7f0d-362">从其开始编码的字节数组中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-362">The position in the byte array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7f0d-363">要编码的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-363">The number of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-364">将字节数组转换为 URL 编码的字节数组，从数组中指定位置开始，以指定字节数继续。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-364">Converts an array of bytes into a URL-encoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-365">编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-365">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-366">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-366">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-367">URL 编码将转换为字符实体等效项; 不允许在 URL 中使用的字符URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-367">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-368">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-368">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="e7f0d-369">若要对 Web 应用程序之外的值进行编码或解码，请使用 <xref:System.Net.WebUtility> 类。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-369">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7f0d-370">
            <paramref name="bytes" /> 为 <see langword="null" />，但是 <paramref name="count" /> 不等于 <see langword="0" />。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-370">
              <paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7f0d-371">
            <paramref name="offset" /> 小于 <see langword="0" /> 或大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-371">
              <paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="e7f0d-372">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-372">\- or -</span>
          </span>
          <span data-ttu-id="e7f0d-373">
            <paramref name="count" /> 小于 <see langword="0" />，或 <paramref name="count" /> + <paramref name="offset" /> 大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-373">
              <paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-374">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-374">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicode">
      <MemberSignature Language="C#" Value="public static string UrlEncodeUnicode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncodeUnicode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncodeUnicode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeUnicode : string -&gt; string" Usage="System.Web.HttpUtility.UrlEncodeUnicode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncode(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-375">要转换的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-375">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-376">将字符串转换为 Unicode 字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-376">Converts a string into a Unicode string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-377">采用 %<paramref name="UnicodeValue" /> 表示法的 Unicode 字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-377">A Unicode string in %<paramref name="UnicodeValue" /> notation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-378">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-378">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-379">URL 编码的字符实体等效项; 指向的 URL 中无效的字符转换URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-379">URL encoding converts characters that are not valid in a URL to character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-380">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-380">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-381">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-381">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeUnicodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeUnicodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeUnicodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeUnicodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeUnicodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncodeToBytes(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-382">要转换的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-382">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-383">将 Unicode 字符串转换为字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-383">Converts a Unicode string into an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-384">字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-384">A byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7f0d-385">如果 HTTP 流中传递空白和标点符号等字符，它们可能会错误地解释在接收端。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-385">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e7f0d-386">URL 编码的字符实体等效项; 指向的 URL 中无效的字符转换URL 解码反转的编码。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-386">URL encoding converts characters that are not valid in a URL to character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="e7f0d-387">例如，在嵌入在 URL 中，字符要传输的文本块\<和 > 编码为 %3c 和 %3e。</span><span class="sxs-lookup"><span data-stu-id="e7f0d-387">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="e7f0d-388">如何： 防止脚本攻击 Web 应用程序中通过应用 HTML 编码为字符串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-388">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string str);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string str) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (str As String) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ str);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string s);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string s) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (s As String) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ s);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlPathEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlPathEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="e7f0d-389">要编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-389">The text to encode.</span>
          </span>
        </param>
        <param name="s">
          <span data-ttu-id="e7f0d-390">要编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-390">The text to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7f0d-391">请勿使用；仅适用于浏览器兼容性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-391">Do not use; intended only for browser compatibility.</span>
          </span>
          <span data-ttu-id="e7f0d-392">请使用 <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-392">Use <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7f0d-393">编码的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7f0d-393">The encoded text.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>