<Type Name="HttpApplicationStateBase" FullName="System.Web.HttpApplicationStateBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7aea88e1c5226bc005925648afc5d3399f1d3a17" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpApplicationStateBase : System.Collections.Specialized.NameObjectCollectionBase, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpApplicationStateBase extends System.Collections.Specialized.NameObjectCollectionBase implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationStateBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpApplicationStateBase&#xA;Inherits NameObjectCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationStateBase abstract : System::Collections::Specialized::NameObjectCollectionBase, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="658a2-101">用作一些类的基类，这些类可实现在 ASP.NET 应用程序内跨多个会话和请求共享信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="658a2-101">Serves as the base class for classes that enable information to be shared across multiple sessions and requests within an ASP.NET application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="658a2-102"><xref:System.Web.HttpApplicationStateBase>类是一个抽象类，包含相同的成员<xref:System.Web.HttpApplicationState>类。</span><span class="sxs-lookup"><span data-stu-id="658a2-102">The <xref:System.Web.HttpApplicationStateBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="658a2-103"><xref:System.Web.HttpApplicationStateBase>类，可以创建类似的派生的类<xref:System.Web.HttpApplicationState>类，但你可以自定义并使用 ASP.NET 管道外部。</span><span class="sxs-lookup"><span data-stu-id="658a2-103">The <xref:System.Web.HttpApplicationStateBase> class lets you create derived classes that are like the <xref:System.Web.HttpApplicationState> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="658a2-104">当执行单元测试时，通常使用派生的类以实现具有满足你测试的方案的自定义行为的成员。</span><span class="sxs-lookup"><span data-stu-id="658a2-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="658a2-105"><xref:System.Web.HttpApplicationStateWrapper> 类是从 <xref:System.Web.HttpApplicationStateBase> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="658a2-105">The <xref:System.Web.HttpApplicationStateWrapper> class derives from the <xref:System.Web.HttpApplicationStateBase> class.</span></span> <span data-ttu-id="658a2-106"><xref:System.Web.HttpApplicationStateWrapper>类用作包装器<xref:System.Web.HttpApplicationState>类。</span><span class="sxs-lookup"><span data-stu-id="658a2-106">The <xref:System.Web.HttpApplicationStateWrapper> class serves as a wrapper for the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="658a2-107">在运行时，你通常使用的实例<xref:System.Web.HttpApplicationStateWrapper>类来调用的成员<xref:System.Web.HttpApplicationState>对象。</span><span class="sxs-lookup"><span data-stu-id="658a2-107">At run time, you typically use an instance of the <xref:System.Web.HttpApplicationStateWrapper> class to call members of the <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpApplicationStateBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpApplicationStateBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="658a2-108">初始化该类供继承的类实例使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="658a2-109">此构造函数只能由继承的类调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="658a2-110">要添加到集合的对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-110">The name of the object to add to the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="658a2-111">对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-111">The value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-112">在派生类中重写时，将新对象添加到集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-112">When overridden in a derived class, adds a new object to the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-113">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-113">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public virtual string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-114">当在派生类中重写时，获取集合中对象的访问键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-114">When overridden in a derived class, gets the access keys for the objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-115">状态对象键的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-115">An array of state object keys.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-116">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-116">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="658a2-117">当在派生类中重写时，从集合中删除所有对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-117">When overridden in a derived class, removes all objects from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-118">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-118">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Contents As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Contents { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-119">在派生类中重写时，获取对 <see cref="T:System.Web.HttpApplicationStateBase" /> 对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-119">When overridden in a derived class, gets a reference to the <see cref="T:System.Web.HttpApplicationStateBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-120">
            <see cref="T:System.Web.HttpApplicationState" /> 对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-120">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="658a2-121">此属性提供与 ASP 的早期版本的兼容性。</span><span class="sxs-lookup"><span data-stu-id="658a2-121">This property provides compatibility with earlier versions of ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-122">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-122">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="658a2-123">作为从集合中复制的元素的目标位置的一维数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-123">The one-dimensional array that is the destination for the elements that are copied from the collection.</span>
          </span>
          <span data-ttu-id="658a2-124">该数组的索引必须从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-124">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="658a2-125">
            <c>array</c> 中从零开始的索引，将从此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-125">The zero-based index in <c>array</c> at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-126">在派生类中重写时，从数组中指定的索引开始，将集合的元素复制到该数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-126">When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-127">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-127">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-128">当在派生类中重写时，获取集合中对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-128">When overridden in a derived class, gets the number of objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-129">集合中的对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-129">The number of objects in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-130">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-130">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-131">当在派生类中重写时，按名称或索引获取状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-131">When overridden in a derived class, gets a state object by name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="658a2-132">要获取的应用程序状态对象的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-132">The index of the application state object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-133">在派生类中重写时，按索引获取状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-133">When overridden in a derived class, gets a state object by index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="658a2-134">
            <paramref name="index" /> 所引用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-134">The object referenced by <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-135">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-135">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="658a2-136">要获取的对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-136">The name of the object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-137">在派生类中重写时，按名称获取状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-137">When overridden in a derived class, gets a state object by name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="658a2-138">
            <paramref name="name" /> 所引用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-138">The object referenced by <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-139">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-139">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="658a2-140">当在派生类中重写时，返回一个可用于循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-140">When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="658a2-141">一个可用于循环访问集合的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-141">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-142">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-142">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="658a2-143">要获取的应用程序状态对象的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-143">The index of the application state object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-144">当在派生类中重写时，按取索引获取状态对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-144">When overridden in a derived class, gets the name of a state object by index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="658a2-145">应用程序状态对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-145">The name of the application state object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-146">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-146">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-147">当在派生类中重写时，获取一个值，该值指示对集合的访问是否线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-147">When overridden in a derived class, gets a value that indicates whether access to the collection is thread-safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-148">如果访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-148">
              <see langword="true" /> if access is synchronized (thread-safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-149">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-149">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-150">当在派生类中重写时，按名称或索引获取 <see cref="T:System.Web.HttpApplicationState" /> 集合中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-150">When overridden in a derived class, gets an object in an <see cref="T:System.Web.HttpApplicationState" /> collection by name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="658a2-151">集合中的对象的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-151">The index of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-152">在派生类中重写时，按索引获取状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-152">When overridden in a derived class, gets a state object by index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-153">
            <paramref name="index" /> 所引用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-153">The object referenced by <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-154">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-154">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="658a2-155">集合中对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-155">The name of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-156">在派生类中重写时，按名称获取状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-156">When overridden in a derived class, gets a state object by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-157">
            <paramref name="name" /> 所引用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-157">The object referenced by <paramref name="name" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-158">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-158">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public virtual void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="658a2-159">当在派生类中重写时，锁定对集合中对象的访问以启用同步访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-159">When overridden in a derived class, locks access to objects in the collection in order to enable synchronized access.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-160">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-160">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="658a2-161">要从集合中删除的对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-161">The name of the object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-162">在派生类中重写时，从集合中删除已命名的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-162">When overridden in a derived class, removes the named object from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-163">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-163">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="658a2-164">当在派生类中重写时，从集合中删除所有对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-164">When overridden in a derived class, removes all objects from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-165">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-165">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="658a2-166">要删除的项在集合中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-166">The position in the collection of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-167">当在派生类中重写时，从集合中删除由索引指定的状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-167">When overridden in a derived class, removes a state object specified by index from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-168">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-168">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="658a2-169">要更新的对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-169">The name of the object to update.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="658a2-170">对象更新之后的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-170">The updated value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="658a2-171">在派生类中重写时，更新集合中对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-171">When overridden in a derived class, updates the value of an object in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-172">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-172">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpStaticObjectsCollectionBase StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollectionBase StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StaticObjects As HttpStaticObjectsCollectionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpStaticObjectsCollectionBase ^ StaticObjects { System::Web::HttpStaticObjectsCollectionBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollectionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-173">当在派生类中重写时，获取由 <see langword="object" /> 元素声明的所有对象，其中范围设置为 ASP.NET 应用程序中的“Application”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-173">When overridden in a derived class, gets all objects that are declared by an <see langword="object" /> element where the scope is set to "Application" in the ASP.NET application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-174">应用程序中对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-174">A collection of objects in the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="658a2-175">使用如下所示的语法元素中的 Global.asax 文件中定义应用程序对象：</span><span class="sxs-lookup"><span data-stu-id="658a2-175">Application objects are defined in the Global.asax file inside an element with syntax like the following:</span></span>  
  
 `<object runat="server" scope="Application">Object information</object>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-176">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-176">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="658a2-177">当在派生类中重写时，获取可用于同步对集合的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-177">When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="658a2-178">可用于同步集合访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-178">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-179">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-179">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public virtual void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnLock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="658a2-180">当在派生类中重写时，取消锁定对集合中对象的访问以启用同步访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-180">When overridden in a derived class, unlocks access to objects in the collection to enable synchronized access.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="658a2-181">始终。</span>
          <span class="sxs-lookup">
            <span data-stu-id="658a2-181">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>