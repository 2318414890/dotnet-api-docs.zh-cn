<Type Name="TraceContextEventArgs" FullName="System.Web.TraceContextEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e59174d4255fa74d89d4aa2a0c312b169fb6fb05" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37528251" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TraceContextEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContextEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContextEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContextEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContextEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TraceContextEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>向所有处理 <see cref="E:System.Web.TraceContext.TraceFinished" /> 事件的方法提供跟踪记录的集合。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.TraceContextEventArgs>类由<xref:System.Web.TraceContext>类以提供访问跟踪记录所有跟踪信息收集在 HTTP 请求处理过程。 通过添加事件处理程序委托来处理<xref:System.Web.TraceContext.TraceFinished>事件，可以处理的记录，它们记录到你自己的数据存储，或将它们作为分析工具的输入提供。  
  
   
  
## Examples  
 下面的代码示例演示如何注册<xref:System.Web.TraceContextEventHandler>委托来处理<xref:System.Web.TraceContext.TraceFinished>事件。 在此示例中，`OnTraceFinished`方法访问的集合<xref:System.Web.TraceContextRecord>对象通过<xref:System.Web.TraceContextEventArgs.TraceRecords%2A>属性，循环访问它们，并将其写入到响应流。  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <altmember cref="E:System.Web.TraceContext.TraceFinished" />
    <altmember cref="T:System.Web.TraceContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContextEventArgs (System.Collections.ICollection records);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection records) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContextEventArgs.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (records As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContextEventArgs(System::Collections::ICollection ^ records);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContextEventArgs : System.Collections.ICollection -&gt; System.Web.TraceContextEventArgs" Usage="new System.Web.TraceContextEventArgs records" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="records" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="records">
          <see cref="T:System.Web.TraceContextRecord" /> 对象的集合，表示当前请求的所有跟踪记录。</param>
        <summary>使用提供的跟踪记录集合来初始化 <see cref="T:System.Web.TraceContextEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceRecords">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection TraceRecords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection TraceRecords" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextEventArgs.TraceRecords" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceRecords As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ TraceRecords { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceRecords : System.Collections.ICollection" Usage="System.Web.TraceContextEventArgs.TraceRecords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与当前请求关联的 <see cref="T:System.Web.TraceContextRecord" /> 消息的集合。</summary>
        <value>与当前请求关联的跟踪记录的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每次调用<xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType>并<xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType>方法将生成<xref:System.Web.TraceContextRecord>添加到对象<xref:System.Web.TraceContextEventArgs.TraceRecords%2A>消息集合。 <xref:System.Web.TraceContext.Warn%2A>方法调用设置<xref:System.Web.TraceContextRecord.IsWarning%2A>属性设置为`true`，而其他方法调用将其设置为`false`。  
  
 可循环访问<xref:System.Web.TraceContextEventArgs.TraceRecords%2A>消息并检查记录与特定类别或消息，并指明它们是否警告。  
  
   
  
## Examples  
 下面的代码示例演示如何注册<xref:System.Web.TraceContextEventHandler>委托来处理<xref:System.Web.TraceContext.TraceFinished>事件。 在此示例中，`OnTraceFinished`方法访问的集合<xref:System.Web.TraceContextRecord>对象通过<xref:System.Web.TraceContextEventArgs.TraceRecords%2A>属性，循环访问它们，并将其写入到响应流。  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContextRecord" />
        <altmember cref="T:System.Web.TraceContextEventHandler" />
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
  </Members>
</Type>