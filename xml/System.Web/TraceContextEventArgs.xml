<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TraceContextEventArgs.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4699ca0084a1e4531d3dbf87db9ac86e6264d1a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4699ca0084a1e4531d3dbf87db9ac86e6264d1a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.TraceContextEventArgs">
          <source>Provides a collection of trace records to any method that handles the <ph id="ph1">&lt;see cref="E:System.Web.TraceContext.TraceFinished" /&gt;</ph> event.</source>
          <target state="translated">向所有处理 <ph id="ph1">&lt;see cref="E:System.Web.TraceContext.TraceFinished" /&gt;</ph> 事件的方法提供跟踪记录的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.TraceContextEventArgs">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs&gt;</ph> class is used by the <ph id="ph2">&lt;xref:System.Web.TraceContext&gt;</ph> class to provide access to trace records after all the tracing information is gathered during HTTP request processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs&gt;</ph>类由<ph id="ph2">&lt;xref:System.Web.TraceContext&gt;</ph>在 HTTP 请求处理期间收集类以提供对跟踪记录的访问，别忘了跟踪信息。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>By adding an event handler delegate to handle the <ph id="ph1">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> event, you can process the records, record them to your own data store, or provide them as input to a profiling tool.</source>
          <target state="translated">通过添加要处理的事件处理程序委托<ph id="ph1">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph>事件，你可以处理记录、 它们记录到你自己的数据存储，或提供作为分析工具的输入。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>The following code example demonstrates how you can register a <ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph> delegate to handle the <ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示如何注册<ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph>委托来处理<ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.TraceContextEventArgs">
          <source>In this example, the <ph id="ph1">`OnTraceFinished`</ph> method accesses the collection of <ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph> objects through the <ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> property, iterates through them, and writes them to the response stream.</source>
          <target state="translated">在此示例中，<ph id="ph1">`OnTraceFinished`</ph>方法访问的集合<ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph>对象通过<ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph>属性，循环访问它们，并将其写入到响应流。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Web.TraceContextEventArgs.#ctor(System.Collections.ICollection)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> objects that represent all the trace records logged for the current request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> 对象的集合，表示当前请求的所有跟踪记录。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.TraceContextEventArgs.#ctor(System.Collections.ICollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.TraceContextEventArgs" /&gt;</ph> class, using the provided collection of trace records.</source>
          <target state="translated">使用提供的跟踪记录集合来初始化 <ph id="ph1">&lt;see cref="T:System.Web.TraceContextEventArgs" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> messages that are associated with the current request.</source>
          <target state="translated">获取与当前请求关联的 <ph id="ph1">&lt;see cref="T:System.Web.TraceContextRecord" /&gt;</ph> 消息的集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>A collection of trace records that are associated with the current request.</source>
          <target state="translated">与当前请求关联的跟踪记录的集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>Every call to the <ph id="ph1">&lt;xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType&gt;</ph> methods generates a <ph id="ph3">&lt;xref:System.Web.TraceContextRecord&gt;</ph> object that is added to the <ph id="ph4">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> messages collection.</source>
          <target state="translated">对每个调用<ph id="ph1">&lt;xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType&gt;</ph>方法生成<ph id="ph3">&lt;xref:System.Web.TraceContextRecord&gt;</ph>对象添加到<ph id="ph4">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph>消息集合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>The <ph id="ph1">&lt;xref:System.Web.TraceContext.Warn%2A&gt;</ph> method call sets the <ph id="ph2">&lt;xref:System.Web.TraceContextRecord.IsWarning%2A&gt;</ph> property to <ph id="ph3">`true`</ph>, while the other method calls set it to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.TraceContext.Warn%2A&gt;</ph>方法调用设置<ph id="ph2">&lt;xref:System.Web.TraceContextRecord.IsWarning%2A&gt;</ph>属性<ph id="ph3">`true`</ph>，而其他方法调用将其设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>You can iterate through the <ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> messages and examine records with specific categories or messages, and whether they are warnings.</source>
          <target state="translated">可循环访问<ph id="ph1">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph>消息，然后检查记录特定类别或消息，并指明它们是否警告。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>The following code example demonstrates how you can register a <ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph> delegate to handle the <ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph> event.</source>
          <target state="translated">下面的代码示例演示如何注册<ph id="ph1">&lt;xref:System.Web.TraceContextEventHandler&gt;</ph>委托来处理<ph id="ph2">&lt;xref:System.Web.TraceContext.TraceFinished&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.TraceContextEventArgs.TraceRecords">
          <source>In this example, the <ph id="ph1">`OnTraceFinished`</ph> method accesses the collection of <ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph> objects through the <ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph> property, iterates through them, and writes them to the response stream.</source>
          <target state="translated">在此示例中，<ph id="ph1">`OnTraceFinished`</ph>方法访问的集合<ph id="ph2">&lt;xref:System.Web.TraceContextRecord&gt;</ph>对象通过<ph id="ph3">&lt;xref:System.Web.TraceContextEventArgs.TraceRecords%2A&gt;</ph>属性，循环访问它们，并将其写入到响应流。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>