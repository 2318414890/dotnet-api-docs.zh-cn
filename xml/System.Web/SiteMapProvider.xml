<Type Name="SiteMapProvider" FullName="System.Web.SiteMapProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fa14a2bd125cd284042eaf3eb83de28061067e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610521" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SiteMapProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SiteMapProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SiteMapProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SiteMapProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SiteMapProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为所有站点地图数据提供程序提供公共基类，并为开发人员提供一条实现自定义站点地图数据提供程序的途径，这些提供程序可与 ASP.NET 站点地图基础结构一起用作 <see cref="T:System.Web.SiteMap" /> 对象的持久存储区。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.StaticSiteMapProvider>和<xref:System.Web.XmlSiteMapProvider>类表示的抽象的默认实现<xref:System.Web.SiteMapProvider>类。 <xref:System.Web.XmlSiteMapProvider>使用一个名为 Web.sitemap 的 XML 文件来存储站点地图数据。 有关 Web.sitemap 文件上的详细信息，请参阅[ASP.NET 站点地图](http://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20)。  
  
 <xref:System.Web.SiteMapProvider>类通过声明支持的站点映射提供程序层次结构，概念<xref:System.Web.SiteMapProvider.RootProvider%2A>和<xref:System.Web.SiteMapProvider.ParentProvider%2A>属性。 A<xref:System.Web.SiteMapProvider>可以是子任务或其他提供程序的父级。 这样可以拥有或维护其自己站点图和站点地图提供程序的不同的开发组由实现不同的站点的内容区域的位置。  
  
 所有<xref:System.Web.SiteMapProvider>在 Web.config 文件中配置对象。 在这些配置文件中声明任何站点映射提供程序已在运行时加载，并且用于加载和处理站点导航数据。 <xref:System.Web.SiteMap>对象，用于跟踪的所有提供程序可供通过其<xref:System.Web.SiteMap.Providers%2A>属性集合，提供以编程方式访问管理的提供程序的导航数据。 下面的代码示例演示用于声明站点地图提供商提供的 Web.config 文件中的格式。  
  
```  
<siteMap defaultProvider="<name>">  
  <providers>  
    <add  
      name="<friendly name>"  
      type="<fully qualified class name>, <assembly name (optional)>"   
      siteMapFile = "<file name>" />  
  </providers>  
</siteMap>  
```  
  
 通过这些提供程序加载的站点导航数据是其他组件使用的站点映射基础结构，如<xref:System.Web.UI.WebControls.SiteMapPath>和<xref:System.Web.UI.WebControls.TreeView>控件，以显示站点的用户的映射信息。  
  
 如果你实现自己站点映射的提供程序，你可以在 ASP.NET 应用程序的 App_Code 目录中放置的源文件，然后将自动编译的程序集。 此外可以将自己站点映射提供程序放在全局程序集缓存 (GAC)，并提供对它的 Web.config 文件中的完全限定引用。 编译器服务的详细信息，请参阅[使用程序集和全局程序集缓存](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何编写一个实现抽象类<xref:System.Web.SiteMapProvider>类。 此示例包括一个示例，仅<xref:System.Web.SiteMapProvider>和示例文本文件，使用它。 若要运行该示例还需要在 Web.config 文件和.aspx 页面中的条目。 你可以找到这些文档中<xref:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider%2A?displayProperty=nameWithType>属性。  
  
 该示例使用遵循预期的结构来加载站点地图信息的逗号分隔的文件。 该文件的第一行表示站点地图的根节点和后续行是子节点。 每个子节点标识其父节点的 URL。 满足这些条件的文件的示例所示。  
  
```  
default.aspx,Home,MyCompany Home Page,  
sale.aspx,Now On Sale,Check Out These Great Deals!,default.aspx  
catalog.aspx,Online Catalog,Browse Our Many Great Items!,default.aspx  
```  
  
 `SimpleTextSiteMapProvider`中提供的所有示例实现<xref:System.Web.SiteMapProvider>属性和方法。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>继承自<see cref="T:System.Web.SiteMapProvider" />类，你必须重写以下成员： <see cref="M:System.Web.SiteMapProvider.GetRootNodeCore" />， <see cref="M:System.Web.SiteMapProvider.FindSiteMapNode(System.String)" />， <see cref="M:System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />，和<see cref="M:System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)" />。</para>
    </block>
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.XmlSiteMapProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SiteMapProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SiteMapProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.SiteMapProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.SiteMapProvider>直接未实例化类。 <xref:System.Web.SiteMapProvider.%23ctor%2A>构造函数从派生自的类的构造函数中调用<xref:System.Web.StaticSiteMapProvider>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddNode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将一个 <see cref="T:System.Web.SiteMapNode" /> 对象添加到由站点地图提供程序维护的节点集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="protected virtual void AddNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddNode (node As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddNode(System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要添加到提供程序维护的节点集合的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>将一个 <see cref="T:System.Web.SiteMapNode" /> 对象添加到由站点地图提供程序维护的节点集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类派生自<xref:System.Web.SiteMapProvider>类可以重写<xref:System.Web.SiteMapProvider.AddNode%2A>方法，并提供用于添加逻辑<xref:System.Web.SiteMapNode>到站点地图提供程序由维护的节点集合的对象。 默认实现<xref:System.Web.SiteMapProvider.AddNode%2A>方法抛出异常<xref:System.NotImplementedException>异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)" />
        <altmember cref="T:System.Web.SiteMapNodeCollection" />
        <altmember cref="T:System.Web.XmlSiteMapProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="protected internal virtual void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddNode(class System.Web.SiteMapNode node, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub AddNode (node As SiteMapNode, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddNode(System::Web::SiteMapNode ^ node, System::Web::SiteMapNode ^ parentNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要添加到提供程序维护的节点集合的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <param name="parentNode">为 <c>node</c> 的父级的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>将一个 <see cref="T:System.Web.SiteMapNode" /> 对象添加到由站点地图提供程序维护的节点集合并指定父 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类派生自<xref:System.Web.SiteMapProvider>类可以重写<xref:System.Web.SiteMapProvider.AddNode%2A>方法，并提供用于添加逻辑<xref:System.Web.SiteMapNode>具有到站点地图提供商提供由维护的节点集合指定的父对象。 例如，<xref:System.Web.XmlSiteMapProvider.AddNode%2A?displayProperty=nameWithType>方法将添加<xref:System.Web.SiteMapNode>由指定的对象`node`到<xref:System.Web.SiteMapNodeCollection>集合由维护<xref:System.Web.XmlSiteMapProvider>对象，并创建之间的父/子关系<xref:System.Web.SiteMapNode>指定的对象`node`和`parentNode`。 默认实现<xref:System.Web.SiteMapProvider.AddNode%2A>方法抛出异常<xref:System.NotImplementedException>异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">在所有情况下。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.AddNode(System.Web.SiteMapNode)" />
        <altmember cref="T:System.Web.SiteMapNodeCollection" />
        <altmember cref="T:System.Web.XmlSiteMapProvider" />
      </Docs>
    </Member>
    <Member MemberName="CurrentNode">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode CurrentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode CurrentNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapProvider.CurrentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ CurrentNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示当前请求页的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <value>表示当前请求页的 <see cref="T:System.Web.SiteMapNode" />；否则，如果没有找到或不能为当前用户返回 <see cref="T:System.Web.SiteMapNode" />，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapProvider.SiteMapResolve>然后再尝试检索引发事件<xref:System.Web.SiteMapNode>对象，启用事件订阅服务器，以返回的实例<xref:System.Web.SiteMapNode>类。 如果没有事件订阅服务器，<xref:System.Web.SiteMapProvider>类调用<xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>方法使用当前 HTTP 上下文检索<xref:System.Web.SiteMapNode>，表示当前请求的页。  
  
 如果使用不符合当前请求的页<xref:System.Web.SiteMapNode>，`null`返回。 如果启用了安全修整且不允许用户访问<xref:System.Web.SiteMapNode>，`null`返回。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.SiteMapProvider.CurrentNode%2A>实现抽象类中的属性<xref:System.Web.SiteMapProvider>类。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#2)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapProvider.RootNode" />
        <altmember cref="P:System.Web.SiteMapProvider.SecurityTrimmingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableLocalization">
      <MemberSignature Language="C#" Value="public bool EnableLocalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLocalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapProvider.EnableLocalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLocalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLocalization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，该值指示是否返回 <see cref="T:System.Web.SiteMapNode" /> 特性的本地化的值。</summary>
        <value>
          如果返回 <see cref="T:System.Web.SiteMapNode" /> 特性的本地化的值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性用于的 get 访问器<xref:System.Web.SiteMapNode.Title%2A>和<xref:System.Web.SiteMapNode.Description%2A>属性，以及为其他<xref:System.Web.SiteMapNode.Attributes%2A>属性<xref:System.Web.SiteMapNode>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Title" />
        <altmember cref="P:System.Web.SiteMapNode.Description" />
        <altmember cref="P:System.Web.SiteMapNode.Attributes" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindSiteMapNode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>当在派生类中被重写时，将检索表示某个页的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindSiteMapNode">
      <MemberSignature Language="C#" Value="public abstract System.Web.SiteMapNode FindSiteMapNode (string rawUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode FindSiteMapNode(string rawUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.FindSiteMapNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindSiteMapNode (rawUrl As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SiteMapNode ^ FindSiteMapNode(System::String ^ rawUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawUrl">标识要为其检索 <see cref="T:System.Web.SiteMapNode" /> 的页的 URL。</param>
        <summary>当在派生类中被重写时，将检索表示位于指定 URL 的页的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <returns>表示由 <paramref name="rawURL" /> 标识的页的 <see cref="T:System.Web.SiteMapNode" />；如果未找到对应的 <see cref="T:System.Web.SiteMapNode" />，或者如果启用了安全修整并且不能为当前用户返回 <see cref="T:System.Web.SiteMapNode" />，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生自的类<xref:System.Web.SiteMapProvider>类必须实现抽象<xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>方法。  
  
 提供的 URL 可以是虚方法或绝对 URL。 它也可能是使用应用程序相关的语法，如 URL `~/apprelativedirectory`。 确保的任何实现<xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>方法分析和正确处理应用程序相关的语法。  
  
 <xref:System.Web.XmlSiteMapProvider>类，它是 ASP.NET 的默认 site 映射提供程序，使用的 URL<xref:System.Web.SiteMapNode>作为类所维护的各种集合中的键的对象。 因此，如果<xref:System.Web.SiteMapNode>提供了一个 URL，它必须是唯一的站点地图提供商提供作用域内。 如果未不提供任何 URL，生成的唯一标识符来标识<xref:System.Web.SiteMapNode>。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>类中实现抽象方法<xref:System.Web.SiteMapProvider>类。 `SimpleTextSiteMapProvider`使用一个名为的帮助器方法`FindUrl`，若要获取当前显示页面的 URL<xref:System.Web.HttpContext>对象。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#5)]  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.SiteMapProvider.FindSiteMapNode(System.String)" />方法在派生类中，请务必将搜索扩展到任何子提供程序中，如果<see cref="T:System.Web.SiteMapNode" />提供程序不会将与 URL 匹配的对象位于当前站点图，以及提供程序支持子提供程序。</para>
        </block>
        <altmember cref="P:System.Web.SiteMapProvider.CurrentNode" />
        <altmember cref="M:System.Web.SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNode">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode FindSiteMapNode (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode FindSiteMapNode(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.FindSiteMapNode(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindSiteMapNode (context As HttpContext) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ FindSiteMapNode(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">用于使节点信息与被请求页的 URL 匹配的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>使用指定的 <see cref="T:System.Web.SiteMapNode" /> 对象检索表示当前请求页的 <see cref="T:System.Web.HttpContext" /> 对象。</summary>
        <returns>表示当前请求页的 <see cref="T:System.Web.SiteMapNode" />；如果在 <see cref="T:System.Web.SiteMapNode" /> 中未找到对应的 <see cref="T:System.Web.SiteMapNode" />，或者页上下文为 <see langword="null" />，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>方法调用抽象<xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>方法来检索<xref:System.Web.SiteMapNode>对象当前请求的页基于的原始 URL 或请求的虚拟路径。 如果没有对应<xref:System.Web.SiteMapNode>中找到<xref:System.Web.SiteMap>，`null`返回。  
  
 <xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>方法不会检查是否<xref:System.Web.SiteMapNode>可供用户，默认情况下访问。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapProvider.FindSiteMapNode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNodeFromKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.FindSiteMapNodeFromKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindSiteMapNodeFromKey (key As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ FindSiteMapNodeFromKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">用于创建 <see cref="T:System.Web.SiteMapNode" /> 的查找键。</param>
        <summary>根据指定的键检索 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <returns>表示由 <paramref name="key" /> 标识的页的 <see cref="T:System.Web.SiteMapNode" />；如果未找到对应的 <see cref="T:System.Web.SiteMapNode" />，或者如果启用了安全修整并且不能为当前用户返回 <see cref="T:System.Web.SiteMapNode" />，则为 <see langword="null" />。 默认值为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapProvider>实现返回`null`在所有情况下。 派生自的类<xref:System.Web.SiteMapProvider>类可以重写<xref:System.Web.SiteMapProvider.FindSiteMapNodeFromKey%2A>方法以提供查找功能基于唯一键 (而不是一个 URL，用于通过<xref:System.Web.SiteMapProvider.FindSiteMapNode%2A>方法)。 实现<xref:System.Web.SiteMapProvider.FindSiteMapNodeFromKey%2A>方法如果你站点地图提供程序实现使用<xref:System.Web.SiteMapNode.Key%2A?displayProperty=nameWithType>属性<xref:System.Web.SiteMapNode>对象作为站点地图结构中的主要标识符。  
  
 <xref:System.Web.StaticSiteMapProvider>类提供处理搜索站点地图节点的未定义 URL 的实现。  
  
 <xref:System.Web.XmlSiteMapProvider>类，它是 ASP.NET 的默认 site 映射提供程序，使用的 URL<xref:System.Web.SiteMapNode>作为类所维护的各种集合中的键。 因此，如果一个节点提供了一个 URL，它必须是唯一的站点地图提供商提供的作用域内。 如果未不提供任何 URL，生成的唯一标识符来标识<xref:System.Web.SiteMapNode>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.SiteMapProvider.FindSiteMapNode" />
      </Docs>
    </Member>
    <Member MemberName="GetChildNodes">
      <MemberSignature Language="C#" Value="public abstract System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNodeCollection GetChildNodes(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChildNodes (node As SiteMapNode) As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SiteMapNodeCollection ^ GetChildNodes(System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要检索其所有子节点的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>当在派生类中被重写时，将检索特定 <see cref="T:System.Web.SiteMapNode" /> 的子节点。</summary>
        <returns>包含指定 <see cref="T:System.Web.SiteMapNodeCollection" /> 的直接子节点的只读 <see cref="T:System.Web.SiteMapNode" />；如果不存在子节点，则为 <see langword="null" /> 或空集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生自的类<xref:System.Web.SiteMapProvider>类必须实现抽象<xref:System.Web.SiteMapProvider.GetChildNodes%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.SiteMapProvider.GetChildNodes%2A>类中实现抽象方法<xref:System.Web.SiteMapProvider>类。 `SimpleTextSiteMapProvider`将层次结构的父/子关系存储在一个<xref:System.Collections.Hashtable>对象及其所有<xref:System.Web.SiteMapNode>中另一个对象。 <xref:System.Web.SiteMapProvider.GetChildNodes%2A>方法执行反向查找同时使用<xref:System.Collections.ArrayList>对象。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />方法在派生类中，请务必执行安全修整的子节点上并确保返回的集合是只读的。 该集合包含仅指定的直属子级<paramref name="node" />。</para>
        </block>
        <altmember cref="M:System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentNodeAndHintAncestorNodes">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode GetCurrentNodeAndHintAncestorNodes (int upLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode GetCurrentNodeAndHintAncestorNodes(int32 upLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCurrentNodeAndHintAncestorNodes (upLevel As Integer) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ GetCurrentNodeAndHintAncestorNodes(int upLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="upLevel">要获取的祖先站点地图节点的代数。 值为 -1 指示提供程序可检索和缓存所有祖先节点。</param>
        <summary>在站点地图提供程序检索当前请求页的节点并获取当前页的父和祖先站点地图节点时，为其提供经优化的查找方法。</summary>
        <returns>表示当前请求页的 <see cref="T:System.Web.SiteMapNode" />；否则，如果没有找到或不能为当前用户返回 <see cref="T:System.Web.SiteMapNode" />，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现<xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A>方法返回<xref:System.Web.SiteMapProvider.CurrentNode%2A>属性; 但是，在站点地图提供程序可以重写<xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A>方法并提供使用自定义缓存机制来返回当前优化的实现<xref:System.Web.SiteMapNode>，以及父节点和上级节点的父级。  
  
 `upLevel`参数用于指定的父节点和上级节点检索多少个级别。 如果首选，父节点和上级节点可以链接到<xref:System.Web.SiteMapNode>返回的对象<xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A>方法，使用<xref:System.Web.SiteMapNode.ParentNode%2A>属性。  
  
 <xref:System.Web.XmlSiteMapProvider>类，它是 ASP.NET 的默认 site 映射提供程序，缓存在内存中，这会导致很少或没有开销，查询时的整个站点映射<xref:System.Web.XmlSiteMapProvider>特定<xref:System.Web.SiteMapNode>对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="upLevel" /> 小于 -1。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentNodeAndHintNeighborhoodNodes">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode GetCurrentNodeAndHintNeighborhoodNodes (int upLevel, int downLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode GetCurrentNodeAndHintNeighborhoodNodes(int32 upLevel, int32 downLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCurrentNodeAndHintNeighborhoodNodes (upLevel As Integer, downLevel As Integer) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ GetCurrentNodeAndHintNeighborhoodNodes(int upLevel, int downLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upLevel" Type="System.Int32" />
        <Parameter Name="downLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="upLevel">要获取的祖先 <see cref="T:System.Web.SiteMapNode" /> 的代数。 0 指示不检索祖先节点，-1 指示提供程序可检索和缓存所有祖先节点。</param>
        <param name="downLevel">要获取的子 <see cref="T:System.Web.SiteMapNode" /> 的代数。 0 指示不检索子代节点，-1 指示提供程序可检索和缓存所有子代节点。</param>
        <summary>在站点地图提供程序检索当前请求页的节点并获取当前节点附近的站点地图节点时，为其提供经优化的查找方法。</summary>
        <returns>表示当前请求页的 <see cref="T:System.Web.SiteMapNode" />；否则，如果没有找到或不能为当前用户返回 <see cref="T:System.Web.SiteMapNode" />，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现<xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes%2A>方法返回<xref:System.Web.SiteMapProvider.CurrentNode%2A>属性; 但是，在站点地图提供程序可以重写<xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes%2A>方法并提供使用自定义缓存机制来返回当前优化的实现<xref:System.Web.SiteMapNode>对象，以及<xref:System.Web.SiteMapNode>对象内的当前相近<xref:System.Web.SiteMapNode>。  
  
 `upLevel`参数用于指定多少个级别的父节点和上级节点来检索并缓存，以及其直接子项。 `downLevel`参数用于指定从当前的子代节点的多少个级别<xref:System.Web.SiteMapNode>来检索。 如果首选，祖先和后代节点可以链接到<xref:System.Web.SiteMapNode>返回  
  
 <xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes%2A> 方法，使用<xref:System.Web.SiteMapNode.ParentNode%2A>和<xref:System.Web.SiteMapNode.ChildNodes%2A>属性。 如果有较少祖先或子节点级别不是由指定`upLevel`或`downLevel`，仅显示那些可检索。  
  
 <xref:System.Web.XmlSiteMapProvider>类，它是 ASP.NET 的默认 site 映射提供程序，缓存在内存中，这会导致很少或没有开销，查询时的整个站点映射<xref:System.Web.XmlSiteMapProvider>特定<xref:System.Web.SiteMapNode>对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="upLevel" /> 或 <paramref name="downLevel" /> 小于 -1。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetParentNode">
      <MemberSignature Language="C#" Value="public abstract System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode GetParentNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetParentNode (node As SiteMapNode) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SiteMapNode ^ GetParentNode(System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要为其检索父节点的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>当在派生类中被重写时，将检索特定 <see cref="T:System.Web.SiteMapNode" /> 对象的父节点。</summary>
        <returns>表示 <paramref name="node" /> 的父节点的 <see cref="T:System.Web.SiteMapNode" />；如果 <see cref="T:System.Web.SiteMapNode" /> 没有父节点或启用了安全修整且当前用户不能访问父节点，则为 <see langword="null" />。  
  
 如果父节点属于另一个提供者，<block subset="none" type="note"><para><see cref="M:System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)" /> 也可能返回 <see langword="null" />。 在这种情况下，应改用 <paramref name="node" /> 的 <see cref="P:System.Web.SiteMapNode.ParentNode" /> 属性。  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.SiteMapProvider.GetParentNode%2A>类中实现抽象方法<xref:System.Web.SiteMapProvider>类。 `SimpleTextSiteMapProvider`存储之间的层次结构的父/子关系<xref:System.Web.SiteMapNode>中的对象<xref:System.Collections.IList>接口，如<xref:System.Collections.ArrayList>对象。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="GetParentNodeRelativeToCurrentNodeAndHintDownFromParent">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode GetParentNodeRelativeToCurrentNodeAndHintDownFromParent (int walkupLevels, int relativeDepthFromWalkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(int32 walkupLevels, int32 relativeDepthFromWalkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetParentNodeRelativeToCurrentNodeAndHintDownFromParent (walkupLevels As Integer, relativeDepthFromWalkup As Integer) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(int walkupLevels, int relativeDepthFromWalkup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="walkupLevels" Type="System.Int32" />
        <Parameter Name="relativeDepthFromWalkup" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="walkupLevels">在检索请求的祖先节点时要遍历的祖先节点的层次数。</param>
        <param name="relativeDepthFromWalkup">要从目标祖先节点检索的子代节点的层次数。</param>
        <summary>在站点地图提供程序检索当前请求页的祖先节点并获取其子代节点时，为其提供经优化的查找方法。</summary>
        <returns>表示当前请求页的祖先 <see cref="T:System.Web.SiteMapNode" /> 的 <see cref="T:System.Web.SiteMapNode" />；如果未找到或无法为当前用户返回当前或祖先 <see cref="T:System.Web.SiteMapNode" />，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现<xref:System.Web.SiteMapProvider>类提供的非优化实现<xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A>方法，调用<xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A>和<xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A>方法; 但是，在站点地图提供程序可以重写<xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A>方法和提供使用自定义缓存机制来返回祖先节点，并执行其他优化的查找一个优化的实现<xref:System.Web.SiteMapNode>对象。  
  
 `walkupLevels`参数用于指定多少个级别的父节点和上级节点遍历时检索目标节点。 如果存在的层次少于请求`null`返回。 `downLevel`参数用于指定从要检索的目标祖先节点的子代节点的多少个级别。 如果首选，祖先和后代节点可以链接到<xref:System.Web.SiteMapNode>返回<xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A>方法，使用<xref:System.Web.SiteMapNode.ParentNode%2A>和<xref:System.Web.SiteMapNode.ChildNodes%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="walkupLevels" /> 或 <paramref name="relativeDepthFromWalkup" /> 小于 0。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetParentNodeRelativeToNodeAndHintDownFromParent">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode GetParentNodeRelativeToNodeAndHintDownFromParent (System.Web.SiteMapNode node, int walkupLevels, int relativeDepthFromWalkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode GetParentNodeRelativeToNodeAndHintDownFromParent(class System.Web.SiteMapNode node, int32 walkupLevels, int32 relativeDepthFromWalkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetParentNodeRelativeToNodeAndHintDownFromParent (node As SiteMapNode, walkupLevels As Integer, relativeDepthFromWalkup As Integer) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ GetParentNodeRelativeToNodeAndHintDownFromParent(System::Web::SiteMapNode ^ node, int walkupLevels, int relativeDepthFromWalkup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="walkupLevels" Type="System.Int32" />
        <Parameter Name="relativeDepthFromWalkup" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.SiteMapNode" />，用作 <c>walkupLevels</c> 和 <c>relativeDepthFromWalkup</c> 的参考点。</param>
        <param name="walkupLevels">在检索请求的祖先节点时要遍历的祖先节点的层次数。</param>
        <param name="relativeDepthFromWalkup">要从目标祖先节点检索的子代节点的层次数。</param>
        <summary>在站点地图提供程序检索指定 <see cref="T:System.Web.SiteMapNode" /> 对象的祖先节点并获取其子节点时，为其提供经优化的查找方法。</summary>
        <returns>表示 <paramref name="node" /> 的祖先的 <see cref="T:System.Web.SiteMapNode" />；如果未找到或者无法为当前用户返回当前或祖先 <see cref="T:System.Web.SiteMapNode" />，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现<xref:System.Web.SiteMapProvider>类提供的非优化实现<xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A>方法，调用<xref:System.Web.SiteMapProvider.HintAncestorNodes%2A>和<xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A>方法; 但是，在站点地图提供程序可以重写<xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A>方法和提供使用自定义缓存机制来返回祖先节点，并执行其他优化的查找一个优化的实现<xref:System.Web.SiteMapNode>对象。  <xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A>方法是非常类似于<xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A>方法。  
  
 `walkupLevels`参数用于指定多少个级别的父节点和上级节点遍历时检索目标节点。 如果存在的层次少于请求`null`返回。 `downLevel`参数用于指定从要检索的目标祖先节点的子代节点的多少个级别。 如果首选，祖先和后代节点可以链接到<xref:System.Web.SiteMapNode>返回<xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A>方法，使用<xref:System.Web.SiteMapNode.ParentNode%2A>和<xref:System.Web.SiteMapNode.ChildNodes%2A>属性。 如果有较少的祖先节点级别与所指定的`upLevel`参数，`null`返回。  它取决于提供程序实施者决定如何处理这种情况，可用子代节点级别数小于指定的值是`downLevel`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">为 <paramref name="walkupLevels" /> 或 <paramref name="relativeDepthFromWalkup" /> 指定的值小于 0。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetRootNodeCore">
      <MemberSignature Language="C#" Value="protected internal abstract System.Web.SiteMapNode GetRootNodeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.SiteMapNode GetRootNodeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetRootNodeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetRootNodeCore () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Web::SiteMapNode ^ GetRootNodeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中被重写时，将检索目前由当前提供者管理的所有节点的根节点。</summary>
        <returns>
          <see cref="T:System.Web.SiteMapNode" />，表示当前提供程序所管理的节点集的根节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapProvider.GetRootNodeCore%2A>方法实现中提供程序层次结构中，若要获取的父提供程序<xref:System.Web.SiteMapNode>充当参考框架，为生成提供程序层次结构和更大的站点映射节点层次结构，该站点地图数据之和的对象，每个都提供程序管理。  
  
   
  
## Examples  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetRootNodeCoreFromProvider">
      <MemberSignature Language="C#" Value="protected static System.Web.SiteMapNode GetRootNodeCoreFromProvider (System.Web.SiteMapProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Web.SiteMapNode GetRootNodeCoreFromProvider(class System.Web.SiteMapProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.GetRootNodeCoreFromProvider(System.Web.SiteMapProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetRootNodeCoreFromProvider (provider As SiteMapProvider) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Web::SiteMapNode ^ GetRootNodeCoreFromProvider(System::Web::SiteMapProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.SiteMapProvider" />
      </Parameters>
      <Docs>
        <param name="provider">调用 <see cref="M:System.Web.SiteMapProvider.GetRootNodeCore" /> 的提供程序。</param>
        <summary>检索当前由指定的站点地图提供程序管理的所有节点的根节点。</summary>
        <returns>
          <see cref="T:System.Web.SiteMapNode" />，表示 <paramref name="provider" /> 所管理的节点集的根节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现调用抽象<xref:System.Web.SiteMapProvider.GetRootNodeCore%2A>方法对指定`provider`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapProvider.GetRootNodeCore" />
      </Docs>
    </Member>
    <Member MemberName="HintAncestorNodes">
      <MemberSignature Language="C#" Value="public virtual void HintAncestorNodes (System.Web.SiteMapNode node, int upLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HintAncestorNodes(class System.Web.SiteMapNode node, int32 upLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HintAncestorNodes (node As SiteMapNode, upLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HintAncestorNodes(System::Web::SiteMapNode ^ node, int upLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="upLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.SiteMapNode" />，用作 <c>upLevel</c> 的参考点。</param>
        <param name="upLevel">要获取的祖先 <see cref="T:System.Web.SiteMapNode" /> 的代数。 0 指示不检索祖先节点，-1 指示可检索和缓存所有祖先节点。</param>
        <summary>提供一个方法，站点地图提供程序重写该方法来执行相对于指定 <see cref="T:System.Web.SiteMapNode" /> 对象的一个或多个层次的父和祖先节点的经优化的检索。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值<xref:System.Web.SiteMapProvider.HintAncestorNodes%2A>方法仅检查`upLevel`小于-1 的参数和一个`node`参数`null`。 因为<xref:System.Web.XmlSiteMapProvider>类缓存在内存中，站点映射信息<xref:System.Web.SiteMapProvider.HintAncestorNodes%2A>方法不适用。  
  
 站点地图提供程序可以重写<xref:System.Web.SiteMapProvider.HintAncestorNodes%2A>方法来执行父节点和上级节点指定的优化的检索<xref:System.Web.SiteMapNode>对象。  
  
 `upLevel`参数用于指定的父节点和上级节点以从指定遍历多少个级别<xref:System.Web.SiteMapNode>。 如果存在较少的级别的少于请求，所有可用的祖先节点将返回指定范围内。 如果首选，可链接的父节点到指定<xref:System.Web.SiteMapNode>使用<xref:System.Web.SiteMapNode.ParentNode%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="upLevel" /> 小于 -1。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HintNeighborhoodNodes">
      <MemberSignature Language="C#" Value="public virtual void HintNeighborhoodNodes (System.Web.SiteMapNode node, int upLevel, int downLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HintNeighborhoodNodes(class System.Web.SiteMapNode node, int32 upLevel, int32 downLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HintNeighborhoodNodes (node As SiteMapNode, upLevel As Integer, downLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HintNeighborhoodNodes(System::Web::SiteMapNode ^ node, int upLevel, int downLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="upLevel" Type="System.Int32" />
        <Parameter Name="downLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.SiteMapNode" />，用作 <c>upLevel</c> 的参考点。</param>
        <param name="upLevel">要获取的祖先 <see cref="T:System.Web.SiteMapNode" /> 的代数。 0 指示不检索上级节点，-1 指示可检索和缓存所有上级节点（及其到 <c>node</c> 层次的后代节点）。</param>
        <param name="downLevel">要获取的子代 <see cref="T:System.Web.SiteMapNode" /> 的代数。 0 指示不检索子代节点，-1 指示可检索和缓存所有子代节点。</param>
        <summary>提供一个方法，站点地图提供程序可以重写该方法以执行在指定节点附近找到的节点的经优化的检索。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值<xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A>方法仅检查`upLevel`和`downLevel`小于-1 的参数和一个`node`参数`null`。 因为<xref:System.Web.XmlSiteMapProvider>对象缓存在内存中，站点映射信息<xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A>方法不适用。  
  
 站点地图提供程序可以重写<xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A>方法来执行经优化的查找<xref:System.Web.SiteMapNode>接近于指定的对象<xref:System.Web.SiteMapNode>。 `upLevel`参数用于指定的父节点和上级节点以从指定遍历多少个级别<xref:System.Web.SiteMapNode>。 `downLevel`参数用于指定从要检索的当前节点的子节点的多少个级别。 如果首选，祖先和后代节点可以链接到<xref:System.Web.SiteMapNode>返回<xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A>方法，使用<xref:System.Web.SiteMapNode.ParentNode%2A>和<xref:System.Web.SiteMapNode.ChildNodes%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="upLevel" /> 或 <paramref name="downLevel" /> 小于 -1。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, attributes As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的提供程序的 <see cref="P:System.Configuration.Provider.ProviderBase.Name" />。</param>
        <param name="attributes">
          <see cref="T:System.Collections.Specialized.NameValueCollection" />，其中可以包含附加特性以帮助初始化提供程序。 从 Web.config 文件中的站点地图提供程序配置读取这些特性。</param>
        <summary>初始化 <see cref="T:System.Web.SiteMapProvider" /> 实现（包括从持久性存储区加载站点地图数据所需的任何资源）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapProvider.Initialize%2A>方法不会实际生成站点图，它仅而准备的状态<xref:System.Web.SiteMapProvider>对象，若要这样做。 默认实现初始化<xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A>从站点导航配置站点地图提供商提供的属性。  
  
 派生自的类<xref:System.Web.SiteMapProvider>可以重写<xref:System.Web.SiteMapProvider.Initialize%2A>方法以初始化任何状态和从持久性存储区加载站点地图数据所需的资源。 例如，如果派生的类使用文件来存储站点地图数据，任何文件初始化可以执行在<xref:System.Web.SiteMapProvider.Initialize%2A>方法。 如果派生的类使用某些其他类型的数据存储，如关系数据库中，初始化数据库连接可能会执行。  
  
 其他属性，例如文件名或连接字符串，由 ASP.NET 配置系统读取，并将其传递给<xref:System.Web.SiteMapProvider.Initialize%2A>方法替换其<xref:System.Collections.Specialized.NameValueCollection>参数。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.SiteMapProvider.Initialize%2A>方法准备 Microsoft Access 数据库连接。  
  
 连接字符串<xref:System.Data.OleDb.OleDbConnection>传入的对象<xref:System.Collections.Specialized.NameValueCollection>参数<xref:System.Web.SiteMapProvider.Initialize%2A>方法。 在这种情况下，由提供程序特定的部分中的 Web.config 文件中提供的连接字符串。 在这里，`accessSiteMapConnectionString`包含承载站点地图数据的 Microsoft Access 数据库的连接字符串。  
  
```  
<siteMap defaultProvider="AccessSiteMapProvider">  
  <providers>  
     <add  
       name="AccessSiteMapProvider"  
       type="Samples.AspNet.AccessSiteMapProvider,Samples.AspNet"  
       accessSiteMapConnectionString="PROVIDER=MICROSOFT.JET.OLEDB.4.0;DATA SOURCE=\\SomeUNCShare\\sitemap.mdb"/>  
  </providers>   
 </siteMap>  
```  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CPP/accesssitemapprovider.cpp#2)]
 [!code-csharp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CS/accesssitemapprovider.cs#2)]
 [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/VB/accesssitemapprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="M:System.Web.SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />方法在派生类中，请务必第一次调用<see cref="M:System.Web.SiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />之前执行您自己的初始化基类的方法。</para>
        </block>
        <altmember cref="T:System.Configuration.Provider.ProviderBase" />
        <altmember cref="M:System.Web.StaticSiteMapProvider.BuildSiteMap" />
        <altmember cref="M:System.Web.StaticSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="IsAccessibleToUser">
      <MemberSignature Language="C#" Value="public virtual bool IsAccessibleToUser (System.Web.HttpContext context, System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAccessibleToUser(class System.Web.HttpContext context, class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAccessibleToUser (context As HttpContext, node As SiteMapNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAccessibleToUser(System::Web::HttpContext ^ context, System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="context">包含用户信息的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="node">用户请求的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>检索一个布尔值，该值指示指定的 <see cref="T:System.Web.SiteMapNode" /> 对象是否可由用户在指定的上下文中查看。</summary>
        <returns>
          如果启用了安全修整并且 <paramref name="node" /> 可由用户查看，或者未启用安全修整，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当启用了安全修整时的默认行为是下表中所述。  
  
|条件|返回值|  
|---------------|------------------|  
|<xref:System.Web.SiteMapNode.Roles%2A>上是否存在`node`并且当前用户在至少一个指定的角色。<br /><br /> - 或 -<br /><br /> 当前线程都有一个相关`WindowsIdentity`具有文件访问权限所请求 URL 和 URL 位于应用程序的目录结构中。<br /><br /> - 或 -<br /><br /> 当前用户授权专门为所请求 URL 中`authorization`对于当前的应用程序和 URL 的元素是位于应用程序的目录结构。|`true`|  
|满足上述条件组成。|`false`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="node" /> 为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.SiteMapProvider.SecurityTrimmingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="ParentProvider">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapProvider ParentProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapProvider ParentProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapProvider.ParentProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ParentProvider As SiteMapProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapProvider ^ ParentProvider { System::Web::SiteMapProvider ^ get(); void set(System::Web::SiteMapProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前提供程序的父 <see cref="T:System.Web.SiteMapProvider" /> 对象。</summary>
        <value>当前 <see cref="T:System.Web.SiteMapProvider" /> 的父提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现抽象的所有类<xref:System.Web.SiteMapProvider>类可以支持站点地图提供程序层次结构的概念。 之外的作用域维护提供程序之间的任何层次结构关系<xref:System.Web.SiteMapProviderCollection>由提供程序本身的集合。 有关功能的提供程序层次结构的示例，请参阅<xref:System.Web.XmlSiteMapProvider>。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.SiteMapProvider.ParentProvider%2A>实现抽象类中的属性<xref:System.Web.SiteMapProvider>类。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapProvider.RootProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="C#" Value="protected internal virtual void RemoveNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RemoveNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RemoveNode (node As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RemoveNode(System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">要从提供程序维护的节点集合中移除的 <see cref="T:System.Web.SiteMapNode" />。</param>
        <summary>从由站点地图提供程序维护的节点集合移除指定的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类派生自<xref:System.Web.SiteMapProvider>类可以重写<xref:System.Web.SiteMapProvider.RemoveNode%2A>方法，并提供用于删除逻辑<xref:System.Web.SiteMapNode>从站点地图提供商提供由维护的节点集合的对象。 默认实现<xref:System.Web.SiteMapProvider.RemoveNode%2A>方法抛出异常<xref:System.NotImplementedException>异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">在所有情况下。</exception>
        <altmember cref="Overload:System.Web.SiteMapProvider.AddNode" />
      </Docs>
    </Member>
    <Member MemberName="ResolveSiteMapNode">
      <MemberSignature Language="C#" Value="protected System.Web.SiteMapNode ResolveSiteMapNode (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.SiteMapNode ResolveSiteMapNode(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapProvider.ResolveSiteMapNode(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ResolveSiteMapNode (context As HttpContext) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::SiteMapNode ^ ResolveSiteMapNode(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">站点地图当前存在于其中的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>引发 <see cref="E:System.Web.SiteMapProvider.SiteMapResolve" /> 事件。</summary>
        <returns>由注册用于处理事件的事件处理程序委托提供的 <see cref="T:System.Web.SiteMapNode" />；如果注册了多个委托来处理该事件，则为委托链中的最后一个委托的返回值；否则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context`参数和调用提供程序的引用<xref:System.Web.SiteMapProvider.ResolveSiteMapNode%2A>方法传递给构造任何的函数关联<xref:System.Web.SiteMapResolveEventArgs>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.SiteMapProvider.SiteMapResolve" />
        <altmember cref="T:System.Web.SiteMapResolveEventArgs" />
        <altmember cref="T:System.Web.SiteMapResolveEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapProvider.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于本地化 <see cref="T:System.Web.SiteMapNode" /> 特性的资源键。</summary>
        <value>一个包含资源键名称的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapProvider.ResourceKey%2A>属性用于<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法<xref:System.Web.SiteMapNode>类。 有关<xref:System.Web.SiteMapNode.Title%2A>和<xref:System.Web.SiteMapNode.Description%2A>属性，以及在中定义任何其他属性<xref:System.Web.SiteMapNode.Attributes%2A>集合<xref:System.Web.SiteMapNode>对象，<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法将优先于<xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>时使用启用本地化<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性设置为`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Title" />
        <altmember cref="P:System.Web.SiteMapNode.Description" />
        <altmember cref="P:System.Web.SiteMapNode.Attributes" />
        <altmember cref="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
        <altmember cref="M:System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RootNode">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode RootNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode RootNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapProvider.RootNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ RootNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前提供程序表示的站点地图数据的根 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <value>当前站点地图数据提供程序的根 <see cref="T:System.Web.SiteMapNode" />。 默认的实现在被返回的节点上执行安全修整。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现调用抽象<xref:System.Web.SiteMapProvider.GetRootNodeCore%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.SiteMapProvider.RootNode%2A>实现抽象类中的属性<xref:System.Web.SiteMapProvider>类。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#2)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写<see cref="P:System.Web.SiteMapProvider.RootNode" />属性在派生类中，请确保实现不导航提供程序层次结构中，如果存在，若要查找站点的绝对根节点。</para>
        </block>
        <altmember cref="M:System.Web.SiteMapProvider.GetRootNodeCore" />
        <altmember cref="P:System.Web.SiteMapProvider.CurrentNode" />
      </Docs>
    </Member>
    <Member MemberName="RootProvider">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapProvider RootProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapProvider RootProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapProvider.RootProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootProvider As SiteMapProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapProvider ^ RootProvider { System::Web::SiteMapProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前提供程序层次结构中的根 <see cref="T:System.Web.SiteMapProvider" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.SiteMapProvider" />，表示当前提供程序所属的提供程序层次结构中的顶级站点地图提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现的所有类<xref:System.Web.SiteMapProvider>类可以支持站点地图提供程序层次结构的概念。 之外的作用域维护提供程序之间的任何层次结构关系<xref:System.Web.SiteMapProviderCollection>由提供程序本身的集合。 有关功能的提供程序层次结构的示例，请参阅<xref:System.Web.XmlSiteMapProvider>。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.SiteMapProvider.RootProvider%2A>实现抽象类中的属性<xref:System.Web.SiteMapProvider>类。 `SimpleTextSiteMapProvider`使用简单的逻辑来确定是否当前的提供程序为提供程序层次结构的一部分。 如果提供程序是层次结构的一部分，它使用<xref:System.Web.SiteMapProvider.RootProvider%2A>父提供程序为其自身的属性。 如果提供程序不是层次结构的一部分，提供程序是其自己的根提供程序。  
  
 此代码示例摘自更大的示例为提供<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">存在一个对当前站点地图提供程序的循环引用。</exception>
        <altmember cref="P:System.Web.SiteMapProvider.ParentProvider" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTrimmingEnabled">
      <MemberSignature Language="C#" Value="public bool SecurityTrimmingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SecurityTrimmingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapProvider.SecurityTrimmingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTrimmingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SecurityTrimmingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个布尔值，该值指示站点地图提供程序是否根据用户的角色筛选站点地图节点。</summary>
        <value>
          如果提供程序被配置为根据角色筛选节点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能以编程方式设置安全修整-提供程序的配置中设置。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="SiteMapResolve">
      <MemberSignature Language="C#" Value="public event System.Web.SiteMapResolveEventHandler SiteMapResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.SiteMapResolveEventHandler SiteMapResolve" />
      <MemberSignature Language="DocId" Value="E:System.Web.SiteMapProvider.SiteMapResolve" />
      <MemberSignature Language="VB.NET" Value="Public Event SiteMapResolve As SiteMapResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::SiteMapResolveEventHandler ^ SiteMapResolve;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当调用 <see cref="P:System.Web.SiteMapProvider.CurrentNode" /> 属性时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以创建<xref:System.Web.SiteMapNode>的当前请求的页，而无需通过订阅到实现自定义网站地图提供商提供的表示形式<xref:System.Web.SiteMapProvider.SiteMapResolve>事件。 订阅服务器附加<xref:System.Web.SiteMapResolveEventHandler>对象以便接收通知时<xref:System.Web.SiteMapProvider.CurrentNode%2A>属性称为，可返回自定义<xref:System.Web.SiteMapNode>对象而不是一个由默认<xref:System.Web.SiteMapProvider.CurrentNode%2A>属性。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.SiteMap.SiteMapResolve" />
        <altmember cref="T:System.Web.SiteMapResolveEventHandler" />
        <altmember cref="T:System.Web.SiteMapResolveEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>