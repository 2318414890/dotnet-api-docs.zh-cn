<Type Name="SiteMapNode" FullName="System.Web.SiteMapNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04df64d6d55f4d089c728605b7f344e5068f8ba3" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53392310" /></Metadata><TypeSignature Language="C#" Value="public class SiteMapNode : ICloneable, System.Web.UI.IHierarchyData, System.Web.UI.INavigateUIData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteMapNode extends System.Object implements class System.ICloneable, class System.Web.UI.IHierarchyData, class System.Web.UI.INavigateUIData" />
  <TypeSignature Language="DocId" Value="T:System.Web.SiteMapNode" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteMapNode&#xA;Implements ICloneable, IHierarchyData, INavigateUIData" />
  <TypeSignature Language="C++ CLI" Value="public ref class SiteMapNode : ICloneable, System::Web::UI::IHierarchyData, System::Web::UI::INavigateUIData" />
  <TypeSignature Language="F#" Value="type SiteMapNode = class&#xA;    interface ICloneable&#xA;    interface IHierarchyData&#xA;    interface INavigateUIData" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IHierarchyData</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INavigateUIData</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示分层站点地图结构中的节点，例如 <see cref="T:System.Web.SiteMap" /> 类和实现抽象 <see cref="T:System.Web.SiteMapProvider" /> 类的类所描述的节点。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个<xref:System.Web.SiteMapNode>对象表示站点地图结构中的网站页。 <xref:System.Web.SiteMapNode> 静态加载对象<xref:System.Web.SiteMap>类在运行时使用一个或多个站点地图提供程序将从持久性存储区的站点地图数据加载到内存。 <xref:System.Web.SiteMapNode> 对象由包装<xref:System.Web.UI.WebControls.SiteMapNodeItem>类使用由 Web 服务器控件，如<xref:System.Web.UI.WebControls.SiteMapPath>控件。  
  
 <xref:System.Web.SiteMapNode>类包含多个属性，用于描述 Web 站点，包括描述页上，如属性中的单页<xref:System.Web.SiteMapNode.Url%2A>， <xref:System.Web.SiteMapNode.Title%2A>，和<xref:System.Web.SiteMapNode.Description%2A>属性。 而<xref:System.Web.SiteMapNode.Url%2A>属性可供<xref:System.Web.XmlSiteMapProvider>类，该类是作为提供程序使用来跟踪节点的内部集合中的查找键的默认站点地图提供程序的 ASP.NET，，<xref:System.Web.SiteMapNode>类支持基本<xref:System.Web.SiteMapNode.Key%2A>在站点地图提供程序可用于跟踪节点的属性。 此外，<xref:System.Web.SiteMapNode.Url%2A>导航控件使用属性来呈现页导航结构中的超链接。 <xref:System.Web.SiteMapNode.Title%2A>属性是友好名称<xref:System.Web.SiteMapNode>，通常是 Web 窗体的 HTML 标题相同导航控件用于呈现简单的标签。 最后，<xref:System.Collections.Specialized.NameValueCollection>的其他集合<xref:System.Web.SiteMapNode.Attributes%2A>属性是可供站点使用的站点地图提供程序<xref:System.Web.SiteMapNode>对象，但需要在基类中不可用的其他属性<xref:System.Web.SiteMapNode>类。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何创建新的站点映射节点集合并向其中添加元素。 第二个代码示例演示如何从文本文件加载站点地图数据。  
  
 下面的代码示例演示如何使用<xref:System.Web.SiteMapNodeCollection.%23ctor%2A>构造函数创建一个新<xref:System.Web.SiteMapNodeCollection>集合，然后将元素添加到其与<xref:System.Web.SiteMapNodeCollection.Add%2A>方法。  
  
 [!code-csharp[System.Web.SiteMapNode_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNode_2/CS/sitemapnode2acs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMapNode_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNode_2/VB/sitemapnode2avb.aspx.vb#1)]  
  
 下面的代码示例演示如何将`SimpleTextSiteMapProvider`分析文本文件，其中包含以逗号分隔字符串中的站点映射数据。 一个新<xref:System.Web.SiteMapNode>对象添加到从文件读取每一行的类的内部跟踪集合。  
  
 此代码示例是为提供一个更大示例的一部分<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMap" />
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.XmlSiteMapProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/23de8a05-cac3-4693-b508-39f1d4b7053d">ASP.NET 站点导航概述</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20">ASP.NET 站点地图</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.SiteMapNode" /> 类的一个新实例，并将它与指定的 <see cref="T:System.Web.SiteMapProvider" /> 对象关联。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNode (System.Web.SiteMapProvider provider, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapProvider provider, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As SiteMapProvider, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNode(System::Web::SiteMapProvider ^ provider, System::String ^ key);" />
      <MemberSignature Language="F#" Value="new System.Web.SiteMapNode : System.Web.SiteMapProvider * string -&gt; System.Web.SiteMapNode" Usage="new System.Web.SiteMapNode (provider, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.SiteMapProvider" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">与节点关联的 <see cref="T:System.Web.SiteMapProvider" />。</param>
        <param name="key">一个特定于提供程序的查找键。</param>
        <summary>使用指定的 <paramref name="key" /> 和站点地图提供程序对 <see cref="T:System.Web.SiteMapNode" /> 类的新实例进行初始化，其中，前者用于标识该节点代表的页，后者用于管理该节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类，该类是默认值<xref:System.Web.SiteMapProvider>提供程序实现的 ASP.NET 中，使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性用作查找键，如果提供的节点 （如果 URL 是未提供为该节点生成的跟踪标识符）。 因此，任何<xref:System.Web.SiteMapNode>控件提供一个 URL，并由<xref:System.Web.XmlSiteMapProvider>提供程序的范围内，必须具有唯一的 URL。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.SiteMapProvider" /> 为 <see langword="null" />。  
  
或 
 <paramref name="key" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapProvider provider, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As SiteMapProvider, key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNode(System::Web::SiteMapProvider ^ provider, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="new System.Web.SiteMapNode : System.Web.SiteMapProvider * string * string -&gt; System.Web.SiteMapNode" Usage="new System.Web.SiteMapNode (provider, key, url)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.SiteMapProvider" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">与节点关联的 <see cref="T:System.Web.SiteMapProvider" />。</param>
        <param name="key">一个特定于提供程序的查找键。</param>
        <param name="url">节点在站点中表示的页的 URL。</param>
        <summary>使用以下三项对 <see cref="T:System.Web.SiteMapNode" /> 类的新实例进行初始化：一是指定的 URL；二是一个 <paramref name="key" />，用于标识节点所代表的页；三是站点地图提供程序，用于管理节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类，该类是默认值<xref:System.Web.SiteMapProvider>提供程序实现的 ASP.NET 中，使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性用作查找键，如果提供的节点 （如果 URL 是未提供为该节点生成的跟踪标识符）。 因此，任何<xref:System.Web.SiteMapNode>对象，提供一个 URL，并由<xref:System.Web.XmlSiteMapProvider>提供程序的范围内，必须具有唯一的 URL。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.SiteMapNodeCollection.%23ctor%2A>构造函数创建一个新<xref:System.Web.SiteMapNodeCollection>集合，然后将元素添加到其与<xref:System.Web.SiteMapNodeCollection.Add%2A>方法。  
  
 [!code-csharp[System.Web.SiteMapNode_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNode_2/CS/sitemapnode2acs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMapNode_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNode_2/VB/sitemapnode2avb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.SiteMapProvider" /> 为 <see langword="null" />。  
  
或 
 <paramref name="key" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapProvider provider, string key, string url, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As SiteMapProvider, key As String, url As String, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNode(System::Web::SiteMapProvider ^ provider, System::String ^ key, System::String ^ url, System::String ^ title);" />
      <MemberSignature Language="F#" Value="new System.Web.SiteMapNode : System.Web.SiteMapProvider * string * string * string -&gt; System.Web.SiteMapNode" Usage="new System.Web.SiteMapNode (provider, key, url, title)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.SiteMapProvider" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">与节点关联的 <see cref="T:System.Web.SiteMapProvider" />。</param>
        <param name="key">一个特定于提供程序的查找键。</param>
        <param name="url">节点在站点中表示的页的 URL。</param>
        <param name="title">节点的标签，通常由导航控件显示。</param>
        <summary>使用以下四项对 <see cref="T:System.Web.SiteMapNode" /> 类的新实例进行初始化：一是指定的 URL；二是一个 <paramref name="key" />，用于标识节点所代表的页；三是一个标题；四是站点地图提供程序，用于管理节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类，该类是默认值<xref:System.Web.SiteMapProvider>提供程序实现的 ASP.NET 中，使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性用作查找键，如果提供的节点 （如果 URL 是未提供为该节点生成的跟踪标识符）。 因此，任何<xref:System.Web.SiteMapNode>对象，提供一个 URL，并由<xref:System.Web.XmlSiteMapProvider>提供程序的范围内，必须具有唯一的 URL。  
  
 如果没有`title`提供，则调用<xref:System.Web.SiteMapNode.Title%2A>属性返回<xref:System.String.Empty?displayProperty=nameWithType>字段。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.SiteMapNode.%23ctor%2A>构造函数创建的新实例<xref:System.Web.SiteMapNode>类。 使用 Microsoft Access 数据库行中的值初始化节点。  
  
 此代码示例是为提供一个更大示例的一部分<xref:System.Web.StaticSiteMapProvider.BuildSiteMap%2A>方法。  
  
 [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#6](~/samples/snippets/cpp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CPP/accesssitemapprovider.cpp#6)]
 [!code-csharp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CS/accesssitemapprovider.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/VB/accesssitemapprovider.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.SiteMapProvider" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="key" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url, string title, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapProvider provider, string key, string url, string title, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As SiteMapProvider, key As String, url As String, title As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNode(System::Web::SiteMapProvider ^ provider, System::String ^ key, System::String ^ url, System::String ^ title, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Web.SiteMapNode : System.Web.SiteMapProvider * string * string * string * string -&gt; System.Web.SiteMapNode" Usage="new System.Web.SiteMapNode (provider, key, url, title, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.SiteMapProvider" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">与节点关联的 <see cref="T:System.Web.SiteMapProvider" />。</param>
        <param name="key">一个特定于提供程序的查找键。</param>
        <param name="url">节点在站点中表示的页的 URL。</param>
        <param name="title">节点的标签，通常由导航控件显示。</param>
        <param name="description">该节点所代表的页的说明。</param>
        <summary>使用以下四项对 <see cref="T:System.Web.SiteMapNode" /> 类的新实例进行初始化：一是指定的 URL；二是一个 <paramref name="key" />，用于标识节点所代表的页；三是标题和说明；四是站点地图提供程序，用于管理节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类，该类是默认值<xref:System.Web.SiteMapProvider>提供程序实现的 ASP.NET 中，使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性用作查找键，如果提供的节点 （如果 URL 是未提供为该节点生成的跟踪标识符）。 因此，任何<xref:System.Web.SiteMapNode>对象，提供一个 URL，并由<xref:System.Web.XmlSiteMapProvider>提供程序的范围内，必须具有唯一的 URL。  
  
 如果没有`title`或`description`提供，则调用<xref:System.Web.SiteMapNode.Title%2A>或<xref:System.Web.SiteMapNode.Description%2A>属性返回<xref:System.String.Empty?displayProperty=nameWithType>字段。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.SiteMapNode.%23ctor%2A>构造函数创建<xref:System.Web.SiteMapNode>通过分析从简单的文本文件以生成内存中的站点地图数据的对象。  
  
 此代码示例摘自一个更大的示例提供的抽象<xref:System.Web.SiteMapProvider>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.SiteMapProvider" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="key" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.SiteMapProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNode (System.Web.SiteMapProvider provider, string key, string url, string title, string description, System.Collections.IList roles, System.Collections.Specialized.NameValueCollection attributes, System.Collections.Specialized.NameValueCollection explicitResourceKeys, string implicitResourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapProvider provider, string key, string url, string title, string description, class System.Collections.IList roles, class System.Collections.Specialized.NameValueCollection attributes, class System.Collections.Specialized.NameValueCollection explicitResourceKeys, string implicitResourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String,System.Collections.IList,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As SiteMapProvider, key As String, url As String, title As String, description As String, roles As IList, attributes As NameValueCollection, explicitResourceKeys As NameValueCollection, implicitResourceKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNode(System::Web::SiteMapProvider ^ provider, System::String ^ key, System::String ^ url, System::String ^ title, System::String ^ description, System::Collections::IList ^ roles, System::Collections::Specialized::NameValueCollection ^ attributes, System::Collections::Specialized::NameValueCollection ^ explicitResourceKeys, System::String ^ implicitResourceKey);" />
      <MemberSignature Language="F#" Value="new System.Web.SiteMapNode : System.Web.SiteMapProvider * string * string * string * string * System.Collections.IList * System.Collections.Specialized.NameValueCollection * System.Collections.Specialized.NameValueCollection * string -&gt; System.Web.SiteMapNode" Usage="new System.Web.SiteMapNode (provider, key, url, title, description, roles, attributes, explicitResourceKeys, implicitResourceKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.SiteMapProvider" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="roles" Type="System.Collections.IList" />
        <Parameter Name="attributes" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="explicitResourceKeys" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="implicitResourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">与节点关联的 <see cref="T:System.Web.SiteMapProvider" />。</param>
        <param name="key">一个特定于提供程序的查找键。</param>
        <param name="url">节点在站点中表示的页的 URL。</param>
        <param name="title">节点的标签，通常由导航控件显示。</param>
        <param name="description">该节点所代表的页的说明。</param>
        <param name="roles">允许查看 <see cref="T:System.Web.SiteMapNode" /> 所代表的页的角色的 <see cref="T:System.Collections.IList" />。</param>
        <param name="attributes">用于初始化 <see cref="T:System.Web.SiteMapNode" /> 的附加特性的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <param name="explicitResourceKeys">用于本地化的显式资源键的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <param name="implicitResourceKey">用于本地化的隐式资源键。</param>
        <summary>使用管理该节点的指定站点地图提供程序、URL、标题、描述、角色、附加特性以及用于本地化的显式和隐式的资源键来初始化 <see cref="T:System.Web.SiteMapNode" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类，该类是默认值<xref:System.Web.SiteMapProvider>提供程序实现的 ASP.NET 中，使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性用作查找键，如果提供的节点 （如果 URL 是未提供为该节点生成的跟踪标识符）。 因此，任何<xref:System.Web.SiteMapNode>对象，提供一个 URL，并由<xref:System.Web.XmlSiteMapProvider>提供程序的范围内，必须具有唯一的 URL。  
  
 <xref:System.Collections.Specialized.NameValueCollection>的集合属性<xref:System.Web.SiteMapNode>创建可通过<xref:System.Web.SiteMapNode.Attributes%2A>属性，并简化了到站点，可以轻松地应用其他属性将节点映射并扩展其功能而不用派生的自定义类执行此操作。  
  
 提供<xref:System.Collections.IList>角色，以提供一组可以查看的节点的角色的集合时<xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A>属性返回`true`。  有关详情，请参阅<xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A>。  
  
 <xref:System.Web.XmlSiteMapProvider>提供程序使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性用作查找键。 因此，任何<xref:System.Web.SiteMapNode>所使用的<xref:System.Web.XmlSiteMapProvider>提供程序的范围内，必须具有唯一的 URL。  
  
 如果没有`title`或`description`提供，则调用<xref:System.Web.SiteMapNode.Title%2A>或<xref:System.Web.SiteMapNode.Description%2A>属性返回<xref:System.String.Empty?displayProperty=nameWithType>字段。  
  
 若要以编程方式指定本地化的资源，可以设置的值`implicitResourceKey`为唯一的名称将用于标识的节点或集的本地化的资源`explicitResourceKeys`到<xref:System.Collections.Specialized.NameValueCollection>的集合`name/value`对，其中`name`是节点属性或自定义属性来本地化和`value`包含的节点属性或自定义属性的本地化值。 然后可以在相应的.resx 文件中设置的本地化的值。 详细了解如何将本地化<xref:System.Web.SiteMapNode.Title%2A>， <xref:System.Web.SiteMapNode.Description%2A>，和任何自定义属性<xref:System.Web.SiteMapNode>对象，请参阅[如何：本地化的站点地图数据](https://msdn.microsoft.com/library/be63b4a0-fb82-44b4-bdbb-df1d2548cedc)。 有关的语法要求`explicitResourceKeys`集合，请参阅<xref:System.Collections.Specialized.NameValueCollection>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.SiteMapProvider" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="key" /> 为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.SiteMapProvider.SecurityTrimmingEnabled" />
        <altmember cref="M:System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Specialized.NameValueCollection Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Protected Property Attributes As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Specialized::NameValueCollection ^ Attributes { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.NameValueCollection with get, set" Usage="System.Web.SiteMapNode.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>除了为 <see cref="T:System.Web.SiteMapNode" /> 类定义的强类型属性以外，获取或设置附加特性的集合。</summary>
        <value>除 <see cref="T:System.Collections.Specialized.NameValueCollection" />、<see cref="T:System.Web.SiteMapNode" />、<see cref="P:System.Web.SiteMapNode.Title" /> 和 <see cref="P:System.Web.SiteMapNode.Description" /> 之外的 <see cref="P:System.Web.SiteMapNode.Url" /> 的附加特性的 <see cref="P:System.Web.SiteMapNode.Roles" />；否则，如果不存在这些附加特性，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.Attributes%2A>集合通常用于需要将其他特性应用到站点地图节点，但不是希望为此派生的自定义类。  
  
 受保护<xref:System.Web.SiteMapNode.Attributes%2A>属性不会执行与相同的方式<xref:System.Web.SiteMapNode.Title%2A>或<xref:System.Web.SiteMapNode.Description%2A>属性。 对于本地化支持，开发人员必须使用的默认索引器。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
        <altmember cref="M:System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNodeCollection ChildNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChildNodes As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNodeCollection ^ ChildNodes { System::Web::SiteMapNodeCollection ^ get(); void set(System::Web::SiteMapNodeCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.SiteMapNodeCollection with get, set" Usage="System.Web.SiteMapNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置来自关联的<see cref="T:System.Web.SiteMapProvider" /> 提供程序的当前 <see cref="T:System.Web.SiteMapNode" /> 对象的所有子节点。</summary>
        <value>如果当前节点中存在子节点，则为这些子节点的一个只读 <see cref="T:System.Web.SiteMapNodeCollection" />；否则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode>依赖于<xref:System.Web.SiteMapProvider>是与相关联来跟踪与站点图中的其他节点的关系。 此属性会调用<xref:System.Web.SiteMapProvider.GetChildNodes%2A>方法，传递到其自身，若要检索的引用<xref:System.Web.SiteMapNodeCollection>。  
  
 如果启用了安全修整，返回当前用户有权查看的节点。 如果不允许用户以查看任何子节点，则返回空集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建作为当前节点副本的新节点。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.SiteMapNode&#xA;override this.Clone : unit -&gt; System.Web.SiteMapNode" Usage="siteMapNode.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建作为当前节点副本的新节点。</summary>
        <returns>作为当前节点副本的新节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用<xref:System.Web.SiteMapNode.Clone%2A>参数设置为方法`false`。 提供程序， <xref:System.Web.SiteMapNode.Title%2A>， <xref:System.Web.SiteMapNode.Url%2A>， <xref:System.Web.SiteMapNode.Description%2A>，和<xref:System.Web.SiteMapNode.Key%2A>复制属性。 <xref:System.Web.SiteMapNode.Roles%2A>和<xref:System.Web.SiteMapNode.Attributes%2A>集合复制到新的集合。 不会克隆祖先和子节点。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapNode.Clone(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode Clone (bool cloneParentNodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SiteMapNode Clone(bool cloneParentNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.Clone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (cloneParentNodes As Boolean) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::SiteMapNode ^ Clone(bool cloneParentNodes);" />
      <MemberSignature Language="F#" Value="abstract member Clone : bool -&gt; System.Web.SiteMapNode&#xA;override this.Clone : bool -&gt; System.Web.SiteMapNode" Usage="siteMapNode.Clone cloneParentNodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneParentNodes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneParentNodes">若要克隆当前节点的所有父节点和祖先节点，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>创建作为当前节点的副本的新副本，并根据需要克隆当前节点的所有父节点和祖先节点。</summary>
        <returns>作为当前节点副本的新节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`cloneParentNodes`参数是`true`，则<xref:System.Web.SiteMapNode.Clone%2A>方法以递归方式克隆所有直接祖先节点，并将它们与当前克隆的节点关联。 子节点不会克隆。  
  
 <xref:System.Web.SiteMapNode.Roles%2A>和<xref:System.Web.SiteMapNode.Attributes%2A>集合应用于新的集合。  
  
   
  
## Examples  
 下面的代码示例演示如何调用<xref:System.Web.SiteMapNode.Clone%2A>方法从当前的节点创建重复的站点地图节点。 `ExpandForumPaths`方法注册为处理<xref:System.Web.SiteMap.SiteMapResolve>事件。 它使用<xref:System.Web.SiteMapNode.Clone%2A>方法以创建当前站点地图节点的工作副本，修改属性基于个性化设置数据，并返回工作副本。  
  
 [!code-csharp[System.Web.SiteMap.SiteMapResolve#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/CS/sitemapresolve1cs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMap.SiteMapResolve#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/VB/sitemapresolve1vb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapNode.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.SiteMapNode.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.SiteMapNode" /> 的描述。</summary>
        <value>一个表示节点的描述的字符串；否则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虽然<xref:System.Web.SiteMapNode.Title%2A>的<xref:System.Web.SiteMapNode>一些导航控件用作标签或超链接，<xref:System.Web.SiteMapNode.Description%2A>用作工具提示元素的鼠标事件。  
  
 本地化的值<xref:System.Web.SiteMapNode.Description%2A>当返回属性<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性是`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
        <altmember cref="P:System.Web.SiteMapNode.Title" />
        <altmember cref="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
        <altmember cref="M:System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)" />
        <altmember cref="P:System.Web.SiteMapProvider.EnableLocalization" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="siteMapNode.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">与当前 <see cref="T:System.Web.SiteMapNode" /> 比较的对象。</param>
        <summary>获取一个值，该值指示当前的 <see cref="T:System.Web.SiteMapNode" /> 是否与指定对象相同。</summary>
        <returns>如果 <paramref name="obj" /> 既是 <see cref="T:System.Web.SiteMapNode" /> 又与当前 <see cref="T:System.Web.SiteMapNode" /> 完全相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个<xref:System.Web.SiteMapNode>对象是否视作相等，如果满足两个以下条件：  
  
-   这两<xref:System.Web.SiteMapNode>对象具有相同的值为<xref:System.Web.SiteMapNode.Key%2A>属性。  
  
-   这两者的区域性不变，不区分大小写的比较<xref:System.Web.SiteMapNode.Url%2A>属性返回`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Object.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetAllNodes">
      <MemberSignature Language="C#" Value="public System.Web.SiteMapNodeCollection GetAllNodes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.SiteMapNodeCollection GetAllNodes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.GetAllNodes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNodes () As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::SiteMapNodeCollection ^ GetAllNodes();" />
      <MemberSignature Language="F#" Value="member this.GetAllNodes : unit -&gt; System.Web.SiteMapNodeCollection" Usage="siteMapNode.GetAllNodes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索属于调用节点的子代的所有 <see cref="T:System.Web.SiteMapNode" /> 对象的只读集合，而不管分离程度如何。</summary>
        <returns>表示当前提供程序范围内的某个 <see cref="T:System.Web.SiteMapNodeCollection" /> 的所有子代的只读 <see cref="T:System.Web.SiteMapNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法检索直接子节点和所有及其子节点，以递归方式。  
  
   
  
## Examples  
 下面的代码示例演示如何检索的所有子节点<xref:System.Web.SiteMap.RootNode%2A>与<xref:System.Web.SiteMapNode.GetAllNodes%2A>方法。  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.RootNode" />
        <altmember cref="T:System.Web.SiteMapNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView (System.Web.UI.WebControls.SiteMapDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView(class System.Web.UI.WebControls.SiteMapDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataSourceView (owner As SiteMapDataSource, viewName As String) As SiteMapDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::SiteMapDataSourceView ^ GetDataSourceView(System::Web::UI::WebControls::SiteMapDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="member this.GetDataSourceView : System.Web.UI.WebControls.SiteMapDataSource * string -&gt; System.Web.UI.WebControls.SiteMapDataSourceView" Usage="siteMapNode.GetDataSourceView (owner, viewName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SiteMapDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">视图所关联的 <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> 控件。</param>
        <param name="viewName">视图的名称。</param>
        <summary>检索与当前节点关联的 <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> 对象。</summary>
        <returns>当前节点的指定名称的 <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNode.GetHierarchicalDataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetExplicitResourceString">
      <MemberSignature Language="C#" Value="protected string GetExplicitResourceString (string attributeName, string defaultValue, bool throwIfNotFound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetExplicitResourceString(string attributeName, string defaultValue, bool throwIfNotFound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetExplicitResourceString (attributeName As String, defaultValue As String, throwIfNotFound As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetExplicitResourceString(System::String ^ attributeName, System::String ^ defaultValue, bool throwIfNotFound);" />
      <MemberSignature Language="F#" Value="member this.GetExplicitResourceString : string * string * bool -&gt; string" Usage="siteMapNode.GetExplicitResourceString (attributeName, defaultValue, throwIfNotFound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.String" />
        <Parameter Name="throwIfNotFound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeName">要本地化的 <see cref="T:System.Web.SiteMapNode" /> 特性。</param>
        <param name="defaultValue">未找到匹配资源时返回的默认值。</param>
        <param name="throwIfNotFound">设置为 <see langword="true" /> 则在以下情况下引发 <see cref="T:System.InvalidOperationException" />：为 <paramref name="attributeName" /> 定义了显式的资源，<paramref name="defaultValue" /> 为 <see langword="null" />，并且未找到本地化的值；否则为 <see langword="false" />。</param>
        <summary>检索本地化的字符串，此方法基于以下三个参数：要本地化的 <see cref="T:System.Web.SiteMapNode" /> 特性，未找到资源时使用的默认字符串，以及指示在未找到资源时是否引发异常的布尔值。</summary>
        <returns>表示本地化特性的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>方法中调用`get`访问器<xref:System.Web.SiteMapNode.Title%2A>属性，<xref:System.Web.SiteMapNode.Description%2A>属性，以及任何自定义特性中定义的<xref:System.Web.SiteMapNode.Attributes%2A>属性。 <xref:System.Web.SiteMapProvider>依据对象<xref:System.Web.SiteMapNode>跟踪必须具有其<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性设置为`true`为<xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>方法返回的已本地化的字符串。 如果<xref:System.Web.SiteMapProvider.EnableLocalization%2A>设置为`false`，则不执行本地化和<xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>永远不会调用方法。  
  
 <xref:System.Web.SiteMapNode.Title%2A>属性，<xref:System.Web.SiteMapNode.Description%2A>属性，以及在中定义任何自定义特性<xref:System.Web.SiteMapNode.Attributes%2A>属性首次调用<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法。 如果它返回`null`，则<xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>方法调用使用了`defaultValue`设置为默认值的值 （假设已定义） 的显式资源表达式并`throwIfNotFound`设置为`true`。  
  
> [!NOTE]
>  <xref:System.Web.XmlSiteMapProvider>类有这样一个限制，<xref:System.Web.SiteMapNode>对象不能定义隐式资源表达式和属性的显式资源表达式。 但是，自定义提供程序实现可以选择允许。  
  
 <xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>方法使用<xref:System.Collections.Specialized.NameValueCollection>的资源集合键<xref:System.Web.SiteMapNode>对象使用进行初始化。 如果未指定的资源键的集合，<xref:System.Web.SiteMapNode.GetExplicitResourceString%2A>返回`null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="attributeName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">未找到匹配的资源对象，并且 <paramref name="throwIfNotFound" /> 为 <see langword="true" />。</exception>
        <altmember cref="P:System.Web.SiteMapProvider.EnableLocalization" />
        <altmember cref="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="siteMapNode.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Web.SiteMapNode" /> 对象的哈希代码。</summary>
        <returns>表示哈希代码的 32 位带符号整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用查找键生成哈希代码 (也就是说，哈希的<xref:System.Web.SiteMapNode.Key%2A>属性) 的站点地图节点。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Key" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalDataSourceView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.GetHierarchicalDataSourceView" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHierarchicalDataSourceView () As SiteMapHierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::SiteMapHierarchicalDataSourceView ^ GetHierarchicalDataSourceView();" />
      <MemberSignature Language="F#" Value="member this.GetHierarchicalDataSourceView : unit -&gt; System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" Usage="siteMapNode.GetHierarchicalDataSourceView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索与当前节点关联的 <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" /> 对象。</summary>
        <returns>当前节点的 <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNode.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetImplicitResourceString">
      <MemberSignature Language="C#" Value="protected string GetImplicitResourceString (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetImplicitResourceString(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetImplicitResourceString (attributeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetImplicitResourceString(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="member this.GetImplicitResourceString : string -&gt; string" Usage="siteMapNode.GetImplicitResourceString attributeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">要本地化的 <see cref="T:System.Web.SiteMapNode" /> 特性。</param>
        <summary>获取一个本地化的字符串，此方法基于以下信息：跟踪 <see cref="T:System.Web.SiteMapNode" /> 的 <see cref="T:System.Web.SiteMapProvider" /> 所指定的特性名称和 <see cref="P:System.Web.SiteMapProvider.ResourceKey" /> 属性。</summary>
        <returns>表示本地化特性的字符串。 默认值为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法调用中的 get 访问器<xref:System.Web.SiteMapNode.Title%2A>属性，<xref:System.Web.SiteMapNode.Description%2A>属性，以及任何自定义特性中定义的<xref:System.Web.SiteMapNode.Attributes%2A>属性。 <xref:System.Web.SiteMapProvider>提供程序依据<xref:System.Web.SiteMapNode>跟踪对象必须具有其<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性设置为`true`为<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>要在调用方法。 如果<xref:System.Web.SiteMapProvider.EnableLocalization%2A>设置为`false`，则不执行本地化和<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>永远不会调用方法。  
  
 如果<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法返回不为空的字符串，这将成为的值<xref:System.Web.SiteMapNode.Title%2A>， <xref:System.Web.SiteMapNode.Description%2A>，或自定义特性属性。  
  
 <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>方法使用的值<xref:System.Web.SiteMapNode.ResourceKey%2A>要本地化该属性的属性。 如果<xref:System.Web.SiteMapNode.ResourceKey%2A>未指定，则<xref:System.Web.SiteMapNode.GetImplicitResourceString%2A>返回`null`。  
  
> [!NOTE]
>  <xref:System.Web.XmlSiteMapProvider>类有这样一个限制，<xref:System.Web.SiteMapNode>对象不能定义隐式资源表达式和属性的显式资源表达式。 但是，自定义提供程序实现可以选择允许。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="attributeName" /> 为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.SiteMapProvider.EnableLocalization" />
        <altmember cref="M:System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildNodes : bool" Usage="System.Web.SiteMapNode.HasChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，它指示当前 <see cref="T:System.Web.SiteMapNode" /> 是否具有子节点。</summary>
        <value>如果该节点具有子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是调用一个便捷属性<xref:System.Web.SiteMapNode.ChildNodes%2A>属性在内部，因此它不会执行更好地于直接调用<xref:System.Web.SiteMapNode.ChildNodes%2A>属性并检查结果是否为空。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="IsAccessibleToUser">
      <MemberSignature Language="C#" Value="public virtual bool IsAccessibleToUser (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAccessibleToUser(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.IsAccessibleToUser(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAccessibleToUser (context As HttpContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAccessibleToUser(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member IsAccessibleToUser : System.Web.HttpContext -&gt; bool&#xA;override this.IsAccessibleToUser : System.Web.HttpContext -&gt; bool" Usage="siteMapNode.IsAccessibleToUser context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">包含用户信息的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>获取一个值，该值指示指定的站点地图节点是否可由用户在指定的上下文中查看。</summary>
        <returns>如果满足下列任一条件，则为 <see langword="true" />：启用了安全修整，并且当前用户至少是可以通过访问来查看站点地图节点的一个角色的成员；在当前应用程序的授权元素中明确授予了当前用户对所请求节点的 URL 的访问权限，并且该 URL 位于应用程序的目录结构内；当前线程具有对所请求节点的 URL 拥有文件访问权限的关联 <see cref="T:System.Security.Principal.WindowsIdentity" />，并且该 URL 位于应用程序的目录结构内；或者未启用安全修整，因而允许任何用户查看站点地图节点。如果不满足上述任一条件，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.IsAccessibleToUser%2A>方法调用<xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>提供程序的节点是与之相关联并传递指定方法`context`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的上下文为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.SiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)" />
        <altmember cref="P:System.Web.SiteMapProvider.SecurityTrimmingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsDescendantOf">
      <MemberSignature Language="C#" Value="public virtual bool IsDescendantOf (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDescendantOf(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.IsDescendantOf(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDescendantOf (node As SiteMapNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDescendantOf(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="abstract member IsDescendantOf : System.Web.SiteMapNode -&gt; bool&#xA;override this.IsDescendantOf : System.Web.SiteMapNode -&gt; bool" Usage="siteMapNode.IsDescendantOf node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node"><see cref="T:System.Web.SiteMapNode" /> 用于检查当前节点是否为子节点或子代节点。</param>
        <summary>获取一个值，该值指示当前站点地图节点是否为指定节点的子节点或直接子代节点。</summary>
        <returns>如果当前节点是指定节点的子节点或子代节点，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.SiteMapNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">一个字符串，标识要检索的特性或资源字符串。</param>
        <summary>根据指定的键获取或设置一个来自 <see cref="P:System.Web.SiteMapNode.Attributes" /> 集合的自定义特性或资源字符串。</summary>
        <value>由 <paramref name="key" /> 标识的自定义特性或资源字符串；否则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.Item%2A>属性是一个索引器，首先确定是否提供程序，用于跟踪<xref:System.Web.SiteMapNode>对象支持本地化。 如果是这样，<xref:System.Web.SiteMapNode.Item%2A>调用  
  
 <xref:System.Web.SiteMapNode.GetImplicitResourceString%2A> 方法，传递`key`参数。 如果返回没有本地化的文本，则<xref:System.Web.SiteMapNode.Item%2A>调用  
  
 <xref:System.Web.SiteMapNode.GetExplicitResourceString%2A> 方法。  
  
 如果返回没有本地化的文本，或提供程序不支持本地化<xref:System.Web.SiteMapNode.Item%2A>尝试返回元素<xref:System.Web.SiteMapNode.Attributes%2A>集合，并使用指定`key`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="M:System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
        <altmember cref="P:System.Web.SiteMapNode.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public string Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Key" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Key { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : string" Usage="System.Web.SiteMapNode.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字符串，该字符串表示站点地图节点的查找键。</summary>
        <value>一个表示查找键的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在内部，站点导航类可以使用此查找键，搜索为站点地图节点，以及节点之间建立关系时。 <xref:System.Web.SiteMapProvider>类还公开<xref:System.Web.SiteMapProvider.FindSiteMapNodeFromKey%2A>方法作为一种方法用于获取对引用<xref:System.Web.SiteMapNode>与键值匹配的对象。  
  
 用于密钥的特定值是特定于; 提供程序但是，它保证不是`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapProvider.FindSiteMapNodeFromKey(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ NextSibling { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Web.SiteMapNode" Usage="System.Web.SiteMapNode.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与当前节点位于相同层级、相对于 <see cref="P:System.Web.SiteMapNode.ParentNode" /> 属性的下一个 <see cref="T:System.Web.SiteMapNode" /> 节点（如果存在）。</summary>
        <value>位于父节点之下、当前节点之后的下一个相邻 <see cref="T:System.Web.SiteMapNode" />；否则，如果不存在父节点，或此节点之后没有节点，或者启用了安全修整并且用户不能查看父节点或下一个同级节点，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.NextSibling%2A>属性假设<xref:System.Web.SiteMapProvider>对象实现其内部集合，这样当父节点检索其<xref:System.Web.SiteMapNode.ChildNodes%2A>属性，节点位于相同的顺序中站点图的显示方式。 如果你使用.NET Framework 集合类的站点地图提供程序实现中，选择实现的集合<xref:System.Collections.IList>接口，如<xref:System.Collections.ArrayList>或<xref:System.Collections.Specialized.ListDictionary>类。 如果选择不实现的集合<xref:System.Collections.IList>接口，如<xref:System.Collections.Hashtable>类，来执行简单的站点导航操作可能会发生意外的结果。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.PreviousSibling" />
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode ParentNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ParentNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ ParentNode { System::Web::SiteMapNode ^ get(); void set(System::Web::SiteMapNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Web.SiteMapNode with get, set" Usage="System.Web.SiteMapNode.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置作为当前节点的父节点的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <value>父 <see cref="T:System.Web.SiteMapNode" />；否则，如果启用了安全修整并且用户不能查看父节点，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode>类依赖于它与之关联到站点地图中的其他节点跟踪其关系的站点映射提供程序。 <xref:System.Web.SiteMapNode.ParentNode%2A>属性调用<xref:System.Web.SiteMapProvider.GetParentNode%2A>方法，传递到其自身，检索父引用<xref:System.Web.SiteMapNode>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="P:System.Web.SiteMapNode.RootNode" />
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ PreviousSibling { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : System.Web.SiteMapNode" Usage="System.Web.SiteMapNode.PreviousSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与当前节点位于相同层级、相对于 <see cref="P:System.Web.SiteMapNode.ParentNode" /> 对象的前一个 <see cref="T:System.Web.SiteMapNode" /> 对象（如果存在）。</summary>
        <value>位于父节点之下、当前节点之前的前一个相邻 <see cref="T:System.Web.SiteMapNode" />；否则，如果不存在父节点，或此节点之前没有节点，或者启用了安全修整并且用户不能查看父节点或前一个同级节点，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.PreviousSibling%2A>属性假定站点地图提供程序实现其内部集合，这样当父节点检索其<xref:System.Web.SiteMapNode.ChildNodes%2A>对象时，节点位于相同的顺序中站点图的显示方式。 如果使用.NET Framework 集合类的实现中<xref:System.Web.SiteMapProvider>提供程序，选择实现的集合<xref:System.Collections.IList>接口，如<xref:System.Collections.ArrayList>或<xref:System.Collections.Specialized.ListDictionary>类。 如果选择不实现的集合<xref:System.Collections.IList>接口，如<xref:System.Collections.Hashtable>类，来执行简单的站点导航操作可能会发生意外的结果。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.NextSibling" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.SiteMapProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As SiteMapProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SiteMapProvider ^ Provider { System::Web::SiteMapProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.SiteMapProvider" Usage="System.Web.SiteMapNode.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取跟踪 <see cref="T:System.Web.SiteMapNode" /> 对象的 <see cref="T:System.Web.SiteMapProvider" /> 提供程序。</summary>
        <value>跟踪 <see cref="T:System.Web.SiteMapProvider" /> 的 <see cref="T:System.Web.SiteMapNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 始终返回一个提供程序;传递`null`到<xref:System.Web.SiteMapNode>构造函数会导致<xref:System.ArgumentException>异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SiteMapProvider" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.SiteMapNode.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否可以修改站点地图节点。</summary>
        <value>如果可以修改站点地图节点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个<xref:System.Web.SiteMapNode>对象是可修改默认情况下。  
  
> [!NOTE]
>  由返回的所有节点<xref:System.Web.XmlSiteMapProvider>是只读的默认情况下。  
  
 <xref:System.Web.SiteMapNode.Attributes%2A>， <xref:System.Web.SiteMapNode.ChildNodes%2A>， <xref:System.Web.SiteMapNode.Description%2A>， <xref:System.Web.SiteMapNode.ParentNode%2A>， <xref:System.Web.SiteMapNode.Roles%2A>， <xref:System.Web.SiteMapNode.Title%2A>，以及<xref:System.Web.SiteMapNode.Url%2A>属性赋值函数检查<xref:System.Web.SiteMapNode.ReadOnly%2A>然后再尝试修改站点地图节点的属性的属性。 如果节点是只读的当调用赋值函数时，<xref:System.Web.SiteMapNode>对象，则会引发<xref:System.InvalidOperationException>异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.XmlSiteMapProvider" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string with get, set" Usage="System.Web.SiteMapNode.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于本地化 <see cref="T:System.Web.SiteMapNode" /> 的资源键。</summary>
        <value>一个包含资源键名称的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 set 访问器的<xref:System.Web.SiteMapNode.ResourceKey%2A>属性时<xref:System.Web.SiteMapNode.ReadOnly%2A>属性是`true`将导致<xref:System.InvalidOperationException>异常。 若要设置<xref:System.Web.SiteMapNode.ResourceKey%2A>有关<xref:System.Web.SiteMapNode>对象，请使用<xref:System.Web.SiteMapNode.%23ctor%2A>构造函数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
        <altmember cref="M:System.Web.SiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String,System.Collections.IList,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.String)" />
        <altmember cref="P:System.Web.SiteMapProvider.ResourceKey" />
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C#" Value="public System.Collections.IList Roles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Roles" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Roles" />
      <MemberSignature Language="VB.NET" Value="Public Property Roles As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Roles { System::Collections::IList ^ get(); void set(System::Collections::IList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Roles : System.Collections.IList with get, set" Usage="System.Web.SiteMapNode.Roles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Web.SiteMapNode" /> 对象关联的角色集合，这些角色用于安全修整期间。</summary>
        <value>角色的 <see cref="T:System.Collections.IList" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果启用了安全修整，站点地图提供程序生成的当前用户有权查看，部分基于中是否包含当前用户分配的角色的节点的节点树<xref:System.Web.SiteMapNode.Roles%2A>集合。 URL 授权和文件授权还用于确定用户是否有权访问<xref:System.Web.SiteMapNode>对象。 有关授权的详细信息，请参阅[ASP.NET 授权](https://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05)。  
  
 可以使用<xref:System.Web.SiteMapNode.%23ctor%2A>构造函数提供一系列角色到<xref:System.Web.SiteMapNode>时首次创建对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="P:System.Web.SiteMapProvider.SecurityTrimmingEnabled" />
        <altmember cref="T:System.Web.Security.UrlAuthorizationModule" />
        <altmember cref="T:System.Web.Security.FileAuthorizationModule" />
        <related type="Article" href="https://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">ASP.NET 授权</related>
      </Docs>
    </Member>
    <Member MemberName="RootNode">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode RootNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode RootNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.RootNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ RootNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNode : System.Web.SiteMapNode" Usage="System.Web.SiteMapNode.RootNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取站点地图提供程序层次结构中的根提供程序的根节点。 如果不存在提供程序层次结构，则 <see cref="P:System.Web.SiteMapNode.RootNode" /> 属性将获取当前提供程序的根节点。</summary>
        <value>一个表示站点导航结构的根节点的 <see cref="T:System.Web.SiteMapNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode>类依赖于它与之关联到站点地图中的其他节点跟踪其关系的站点映射提供程序。 <xref:System.Web.SiteMapNode.RootNode%2A>属性调用<xref:System.Web.SiteMapProvider.RootNode%2A>根提供程序的属性 (<xref:System.Web.SiteMapProvider.RootProvider%2A>属性) 来检索根节点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">无法从根提供程序检索根节点。</exception>
        <altmember cref="P:System.Web.SiteMapNode.ParentNode" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建作为当前节点副本的新节点。 有关此成员的说明，请参见 <see cref="M:System.ICloneable.Clone" />。</summary>
        <returns>作为当前节点副本的新节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.Roles%2A>和<xref:System.Web.SiteMapNode.Attributes%2A>集合复制到新的集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchyData.GetChildren">
      <MemberSignature Language="C#" Value="System.Web.UI.IHierarchicalEnumerable IHierarchyData.GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable System.Web.UI.IHierarchyData.GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren" />
      <MemberSignature Language="VB.NET" Value="Function GetChildren () As IHierarchicalEnumerable Implements IHierarchyData.GetChildren" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::IHierarchicalEnumerable ^ System.Web.UI.IHierarchyData.GetChildren() = System::Web::UI::IHierarchyData::GetChildren;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IHierarchyData.GetChildren</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索当前项的分层子数据项。 有关此成员的说明，请参见 <see cref="M:System.Web.UI.IHierarchyData.GetChildren" />。</summary>
        <returns>表示层次结构中当前项直接子项的 <see cref="T:System.Web.UI.IHierarchicalEnumerable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23IHierarchyData%23GetChildren%2A>方法会委托给<xref:System.Web.SiteMapNode.ChildNodes%2A>属性。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.IHierarchyData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetParent" />
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchyData.GetParent">
      <MemberSignature Language="C#" Value="System.Web.UI.IHierarchyData IHierarchyData.GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.IHierarchyData System.Web.UI.IHierarchyData.GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetParent" />
      <MemberSignature Language="VB.NET" Value="Function GetParent () As IHierarchyData Implements IHierarchyData.GetParent" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::IHierarchyData ^ System.Web.UI.IHierarchyData.GetParent() = System::Web::UI::IHierarchyData::GetParent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IHierarchyData.GetParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索当前项的分层父级。 有关此成员的说明，请参见 <see cref="M:System.Web.UI.IHierarchyData.GetParent" />。</summary>
        <returns>表示层次结构中当前项父级的 <see cref="T:System.Web.UI.IHierarchicalEnumerable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23IHierarchyData%23GetParent%2A>方法会委托给<xref:System.Web.SiteMapNode.ParentNode%2A>属性。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.IHierarchyData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren" />
        <altmember cref="M:System.Web.UI.IHierarchyData.GetParent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchyData.HasChildren">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IHierarchyData.HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#HasChildren" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasChildren As Boolean Implements IHierarchyData.HasChildren" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IHierarchyData::HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IHierarchyData.HasChildren</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示当前 <see cref="T:System.Web.SiteMapNode" /> 对象是否具有任何子节点。 有关此成员的说明，请参阅 <see cref="P:System.Web.UI.IHierarchyData.HasChildren" />。</summary>
        <value>如果该节点具有子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23IHierarchyData%23HasChildren%2A>属性委托给<xref:System.Web.SiteMapNode.HasChildNodes%2A>属性。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.IHierarchyData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.HasChildNodes" />
        <altmember cref="M:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchyData.Item">
      <MemberSignature Language="C#" Value="object System.Web.UI.IHierarchyData.Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Item" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item As Object Implements IHierarchyData.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::IHierarchyData::Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IHierarchyData.Item</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取分层数据项。 有关此成员的说明，请参阅 <see cref="P:System.Web.UI.IHierarchyData.Item" />。</summary>
        <value>一个层次结构数据节点对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.IHierarchyData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchyData.Path">
      <MemberSignature Language="C#" Value="string System.Web.UI.IHierarchyData.Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Path" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Path As String Implements IHierarchyData.Path" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::IHierarchyData::Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IHierarchyData.Path</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取分层数据项的路径。 有关此成员的说明，请参阅 <see cref="P:System.Web.UI.IHierarchyData.Path" />。</summary>
        <value>数据项的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23IHierarchyData%23Path%2A>属性委托给<xref:System.Web.SiteMapNode.Url%2A>属性。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.IHierarchyData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
        <altmember cref="P:System.Web.UI.IHierarchyData.Path" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchyData.Type">
      <MemberSignature Language="C#" Value="string System.Web.UI.IHierarchyData.Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#IHierarchyData#Type" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Type As String Implements IHierarchyData.Type" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::IHierarchyData::Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IHierarchyData.Type</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示分层数据项的类型名称的字符串。 有关此成员的说明，请参见 <see cref="P:System.Web.UI.IHierarchyData.Type" />。</summary>
        <value>名为的字符串<c>"SiteMapNode"</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.IHierarchyData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.INavigateUIData.Description">
      <MemberSignature Language="C#" Value="string System.Web.UI.INavigateUIData.Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.INavigateUIData.Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Description" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Description As String Implements INavigateUIData.Description" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::INavigateUIData::Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.INavigateUIData.Description" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.INavigateUIData.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取站点地图节点的 <see cref="P:System.Web.SiteMapNode.Description" /> 属性。 有关此成员的说明，请参见 <see cref="P:System.Web.UI.INavigateUIData.Description" />。</summary>
        <value>显示为工具提示中导航控件节点的文本；如果未设置 <see cref="P:System.Web.SiteMapNode.Description" />，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23INavigateUIData%23Description%2A>属性委托给<xref:System.Web.SiteMapNode.Description%2A>属性。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.INavigateUIData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.INavigateUIData.Description" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.INavigateUIData.Name">
      <MemberSignature Language="C#" Value="string System.Web.UI.INavigateUIData.Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.INavigateUIData.Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Name" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Name As String Implements INavigateUIData.Name" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::INavigateUIData::Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.INavigateUIData.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.INavigateUIData.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取站点地图节点的 <see cref="P:System.Web.SiteMapNode.Title" /> 属性。 有关此成员的说明，请参见 <see cref="P:System.Web.UI.INavigateUIData.Name" />。</summary>
        <value>为一个导航控件的节点显示的文本；否则，如果没有为节点设置 <see cref="P:System.Web.SiteMapNode.Title" />，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23INavigateUIData%23Name%2A>属性委托给<xref:System.Web.SiteMapNode.Title%2A>属性。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.INavigateUIData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.INavigateUIData" />
        <altmember cref="P:System.Web.UI.INavigateUIData.Name" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.INavigateUIData.NavigateUrl">
      <MemberSignature Language="C#" Value="string System.Web.UI.INavigateUIData.NavigateUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.INavigateUIData.NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#INavigateUIData#NavigateUrl" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property NavigateUrl As String Implements INavigateUIData.NavigateUrl" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::INavigateUIData::NavigateUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.INavigateUIData.NavigateUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.INavigateUIData.NavigateUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取站点地图节点的 <see cref="P:System.Web.SiteMapNode.Url" /> 属性。 有关此成员的说明，请参见 <see cref="P:System.Web.UI.INavigateUIData.NavigateUrl" />。</summary>
        <value>单击节点时要导航到的 URL；如果没有为节点设置 <see cref="P:System.Web.SiteMapNode.Url" />，则为 <see cref="F:System.String.Empty" />（）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23INavigateUIData%23NavigateUrl%2A>属性委托给<xref:System.Web.SiteMapNode.Url%2A>属性。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.INavigateUIData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.INavigateUIData.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.INavigateUIData.Value">
      <MemberSignature Language="C#" Value="string System.Web.UI.INavigateUIData.Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.INavigateUIData.Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.System#Web#UI#INavigateUIData#Value" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Value As String Implements INavigateUIData.Value" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::INavigateUIData::Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.INavigateUIData.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.INavigateUIData.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取站点地图节点的 <see cref="P:System.Web.SiteMapNode.Title" /> 属性。 有关此成员的说明，请参阅 <see cref="P:System.Web.UI.INavigateUIData.Value" />。</summary>
        <value>未显示的值；否则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.System%23Web%23UI%23INavigateUIData%23Value%2A>属性委托给<xref:System.Web.SiteMapNode.Title%2A>属性，用于存储有关导航节点，如用于处理回发事件的数据的其他数据。  
  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.SiteMapNode> 实例强制转换为 <xref:System.Web.UI.INavigateUIData> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.INavigateUIData.Value" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.SiteMapNode.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.SiteMapNode" /> 对象的标题。</summary>
        <value>一个表示节点标题的字符串。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.Title%2A>导航控件使用属性来呈现的节点，而不是使用的标签<xref:System.Web.SiteMapNode.Url%2A>属性，而<xref:System.Web.SiteMapNode.Description%2A>属性用作鼠标悬停事件的工具提示元素。  
  
 本地化的值<xref:System.Web.SiteMapNode.Title%2A>当返回属性<xref:System.Web.SiteMapProvider.EnableLocalization%2A>属性是`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
        <altmember cref="P:System.Web.SiteMapNode.Description" />
        <altmember cref="M:System.Web.SiteMapNode.GetImplicitResourceString(System.String)" />
        <altmember cref="M:System.Web.SiteMapNode.GetExplicitResourceString(System.String,System.String,System.Boolean)" />
        <altmember cref="P:System.Web.SiteMapProvider.EnableLocalization" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="siteMapNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Web.SiteMapNode" /> 类的此实例的值转换为其等效的字符串表示形式。</summary>
        <returns>此 <see cref="T:System.Web.SiteMapNode" /> 的值的字符串表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNode.ToString%2A>方法将返回<xref:System.Web.SiteMapNode.Title%2A>属性的<xref:System.Web.SiteMapNode>对象。  
  
   
  
## Examples  
 下面的代码示例演示了如何比较<xref:System.Web.SiteMapNode.ToString%2A>方法<xref:System.Web.SiteMapNode.Url%2A>并<xref:System.Web.SiteMapNode.Title%2A>的属性<xref:System.Web.SiteMapNode>对象。  
  
 [!code-aspx-csharp[System.Web.SiteMap_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_2/CS/catalog2cs.aspx#1)]
 [!code-aspx-vb[System.Web.SiteMap_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_2/VB/catalog2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNode.Url" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.SiteMapNode.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.SiteMapNode" /> 对象所代表的页的 URL。</summary>
        <value>该节点所代表的页的 URL。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.XmlSiteMapProvider>类，该类是 ASP.NET 的默认站点地图提供程序实现，使用<xref:System.Web.SiteMapNode.Url%2A?displayProperty=nameWithType>属性用作查找键。 因此，任何<xref:System.Web.SiteMapNode>对象，它由<xref:System.Web.XmlSiteMapProvider>提供程序的范围内，类必须具有唯一的 URL。  
  
 忽略前导空格和尾随空白字符。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Web.SiteMapNode.Url%2A>属性的<xref:System.Web.SiteMapNode>对象。 `AccessSiteMapProvider`将其根节点存储为未包含任何行`parentnodeid`定义。 使用返回的行<xref:System.Data.OleDb.OleDbDataReader>对象，和<xref:System.Web.SiteMapNode>数据读取器中的值设置属性。  
  
 此代码示例是为提供一个更大示例的一部分<xref:System.Web.SiteMapProvider>类。  
  
 [!code-cpp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/samples/snippets/cpp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CPP/accesssitemapprovider.cpp#4)]
 [!code-csharp[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/CS/accesssitemapprovider.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.AccessSiteMapProvider_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.AccessSiteMapProvider_1/VB/accesssitemapprovider.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该节点是只读的。</exception>
        <altmember cref="P:System.Web.SiteMapNode.Title" />
        <altmember cref="P:System.Web.SiteMapNode.Description" />
      </Docs>
    </Member>
  </Members>
</Type>