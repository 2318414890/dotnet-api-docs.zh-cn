<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d81fff2e49c763810252a9fac6a775c1d5d70824" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30339381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="334b3-101">用于将程序集中的类型定义标记为 SQL Server 中的用户定义类型 (UDT)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="334b3-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span>
      </span>
      <span data-ttu-id="334b3-102">该特性的属性反映了向 SQL Server 注册该类型时所使用的实体特征。</span>
      <span class="sxs-lookup">
        <span data-stu-id="334b3-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span>
      </span>
      <span data-ttu-id="334b3-103">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="334b3-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="334b3-104">SQL Server 创建绑定到所具有的类型定义的用户定义的类型<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>自定义属性。</span><span class="sxs-lookup"><span data-stu-id="334b3-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="334b3-105">每个 UDT 必须使用此属性批注过。</span><span class="sxs-lookup"><span data-stu-id="334b3-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="334b3-106">请参阅[clr 用户定义类型](http://go.microsoft.com/fwlink/?LinkId=128028)有关 Udt 的详细信息，包括 UDT 的示例。</span><span class="sxs-lookup"><span data-stu-id="334b3-106">See [CLR User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="334b3-107">下面的示例演示`UserDefinedType`点 UDT 的属性。</span><span class="sxs-lookup"><span data-stu-id="334b3-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="334b3-108">用户定义的类型是字节顺序、 名为"点"，有一个名为"ValidatePoint"的验证方法和使用本机序列化格式。</span><span class="sxs-lookup"><span data-stu-id="334b3-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="334b3-109">
            <see cref="T:Microsoft.SqlServer.Server.Format" /> 值之一，表示类型的序列化格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="334b3-110">用户定义类型 (UDT) 的一个必需特性，用于确认给定的类型属于 UDT 并指示 UDT 的存储格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="334b3-111">下面的示例指定`Format`的用户定义类型`SerializedDataWithMetadata`和`MaxByteSize`为 8000 个字节。</span><span class="sxs-lookup"><span data-stu-id="334b3-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="334b3-112">序列化格式为 <see cref="T:Microsoft.SqlServer.Server.Format" /> 的值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="334b3-113">一个 <see cref="T:Microsoft.SqlServer.Server.Format" /> 值，表示序列化格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="334b3-114">指示用户定义的类型是否根据字节进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-114">Indicates whether the user-defined type is byte ordered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="334b3-115">如果用户定义的类型是按字节进行排序的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-115">
              <see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="334b3-116">当设置为`true`、<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>属性实际上保证，可以用于序列化的二进制数据的信息的语义排序。</span><span class="sxs-lookup"><span data-stu-id="334b3-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="334b3-117">因此，字节顺序 UDT 对象的每个实例只能有一种序列化表示形式。</span><span class="sxs-lookup"><span data-stu-id="334b3-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="334b3-118">在比较运算中 SQL Server 上执行的序列化字节，则其结果应为相同相同的比较运算好像在托管代码中执行位置...</span><span class="sxs-lookup"><span data-stu-id="334b3-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..</span></span>  
  
 <span data-ttu-id="334b3-119">支持以下功能时<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>设置为`true`:</span><span class="sxs-lookup"><span data-stu-id="334b3-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="334b3-120">对此类型的列创建索引的功能。</span><span class="sxs-lookup"><span data-stu-id="334b3-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="334b3-121">创建主键和外键，以及对此类型的列的检查和 UNIQUE 约束的能力。</span><span class="sxs-lookup"><span data-stu-id="334b3-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="334b3-122">使用 TRANSACT-SQL 的 ORDER BY、 GROUP BY，and PARTITION BY 子句一起使用的功能。</span><span class="sxs-lookup"><span data-stu-id="334b3-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="334b3-123">在这些情况下，用于确定的顺序的二进制表示形式的类型。</span><span class="sxs-lookup"><span data-stu-id="334b3-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="334b3-124">能够在 TRANSACT-SQL 语句中使用比较运算符。</span><span class="sxs-lookup"><span data-stu-id="334b3-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="334b3-125">可以保存此类型的计算的列。</span><span class="sxs-lookup"><span data-stu-id="334b3-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="334b3-126">请注意，同时`Native`和`UserDefined`序列化格式支持以下比较运算符时<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>设置为`true`:</span><span class="sxs-lookup"><span data-stu-id="334b3-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="334b3-127">等于 （=）</span><span class="sxs-lookup"><span data-stu-id="334b3-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="334b3-128">不等于 (!=)</span><span class="sxs-lookup"><span data-stu-id="334b3-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="334b3-129">大于 (>)</span><span class="sxs-lookup"><span data-stu-id="334b3-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="334b3-130">小于 (\<)</span><span class="sxs-lookup"><span data-stu-id="334b3-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="334b3-131">大于或等于 (>=)</span><span class="sxs-lookup"><span data-stu-id="334b3-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="334b3-132">小于或等于 (<=)</span><span class="sxs-lookup"><span data-stu-id="334b3-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="334b3-133">指示此用户定义类型的所有实例是否都具有相同的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-133">Indicates whether all instances of this user-defined type are the same length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="334b3-134">如果此类型的所有实例都具有相同的长度，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-134">
              <see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="334b3-135">如果设置为`true`，Udt 对应于此公共语言运行时 (CLR) 类型的所有实例必须都具有长度以字节为单位完全等于<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="334b3-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="334b3-136">此属性才是相关与 Udt 的`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>。</span><span class="sxs-lookup"><span data-stu-id="334b3-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="334b3-137">实例的最大大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-137">The maximum size of the instance, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="334b3-138">一个 <see cref="T:System.Int32" /> 值，表示实例的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="334b3-139">必须指定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>具有属性`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>。</span><span class="sxs-lookup"><span data-stu-id="334b3-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="334b3-140">当连接到 SQL Server 2005 或更早版本，<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>必须介于 1 和 8000 之间。</span><span class="sxs-lookup"><span data-stu-id="334b3-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="334b3-141">当连接到 SQL Server 2008 或更高版本，设置<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>介于 1 和 8000，其实例始终为 8000 个字节的类型或更少。</span><span class="sxs-lookup"><span data-stu-id="334b3-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="334b3-142">对于可以具有大于 8000 实例的类型，指定-1。</span><span class="sxs-lookup"><span data-stu-id="334b3-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="334b3-143">有关与用户定义的序列化指定，UDT<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>指由用户定义的序列化形式 UDT 的总大小。</span><span class="sxs-lookup"><span data-stu-id="334b3-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="334b3-144">考虑这样一个 UDT 属性值为 10 个字符的字符串 (<xref:System.Char>)。</span><span class="sxs-lookup"><span data-stu-id="334b3-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="334b3-145">用户定义的类型使用序列化时<xref:System.IO.BinaryWriter>、 序列化的字符串的总大小是每个 Unicode utf-16 字符，最大字符数的乘积 22 字节： 2 字节以及 2 控件个字节的开销产生从序列化二进制流。</span><span class="sxs-lookup"><span data-stu-id="334b3-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="334b3-146">因此，在确定的值<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>，必须考虑用户定义的序列化类型的总大小： 的大小以二进制格式序列化的数据加上序列化所需的开销。</span><span class="sxs-lookup"><span data-stu-id="334b3-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="334b3-147">此属性不应该用于`Native`序列化<xref:Microsoft.SqlServer.Server.Format>。</span><span class="sxs-lookup"><span data-stu-id="334b3-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="334b3-148">用户定义类型的 SQL Server 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-148">The SQL Server name of the user-defined type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="334b3-149">一个 <see cref="T:System.String" /> 值，表示用户定义类型的 SQL Server 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="334b3-150"><xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A>属性不使用 SQL Server 中，但可通过 Microsoft Visual Studio.NET 集成开发环境 (IDE)。</span><span class="sxs-lookup"><span data-stu-id="334b3-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="334b3-151">方法的名称，该方法用于验证用户定义类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-151">The name of the method used to validate instances of the user-defined type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="334b3-152">一个 <see cref="T:System.String" />，表示用于验证用户定义类型的实例的方法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="334b3-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="334b3-153">从二进制值不受信任反序列化用户定义的类型之后，通过此属性指定的方法验证 UDT 的实例。</span><span class="sxs-lookup"><span data-stu-id="334b3-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>