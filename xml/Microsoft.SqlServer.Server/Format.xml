<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d14626a5f77901dace0414747e649b15e3fa6215" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37715795" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="27e9a-101">由 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> 和 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> 用来指示用户定义类型 (UDT) 或聚合的序列化格式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27e9a-101">Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e9a-102">由 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> 和 <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> 用来指示用户定义类型 (UDT) 或聚合的序列化格式。</span><span class="sxs-lookup"><span data-stu-id="27e9a-102">Used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e9a-103">下面的示例演示`UserDefinedType`Point UDT 属性。</span><span class="sxs-lookup"><span data-stu-id="27e9a-103">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="27e9a-104">UDT 是字节顺序，名为"点"，其名为"ValidatePoint"的验证方法并使用本机序列化格式。</span><span class="sxs-lookup"><span data-stu-id="27e9a-104">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e9a-105">
            <see langword="Native" /> 序列化格式使用非常简单的算法，使 SQL Server 能够在磁盘上存储 UDT 的有效表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e9a-105">The <see langword="Native" /> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk.</span>
          </span>
          <span data-ttu-id="27e9a-106">标记为 <see langword="Native" /> 序列化的类型只能将值类型（在 Microsoft Visual C# 中为 struct，在 Microsoft Visual Basic .NET 中为 structure）用作成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e9a-106">Types marked for <see langword="Native" /> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members.</span>
          </span>
          <span data-ttu-id="27e9a-107">不支持引用类型（如 Visual C# 和 Visual Basic 中的类）的成员，无论它们是用户定义的成员还是框架中已有的成员（如 <see cref="T:System.String" />），均是如此。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e9a-107">Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <see cref="T:System.String" />), are not supported.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e9a-108">此格式的要求如下：</span><span class="sxs-lookup"><span data-stu-id="27e9a-108">The requirements for this format are:</span></span>  
  
-   <span data-ttu-id="27e9a-109">`StructLayout.LayoutKindSequential`特性必须应用于聚合或如果它一个类，而不是结构中定义的 UDT。</span><span class="sxs-lookup"><span data-stu-id="27e9a-109">The `StructLayout.LayoutKindSequential` attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure.</span></span> <span data-ttu-id="27e9a-110">这控制数据字段的物理布局，用于强制其出现顺序依次布局的成员。</span><span class="sxs-lookup"><span data-stu-id="27e9a-110">This controls the physical layout of the data fields, and is used to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="27e9a-111">SQL Server 使用此属性确定具有多个字段的 Udt 的字段顺序。</span><span class="sxs-lookup"><span data-stu-id="27e9a-111">SQL Server uses this attribute to determine the field order for UDTs with multiple fields.</span></span>  
  
-   <span data-ttu-id="27e9a-112">该类型必须包含至少一个成员 （序列化的值不能为零字节的大小）。</span><span class="sxs-lookup"><span data-stu-id="27e9a-112">The type must contain at least one member (serialized values cannot be zero bytes in size).</span></span>  
  
-   <span data-ttu-id="27e9a-113">聚合的所有字段必须都是*blittable*，也就是说，它们必须在托管和非托管内存中具有共同的表示形式并不需要进行特殊处理互操作封送处理程序。</span><span class="sxs-lookup"><span data-stu-id="27e9a-113">All the fields of the aggregate must be *blittable*, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.</span></span>  
  
-   <span data-ttu-id="27e9a-114">UDT 的所有字段应都为可序列化的以下类型之一： `bool`， `byte`， `sbyte`， `short`， `ushort`， `int`， `uint`， `long`， `ulong`， `float``double`， <xref:System.Data.SqlTypes.SqlByte>， <xref:System.Data.SqlTypes.SqlInt16>， <xref:System.Data.SqlTypes.SqlInt32>， <xref:System.Data.SqlTypes.SqlInt64>， <xref:System.Data.SqlTypes.SqlDateTime>， <xref:System.Data.SqlTypes.SqlSingle>， <xref:System.Data.SqlTypes.SqlDouble>， <xref:System.Data.SqlTypes.SqlMoney>，或包含的其中一个字段的用户定义的其他值类型类型。</span><span class="sxs-lookup"><span data-stu-id="27e9a-114">All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.</span></span>  
  
-   <span data-ttu-id="27e9a-115">聚合必须指定为值`MaxByteSize`。</span><span class="sxs-lookup"><span data-stu-id="27e9a-115">The aggregate must not specify a value for `MaxByteSize`.</span></span>  
  
-   <span data-ttu-id="27e9a-116">聚合不能有 [NonSerialized] 的任何字段。</span><span class="sxs-lookup"><span data-stu-id="27e9a-116">The aggregate must not have any [NonSerialized] fields.</span></span>  
  
-   <span data-ttu-id="27e9a-117">字段不能标记为显式布局 (<xref:System.Runtime.InteropServices.StructLayoutAttribute>)。</span><span class="sxs-lookup"><span data-stu-id="27e9a-117">Fields must not be marked as an explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e9a-118">该序列化格式是未知的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e9a-118">The serialization format is unknown.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="27e9a-119">使用 <see langword="UserDefined" /> 序列化格式，开发人员可以通过 <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> 和 <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> 方法完全控制二进制格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27e9a-119">The <see langword="UserDefined" /> serialization format gives the developer full control over the binary format through the <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> and <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e9a-120">聚合必须指定的值`MaxByteSize`。</span><span class="sxs-lookup"><span data-stu-id="27e9a-120">The aggregate must specify a value for `MaxByteSize`.</span></span>  
  
 <span data-ttu-id="27e9a-121">指定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>特性属性。</span><span class="sxs-lookup"><span data-stu-id="27e9a-121">Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> attribute property.</span></span> <span data-ttu-id="27e9a-122">默认值为 False。</span><span class="sxs-lookup"><span data-stu-id="27e9a-122">The default value is false.</span></span>  
  
 <span data-ttu-id="27e9a-123">如果省略中的任何字段<xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>或<xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>方法，该字段的状态不序列化。</span><span class="sxs-lookup"><span data-stu-id="27e9a-123">If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> methods, the state of that field is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>