<Type Name="SqlMethodAttribute" FullName="Microsoft.SqlServer.Server.SqlMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="464068e45a4dfc91b996830206b88d7fcfe188d5" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52223642" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlMethodAttribute extends Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlMethodAttribute&#xA;Inherits SqlFunctionAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMethodAttribute sealed : Microsoft::SqlServer::Server::SqlFunctionAttribute" />
  <TypeSignature Language="F#" Value="type SqlMethodAttribute = class&#xA;    inherit SqlFunctionAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Server.SqlFunctionAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bd0a0-101">指示用户定义类型 (UDT) 的方法或属性的确定性和数据访问性质。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd0a0-101">Indicates the determinism and data access properties of a method or property on a user-defined type (UDT).</span>
      </span>
      <span data-ttu-id="bd0a0-102">该特性的属性反映了向 SQL Server 注册该类型时所使用的实体特性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd0a0-102">The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0a0-103">对于属性，<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>应 setter 或 getter 上直接使用。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-103">For a property, the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> should be used on the setter or the getter directly.</span></span>  
  
 <span data-ttu-id="bd0a0-104"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 继承自<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>，因此<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>继承`FillRowMethodName`并`TableDefinition`字段从<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-104"><xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits from a <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, so <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits the `FillRowMethodName` and `TableDefinition` fields from <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>.</span></span> <span data-ttu-id="bd0a0-105">请注意，不能将表值的方法，虽然这些字段的名称可能会建议就可以。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-105">Note that it is not possible to write a table-valued method, although the names of these fields might suggest that it is possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd0a0-106">下面的示例显示了属性，以指示，该方法不会更改的类型的状态和，将不调用方法时将在针对 null 实例的类型，不调用该方法的 UDT 方法`null`参数提供给方法调用。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-106">The following example shows a UDT method that is attributed to indicate that the method will not be invoked on null instances of the type, that the method will not change the state of the type, and that the method will not be called when `null` parameters are supplied to the method invocation.</span></span>  
  
 [!code-csharp[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd0a0-107">用户定义类型 (UDT) 的特性，用于指示 UDT 的方法或属性的确定性和数据访问性质。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-107">An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIfReceiverIsNull">
      <MemberSignature Language="C#" Value="public bool InvokeIfReceiverIsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeIfReceiverIsNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokeIfReceiverIsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeIfReceiverIsNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InvokeIfReceiverIsNull : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd0a0-108">指示 SQL Server 是否应在 null 实例上调用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-108">Indicates whether SQL Server should invoke the method on null instances.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd0a0-109">如果 SQL Server 应在 null 实例上调用此方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-109">
              <see langword="true" /> if SQL Server should invoke the method on null instances; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bd0a0-110">如果方法不能调用 （由于方法上属性），SQL Server<see langword="DbNull" />返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-110">If the method cannot be invoked (because of an attribute on the method), the SQL Server <see langword="DbNull" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0a0-111">默认值为<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-111">The default value for the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="bd0a0-112">它是不对的 null 实例上调用该方法。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-112">That is, the method is not invoked on a null instance.</span></span> <span data-ttu-id="bd0a0-113">如果<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A>为 true，该方法的返回值取决于它的类型。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-113">If <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> is true, the return value of the method depends upon its type.</span></span> <span data-ttu-id="bd0a0-114">如果该方法的返回类型可以为 null，则返回类型的可分辨 null 值。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-114">If the return type of the method is nullable, the distinguished null value for the type is returned.</span></span> <span data-ttu-id="bd0a0-115">如果返回类型是不可以为 null，则返回类型的默认 CLR 值。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-115">If the return type is non-nullable, the default CLR value for the type is returned.</span></span> <span data-ttu-id="bd0a0-116">对于引用类型的默认值为 null。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-116">The default value for reference types is null.</span></span> <span data-ttu-id="bd0a0-117">值类型的默认值是默认构造函数调用的类型时返回的值。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-117">The default value for a value type is the value that is  returned when you call the default constructor for the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutator">
      <MemberSignature Language="C#" Value="public bool IsMutator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMutator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMutator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMutator : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd0a0-118">指示用户定义类型 (UDT) 的方法是否为转变器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-118">Indicates whether a method on a user-defined type (UDT) is a mutator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd0a0-119">如果该方法是转变器，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-119">
              <see langword="true" /> if the method is a mutator; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0a0-120">如果<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>属性设置为`true`方法的返回类型是`void`，SQL Server 将标记为赋值函数方法。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-120">If the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is set to `true` and the return type of the method is `void`, SQL Server marks the method as a mutator.</span></span> <span data-ttu-id="bd0a0-121">赋值函数方法就是 UDT 实例中引起状态变化。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-121">A mutator method is one that causes a state change in the UDT instance.</span></span> <span data-ttu-id="bd0a0-122">赋值函数方法可以在赋值语句或数据修改语句中调用，但不能在查询中使用。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-122">Mutator methods can be called in assignment statements or data modification statements, but cannot be used in queries.</span></span> <span data-ttu-id="bd0a0-123">如果一个方法标记为赋值函数，但不返回 void，然后创建类型不会因出现错误。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-123">If a method is marked as a mutator but does not return void, then CREATE TYPE does not fail with an error.</span></span> <span data-ttu-id="bd0a0-124">即使以外的返回值`void`作用不引发错误，则返回的值无法访问，并且不能使用。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-124">Even though a returned value other than `void` does not raise an error, the returned value is not accessible and cannot be used.</span></span>  
  
 <span data-ttu-id="bd0a0-125">默认值<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-125">The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="bd0a0-126">属性可以是赋值函数，如果<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>setter 上使用并<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-126">A property can be a mutator if <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> is used on the setter and <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> is set to `true`.</span></span> <span data-ttu-id="bd0a0-127">但是，属性 setter 隐式视为赋值函数，因此不需要设置<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>的属性<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>到`true`。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-127">However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNullCall">
      <MemberSignature Language="C#" Value="public bool OnNullCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OnNullCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberSignature Language="VB.NET" Value="Public Property OnNullCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OnNullCall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OnNullCall : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd0a0-128">在方法调用中使用 <see langword="null" /> 输入参数时指示是否调用用户定义类型 (UDT) 上的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-128">Indicates whether the method on a user-defined type (UDT) is called when <see langword="null" /> input arguments are specified in the method invocation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd0a0-129">如果 <see langword="null" /> 输入参数在方法调用中指定时，调用了该方法，则为 <see langword="true" />；如果任意输入参数为 <see langword="null" /> 时，该方法返回了 <see langword="null" /> 值，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-129">
              <see langword="true" /> if the method is called when <see langword="null" /> input arguments are specified in the method invocation; <see langword="false" /> if the method returns a <see langword="null" /> value when any of its input parameters are <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bd0a0-130">如果方法不能调用 （由于方法上属性），SQL Server<see langword="DbNull" />返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0a0-130">If the method cannot be invoked (because of an attribute on the method), the SQL Server <see langword="DbNull" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0a0-131">默认值<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="bd0a0-131">The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>