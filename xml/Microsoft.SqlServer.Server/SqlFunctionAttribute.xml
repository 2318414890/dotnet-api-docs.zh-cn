<Type Name="SqlFunctionAttribute" FullName="Microsoft.SqlServer.Server.SqlFunctionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed7845ca2fd06e9c8ee6260e342282d099f03c73" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37715961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlFunctionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SqlFunctionAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlFunctionAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlFunctionAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SqlFunctionAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用于将用户定义聚合的方法定义标记为 SQL Server 中的函数。 该特性的属性反映了向 SQL Server 注册该类型时所使用的实体特征。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例显示了聚合函数，返回指定的目录路径中的文件的列表。  
  
 [!code-csharp[DataWorks SqlFunctionAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlFunctionAttribute Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlFunctionAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlFunctionAttribute Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlFunctionAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlFunctionAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlFunctionAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>用户定义聚合的可选特性，用于指示方法应在 SQL Server 中注册为函数。 还用于设置函数特性的 <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess" />、<see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName" />、<see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic" />、<see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise" />、<see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name" />、<see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess" /> 和 <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition" /> 属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAccess">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.DataAccessKind DataAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.DataAccessKind DataAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAccess As DataAccessKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::DataAccessKind DataAccess { Microsoft::SqlServer::Server::DataAccessKind get(); void set(Microsoft::SqlServer::Server::DataAccessKind value); };" />
      <MemberSignature Language="F#" Value="member this.DataAccess : Microsoft.SqlServer.Server.DataAccessKind with get, set" Usage="Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.DataAccessKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示函数是否需要访问存储在 SQL Server 的本地实例中的用户数据。</summary>
        <value>
          <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.<see langword="None" />： 不访问数据。 <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.<see langword="Read" />： 仅读取用户数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值是<xref:Microsoft.SqlServer.Server.DataAccessKind.None>。<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess%2A> 时也需要连接到远程服务器，如果事务集成所需的 （默认值）。  
  
 如果从表值函数 (TVF) 内执行 TRANSACT-SQL 查询<xref:Microsoft.SqlServer.Server.DataAccessKind.Read>属性应设置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRowMethodName">
      <MemberSignature Language="C#" Value="public string FillRowMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FillRowMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property FillRowMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FillRowMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FillRowMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>同一类中的方法名称，该类用于填充表值函数返回的表中的一行数据。</summary>
        <value>一个<see cref="T:System.String" />值，该值表示用于填充表值函数返回表中的数据行的相同类中方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeterministic">
      <MemberSignature Language="C#" Value="public bool IsDeterministic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeterministic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDeterministic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeterministic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDeterministic : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示用户定义的函数是否是确定性的。</summary>
        <value>如果该函数是确定性的，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户定义函数被认为是如果它始终产生相同的给定输入的值相同且数据库状态相同的输出值确定。  
  
 <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic%2A>属性也很有用的索引的索引计算的列和索引的视图窗体中的函数的结果。 如果未指定此属性，该函数假定为非确定性。  
  
 访问本地数据的函数可以是确定性的。 数据访问特征单独通过捕获<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess%2A>和<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess%2A>属性。  
  
 请注意该数据访问远程服务器 (例如，使用<xref:System.Data.SqlClient.SqlConnection>连接到另一个 SQL Server 实例) 可在用户定义函数。 但是，仍必须遵循<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic%2A>声明。 如果公共语言运行时 (CLR) 函数被标记为确定性的它不应在远程服务器导致的副作用。 副作用对上下文连接受到限制，而 SQL Server 不会通过远程连接强制的限制的负面影响。  
  
 此特性的默认值为 `false`。  
  
 不要将标记为确定性函数不会始终生成相同的输出值，如果函数提供输入的值相同且数据库状态相同。 将标记为确定性函数时的函数不是真正具有确定性可能导致损坏的索引的视图和计算的列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrecise">
      <MemberSignature Language="C#" Value="public bool IsPrecise { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrecise" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrecise As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrecise { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrecise : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示函数是否涉及不精确的计算，如浮点运算。</summary>
        <value>如果函数涉及精确的计算，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个函数的精度是一个用于确定是否计算列使用此函数可编制索引的属性。  
  
 此特性的默认值为 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlFunctionAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>函数在 SQL Server 中注册时所使用的名称。</summary>
        <value>一个 <see cref="T:System.String" /> 值，它表示函数在注册时应使用的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性仅由 Microsoft Visual Studio 用于自动将指定的方法注册为用户定义函数。 它不使用 SQL Server。  
  
 下面的示例指定使用的名称引用用户定义函数`sp_scalarFunc`。  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#10](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Function1.cs#10)]
 [!code-vb[VbRaddataSQLObjects#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Function1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemDataAccess">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.SystemDataAccessKind SystemDataAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.SystemDataAccessKind SystemDataAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property SystemDataAccess As SystemDataAccessKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::SystemDataAccessKind SystemDataAccess { Microsoft::SqlServer::Server::SystemDataAccessKind get(); void set(Microsoft::SqlServer::Server::SystemDataAccessKind value); };" />
      <MemberSignature Language="F#" Value="member this.SystemDataAccess : Microsoft.SqlServer.Server.SystemDataAccessKind with get, set" Usage="Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SystemDataAccessKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示函数是否需要访问存储在 SQL Server 的系统目录或虚拟系统表中的数据。</summary>
        <value>
          <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.<see langword="None" />： 不访问系统数据。 <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.<see langword="Read" />： 仅读取系统数据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认值为 <xref:Microsoft.SqlServer.Server.SystemDataAccessKind.None>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableDefinition">
      <MemberSignature Language="C#" Value="public string TableDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property TableDefinition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableDefinition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableDefinition : string with get, set" Usage="Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果方法用作表值函数 (TVF)，则为一个字符串，该字符串表示结果的表定义。</summary>
        <value>一个 <see cref="T:System.String" /> 值，它表示结果的表定义。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性仅由 Microsoft Visual Studio 用于自动注册为 TVF 指定的方法。 它不使用 SQL Server。  
  
 下面的示例指定使用的名称引用用户定义函数`sp_tableFunc`。 `TableDefinition`属性具有值`letter nchar(1)`。  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#11](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Function1.cs#11)]
 [!code-vb[VbRaddataSQLObjects#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Function1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>