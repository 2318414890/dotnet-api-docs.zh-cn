<Type Name="ReflectionModelServices" FullName="System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a4d3b8e3f924b79615c212cabd990d42339a305" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ReflectionModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ReflectionModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Class ReflectionModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionModelServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="29edb-101">提供创建和检索基于反射的部件的扩展方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29edb-101">Provides extension methods to create and retrieve reflection-based parts.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateExportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, Lazy&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, class System.Lazy`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; metadata, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateExportDefinition (exportingMember As LazyMemberInfo, contractName As String, metadata As Lazy(Of IDictionary(Of String, Object)), origin As ICompositionElement) As ExportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ExportDefinition ^ CreateExportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo exportingMember, System::String ^ contractName, Lazy&lt;System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ metadata, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ExportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Lazy&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="exportingMember">
          <span data-ttu-id="29edb-102">要导出的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-102">The member to export.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="29edb-103">要用于导出的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-103">The contract name to use for the export.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="29edb-104">导出的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-104">The metadata for the export.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="29edb-105">导出源自于的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-105">The object that the export originates from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-106">从指定的成员创建一个导出定义，该定义具有指定的协定名称、元数据和源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-106">Creates an export definition from the specified member, with the specified contract name, metadata, and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-107">从指定的参数创建的导出定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-107">An export definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateImportDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29edb-108">创建成员或参数的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-108">Creates an import definition for a member or parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy&lt;System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (parameter As Lazy(Of ParameterInfo), contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, requiredCreationPolicy As CreationPolicy, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ parameter, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Lazy&lt;System.Reflection.ParameterInfo&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="29edb-109">要导入的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-109">The parameter to import.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="29edb-110">要用于导入的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-110">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="29edb-111">导入的必需的类型标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-111">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="29edb-112">导入的必需的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-112">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="29edb-113">导入的基数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-113">The cardinality of the import.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="29edb-114">枚举值之一，用于指定导入的创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-114">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="29edb-115">要导入到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-115">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-116">为指定的参数创建一个导入定义，该定义具有指定的协定名称、类型标识、导入元数据、基数和创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-116">Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-117">从指定的参数创建的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-117">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, requiredCreationPolicy As CreationPolicy, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember">
          <span data-ttu-id="29edb-118">要导入到的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-118">The member to import into.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="29edb-119">要用于导入的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-119">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="29edb-120">导入的必需的类型标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-120">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="29edb-121">导入的必需的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-121">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="29edb-122">导入的基数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-122">The cardinality of the import.</span>
          </span>
        </param>
        <param name="isRecomposable">
          <span data-ttu-id="29edb-123">如果导入可重新组合，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-123">
              <see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="29edb-124">枚举值之一，用于指定导入的创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-124">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="29edb-125">要导入到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-125">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-126">为指定的成员创建一个导入定义，该定义具有指定的协定名称、类型标识、导入元数据、基数、重新组合策略和创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-126">Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-127">从指定的参数创建的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-127">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy&lt;System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (parameter As Lazy(Of ParameterInfo), contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ parameter, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Lazy&lt;System.Reflection.ParameterInfo&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="29edb-128">要导入的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-128">The parameter to import.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="29edb-129">要用于导入的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-129">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="29edb-130">导入的必需的类型标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-130">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="29edb-131">导入的必需的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-131">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="29edb-132">导入的基数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-132">The cardinality of the import.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="29edb-133">枚举值之一，用于指定导入的创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-133">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="29edb-134">协定元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-134">The contract metadata</span>
          </span>
        </param>
        <param name="isExportFactory">
          <span data-ttu-id="29edb-135">
            <see langword="true" /> 指示导入表示 <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-135">
              <see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="29edb-136">要导入到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-136">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-137">为指定的参数创建一个导入定义，该定义具有指定的协定名称、类型标识、导入和协定元数据、基数和创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-137">Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-138">从指定的参数创建的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-138">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember">
          <span data-ttu-id="29edb-139">要导入到的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-139">The member to import into.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="29edb-140">要用于导入的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-140">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="29edb-141">导入的必需的类型标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-141">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="29edb-142">导入的必需的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-142">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="29edb-143">导入的基数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-143">The cardinality of the import.</span>
          </span>
        </param>
        <param name="isRecomposable">
          <span data-ttu-id="29edb-144">如果导入可重新组合，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-144">
              <see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="29edb-145">枚举值之一，用于指定导入的创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-145">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="29edb-146">协定元数据</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-146">The contract metadata.</span>
          </span>
        </param>
        <param name="isExportFactory">
          <span data-ttu-id="29edb-147">
            <see langword="true" /> 指示导入表示 <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-147">
              <see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="29edb-148">要导入到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-148">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-149">为指定的成员创建一个导入定义，该定义具有指定的协定名称、类型标识、导入和协定元数据、基数、重新组合策略和创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-149">Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-150">从指定的参数创建的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-150">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, isPreRequisite As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPreRequisite" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember">
          <span data-ttu-id="29edb-151">要导入到的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-151">The member to import into.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="29edb-152">要用于导入的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-152">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="29edb-153">导入的必需的类型标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-153">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="29edb-154">导入的必需的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-154">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="29edb-155">导入的基数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-155">The cardinality of the import.</span>
          </span>
        </param>
        <param name="isRecomposable">
          <span data-ttu-id="29edb-156">如果导入可重新组合，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-156">
              <see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isPreRequisite">
          <span data-ttu-id="29edb-157">
            <see langword="true" /> 指示导入为必备组件；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-157">
              <see langword="true" /> to indicate that the import is a prerequisite; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="29edb-158">枚举值之一，用于指定导入的创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-158">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="29edb-159">协定元数据</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-159">The contract metadata.</span>
          </span>
        </param>
        <param name="isExportFactory">
          <span data-ttu-id="29edb-160">
            <see langword="true" /> 指示导入表示 <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-160">
              <see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="29edb-161">要导入到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-161">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-162">为指定的成员创建一个导入定义，该定义具有指定的协定名称、类型标识、导入和协定元数据、基数、重新组合策略和创建策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-162">Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-163">从指定的参数创建的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-163">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Lazy&lt;Type&gt; partType, bool isDisposalRequired, Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt; imports, Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; exports, Lazy&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Lazy`1&lt;class System.Type&gt; partType, bool isDisposalRequired, class System.Lazy`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt; imports, class System.Lazy`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; exports, class System.Lazy`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; metadata, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartDefinition (partType As Lazy(Of Type), isDisposalRequired As Boolean, imports As Lazy(Of IEnumerable(Of ImportDefinition)), exports As Lazy(Of IEnumerable(Of ExportDefinition)), metadata As Lazy(Of IDictionary(Of String, Object)), origin As ICompositionElement) As ComposablePartDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Lazy&lt;Type ^&gt; ^ partType, bool isDisposalRequired, Lazy&lt;System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ImportDefinition ^&gt; ^&gt; ^ imports, Lazy&lt;System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ exports, Lazy&lt;System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ metadata, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partType" Type="System.Lazy&lt;System.Type&gt;" />
        <Parameter Name="isDisposalRequired" Type="System.Boolean" />
        <Parameter Name="imports" Type="System.Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt;" />
        <Parameter Name="exports" Type="System.Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;" />
        <Parameter Name="metadata" Type="System.Lazy&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="partType">
          <span data-ttu-id="29edb-164">部件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-164">The type of the part.</span>
          </span>
        </param>
        <param name="isDisposalRequired">
          <span data-ttu-id="29edb-165">如果部件要求释放，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-165">
              <see langword="true" /> if the part requires disposal; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="imports">
          <span data-ttu-id="29edb-166">部件的导入集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-166">A collection of the part's imports.</span>
          </span>
        </param>
        <param name="exports">
          <span data-ttu-id="29edb-167">部件的导出集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-167">A collection of the part's exports.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="29edb-168">部件的元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-168">The part's metadata.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="29edb-169">部件的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-169">The part's origin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-170">创建一个部件定义，该定义具有指定的部件类型、导入、导出、元数据和源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-170">Creates a part definition with the specified part type, imports, exports, metadata, and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-171">从指定的参数创建的部件定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-171">A part definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportFactoryProductImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ GetExportFactoryProductImportDefinition(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="29edb-172">要表示的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-172">The import definition to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-173">返回导入定义的表示形式作为该导出工厂产品。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-173">Returns a representation of an import definition as an export factory product.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-174">导入定义的表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-174">The representation of the import definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportingMember">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo GetExportingMember(System::ComponentModel::Composition::Primitives::ExportDefinition ^ exportDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition">
          <span data-ttu-id="29edb-175">要检查的导出定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-175">The export definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-176">从指定的导出定义获取导出成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-176">Gets the exporting member from a specified export definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-177">导出定义中指定的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-177">The member specified in the export definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29edb-178">
            <paramref name="exportDefinition" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-178">
              <paramref name="exportDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportingMember">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo GetImportingMember(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="29edb-179">要检查的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-179">The import definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-180">从指定的导入定义获取导入成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-180">Gets the importing member from a specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-181">导入定义中指定的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-181">The member specified in the import definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29edb-182">
            <paramref name="importDefinition" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-182">
              <paramref name="importDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportingParameter">
      <MemberSignature Language="C#" Value="public static Lazy&lt;System.Reflection.ParameterInfo&gt; GetImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; GetImportingParameter(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ GetImportingParameter(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;System.Reflection.ParameterInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="29edb-183">要检查的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-183">The import definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-184">从指定的导入定义获取导入参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-184">Gets the importing parameter from a specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-185">导入定义中指定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-185">The parameter specified in the import definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29edb-186">
            <paramref name="importDefinition" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-186">
              <paramref name="importDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartType">
      <MemberSignature Language="C#" Value="public static Lazy&lt;Type&gt; GetPartType (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Lazy`1&lt;class System.Type&gt; GetPartType(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartType (partDefinition As ComposablePartDefinition) As Lazy(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Lazy&lt;Type ^&gt; ^ GetPartType(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="29edb-187">要检查的部件定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-187">The part definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-188">从指定的部件定义获取部件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-188">Gets the type of a part from a specified part definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-189">已定义部件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-189">The type of the defined part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29edb-190">
            <paramref name="partDefinition" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-190">
              <paramref name="partDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDisposalRequired">
      <MemberSignature Language="C#" Value="public static bool IsDisposalRequired (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDisposalRequired(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDisposalRequired (partDefinition As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDisposalRequired(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="29edb-191">要检查的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-191">The part to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-192">确定指定的部件是否要求释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-192">Determines whether the specified part requires disposal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-193">如果部件要求释放，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-193">
              <see langword="true" /> if the part requires disposal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29edb-194">
            <paramref name="partDefinition" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-194">
              <paramref name="partDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsExportFactoryImportDefinition">
      <MemberSignature Language="C#" Value="public static bool IsExportFactoryImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsExportFactoryImportDefinition(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExportFactoryImportDefinition(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="29edb-195">要检查的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-195">The import definition to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-196">指示指定的导入定义是否表示导出工厂(<see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> 或 <see cref="T:System.ComponentModel.Composition.ExportFactory`2" /> 对象)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-196">Indicates whether a specified import definition represents an export factory (<see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> or <see cref="T:System.ComponentModel.Composition.ExportFactory`2" /> object).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-197">如果指定导入定义表示导出工厂，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-197">
              <see langword="true" /> if the specified import definition represents an export factory; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImportingParameter">
      <MemberSignature Language="C#" Value="public static bool IsImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsImportingParameter(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsImportingParameter(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="29edb-198">要检查的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-198">The import definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-199">确定导入定义是表示一个成员还是表示一个参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-199">Determines whether an import definition represents a member or a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-200">如果导入定义表示一个参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-200">
              <see langword="true" /> if the import definition represents a parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29edb-201">
            <paramref name="importDefinition" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-201">
              <paramref name="importDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryMakeGenericPartDefinition">
      <MemberSignature Language="C#" Value="public static bool TryMakeGenericPartDefinition (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, System.Collections.Generic.IEnumerable&lt;Type&gt; genericParameters, out System.ComponentModel.Composition.Primitives.ComposablePartDefinition specialization);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryMakeGenericPartDefinition(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; genericParameters, [out] class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&amp; specialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryMakeGenericPartDefinition (partDefinition As ComposablePartDefinition, genericParameters As IEnumerable(Of Type), ByRef specialization As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryMakeGenericPartDefinition(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ genericParameters, [Runtime::InteropServices::Out] System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ % specialization);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="genericParameters" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="specialization" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="29edb-202">部件定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-202">The part definition.</span>
          </span>
        </param>
        <param name="genericParameters">
          <span data-ttu-id="29edb-203">指定泛型参数的类型的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-203">A collection of types to specify the generic parameters.</span>
          </span>
        </param>
        <param name="specialization">
          <span data-ttu-id="29edb-204">此方法返回时，将包含专用的部件定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-204">When this method returns, contains the specialized part definition.</span>
          </span>
          <span data-ttu-id="29edb-205">该参数未经初始化即被处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-205">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29edb-206">指示泛型部件定义是否可以使用特定的参数专用化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-206">Indicates whether a generic part definition can be specialized with the provided parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29edb-207">如果该专用化成功，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29edb-207">
              <see langword="true" /> if the specialization succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>