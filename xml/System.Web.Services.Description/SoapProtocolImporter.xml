<Type Name="SoapProtocolImporter" FullName="System.Web.Services.Description.SoapProtocolImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8591970c5f7a3a96af16a6cd6dda31b394271e9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549231" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapProtocolImporter : System.Web.Services.Description.ProtocolImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapProtocolImporter extends System.Web.Services.Description.ProtocolImporter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapProtocolImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapProtocolImporter&#xA;Inherits ProtocolImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapProtocolImporter : System::Web::Services::Description::ProtocolImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Description.ProtocolImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为使用 SOAP 协议的 Web 服务生成类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类生成客户端代理代码或根据 SOAP 协议的抽象 server 代码。 类生成每个受支持的绑定在 Web 服务描述语言 (WSDL) 文档中定义的类。  
  
 通常情况下，而不是调用<xref:System.Web.Services.Description.SoapProtocolImporter>直接，开发人员可以使用间接通过类<xref:System.Web.Services.Description.ServiceDescriptionImporter>类。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapProtocolImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapProtocolImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginClass">
      <MemberSignature Language="C#" Value="protected override System.CodeDom.CodeTypeDeclaration BeginClass ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.CodeDom.CodeTypeDeclaration BeginClass() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.BeginClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BeginClass () As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::CodeDom::CodeTypeDeclaration ^ BeginClass();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化绑定类的生成。</summary>
        <returns>绑定类。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在为某个给定绑定的类的生成过程<xref:System.Web.Services.Description.SoapProtocolImporter.BeginClass%2A>方法执行之前<xref:System.Web.Services.Description.SoapProtocolImporter>类生成的操作相对应的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginNamespace">
      <MemberSignature Language="C#" Value="protected override void BeginNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.BeginNamespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BeginNamespace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在代码生成过程中对整个代码命名空间执行初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在代码生成过程<xref:System.Web.Services.Description.SoapProtocolImporter.BeginNamespace%2A>方法执行之前<xref:System.Web.Services.Description.SoapProtocolImporter>类生成表示绑定的类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClass">
      <MemberSignature Language="C#" Value="protected override void EndClass ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndClass() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.EndClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndClass ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndClass();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在生成方法后处理绑定类。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在为某个给定绑定的类的生成过程<xref:System.Web.Services.Description.SoapProtocolImporter.EndClass%2A>方法之后执行<xref:System.Web.Services.Description.SoapProtocolImporter>类生成的操作相对应的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndNamespace">
      <MemberSignature Language="C#" Value="protected override void EndNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.EndNamespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndNamespace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在生成绑定类后对整个代码命名空间执行处理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在代码生成过程<xref:System.Web.Services.Description.SoapProtocolImporter.EndNamespace%2A>方法之后执行<xref:System.Web.Services.Description.SoapProtocolImporter>类生成表示绑定的类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMethod">
      <MemberSignature Language="C#" Value="protected override System.CodeDom.CodeMemberMethod GenerateMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.CodeDom.CodeMemberMethod GenerateMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.GenerateMethod" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateMethod () As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::CodeDom::CodeMemberMethod ^ GenerateMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为绑定类生成方法代码。</summary>
        <returns>绑定类的方法代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在为某个给定绑定的类的生成过程<xref:System.Web.Services.Description.SoapProtocolImporter.GenerateMethod%2A>方法执行每个绑定类方法表示的操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSupported">
      <MemberSignature Language="C#" Value="protected override bool IsBindingSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsBindingSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsBindingSupported" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsBindingSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsBindingSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定是否可为当前绑定生成类。</summary>
        <returns>
          如果可为当前绑定生成类，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter.IsBindingSupported%2A>方法确定是否生成用于当前绑定的类所表示的<xref:System.Web.Services.Description.ProtocolImporter.Binding%2A>属性。 该方法检查是否<xref:System.Web.Services.Description.ProtocolImporter.Binding%2A>属性的<xref:System.Web.Services.Description.Binding.Extensions%2A>属性包含<xref:System.Web.Services.Description.SoapBinding>实例。 此外，传输机制通过<xref:System.Web.Services.Description.SoapBinding.Transport%2A>属性必须受当前的 Web 服务配置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOperationFlowSupported">
      <MemberSignature Language="C#" Value="protected override bool IsOperationFlowSupported (System.Web.Services.Description.OperationFlow flow);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsOperationFlowSupported(valuetype System.Web.Services.Description.OperationFlow flow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsOperationFlowSupported(System.Web.Services.Description.OperationFlow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsOperationFlowSupported (flow As OperationFlow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsOperationFlowSupported(System::Web::Services::Description::OperationFlow flow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flow" Type="System.Web.Services.Description.OperationFlow" />
      </Parameters>
      <Docs>
        <param name="flow">表示传输模式的 <see cref="T:System.Web.Services.Description.OperationFlow" /> 枚举值。</param>
        <summary>确定当前操作的操作流是否受支持。</summary>
        <returns>
          如果当前操作的操作流受支持，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter.IsOperationFlowSupported%2A>方法确定是否生成当前操作，一种方法所表示的<xref:System.Web.Services.Description.Operation>属性。 此计算都需要为其生成类的绑定中每个操作的位置。 如果`false`返回值，<xref:System.Web.Services.Description.ProtocolImporter.UnsupportedOperationWarning%2A>方法执行。 A`true`输入的值时才返回值<xref:System.Web.Services.Description.OperationFlow.OneWay>或<xref:System.Web.Services.Description.OperationFlow.RequestResponse>。  
  
 有关更多信息，请参见 <xref:System.Web.Services.Description.OperationMessageCollection.Flow%2A> 属性。 <xref:System.Web.Services.Description.Operation.Messages%2A> 属性为 <xref:System.Web.Services.Description.OperationMessageCollection> 类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoapEncodingPresent">
      <MemberSignature Language="C#" Value="protected virtual bool IsSoapEncodingPresent (string uriList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSoapEncodingPresent(string uriList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapProtocolImporter.IsSoapEncodingPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSoapEncodingPresent (uriList As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsSoapEncodingPresent(System::String ^ uriList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriList">由空格分隔的 URI 列表。</param>
        <summary>检查表示统一资源标识符 (URI) 列表的字符串中是否存在“http://schemas.xmlsoap.org/soap/encoding/”。</summary>
        <returns>
          如果字符串包含 [http://schemas.xmlsoap.org/soap/encoding/](http://schemas.xmlsoap.org/soap/encoding/)，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolName">
      <MemberSignature Language="C#" Value="public override string ProtocolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProtocolName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.ProtocolName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ProtocolName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProtocolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取值“Soap”。</summary>
        <value>一个包含字符串“Soap”的 <see cref="T:System.String" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapBinding">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBinding SoapBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.SoapBinding SoapBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapBinding As SoapBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBinding ^ SoapBinding { System::Web::Services::Description::SoapBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取通过 <see cref="T:System.Web.Services.Description.SoapBinding" /> 属性的 <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> 属性获取的 <see cref="P:System.Web.Services.Description.Binding.Extensions" /> 实例。</summary>
        <value>通过 <see cref="T:System.Web.Services.Description.SoapBinding" /> 属性的 <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> 属性获取的 <see cref="P:System.Web.Services.Description.Binding.Extensions" /> 实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapExporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapCodeExporter SoapExporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapCodeExporter SoapExporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapExporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapExporter As SoapCodeExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapCodeExporter ^ SoapExporter { System::Xml::Serialization::SoapCodeExporter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapCodeExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用<xref:System.Xml.Serialization.SoapCodeExporter>对象来启用 SOAP 编码，而不文本的 XML 架构使用的元素和数据类型从 XML 架构的.NET Framework 类型映射创建代码。 SOAP 1.1 规范第 5 节中指定 SOAP 编码。 SOAP 编码使用的命名空间"http://schemas.xmlsoap.org/soap/encoding/"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapImporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapSchemaImporter SoapImporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapSchemaImporter SoapImporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.SoapImporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapImporter As SoapSchemaImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapSchemaImporter ^ SoapImporter { System::Xml::Serialization::SoapSchemaImporter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapSchemaImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以在 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间生成映射。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以在 SOAP 编码的 XML 架构内容和 .NET Framework 类型之间生成映射。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用<xref:System.Xml.Serialization.SoapSchemaImporter>对象来创建启用 SOAP 编码，而不文本的 XML 架构使用的元素和数据类型的.NET Framework 类型映射的 XML 架构。 SOAP 1.1 规范第 5 节中指定 SOAP 编码。 SOAP 编码使用的命名空间"http://schemas.xmlsoap.org/soap/encoding/"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlExporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlCodeExporter XmlExporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlCodeExporter XmlExporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.XmlExporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlExporter As XmlCodeExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlCodeExporter ^ XmlExporter { System::Xml::Serialization::XmlCodeExporter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlCodeExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据文本 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以根据文本 XML 架构内容和 .NET Framework 类型之间的映射生成代码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用<xref:System.Xml.Serialization.XmlSchemaImporter>对象来创建需要文本 XML 架构使用情况，而不是 SOAP 编码的元素和数据类型的.NET Framework 类型映射的 XML 架构。 SOAP 1.1 规范第 5 节中指定 SOAP 编码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImporter">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlSchemaImporter XmlImporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlSchemaImporter XmlImporter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapProtocolImporter.XmlImporter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlImporter As XmlSchemaImporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlSchemaImporter ^ XmlImporter { System::Xml::Serialization::XmlSchemaImporter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSchemaImporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取类型为 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象以在文本 XML 架构内容和 .NET Framework 类型之间生成映射。</summary>
        <value>类型为 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 的对象，<see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 类在内部使用该对象，以在文本 XML 架构内容和 .NET Framework 类型之间生成映射。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapProtocolImporter>类使用<xref:System.Xml.Serialization.XmlSchemaImporter>对象来创建从.NET Framework 类型映射的 XML 架构元素和数据类型需要文本 XML 架构使用情况，而不是 SOAP 编码的代码。 SOAP 1.1 规范第 5 节中指定 SOAP 编码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>