<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bdaa22b0a02a98ab2b7be6813340865189c2125" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30546611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为类提供通用接口和功能，以按方法向 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 对象添加 SOAP 扩展信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 抽象<xref:System.Web.Services.Description.SoapExtensionReflector>类公开一个抽象方法， <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>。 此抽象方法允许派生的类时将 Web 方法反射到放入的对象添加的 SOAP 扩展的说明<xref:System.Web.Services.Description.ServiceDescription>对象。 方法本身不是输入。 对于属于指定的绑定生成的所有 Web 方法添加说明<xref:System.Web.Services.Description.ServiceDescription>。  
  
 你可以使用<xref:System.Web.Services.Description.ServiceDescription>生成通过 Web 服务描述语言 (WSDL) 文档<xref:System.Web.Services.Description.ServiceDescription.Write%2A>方法。 <xref:System.Web.Services.Description.ServiceDescriptionImporter>类和相关的类还可以使用<xref:System.Web.Services.Description.ServiceDescription>来生成客户端代理代码或抽象服务器代码。  
  
 使用派生自的类<xref:System.Web.Services.Description.SoapExtensionReflector>结合使用的一个类的类派生自抽象<xref:System.Web.Services.Protocols.SoapExtension>类，以扩展运行时处理的 SOAP 消息的客户端或服务上。  
  
 你可以指定<xref:System.Web.Services.Description.SoapExtensionReflector>通过配置文件中[ \<soapExtensionReflectorTypes > 元素](http://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c)元素及其子**添加**元素。 此外可以将配置应用到发布的 Web 服务的 ASP.NET Web 应用。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Description.SoapExtensionReflector" /> 类的实例</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成将放入与绑定对应的 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 对象中的特定于服务的说明信息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置从调用 <see cref="T:System.Web.Services.Description.ProtocolReflector" /> 方法的 <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> 抽象类派生的类的实例。</summary>
        <value>从调用<see cref="T:System.Web.Services.Description.ProtocolReflector" />方法的<see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />抽象类派生的类的实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你实现派生自的类<xref:System.Web.Services.Description.SoapExtensionReflector>`abstract`类，则你不需要实现派生自类<xref:System.Web.Services.Description.ProtocolReflector>来调用<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>方法或设置<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see langword="Abstract" /> 方法，派生类必须实现该方法以按方法向 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 对象添加 SOAP 扩展信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>将为每个绑定所属的 Web 方法调用方法，<xref:System.Web.Services.Description.ServiceDescription>表示。 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>方法不直接使用 Web 方法。 对于 Web 服务类中反映绑定中的所有 Web 方法添加获取信息的 SOAP 扩展。  
  
 实现<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>可以生成信息，如操作绑定`abstract`操作和消息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>