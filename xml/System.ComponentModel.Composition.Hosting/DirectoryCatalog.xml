<Type Name="DirectoryCatalog" FullName="System.ComponentModel.Composition.Hosting.DirectoryCatalog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="412dd0843c891dc2438a2df34c602f2fa11697a2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36712579" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectoryCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement, INotifyComposablePartCatalogChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Hosting::INotifyComposablePartCatalogChanged, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type DirectoryCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface INotifyComposablePartCatalogChanged&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.DirectoryCatalog/DirectoryCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4c10-101">发现所指定目录中的程序集的特性化部分。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4c10-101">Discovers attributed parts in the assemblies in a specified directory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4c10-102">你可以使用<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>对象来分析指定的目录的内容。</span><span class="sxs-lookup"><span data-stu-id="c4c10-102">You can use a <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> object to parse the contents of a designated directory.</span></span> <span data-ttu-id="c4c10-103">动态链接库 (DLL) 文件中包含的任何特性化的部分提取，并可通过目录中。若要将分析限制到特定的 Dll，可以指定搜索模式通过使用与相同的语法<xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="c4c10-103">Any attributed parts contained in dynamic link library (DLL) files are extracted and made available through the catalog.To restrict parsing to specific DLLs, you can specify a search pattern by using the same syntax as the <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="c4c10-104">指定的目录不应允许对非管理员的访问。</span><span class="sxs-lookup"><span data-stu-id="c4c10-104">The designated directory should not allow access to non-administrators.</span></span> <span data-ttu-id="c4c10-105">例如，使用包含 Internet 临时文件的文件夹可以创建漏洞在你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4c10-105">For example, using a folder that contains temporary Internet files could create vulnerabilities in your application.</span></span>  
  
 <span data-ttu-id="c4c10-106">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="c4c10-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="c4c10-107">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="c4c10-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="c4c10-108">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="c4c10-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="c4c10-109">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="c4c10-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="c4c10-110">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="c4c10-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4c10-111">下面的示例创建<xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>从运行为部件搜索目录应用程序的对象。</span><span class="sxs-lookup"><span data-stu-id="c4c10-111">The following example creates a <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> object that searches the directory the application runs from for parts.</span></span> <span data-ttu-id="c4c10-112">它使用简单的导入测试目录。</span><span class="sxs-lookup"><span data-stu-id="c4c10-112">It uses a simple import to test the catalog.</span></span> <span data-ttu-id="c4c10-113">若要完成此导入，目录中的 DLL 必须匹配的导出，如本文所述的第二个代码块。</span><span class="sxs-lookup"><span data-stu-id="c4c10-113">To fulfill this import, a DLL in the directory must have a matching export, as illustrated in the second code block.</span></span>  
  
 [!code-csharp[Composition.DirectoryCatalog#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.directorycatalog/cs/consoleapplication7/program.cs#1)]
 [!code-vb[Composition.DirectoryCatalog#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.directorycatalog/vb/consoleapplication8/module1.vb#1)]  
  
 <span data-ttu-id="c4c10-114">若要创建匹配的导出，下面的代码必须是 DLL 文件。</span><span class="sxs-lookup"><span data-stu-id="c4c10-114">To create the matching export, the following code must be in a DLL file.</span></span> <span data-ttu-id="c4c10-115">若要在 Visual Studio 中创建的 DLL 文件，将类型"类库"的新项目添加到你的解决方案，并将此代码放置在它。</span><span class="sxs-lookup"><span data-stu-id="c4c10-115">To create a DLL file in Visual Studio, add a new project of the type "Class Library" to your solution, and place this code in it.</span></span>  
  
 [!code-csharp[Composition.DirectoryCatalog#2](~/samples/snippets/csharp/VS_Snippets_Misc/composition.directorycatalog/cs/classlibrary1/class1.cs#2)]
 [!code-vb[Composition.DirectoryCatalog#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.directorycatalog/vb/classlibrary1/class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-116">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-117">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-117">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-118">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-118">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-119">根据指定目录路径中的所有 DLL 文件，使用 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-120">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-120">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-121">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-121">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-122">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-122">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-123">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-123">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-124">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-124">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-125">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-125">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-126">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-126">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="c4c10-127">诊断用于标识部件源的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-127">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-128">根据指定目录路径中的所有 DLL 文件，部分使用 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path with the specified source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-129">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-129">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-130">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-131">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-132">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-132">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-133">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-133">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-134">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-134">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-135">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-135">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="c4c10-136">用于创建部件的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-136">The context used to create parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-137">根据特定反射上下文中指定目录路径的所有 DLL 文件，使用 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-137">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path, in the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-138">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-138">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-139">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-139">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-140">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-140">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-141">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-141">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-142">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-142">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, searchPattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-143">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-143">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-144">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-144">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="c4c10-145">搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-145">The search string.</span>
          </span>
          <span data-ttu-id="c4c10-146">字符串的格式应与为 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 方法指定的格式相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-146">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-147">根据指定目录路径中的指定搜索模式，使用 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象匹配初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-147">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that match a specified search pattern in the specified directory path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-148">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-148">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-149">
            <paramref name="path" /> 或 <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-149">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-150">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-151">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="c4c10-152">- 或 -  <paramref name="searchPattern" /> 不包含有效模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-152">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-153">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-153">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-154">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-154">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-155">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-155">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="c4c10-156">用于创建部件的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-156">The context used to create parts.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="c4c10-157">诊断用于标识部件源的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-157">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-158">根据特定反射上下文中指定目录路径的所有 DLL 文件，使用 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-158">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by  using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on all the DLL files in the specified directory path, in the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-159">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-159">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-160">
            <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-160">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-161">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-161">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-162">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-162">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-163">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-163">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, searchPattern As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-164">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-164">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-165">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-165">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="c4c10-166">搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-166">The search string.</span>
          </span>
          <span data-ttu-id="c4c10-167">字符串的格式应与为 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 方法指定的格式相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-167">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="c4c10-168">诊断用于标识部件源的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-168">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-169">根据指定目录路径中的指定搜索模式，部分使用 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-169">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path with the specified source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-170">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-170">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-171">
            <paramref name="path" /> 或 <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-171">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-172">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-172">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-173">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-173">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="c4c10-174">- 或 -  <paramref name="searchPattern" /> 不包含有效模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-174">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-175">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-175">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-176">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-176">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-177">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-177">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="c4c10-178">搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-178">The search string.</span>
          </span>
          <span data-ttu-id="c4c10-179">字符串的格式应与为 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 方法指定的格式相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-179">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="c4c10-180">用于创建部件的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-180">The context used to create parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-181">根据指定目录路径中的指定搜索模式，使用特定反射上下文 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-181">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path, using the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-182">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-182">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-183">
            <paramref name="path" /> 或 <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-183">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-184">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-184">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-185">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-185">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="c4c10-186">- 或 -  <paramref name="searchPattern" /> 不包含有效模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-186">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-187">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-187">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string searchPattern, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryCatalog(System::String ^ path, System::String ^ searchPattern, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.DirectoryCatalog : string * string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.DirectoryCatalog" Usage="new System.ComponentModel.Composition.Hosting.DirectoryCatalog (path, searchPattern, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c4c10-188">要扫描要添加目录的程序集的目录路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-188">The path to the directory to scan for assemblies to add to the catalog.</span>
          </span>
          <span data-ttu-id="c4c10-189">该路径必须是 <see cref="P:System.AppDomain.BaseDirectory" /> 的绝对路径或相对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-189">The path must be absolute or relative to <see cref="P:System.AppDomain.BaseDirectory" />.</span>
          </span>
        </param>
        <param name="searchPattern">
          <span data-ttu-id="c4c10-190">搜索字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-190">The search string.</span>
          </span>
          <span data-ttu-id="c4c10-191">字符串的格式应与为 <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> 方法指定的格式相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-191">The format of the string should be the same as specified for the <see cref="M:System.IO.Directory.GetFiles(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="c4c10-192">用于创建部件的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-192">The context used to create parts.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="c4c10-193">诊断用于标识部件源的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-193">The element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-194">根据指定目录路径中的指定搜索模式，使用特定反射上下文 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象初始化 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-194">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> class by using <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects based on the specified search pattern in the specified directory path, using the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c4c10-195">指定 <paramref name="path" /> 无效（例如，它位于未映射的驱动器上）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-195">The specified <paramref name="path" /> is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-196">
            <paramref name="path" /> 或 <paramref name="searchPattern" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-196">
              <paramref name="path" /> or <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c4c10-197">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-197">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4c10-198">
            <paramref name="path" /> 是一个零长度字符串，仅包含空白或者包含一个或多个特定于实现的无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-198">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more implementation-specific invalid characters.</span>
          </span>
          <span data-ttu-id="c4c10-199">- 或 -  <paramref name="searchPattern" /> 不包含有效模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-199">-or-  <paramref name="searchPattern" /> does not contain a valid pattern.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c4c10-200">指定的 <paramref name="path" />、文件名或者两者都超出了系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-200">The specified <paramref name="path" />, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " Usage="member this.Changed : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-201">在目录的内容更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-201">Occurs when the contents of the catalog has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; Changing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changing As EventHandler(Of ComposablePartCatalogChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^&gt; ^ Changing;" />
      <MemberSignature Language="F#" Value="member this.Changing : EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " Usage="member this.Changing : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-202">在目录正在更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-202">Occurs when the catalog is changing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="directoryCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c4c10-203">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-203">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-204">释放由 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-204">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-205">获取 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 遵循的已转换的绝对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-205">Gets the translated absolute path observed by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4c10-206">目录遵循的已转换的绝对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-206">The translated absolute path observed by the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="directoryCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-207">返回一个循环访问类别的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-207">Returns an enumerator that iterates through the catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4c10-208">一个可用于循环访问目录的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-208">An enumerator that can be used to iterate through the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="directoryCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="c4c10-209">要返回的 <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> 对象的条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-209">The conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> objects to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-210">获取与指定的定义所表示的约束相匹配的导入定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-210">Gets the export definitions that match the constraint expressed by the specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4c10-211">一个集合，包含 <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> 对象及与其关联的、并与 <paramref name="definition" /> 指定的约束相匹配的 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-211">A collection of objects that contain the <see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /> objects and their associated <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that match the constraint specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c4c10-212">
            <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象已释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-212">The <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4c10-213">
            <paramref name="definition" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-213">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; LoadedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; LoadedFiles" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedFiles As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ LoadedFiles { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadedFiles : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-214">获取目录中当前加载的文件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-214">Gets the collection of files currently loaded in the catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4c10-215">目录中当前加载的文件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-215">A collection of files currently loaded in the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit&#xA;override this.OnChanged : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit" Usage="directoryCatalog.OnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4c10-216">包含事件数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-216">An object  that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-217">引发 <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-217">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanging(class System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanging (e As ComposablePartCatalogChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanging(System::ComponentModel::Composition::Hosting::ComposablePartCatalogChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChanging : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit&#xA;override this.OnChanging : System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs -&gt; unit" Usage="directoryCatalog.OnChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4c10-218">包含事件数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-218">An object  that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4c10-219">引发 <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-219">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-220">获取 <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象遵循的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-220">Gets the path observed by the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4c10-221">目录遵循的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-221">The path observed by the catalog.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="directoryCatalog.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-222">使用目录中与搜索模式相匹配的最新文件刷新 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-222">Refreshes the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects with the latest files in the directory that match the search pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4c10-223">如果文件已添加到目录，它们也添加到目录。</span><span class="sxs-lookup"><span data-stu-id="c4c10-223">If files were added to the directory, they are also added to the catalog.</span></span> <span data-ttu-id="c4c10-224">如果文件已从目录中删除，它们还会删除从目录中。</span><span class="sxs-lookup"><span data-stu-id="c4c10-224">If files were removed from the directory, they are also removed from the catalog.</span></span> <span data-ttu-id="c4c10-225">为已删除的文件，该程序集不能从过程中，因此卸载<xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>对象将仅从目录删除这些文件。</span><span class="sxs-lookup"><span data-stu-id="c4c10-225">For files that have been removed, the assembly cannot be unloaded from the process, so <xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition> objects for those files will be removed only from the catalog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchPattern">
      <MemberSignature Language="C#" Value="public string SearchPattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SearchPattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SearchPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SearchPattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SearchPattern : string" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-226">获取传递给<see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> 对象的构造函数的搜索模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-226">Gets the search pattern that is passed into the constructor of the <see cref="T:System.ComponentModel.Composition.Hosting.DirectoryCatalog" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4c10-227">目录用于查找文件的搜索模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-227">The search pattern the catalog uses to find files.</span>
          </span>
          <span data-ttu-id="c4c10-228">默认模式为 \*.dll，该模式返回所有 DLL 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-228">The default is \*.dll, which returns all DLL files.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-229">获取目录的显示名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-229">Gets the display name of the directory catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4c10-230">一个包含字典目录的可读显示名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-230">A string that contains a human-readable display name of the directory catalog.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4c10-231">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="c4c10-231">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4c10-232">它只能在 <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> 实例强制转换为 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="c4c10-232">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-233">获取目录源自于的组合元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-233">Gets the composition element from which the directory catalog originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4c10-234">总是为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-234">Always <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4c10-235">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="c4c10-235">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c4c10-236">它只能在 <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> 实例强制转换为 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="c4c10-236">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4c10-237">获取目录的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-237">Gets a string representation of the directory catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4c10-238">目录的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4c10-238">A string representation of the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>