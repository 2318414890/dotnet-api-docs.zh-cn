<Type Name="CompositionContainer" FullName="System.ComponentModel.Composition.Hosting.CompositionContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="328341de3a5013e19268f11fba4c0e1e9c1348e4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39868671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositionContainer extends System.ComponentModel.Composition.Hosting.ExportProvider implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositionContainer&#xA;Inherits ExportProvider&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionContainer : System::ComponentModel::Composition::Hosting::ExportProvider, IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type CompositionContainer = class&#xA;    inherit ExportProvider&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Hosting.ExportProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1e873-101">管理部件的组合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e873-101">Manages the composition of parts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e873-102">一个<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>对象的应用程序中有两个主要目的。</span><span class="sxs-lookup"><span data-stu-id="1e873-102">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object serves two major purposes in an application.</span></span> <span data-ttu-id="1e873-103">首先，它跟踪的哪些部分可用于组合、 其依赖项，并执行撰写时可用部分设置的更改。</span><span class="sxs-lookup"><span data-stu-id="1e873-103">First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes.</span></span> <span data-ttu-id="1e873-104">其次，它提供了应用程序获取的组合部件实例或填充的可组合部件依赖关系的方法。</span><span class="sxs-lookup"><span data-stu-id="1e873-104">Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e873-105">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="1e873-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1e873-106">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="1e873-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1e873-107">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="1e873-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1e873-108">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="1e873-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1e873-109">有关详细信息，请参阅中的"使用对象实现 IDisposable"一节<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="1e873-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="1e873-110">部件可提供对容器或者直接或通过<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e873-110">Parts can be made available to the container either directly or through the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> property.</span></span> <span data-ttu-id="1e873-111">在此可发现的所有部分<xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog>可供要满足导入，以及直接添加任何部件的容器。</span><span class="sxs-lookup"><span data-stu-id="1e873-111">All the parts discoverable in this <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> are available to the container to fulfill imports, along with any parts added directly.</span></span>  
  
 <span data-ttu-id="1e873-112"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>方法允许实例化的部件添加到现有的容器。</span><span class="sxs-lookup"><span data-stu-id="1e873-112">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method allows instantiated parts to be added to an existing container.</span></span> <span data-ttu-id="1e873-113">假设成功组合，这些部件将具有从容器中检索的部分填充其导入和导出将可供其他部分。</span><span class="sxs-lookup"><span data-stu-id="1e873-113">Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts.</span></span> <span data-ttu-id="1e873-114">将被标记为可重新组合的导入注册以进行重新组合。</span><span class="sxs-lookup"><span data-stu-id="1e873-114">Imports marked as recomposable will be registered for recomposition.</span></span>  
  
 <span data-ttu-id="1e873-115"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A>方法允许部分填充而无需添加到容器的导入。</span><span class="sxs-lookup"><span data-stu-id="1e873-115">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> method allows a part to have its imports filled without being added to the container.</span></span> <span data-ttu-id="1e873-116">如果组合操作成功，将填充部件的导入，但部件的导出将不可用的其他部分并不导入将注册以进行重新组合。</span><span class="sxs-lookup"><span data-stu-id="1e873-116">If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.</span></span>  
  
 <span data-ttu-id="1e873-117"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 应始终释放对象。</span><span class="sxs-lookup"><span data-stu-id="1e873-117"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objects should always be disposed.</span></span> <span data-ttu-id="1e873-118">当<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A>调用方法时，<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>对象也会释放它已创建的所有部分。</span><span class="sxs-lookup"><span data-stu-id="1e873-118">When the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> method is called, the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object also disposes all the parts that it has created.</span></span>  
  
 <span data-ttu-id="1e873-119">一个<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>可以从多个线程访问的对象必须使用构造`isThreadSafe`参数设置为`true`，并使用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="1e873-119">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that can be accessed from multiple threads must be constructed with the `isThreadSafe` parameter set to `true`, using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29> constructor.</span></span> <span data-ttu-id="1e873-120">性能将会稍慢时`isThreadSafe`是`true`，因此我们建议将此参数设置为`false`单线程方案中。</span><span class="sxs-lookup"><span data-stu-id="1e873-120">Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios.</span></span> <span data-ttu-id="1e873-121">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="1e873-121">The default is `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1e873-122">一个<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>本身，或具有对它的引用的部件应永远不会导入。</span><span class="sxs-lookup"><span data-stu-id="1e873-122">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> should never import itself, or a part that has a reference to it.</span></span> <span data-ttu-id="1e873-123">此类引用可能允许访问容器中的所有部分受信任的一部分。</span><span class="sxs-lookup"><span data-stu-id="1e873-123">Such a reference could allow an untrusted part to gain access all the parts in the container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e873-124">在以下示例中，<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>对象和用来填充的一部分导入的目录进行初始化。</span><span class="sxs-lookup"><span data-stu-id="1e873-124">In the following example, a <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object is initialized with a catalog and is used to fill the imports of a part.</span></span> <span data-ttu-id="1e873-125">此示例使用特性化编程模型。</span><span class="sxs-lookup"><span data-stu-id="1e873-125">This example uses the Attributed Programming Model.</span></span>  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e873-126">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e873-127">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-127">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer providers" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="providers">
          <span data-ttu-id="1e873-128">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的数组，或为 <see langword="null" /> 以将 <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> 设置为空的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-128">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-129">使用指定的导出提供程序初始化 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-129">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified export providers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e873-130">
            <paramref name="providers" /> 包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-130">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Hosting.CompositionOptions * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (compositionOptions, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="compositionOptions">
          <span data-ttu-id="1e873-131">指定此容器行为的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-131">An object that specifies the behavior of this container.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="1e873-132">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的数组，或为 <see langword="null" /> 以将 <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> 设置为空的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-132">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-133">使用指定的选项和导出提供程序初始化 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-133">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified export providers and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e873-134">
            <paramref name="providers" /> 包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-134">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="1e873-135">向 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 提供 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-135">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="1e873-136">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的数组，或为 <see langword="null" /> 以将 <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> 设置为空的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-136">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-137">使用指定的目录和导出提供程序初始化 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-137">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog and export providers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e873-138">
            <paramref name="providers" /> 包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-138">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, isThreadSafe As Boolean, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, bool isThreadSafe, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * bool * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, isThreadSafe, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="1e873-139">向 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 提供 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-139">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </param>
        <param name="isThreadSafe">
          <span data-ttu-id="1e873-140">如果此 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象必须是线程安全的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-140">
              <see langword="true" /> if this <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object must be thread-safe; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="1e873-141">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的数组，或为 <see langword="null" /> 以将 <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> 属性设置为空的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-141">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set the <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> property to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-142">使用指定的目录、线程安全模式和导出提供程序初始化 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-142">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog, thread-safe mode, and export providers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e873-143">一个<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>必须设置对象，它可以从多个线程访问`isThreadSafe`参数`true`。</span><span class="sxs-lookup"><span data-stu-id="1e873-143">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that can be accessed from multiple threads must set the `isThreadSafe` parameter to `true`.</span></span> <span data-ttu-id="1e873-144">性能将会稍慢时`isThreadSafe`是`true`，因此我们建议将此参数设置为`false`单线程方案中。</span><span class="sxs-lookup"><span data-stu-id="1e873-144">Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios.</span></span> <span data-ttu-id="1e873-145">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="1e873-145">The default is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e873-146">
            <paramref name="providers" /> 的一个或多个元素为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-146">One or more elements of <paramref name="providers" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.CompositionOptions * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, compositionOptions, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="1e873-147">向 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 提供 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-147">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </param>
        <param name="compositionOptions">
          <span data-ttu-id="1e873-148">指定影响容器行为的选项的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-148">An object that specifies options that affect the behavior of the container.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="1e873-149">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的数组，或为 <see langword="null" /> 以将 <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> 设置为空的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-149">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-150">使用指定的目录，选项和导出提供程序初始化 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-150">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog, options, and export providers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e873-151">
            <paramref name="providers" /> 包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-151">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Catalog">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catalog As ComposablePartCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ Catalog { System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Catalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Usage="System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e873-152">获取提供对 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> 对象的容器访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-152">Gets the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> that provides the container access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e873-153">提供对从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象生成的导出的 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> 访问的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-153">The catalog that provides the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to exports produced from <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> objects.</span>
          </span>
          <span data-ttu-id="1e873-154">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-154">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1e873-155">
            <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-155">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Compose">
      <MemberSignature Language="C#" Value="public void Compose (System.ComponentModel.Composition.Hosting.CompositionBatch batch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compose(class System.ComponentModel.Composition.Hosting.CompositionBatch batch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compose (batch As CompositionBatch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compose(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch);" />
      <MemberSignature Language="F#" Value="member this.Compose : System.ComponentModel.Composition.Hosting.CompositionBatch -&gt; unit" Usage="compositionContainer.Compose batch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </Parameters>
      <Docs>
        <param name="batch">
          <span data-ttu-id="1e873-156">组合期间要包括的对 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-156">Changes to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> to include during the composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-157">在容器中添加或移除指定的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /> 中的部件并执行组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-157">Adds or removes the parts in the specified <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /> from the container and executes composition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e873-158">此方法是直接添加或从该容器中删除部件的主要方式。</span><span class="sxs-lookup"><span data-stu-id="1e873-158">This method is the primary way of directly adding or removing parts from the container.</span></span> <span data-ttu-id="1e873-159"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer>将始终保持稳定、 组成的状态。</span><span class="sxs-lookup"><span data-stu-id="1e873-159">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> will always maintain a stable, composed state.</span></span> <span data-ttu-id="1e873-160">因此，调用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>用空<xref:System.ComponentModel.Composition.Hosting.CompositionBatch>，根本没有必要启动组合。</span><span class="sxs-lookup"><span data-stu-id="1e873-160">Therefore, calling <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> with an empty <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> is never necessary to start composition.</span></span> <span data-ttu-id="1e873-161">改为调用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>方法需要对部件可用于进行更改时随时<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>。</span><span class="sxs-lookup"><span data-stu-id="1e873-161">Instead, call the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method whenever you need to make changes to the parts available to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span>  
  
 <span data-ttu-id="1e873-162"><xref:System.ComponentModel.Composition.Hosting.CompositionBatch>可以包含要添加的部件和要移除的部分。</span><span class="sxs-lookup"><span data-stu-id="1e873-162">The <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> can contain both parts to be added and parts to be removed.</span></span>  <span data-ttu-id="1e873-163">重新组合会进行一次每次调用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>。</span><span class="sxs-lookup"><span data-stu-id="1e873-163">Recomposition will take place only once for each call to <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e873-164">在此简单示例中，三个部分创建并添加到<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>，并检索一个部分以显示已填写所有导入。</span><span class="sxs-lookup"><span data-stu-id="1e873-164">In this simple example, three parts are created and added to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, and one part is retrieved to show that all imports have been filled.</span></span> <span data-ttu-id="1e873-165">此示例使用特性化编程模型。</span><span class="sxs-lookup"><span data-stu-id="1e873-165">This example uses the Attributed Programming Model.</span></span>  
  
 [!code-csharp[Composition.CompositionContainer.Compose#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer.compose/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer.Compose#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer.compose/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e873-166">释放由 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 占用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-166">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionContainer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e873-167">释放由 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 类的当前实例占用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-167">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e873-168">在完成使用 `Dispose` 后，应调用 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>。</span><span class="sxs-lookup"><span data-stu-id="1e873-168">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="1e873-169">`Dispose` 方法使 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="1e873-169">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state.</span></span> <span data-ttu-id="1e873-170">在调用`Dispose`，必须释放对所有引用<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>这样垃圾回收器才能收回内存的<xref:System.ComponentModel.Composition.Hosting.CompositionContainer>占用。</span><span class="sxs-lookup"><span data-stu-id="1e873-170">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.</span></span>  
  
 <span data-ttu-id="1e873-171">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="1e873-171">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e873-172">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>。</span><span class="sxs-lookup"><span data-stu-id="1e873-172">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="1e873-173">否则，在垃圾回收器调用 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="1e873-173">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="compositionContainer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1e873-174">
            <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-174">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-175">释放由 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-175">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="override this.GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="compositionContainer.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="1e873-176">定义要获取的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的条件的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-176">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="1e873-177">要使用的组合事务，或为 <see langword="null" /> 以禁用事务性组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-177">The composition transaction to use, or <see langword="null" /> to disable transactional composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-178">返回与指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 对象中的条件相匹配的所有导出的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-178">Returns a collection of all exports that match the conditions in the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e873-179">此 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象中与 <paramref name="definition" /> 指定的条件相匹配的所有 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-179">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects in this <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object that match the conditions specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e873-180">实现不应基数相关的不匹配将视为错误，并且不应引发异常的基数相关的不匹配。</span><span class="sxs-lookup"><span data-stu-id="1e873-180">Implementations should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</span></span> <span data-ttu-id="1e873-181">例如，如果导入请求一个导出，该提供程序没有匹配的导出或多个<xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A>方法应返回一个空<xref:System.Collections.Generic.IEnumerable%601>的集合<xref:System.ComponentModel.Composition.Primitives.Export>对象。</span><span class="sxs-lookup"><span data-stu-id="1e873-181">For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A> method should return an empty <xref:System.Collections.Generic.IEnumerable%601> collection of <xref:System.ComponentModel.Composition.Primitives.Export> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt; Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.Composition.Hosting.ExportProvider&gt; Providers" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ReadOnlyCollection(Of ExportProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ Providers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt;" Usage="System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e873-182">获取提供对其他 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> 对象的容器访问的导出提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-182">Gets the export providers that provide the container access to additional <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e873-183">提供对其他 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-183">A collection of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to additional <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span>
          </span>
          <span data-ttu-id="1e873-184">默认值为空 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-184">The default is an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1e873-185">
            <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-185">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExport">
      <MemberSignature Language="C#" Value="public void ReleaseExport (System.ComponentModel.Composition.Primitives.Export export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExport(class System.ComponentModel.Composition.Primitives.Export export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseExport(System::ComponentModel::Composition::Primitives::Export ^ export);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExport : System.ComponentModel.Composition.Primitives.Export -&gt; unit" Usage="compositionContainer.ReleaseExport export" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="export" Type="System.ComponentModel.Composition.Primitives.Export" />
      </Parameters>
      <Docs>
        <param name="export">
          <span data-ttu-id="1e873-186">需要释放的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-186">The <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that needs to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-187">从 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 中释放指定的 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-187">Releases the specified <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e873-188">此方法的行为可能会有所不同，具体取决于实现的<xref:System.ComponentModel.Composition.Hosting.ExportProvider>生成<xref:System.ComponentModel.Composition.Primitives.Export>实例。</span><span class="sxs-lookup"><span data-stu-id="1e873-188">The behavior of this method may vary depending on the implementation of the <xref:System.ComponentModel.Composition.Hosting.ExportProvider> that produced the <xref:System.ComponentModel.Composition.Primitives.Export> instance.</span></span> <span data-ttu-id="1e873-189">一般来说，应从容器中分离非共享导出。</span><span class="sxs-lookup"><span data-stu-id="1e873-189">As a rule, non-shared exports should be detached from the container.</span></span>  
  
 <span data-ttu-id="1e873-190">例如，<xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>只会释放<xref:System.ComponentModel.Composition.Primitives.Export>如果有来自<xref:System.ComponentModel.Composition.Primitives.ComposablePart>下构造<xref:System.ComponentModel.Composition.CreationPolicy.NonShared>上下文。</span><span class="sxs-lookup"><span data-stu-id="1e873-190">For example, the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will only release an <xref:System.ComponentModel.Composition.Primitives.Export> if it comes from a <xref:System.ComponentModel.Composition.Primitives.ComposablePart> that was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy.NonShared> context.</span></span> <span data-ttu-id="1e873-191">发布在此上下文中的意味着每个步骤的依赖关系链<xref:System.ComponentModel.Composition.Primitives.Export>分离容器和调用的引用的对象`Dispose`上<xref:System.ComponentModel.Composition.Primitives.ComposablePart>对象根据需要。</span><span class="sxs-lookup"><span data-stu-id="1e873-191">Release in this context means walking the dependency chain of the <xref:System.ComponentModel.Composition.Primitives.Export> objects, detaching references from the container and calling `Dispose` on the <xref:System.ComponentModel.Composition.Primitives.ComposablePart> objects as needed.</span></span> <span data-ttu-id="1e873-192">如果<xref:System.ComponentModel.Composition.Primitives.Export>下构造<xref:System.ComponentModel.Composition.CreationPolicy.Shared>上下文<xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>将不执行任何操作，作为指定<xref:System.ComponentModel.Composition.Primitives.Export>可能正由其他请求者。</span><span class="sxs-lookup"><span data-stu-id="1e873-192">If the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy.Shared> context the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will do nothing, as the specified <xref:System.ComponentModel.Composition.Primitives.Export> may being used by other requestors.</span></span> <span data-ttu-id="1e873-193">仅会分离这些当容器为自身被释放。</span><span class="sxs-lookup"><span data-stu-id="1e873-193">Those will only be detached when the container is itself disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e873-194">
            <paramref name="export" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-194">
              <paramref name="export" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExport&lt;T&gt; (Lazy&lt;T&gt; export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExport&lt;T&gt;(class System.Lazy`1&lt;!!T&gt; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExport(Of T) (export As Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void ReleaseExport(Lazy&lt;T&gt; ^ export);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExport : Lazy&lt;'T&gt; -&gt; unit" Usage="compositionContainer.ReleaseExport export" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="export" Type="System.Lazy&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1e873-195">导出的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-195">The type of the export.</span>
          </span>
        </typeparam>
        <param name="export">
          <span data-ttu-id="1e873-196">对要移除的导出的间接引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-196">An indirect reference to the export to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-197">从组合中移除指定的导出并释放其资源（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-197">Removes the specified export from composition and releases its resources if possible.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports">
      <MemberSignature Language="C#" Value="public void ReleaseExports (System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports(class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports (exports As IEnumerable(Of Export))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;System.ComponentModel.Composition.Primitives.Export&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;" />
      </Parameters>
      <Docs>
        <param name="exports">
          <span data-ttu-id="1e873-198">将释放的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-198">A collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-199">从 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 中释放一组 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-199">Releases a set of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e873-200">此方法的行为可能会有所不同，具体取决于要在其中上下文<xref:System.ComponentModel.Composition.Primitives.Export>构造。</span><span class="sxs-lookup"><span data-stu-id="1e873-200">The behavior of this method may vary depending on the context in which the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed.</span></span> <span data-ttu-id="1e873-201">有关更多信息，请参见 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1e873-201">For more information, see the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e873-202">
            <paramref name="exports" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-202">
              <paramref name="exports" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e873-203">
            <paramref name="exports" /> 包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-203">
              <paramref name="exports" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExports&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports(Of T) (exports As IEnumerable(Of Lazy(Of T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;Lazy&lt;'T&gt;&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1e873-204">导出的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-204">The type of the exports.</span>
          </span>
        </typeparam>
        <param name="exports">
          <span data-ttu-id="1e873-205">对要移除的导出的间接引用的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-205">A collection of indirect references to the exports to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-206">从组合中移除导出的集合并释放其资源（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-206">Removes a collection of exports from composition and releases their resources if possible.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExports&lt;T,TMetadataView&gt; (System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports&lt;T, TMetadataView&gt;(class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports(Of T, TMetadataView) (exports As IEnumerable(Of Lazy(Of T, TMetadataView)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1e873-207">导出的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-207">The type of the exports.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="1e873-208">导出的元数据视图的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-208">The type of the exports' metadata view.</span>
          </span>
        </typeparam>
        <param name="exports">
          <span data-ttu-id="1e873-209">对要移除的导出及其元数据的间接引用的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-209">A collection of indirect references to the exports to be removed and their metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-210">从组合中移除导出的集合并释放其资源（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-210">Removes a collection of exports from composition and releases their resources if possible.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="compositionContainer.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="1e873-211">要满足其导入的部件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-211">The part to satisfy the imports of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e873-212">满足指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> 对象的导入，而无需注册该对象以进行重新组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-212">Satisfies the imports of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object without registering it for recomposition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1e873-213">
            <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-213">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e873-214">
            <paramref name="part" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-214">
              <paramref name="part" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="1e873-215">复合期间发生错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-215">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="1e873-216">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e873-216">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of the errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>