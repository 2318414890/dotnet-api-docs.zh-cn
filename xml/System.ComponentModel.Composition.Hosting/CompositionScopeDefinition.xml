<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositionScopeDefinition.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536b7a4929a803d54a261b493077361ed779c3a36.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36b7a4929a803d54a261b493077361ed779c3a36</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>Represents a node in a tree of scoped catalogs, reflecting an underlying catalog and its child scopes.</source>
          <target state="translated">表示有范围类别的树中的节点，反应底层目录及其子范围。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此类型实现<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">在使用完类型后，您应直接或间接释放类型。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>中的方法<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>块。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，请使用 <ph id="ph1">`using`</ph>（在 C# 中）或 <ph id="ph2">`Using`</ph>（在 Visual Basic 中）等语言构造。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口主题。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})">
          <source>The underlying catalog for this catalog.</source>
          <target state="translated">该目录的基础目录。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">此目录的子范围的集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class with the specified underlying catalog and children.</source>
          <target state="translated">使用指定的基础目录和子项初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>The underlying catalog for this catalog.</source>
          <target state="translated">该目录的基础目录。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">此目录的子范围的集合。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>The public surface for this catalog.</source>
          <target state="translated">此目录的公共表面。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class with the specified underlying catalog, children, and public surface.</source>
          <target state="translated">使用指定的基础目录，子项和公共图面初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed">
          <source>Occurs when the underlying catalog has changed, if that catalog supports notifications.</source>
          <target state="translated">当基础目录已更改时发生（如果目录支持通知）。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing">
          <source>Occurs when the underlying catalog is changing, if that catalog supports notifications.</source>
          <target state="translated">当基础目录正在更改时发生 （如果目录支持通知）。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children">
          <source>Gets the child scopes of this catalog.</source>
          <target state="translated">获取此类别的子范围。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">此目录的子范围的集合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管的资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若要仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>Called by the <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class.</source>
          <target state="translated">由 <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph> 方法调用，以释放 <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> 类的当前实例所占用的托管资源和非托管资源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>This method is called only by the public <ph id="ph1">`Dispose()`</ph> and <ph id="ph2">`Finalize()`</ph> methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the <ph id="ph3">`Dispose(Boolean)`</ph> method should be used as follows:</source>
          <target state="translated">此方法称为仅由公共<ph id="ph1">`Dispose()`</ph>和<ph id="ph2">`Finalize()`</ph>方法; 这些方法不直接调用此方法。当实现的释放模式的布尔参数<ph id="ph3">`Dispose(Boolean)`</ph>方法应在使用，如下所示：</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Dispose()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`true`</ph> to release both managed and unmanaged resources.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>当前对象的方法应调用<ph id="ph2">`Dispose(Boolean)`</ph>布尔参数设置为<ph id="ph3">`true`</ph>释放托管和非托管资源。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Finalize()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`false`</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">`Finalize()`</ph>当前对象的方法应调用<ph id="ph2">`Dispose(Boolean)`</ph>布尔参数设置为<ph id="ph3">`false`</ph>若要仅释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>For more information, see .</source>
          <target state="translated">有关详细信息，请参阅。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator">
          <source>Returns an enumerator that iterates through the catalog.</source>
          <target state="translated">返回一个循环访问类别的枚举器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator">
          <source>An enumerator that can be used to iterate through the catalog.</source>
          <target state="translated">一个可用于循环访问目录的枚举数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>Conditions that specify which exports to match.</source>
          <target state="translated">指定相匹配的导出的条件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>Gets a collection of exports that match the conditions specified by the import definition.</source>
          <target state="translated">获取与导入定义所指定的条件相匹配的导出的集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>A collection of exports that match the specified conditions.</source>
          <target state="translated">与指定的条件相匹配的导出的集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Contains data for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph> event.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph> 事件的数据。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Contains data for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph> event.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph> 事件的数据。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface">
          <source>Gets a collection of parts visible to the parent scope of this catalog.</source>
          <target state="translated">获取对此目录的上一级范围可见部分的集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface">
          <source>A collection of parts visible to the parent scope of this catalog.</source>
          <target state="translated">此目录的父范围可见部分的集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>