<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="X509SecurityTokenAuthenticator.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50f88502c086749213587878aa5deb7633b791be8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f88502c086749213587878aa5deb7633b791be8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
          <source>Authenticates an <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">对 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 进行身份验证。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
          <source>Use the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> class to authenticate <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security tokens.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> 类对 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> 安全令牌进行身份验证。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.</source>
          <target state="translated">如果调用 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法对令牌进行身份验证，则不会将 X.509 证书映射到 Windows 标识，也不会使用证书链来验证证书。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that verifies that the certificate is valid.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph>，用于验证证书是否有效。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class using the specified certificate validator.</source>
          <target state="translated">使用指定的证书验证程序初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 类提供了一组预定义的证书验证模型，如 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>These validation models can be passed to the <ph id="ph1">`validator`</ph> parameter.</source>
          <target state="translated">可以将这些验证模型传递给 <ph id="ph1">`validator`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>When an application requires a custom validation method, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
          <target state="translated">当应用程序要求使用自定义验证方法时，请从 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 中派生一个类，并重写 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 方法由 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法调用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>By default, the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> does not map the X.509 certificate to a Windows identity.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> 不会将 X.509 证书映射到 Windows 标识。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that verifies that the certificate is valid.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph>，用于验证证书是否有效。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要将证书标识映射到 Windows 标识，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.</source>
          <target state="translated">使用指定的证书验证方法初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 类的新实例，并指示是否将证书标识映射到 Windows 标识。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 类提供了一组预定义的证书验证模型，如 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>These validation models can be passed to the <ph id="ph1">`validator`</ph> parameter.</source>
          <target state="translated">可以将这些验证模型传递给 <ph id="ph1">`validator`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When an application requires a custom validation method, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
          <target state="translated">当应用程序要求使用自定义验证方法时，请从 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 中派生一个类，并重写 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 方法由 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法调用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token and <ph id="ph2">`mapToWindows`</ph> is <ph id="ph3">`true`</ph>, the X.509 certificate is mapped to a Windows account and claims are added to the <ph id="ph4">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> with the Windows groups that the user belongs to.</source>
          <target state="translated">如果调用 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法对令牌进行身份验证并且 <ph id="ph2">`mapToWindows`</ph> 为 <ph id="ph3">`true`</ph>，则会将 X.509 证书映射到 Windows 帐户，并将声明添加到用户所属的 Windows 组所在的 <ph id="ph4">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>How the X.509 certificate is mapped to a Windows account depends upon the security token type:</source>
          <target state="translated">将 X.509 证书映射到 Windows 帐户的方式取决于安全令牌类型：</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When the security token is of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the X.509 certificate is mapped using the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property.</source>
          <target state="translated">如果安全令牌类型为 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>，则使用 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> 属性映射 X.509 证书。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When the security token is of type <ph id="ph1">`X509SecurityToken`</ph>, the X.509 certificate is mapped to a Windows account using its user principal name (UPN).</source>
          <target state="translated">如果安全令牌类型为 <ph id="ph1">`X509SecurityToken`</ph>，则使用 Windows 帐户的用户主要名称 (UPN) 将 X.509 证书映射到该帐户。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that verifies that the certificate is valid.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph>，用于验证证书是否有效。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要将证书标识映射到 Windows 标识，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the groups the Windows user belongs to in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /&gt;</ph> property that is constructed throughout the authentication process; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要在整个身份验证过程中将 Windows 用户所属的组包括在构造的 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 属性中，则为 <ph id="ph2">&lt;see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.</source>
          <target state="translated">使用指定的证书验证方法初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 类的新实例，并指示是否将证书标识映射到 Windows 标识以及用户所属的 Windows 组。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>Pass <ph id="ph1">`false`</ph> to the <ph id="ph2">`includeWindowsGroups`</ph> parameter when the Windows group information is not required to improve performance.</source>
          <target state="translated">如果不需要 Windows 组信息，请将 <ph id="ph1">`false`</ph> 传递给 <ph id="ph2">`includeWindowsGroups`</ph> 参数以提高性能。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class has several static properties, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property that can be passed to the <ph id="ph3">`validator`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 类有几个可传递给 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> 参数的静态属性，如 <ph id="ph3">`validator`</ph> 属性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>These properties provide common validation methods for X.509 certificates.</source>
          <target state="translated">这些属性为 X.509 证书提供了常用验证方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>When a custom validation method is required, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
          <target state="translated">当要求使用自定义验证方法时，请从 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 中派生一个类，并重写 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 方法由 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法调用。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>When <ph id="ph1">`true`</ph> is passed into the <ph id="ph2">`mapToWindows`</ph> parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <ph id="ph3">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph>, such as the Windows groups that the user belongs to.</source>
          <target state="translated">如果将 <ph id="ph1">`true`</ph> 传递给 <ph id="ph2">`mapToWindows`</ph> 参数，则会将 X.509 证书映射到 Windows 帐户，并将相关声明添加到 <ph id="ph3">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> 中，如用户所属的 Windows 组。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>When the security token is of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.</source>
          <target state="translated">如果安全令牌类型为 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>，则 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> 属性使用在令牌中指定的标识；否则，将 X.509 证书映射到使用 Kerberos S4U 登录的 Windows 标识（基于 X.509 证书的用户主要名称 SubjectAltNames 扩展）。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">要验证的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">获取一个值，指示此安全令牌身份验证器是否可以验证指定的安全令牌。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when <ph id="ph2">&lt;paramref name="token" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> security token or a class that derives from <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是 <ph id="ph2">&lt;paramref name="token" /&gt;</ph> 安全令牌或从 <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 中派生的类，则为 <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>；否则为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method does not authenticate the security token; that is performed by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 方法不对安全令牌进行身份验证；该操作由 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法执行。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>Gets a value that indicates whether to map the X.509 certificate to a Windows account.</source>
          <target state="translated">获取一个值，指示是否将 X.509 证书映射到 Windows 帐户。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to map the X.509 certificate to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要将 X.509 证书映射到 Windows 帐户，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A&gt;</ph> property can only be set in a constructor.</source>
          <target state="translated">只能在构造函数中设置 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation.</source>
          <target state="translated">如果使用传输级 SSL 或 HTTPS 安全性，并且基础安全通道或 Internet 信息服务 (IIS) 已提供了映射，则应用该映射而不进行链验证。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity.</source>
          <target state="translated">否则，在进行映射之前，应使用证书链验证证书，并且证书必须链接到 NT_AUTHORITY 标识。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the <ph id="ph1">`CertVerifyCertificateChainPolicy`</ph> function (see the <bpt id="p1">[</bpt>CertVerifyCertificateChainPolicy<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=83570)</ept> function in the Cryptography SDK).</source>
          <target state="translated">中定义，使用的链结构对应于 CERT_CHAIN_POLICY_NT_AUTH<ph id="ph1">`CertVerifyCertificateChainPolicy`</ph>函数 (请参阅<bpt id="p1">[</bpt>CertVerifyCertificateChainPolicy<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=83570)</ept>加密 SDK 中的函数)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>This behavior only occurs when mapping a certificate to a Windows account.</source>
          <target state="translated">只有在将证书映射到 Windows 帐户时，才会发生此行为。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">要验证的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">对指定的安全令牌进行身份验证，并返回该安全令牌的授权策略集。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">一个类型为 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>，它包含对此应用程序生效的授权策略集。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is overridden, follow these guidelines:</source>
          <target state="translated">重写 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法时，请遵循下列准则：</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated">当无法验证传递给 <ph id="ph1">`token`</ph> 参数的安全令牌时，将引发 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When there are no authorization policies in effect for this application, return an empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
          <target state="translated">当不存在对此应用程序生效的授权策略时，返回 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 类型的空 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated">当此方法返回 <ph id="ph1">`null`</ph> 时，<ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 将引发 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method of the validation method specified in the constructor to authenticate the <ph id="ph3">`token`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法调用在构造函数中指定的验证方法的 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 方法，以便对 <ph id="ph3">`token`</ph> 参数进行身份验证。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>