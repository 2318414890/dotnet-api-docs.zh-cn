<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityTokenAuthenticator.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac513269bb93c59d7c497318909c4aab1e95858fb8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13269bb93c59d7c497318909c4aab1e95858fb8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>Authenticates a security token.</source>
          <target state="translated">对安全令牌进行身份验证。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> class and the classes that derive from it authenticate security tokens.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> 类以及从中派生的类对安全令牌进行身份验证。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>Typically, you would only derive a class directly from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> when you create a custom security token.</source>
          <target state="translated">通常，只有在创建自定义安全令牌时，才应从 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> 中直接派生类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>, such as <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;</ph>.</source>
          <target state="translated">如果要重写内置安全令牌的默认身份验证或授权行为，请从派生自 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> 的某个类（如 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;</ph>）中进行派生。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>When you derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>, override the following two methods: <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> 中派生类时，应重写下面的两个方法：<ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method determines whether this security token authenticator can authenticate a specific security token.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 方法确定此安全令牌身份验证器是否可以对特定安全令牌进行身份验证。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method authenticates the security token and establishes a set of authorization policies for authorization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法对安全令牌进行身份验证，并建立一组授权策略以进行授权。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The authorization policies map the claims found in the security token to claims required by the application.</source>
          <target state="translated">授权策略将位于安全令牌中的声明映射到应用程序所需的声明。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">要验证的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">获取一个值，该值指示指定的安全令牌是否可由该安全令牌身份验证器进行验证。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when token can be validated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以验证令牌，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method checks whether the token parameter is <ph id="ph2">`null`</ph> and then calls the <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph4">`token`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> 方法检查令牌参数是否为 <ph id="ph2">`null`</ph>，然后调用 <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 方法以确定此安全令牌身份验证器是否可以对 <ph id="ph4">`token`</ph> 的安全令牌类型进行身份验证。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">要验证的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">在派生类中重写时，获取一个值，指示此安全令牌身份验证器是否可以验证指定的安全令牌。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when <ph id="ph2">&lt;paramref name="token" /&gt;</ph> can be validated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以验证 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 <ph id="ph2">&lt;paramref name="token" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph3">`token`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 方法由 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> 方法调用，用于确定此安全令牌身份验证器是否可以对 <ph id="ph3">`token`</ph> 的安全令牌类型进行身份验证。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>This does not authenticate the security token; that is performed by the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method.</source>
          <target state="translated">该方法不对安全令牌进行身份验证；该操作由 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> 方法执行。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">要验证的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">对指定的安全令牌进行身份验证，并返回该安全令牌的授权策略集。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">一个类型为 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>，它包含对此应用程序生效的授权策略集。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method checks whether the <ph id="ph2">`token`</ph> parameter is <ph id="ph3">`null`</ph>, calls the <ph id="ph4">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <ph id="ph5">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> 方法检查 <ph id="ph2">`token`</ph> 参数是否为 <ph id="ph3">`null`</ph>，然后调用 <ph id="ph4">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> 方法以确定此安全令牌身份验证器是否可以对此安全令牌进行身份验证；如果可以，则随后调用 <ph id="ph5">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> cannot be authenticated by this security token authenticator</source>
          <target state="translated">此安全令牌身份验证器无法对 <ph id="ph1">&lt;paramref name="token" /&gt;</ph> 进行身份验证</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not authenticated.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 未通过身份验证。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">要验证的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">在派生类中重写时，对指定的安全令牌进行身份验证，并返回该安全令牌的授权策略集。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">一个类型为 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>，它包含对此应用程序生效的授权策略集。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method to authenticate a specific security token type.</source>
          <target state="translated">重写 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法，以便对特定安全令牌类型进行身份验证。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is overridden, follow these guidelines:</source>
          <target state="translated">重写 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法时，请遵循下列准则：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated">当无法验证传递给 <ph id="ph1">`token`</ph> 参数的安全令牌时，将引发 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When there are no authorization policies in effect for this application, return an empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
          <target state="translated">当不存在对此应用程序生效的授权策略时，返回 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 类型的空 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated">当此方法返回 <ph id="ph1">`null`</ph> 时，<ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 将引发 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 方法由 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> 方法调用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>