<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDebugVsaScriptCodeItem.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59cadb871fc370eb4669678a05ac449e2e9ec0c89.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cadb871fc370eb4669678a05ac449e2e9ec0c89</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
          <source>Defines methods that evaluate expressions and parse strings.</source>
          <target state="translated">定义用于计算表达式和分析字符串的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
          <source>This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</source>
          <target state="translated">此接口通常由一个对象实现，该对象表示代码块并通常由调试器调用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
          <source>This interface provides extra functionality that is needed by an IActiveScript host.</source>
          <target state="translated">此接口提供 IActiveScript 宿主需要的额外功能。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</source>
          <target state="translated">在类中实现时，计算由代码项表示的块、表达式或语句，并返回值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</source>
          <target state="translated">它通常由调试器调用，满足其计算表达式（例如在“监视”窗口中）的需要。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>For expressions, the value is the result of the expression.</source>
          <target state="translated">对于表达式来说，值是表达式的结果。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</source>
          <target state="translated">对于块和语句，结果表达式是由块或语句计算的最后一个表达式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>Returns a value that represents the evaluation of the statement, expression, or block.</source>
          <target state="translated">返回一个值，该值表示语句、表达式或块的计算。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>Note that the <ph id="ph1">&lt;xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A&gt;</ph> method is functionally identical to the <ph id="ph2">&lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;</ph> method.</source>
          <target state="translated">请注意，<ph id="ph1">&lt;xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A&gt;</ph>方法在功能上等同于<ph id="ph2">&lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>Only the marshaling attributes differ.</source>
          <target state="translated">与不同，只有封送处理的属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>This version of the interface allows an unmanaged debugger to obtain the return value as an <ph id="ph1">`IUnknown`</ph> pointer rather than a <ph id="ph2">`VARIANT`</ph>.</source>
          <target state="translated">此版本的接口允许获取形式的返回值非托管的调试器<ph id="ph1">`IUnknown`</ph>指针而不是<ph id="ph2">`VARIANT`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</source>
          <target state="translated">一个格式良好的命名断点字符串，它提供函数、可选参数列表以及可选 IL 偏移量。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</source>
          <target state="translated">输出参数，它返回从输入字符串分析出的函数名称，或在输入参数格式不良时返回空字符串。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning the number of arguments in the optional argument list.</source>
          <target state="translated">输出参数，它返回可选参数列表中的参数数目。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Returns zero if there is no arguments list or if the string is not well formed.</source>
          <target state="translated">如果没有参数列表或如果字符串格式不良，则返回零。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</source>
          <target state="translated">输出参数，它返回参数列表中所有参数的类型名称的列表（用空格分隔），或在缺少参数列表或输入字符串格式不良时返回空字符串。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</source>
          <target state="translated">输出参数，它返回一个字符串（该字符串包含在输入中命名的函数的返回类型），或在缺少返回类型或输入字符串格式不良好时返回空字符串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</source>
          <target state="translated">无符号长整型数，它给出输入字符串的 IL 偏移量，或在没有 IL 偏移量或字符串格式不良时给出零。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>When implemented in a class, parses strings and returns the parsed-out information.</source>
          <target state="translated">在类中实现时，分析字符串并返回分析出的信息。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <ph id="ph1">&lt;see langword="string" /&gt;</ph>.</source>
          <target state="translated">此方法通常由调试器调用，满足其分析有关断点的信息的需要，该断点表示为 <ph id="ph1">&lt;see langword="string" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>The debugger might have a breakpoint typed in by the user in the form <bpt id="p1">*</bpt>functionname-arguments-ILoffset<ept id="p1">*</ept>.</source>
          <target state="translated">调试器中可能存在用户以 functionname-arguments-ILoffset 形式键入的断点。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>A named breakpoint string can have a complex format, for example, <bpt id="p1">&lt;c&gt;</bpt>F.B(C.D[], int, arg : double ) : C.Abc + 123.<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated">已命名的断点字符串可具有复杂的格式，例如，<bpt id="p1">&lt;c&gt;</bpt>F.B(C.D[], int, arg : double ) : C.Abc + 123.<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>The parameter list is optional, as is the IL offset.</source>
          <target state="translated">参数列表是可选的，IL 偏移量也是这样。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the named breakpoint is successfully parsed, <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">如果成功地分析了命名的断点，则返回 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则返回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
