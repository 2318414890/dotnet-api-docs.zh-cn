<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PingReply.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07bbe843af9ff93fe334a4540428a9889d10750cb3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbe843af9ff93fe334a4540428a9889d10750cb3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.NetworkInformation.PingReply">
          <source>Provides information about the status and data resulting from a <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.Send" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> operation.</source>
          <target state="translated">提供有关 <ph id="ph1">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.Send" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /&gt;</ph> 操作的状态及产生的数据的信息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>类尝试发送到远程计算机的 Internet 控制消息协议 (ICMP) 回显请求和接收从通过 ICMP 回显回复消息的计算机的信息。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class uses instances of the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>类使用的实例<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>类返回有关此操作，如其状态和发送请求并接收答复所花费的时间的信息。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> methods return instances of the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> class directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph>方法返回的实例<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>类直接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> methods return a <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> in the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph> method's <ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>中<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingCompletedEventHandler&gt;</ph>方法的<ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply&gt;</ph>通过访问<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>If the value of <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is not <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>, you should not use the values returned by the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> properties.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph>不<ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>，不应使用返回的值<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>，<ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>或<ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph> property will return zero, the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> property will return an empty array, and the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> property will return <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>属性将返回零，<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>属性将返回空数组，和<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>属性将返回<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PingReply">
          <source>The following code example demonstrates using <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class to send an ICMP echo request synchronously and display the response.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>类来同步发送 ICMP 回显请求和显示响应。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</source>
          <target state="translated">获取发送 Internet 控制消息协议 (ICMP) 回送答复的主机地址。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> containing the destination for the ICMP echo message.</source>
          <target state="translated">包含 ICMP 回送消息目标的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Address%2A&gt;</ph> returned by any of the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> overloads can originate from a malicious remote computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Address%2A&gt;</ph>返回任一<ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph>重载可以是来自恶意的远程计算机。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>Do not connect to the remote computer using this address.</source>
          <target state="translated">不连接到远程计算机使用此地址。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>Use DNS to determine the IP address of the machine to which you want to connect.</source>
          <target state="translated">使用 DNS 来确定你想要连接的计算机的 IP 地址。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Address">
          <source>The following code example sends an ICMP echo request synchronously and displays the value of this property.</source>
          <target state="translated">下面的代码示例将同步发送 ICMP 回显请求，并显示此属性的值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</source>
          <target state="translated">获取 Internet 控制消息协议 (ICMP) 回送答复消息中收到的数据缓冲区。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</source>
          <target state="translated">包含 ICMP 回送答复消息中收到的数据的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组，如果没有收到答复，则为空数组。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</source>
          <target state="translated">ICMP 回显请求而发送的数据缓冲区被返回到发件人在回显回复消息，以便可以计算已知大小的数据包的往返行程时间。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The data buffer, combined with the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</source>
          <target state="translated">数据缓冲区，结合<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph>选项，可以用于发现源和目标计算机之间的网络路径的最大传输单位。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at <bpt id="p1">[</bpt><ph id="ph1">https://www.ietf.org</ph><ept id="p1">](https://www.ietf.org)</ept>.</source>
          <target state="translated">有关其他信息，请参阅 RFC 1574，第 3.2 节，在"跟踪" <bpt id="p1">[</bpt> <ph id="ph1">https://www.ietf.org</ph> <ept id="p1">](https://www.ietf.org)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The default buffer used with <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph> contains 32 bytes of data.</source>
          <target state="translated">与所使用的默认缓冲区<ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping.Send%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.NetworkInformation.Ping.SendAsync%2A&gt;</ph>包含 32 个字节的数据。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Buffer">
          <source>The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</source>
          <target state="translated">下面的代码示例将同步发送 ICMP 回显请求，并显示此属性返回的缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</source>
          <target state="translated">获取用于将答复传输到 Internet 控制消息协议 (ICMP) 回送请求的选项。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <ph id="ph2">&lt;see cref="P:System.Net.NetworkInformation.PingReply.Status" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.Success" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PingOptions" /&gt;</ph> 是 <ph id="ph2">&lt;see cref="P:System.Net.NetworkInformation.PingReply.Status" /&gt;</ph>，则为一个包含生存时间 (TTL) 和用于传输答复的分段指令的 <ph id="ph3">&lt;see cref="F:System.Net.NetworkInformation.IPStatus.Success" /&gt;</ph> 对象；否则为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</source>
          <target state="translated">TTL 定义其源和目标之间传播时，节点可以转发数据包的次数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</source>
          <target state="translated">如果转发，也称为跃点，数超过 TTL 为指定的值，数据包将被视为未送达，并且将被丢弃。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> value specified in the ICMP echo request controls packet fragmentation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> ICMP 回显请求控件数据包碎片中指定的值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>If <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph> error is returned.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A&gt;</ph>是<ph id="ph2">`true`</ph>和数据包的大小超过数据包所采用的网络路径的最大传输单元，数据包将被丢弃和<ph id="ph3">&lt;xref:System.Net.NetworkInformation.IPStatus.PacketTooBig&gt;</ph>返回错误。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Options">
          <source>The following code example sends an ICMP echo request synchronously and displays the values stored in the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions&gt;</ph> object returned by this property.</source>
          <target state="translated">下面的代码示例将同步发送 ICMP 回显请求，并显示中存储的值<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingOptions&gt;</ph>此属性返回的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</source>
          <target state="translated">获取发送 Internet 控制消息协议 (ICMP) 回显请求和接收相应 ICMP 回显回复消息所花费的毫秒数。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that specifies the round trip time, in milliseconds.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>，用于指定往返时间（以毫秒计）。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>If the Echo request fails, the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph> time is reported as 0, which is also a valid value when the request succeeds.</source>
          <target state="translated">如果回显请求失败，<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>时间报告为 0，则在请求成功时也是一个有效的值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> to determine whether the value returned by this property should be ignored.</source>
          <target state="translated">必须检查<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph>以确定是否应忽略此属性返回的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.RoundtripTime">
          <source>The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</source>
          <target state="translated">下面的代码示例将同步发送 ICMP 回显请求，并显示此属性返回的缓冲区的大小。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</source>
          <target state="translated">获取发送 Internet 控制消息协议 (ICMP) 回送请求并接收相应 ICMP 回送答复消息的尝试的状态。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.IPStatus" /&gt;</ph> value indicating the result of the request.</source>
          <target state="translated">指示请求结果的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.IPStatus" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>If the value of <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph> is not <ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>, you should not use the values returned by the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> properties.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.Status%2A&gt;</ph>不<ph id="ph2">&lt;xref:System.Net.NetworkInformation.IPStatus.Success&gt;</ph>，不应使用返回的值<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>，<ph id="ph4">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>或<ph id="ph5">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph> properties will return zero, and the <ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph> property will return <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PingReply.Buffer%2A&gt;</ph>属性将返回零，和<ph id="ph3">&lt;xref:System.Net.NetworkInformation.PingReply.Options%2A&gt;</ph>属性将返回<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.NetworkInformation.PingReply.Status">
          <source>The following code example demonstrates using <ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph> class to send an ICMP echo request synchronously and display the response.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Net.NetworkInformation.Ping&gt;</ph>类来同步发送 ICMP 回显请求和显示响应。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>