<Type Name="IPGlobalStatistics" FullName="System.Net.NetworkInformation.IPGlobalStatistics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab2e2ddae89c05b084a43421b4d97a1520bc0a18" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461191" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IPGlobalStatistics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPGlobalStatistics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPGlobalStatistics" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPGlobalStatistics" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPGlobalStatistics abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 Internet 协议 (IP) 统计数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类由<xref:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics%2A>和<xref:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics%2A>方法返回 IP 流量的信息。  
  
 Internet 协议用于将 IP 数据包从源计算机移到目标计算机。 IP 还可以处理成足够小，对于传输，该过程称为碎片中的多个数据包太大的数据包。  
  
 IETF RFC 2011 中定义的 IP 关联到的管理信息基础对象中此类中的属性。  
  
   
  
## Examples  
 下面的代码示例显示 IP 统计信息。  
  
 [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]
 [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPGlobalStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalStatistics.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPGlobalStatistics();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数可以调用仅由派生自的类<xref:System.Net.NetworkInformation.IPGlobalStatistics>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTtl">
      <MemberSignature Language="C#" Value="public abstract int DefaultTtl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultTtl" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultTtl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultTtl { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Internet 协议 (IP) 数据包的默认生存时间 (TTL) 值。</summary>
        <value>指定 TTL 的 <see cref="T:System.Int64" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TTL 值被报告为在将被丢弃之前可以转发数据包的路由节点数。 将其转发之前，当前 TTL 值数据包中每个节点递减。 如果 TTL 值达到零时，数据包将被视为未送达，并且将被丢弃。 请注意，当数据包时从一个节点到另一个，这也称为"跃点"。  
  
   
  
## Examples  
 下面的代码示例显示此属性的值。  
  
 [!code-cpp[NCLNetInfo2#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#14)]
 [!code-csharp[NCLNetInfo2#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#14)]
 [!code-vb[NCLNetInfo2#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool ForwardingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForwardingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ForwardingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool ForwardingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Boolean" /> 值，该值指定是否启用 Internet 协议 (IP) 数据包转发。</summary>
        <value>指定是否启用数据包转发的 <see cref="T:System.Boolean" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值确定计算机是否转发 IP 数据报发送到另一台计算机。 通常，路由器转发数据包和主机计算机不这样做。  
  
   
  
## Examples  
 下面的代码示例显示此属性的值。  
  
 [!code-cpp[NCLNetInfo2#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#14)]
 [!code-csharp[NCLNetInfo2#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#14)]
 [!code-vb[NCLNetInfo2#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfInterfaces">
      <MemberSignature Language="C#" Value="public abstract int NumberOfInterfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfInterfaces" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NumberOfInterfaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int NumberOfInterfaces { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取网络接口数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它包含用于获取此 <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> 实例的地址族的网络接口数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性返回的数据包括环回接口。  
  
 网络接口都是也称为网络适配器。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfIPAddresses">
      <MemberSignature Language="C#" Value="public abstract int NumberOfIPAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfIPAddresses" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NumberOfIPAddresses As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int NumberOfIPAddresses { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取分配给本地计算机的 Internet 协议 (IP) 地址数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指示分配给由此对象描述的地址族（Internet 协议版本 4 或 Internet 协议版本 6）的 IP 地址数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性返回的数据包括如隧道伪网络接口地址。  
  
 如果此实例通过调用获得<xref:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics%2A>，此属性返回的 IPv4 地址分配给本地计算机的数量。 同样，如果此实例通过调用获得<xref:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics%2A>，此属性返回分配给本地计算机的 IPv6 地址的数目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfRoutes">
      <MemberSignature Language="C#" Value="public abstract int NumberOfRoutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfRoutes" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NumberOfRoutes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int NumberOfRoutes { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Internet 协议 (IP) 路由表中的路由数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定路由表中的路由总数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputPacketRequests">
      <MemberSignature Language="C#" Value="public abstract long OutputPacketRequests { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OutputPacketRequests" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OutputPacketRequests As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long OutputPacketRequests { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取出站 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定出站数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 出站数据包数不包括已转发的数据包数。  
  
   
  
## Examples  
 下面的代码示例显示出站 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#17)]
 [!code-csharp[NCLNetInfo2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#17)]
 [!code-vb[NCLNetInfo2#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputPacketRoutingDiscards">
      <MemberSignature Language="C#" Value="public abstract long OutputPacketRoutingDiscards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OutputPacketRoutingDiscards" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OutputPacketRoutingDiscards As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long OutputPacketRoutingDiscards { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取已从路由表中丢弃的路由数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定已丢弃的有效路由的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 丢弃的有效路由表项的一个可能的原因可能是以释放缓冲区空间的其他条目。  
  
   
  
## Examples  
 下面的代码示例显示出站 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#17)]
 [!code-csharp[NCLNetInfo2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#17)]
 [!code-vb[NCLNetInfo2#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputPacketsDiscarded">
      <MemberSignature Language="C#" Value="public abstract long OutputPacketsDiscarded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OutputPacketsDiscarded" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OutputPacketsDiscarded As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long OutputPacketsDiscarded { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取已丢弃的已传输 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定已丢弃的外发数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性返回的数据不包括由于进行数据包未送达的错误而被丢弃数据包。 此数据中包括的数据包将通常由于网络问题，如缓冲区空间不足而被丢弃。  
  
   
  
## Examples  
 下面的代码示例显示出站 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#17)]
 [!code-csharp[NCLNetInfo2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#17)]
 [!code-vb[NCLNetInfo2#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputPacketsWithNoRoute">
      <MemberSignature Language="C#" Value="public abstract long OutputPacketsWithNoRoute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OutputPacketsWithNoRoute" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OutputPacketsWithNoRoute As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long OutputPacketsWithNoRoute { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取本地计算机未能确定其目标地址路由的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定由于未能找到路由而未能发送的数据包数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属于此类别的 IP 数据包将被丢弃。  
  
   
  
## Examples  
 下面的代码示例显示出站 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#17)]
 [!code-csharp[NCLNetInfo2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#17)]
 [!code-vb[NCLNetInfo2#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketFragmentFailures">
      <MemberSignature Language="C#" Value="public abstract long PacketFragmentFailures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PacketFragmentFailures" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PacketFragmentFailures As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long PacketFragmentFailures { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取未能分段的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定需要分段但设置了“不要分段”(Don't Fragment) 位的数据包总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 超过为 IP 传输的最大大小的数据包分成碎片的并且在目标位置重新合并。 返回此属性的值指示需要为 IP 传输分段，但找不到，因为数据包标头指定没有碎片数据包的数据包的数。  
  
   
  
## Examples  
 下面的代码示例显示 IP 数据包的重组统计的信息。  
  
 [!code-cpp[NCLNetInfo2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#18)]
 [!code-csharp[NCLNetInfo2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#18)]
 [!code-vb[NCLNetInfo2#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketReassembliesRequired">
      <MemberSignature Language="C#" Value="public abstract long PacketReassembliesRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PacketReassembliesRequired" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PacketReassembliesRequired As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long PacketReassembliesRequired { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取需要重新组合的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定需要重新组合的数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 超过为 IP 传输的最大大小的数据包分成碎片的并且在目标位置重新合并。  
  
   
  
## Examples  
 下面的代码示例显示 IP 数据包的重组统计的信息。  
  
 [!code-cpp[NCLNetInfo2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#18)]
 [!code-csharp[NCLNetInfo2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#18)]
 [!code-vb[NCLNetInfo2#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketReassemblyFailures">
      <MemberSignature Language="C#" Value="public abstract long PacketReassemblyFailures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PacketReassemblyFailures" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PacketReassemblyFailures As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long PacketReassemblyFailures { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取没有成功重新组合的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定未能重新组合的数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 超过为 IP 传输的最大大小的数据包分成碎片的并且在目标位置重新合并。 如果某些片段都将丢失，或在设置时间内未到达，则重新组合不会成功。  
  
   
  
## Examples  
 下面的代码示例显示 IP 数据包的重组统计的信息。  
  
 [!code-cpp[NCLNetInfo2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#18)]
 [!code-csharp[NCLNetInfo2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#18)]
 [!code-vb[NCLNetInfo2#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketReassemblyTimeout">
      <MemberSignature Language="C#" Value="public abstract long PacketReassemblyTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PacketReassemblyTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PacketReassemblyTimeout As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long PacketReassemblyTimeout { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Internet 协议 (IP) 数据包的所有段必须到达的最长时限。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定数据包的所有段必须到达以免被丢弃的最大毫秒数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 超过为 IP 传输的最大大小的数据包分成碎片的并且在目标位置重新合并。 如果在允许的时间内未收集所有片段构成分段 IP 数据包，则会丢弃该数据包。  
  
   
  
## Examples  
 下面的代码示例显示 IP 数据包的重组统计的信息。  
  
 [!code-cpp[NCLNetInfo2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#18)]
 [!code-csharp[NCLNetInfo2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#18)]
 [!code-vb[NCLNetInfo2#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketsFragmented">
      <MemberSignature Language="C#" Value="public abstract long PacketsFragmented { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PacketsFragmented" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PacketsFragmented As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long PacketsFragmented { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取分段的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定分段的数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 超过为 IP 传输的最大大小的数据包分成碎片的并且在目标位置重新合并。  
  
   
  
## Examples  
 下面的代码示例显示 IP 数据包的重组统计的信息。  
  
 [!code-cpp[NCLNetInfo2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#18)]
 [!code-csharp[NCLNetInfo2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#18)]
 [!code-vb[NCLNetInfo2#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PacketsReassembled">
      <MemberSignature Language="C#" Value="public abstract long PacketsReassembled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PacketsReassembled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PacketsReassembled As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long PacketsReassembled { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取重新组合的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定已成功重新组合的分段数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 超过为 IP 传输的最大大小的会话层数据包分成碎片的并且在目标位置重新合并。 如果某些片段都将丢失，或在设置时间内未到达，则重新组合不会成功。  
  
   
  
## Examples  
 下面的代码示例显示 IP 数据包的重组统计的信息。  
  
 [!code-cpp[NCLNetInfo2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#18)]
 [!code-csharp[NCLNetInfo2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#18)]
 [!code-vb[NCLNetInfo2#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedPackets">
      <MemberSignature Language="C#" Value="public abstract long ReceivedPackets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReceivedPackets" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReceivedPackets As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ReceivedPackets { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取收到的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定收到的 IP 数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回此属性的值包括错误地收到的数据包。  
  
   
  
## Examples  
 下面的代码示例显示收到的 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]
 [!code-csharp[NCLNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]
 [!code-vb[NCLNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedPacketsDelivered">
      <MemberSignature Language="C#" Value="public abstract long ReceivedPacketsDelivered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReceivedPacketsDelivered" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReceivedPacketsDelivered As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ReceivedPacketsDelivered { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取传送的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定传送的 IP 数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回此属性的值包括 Internet 控制消息协议 (ICMP) 消息。  
  
   
  
## Examples  
 下面的代码示例显示收到的 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]
 [!code-csharp[NCLNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]
 [!code-vb[NCLNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedPacketsDiscarded">
      <MemberSignature Language="C#" Value="public abstract long ReceivedPacketsDiscarded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReceivedPacketsDiscarded" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReceivedPacketsDiscarded As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ReceivedPacketsDiscarded { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取已收到但被丢弃的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定已丢弃的传入数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回此属性的值包括只有这些已被弃用，即使它们不包含错误，从而阻止重新组合或传送的数据包。 通常情况下，此类别中的数据包将由于缓冲区空间不足而被丢弃。  
  
   
  
## Examples  
 下面的代码示例显示收到的 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]
 [!code-csharp[NCLNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]
 [!code-vb[NCLNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedPacketsForwarded">
      <MemberSignature Language="C#" Value="public abstract long ReceivedPacketsForwarded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReceivedPacketsForwarded" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReceivedPacketsForwarded As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ReceivedPacketsForwarded { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取转发的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定转发的数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果本地计算机不是一个路由器，则此属性返回的值包括数据包已成功通过本地计算机路由源。 源路由是数据包的源凭此可以指定到的目标地址的路由的 IP 选项。  
  
   
  
## Examples  
 下面的代码示例显示收到的 IP 数据包的统计信息。  
  
 [!code-cpp[NCLNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]
 [!code-csharp[NCLNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]
 [!code-vb[NCLNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedPacketsWithAddressErrors">
      <MemberSignature Language="C#" Value="public abstract long ReceivedPacketsWithAddressErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReceivedPacketsWithAddressErrors" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReceivedPacketsWithAddressErrors As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ReceivedPacketsWithAddressErrors { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取收到的地址有错误的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定收到的、标头的地址部分有错误的 IP 数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回此属性的值包括被丢弃的地址数据包相关的标头字段，如无效的地址中的问题。 如果未启用数据包转发，则此属性返回的值包括由于目标地址不是本地地址而被丢弃的数据包。  
  
   
  
## Examples  
 下面的代码示例显示接收到的 IP 数据包有错误的统计信息。  
  
 [!code-cpp[NCLNetInfo2#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#16)]
 [!code-csharp[NCLNetInfo2#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#16)]
 [!code-vb[NCLNetInfo2#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedPacketsWithHeadersErrors">
      <MemberSignature Language="C#" Value="public abstract long ReceivedPacketsWithHeadersErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReceivedPacketsWithHeadersErrors" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReceivedPacketsWithHeadersErrors As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ReceivedPacketsWithHeadersErrors { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取收到的标头有错误的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指定收到的但因标头中有错误而被丢弃的 IP 数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回此属性的值包括被丢弃的标头字段，例如错误校验和中的非解决相关问题的数据包、 生存时间值超出和不正确的 IP 选项。  
  
   
  
## Examples  
 下面的代码示例显示接收到的 IP 数据包有错误的统计信息。  
  
 [!code-cpp[NCLNetInfo2#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#16)]
 [!code-csharp[NCLNetInfo2#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#16)]
 [!code-vb[NCLNetInfo2#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivedPacketsWithUnknownProtocol">
      <MemberSignature Language="C#" Value="public abstract long ReceivedPacketsWithUnknownProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReceivedPacketsWithUnknownProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReceivedPacketsWithUnknownProtocol As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ReceivedPacketsWithUnknownProtocol { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在本地计算机上收到的、标头中有未知协议的 Internet 协议 (IP) 数据包数。</summary>
        <value>
          <see cref="T:System.Int64" /> 值，它指示收到的、协议未知的 IP 数据包的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IP 标头中的协议字段指示在对 IP 数据报的数据部分中使用的下一步级协议。 如果无法识别该协议，则数据无法传递到正确的应用程序。  
  
   
  
## Examples  
 下面的代码示例显示接收到的 IP 数据包有错误的统计信息。  
  
 [!code-cpp[NCLNetInfo2#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#16)]
 [!code-csharp[NCLNetInfo2#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#16)]
 [!code-vb[NCLNetInfo2#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>