<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PhysicalAddress.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac560936bae143ea68d22d99243f51e63e4ba126f83.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60936bae143ea68d22d99243f51e63e4ba126f83</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.NetworkInformation.PhysicalAddress">
          <source>Provides the Media Access Control (MAC) address for a network interface (adapter).</source>
          <target state="translated">提供网络接口（适配器）的媒体访问控制 (MAC) 地址。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PhysicalAddress">
          <source>The MAC address, or physical address, is a hardware address that uniquely identifies each node, such as a computer or printer, on a network.</source>
          <target state="translated">MAC 地址或物理地址，是唯一标识每个节点，如计算机或打印机，请在网络硬件地址。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PhysicalAddress">
          <source>Instances of this class are returned by the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">此类的实例由<ph id="ph1">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.NetworkInformation.PhysicalAddress">
          <source>The following code example displays the physical addresses of all interfaces on the local computer.</source>
          <target state="translated">下面的代码示例显示本地计算机上的所有接口的物理地址。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array containing the address.</source>
          <target state="translated">包含地址的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])">
          <source>In common scenarios, applications do not need to call this constructor; instances of this class are returned by the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress%2A&gt;</ph> method.</source>
          <target state="translated">在常见方案中，应用程序不需要调用此构造函数;此类的实例由<ph id="ph1">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])">
          <source>Note that you can also use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph> method to create a new instance of <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>.</source>
          <target state="translated">请注意，你还可以使用<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph>方法创建的新实例<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.#ctor(System.Byte[])">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph> object.</source>
          <target state="translated">下面的代码示例创建一个新<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> to compare to the current instance.</source>
          <target state="translated">要与当前实例进行比较的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> instances.</source>
          <target state="translated">比较两个 <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance and the specified instance contain the same address; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此实例和指定的实例包含相同的地址，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)">
          <source>The following code example compares two <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph> instances.</source>
          <target state="translated">下面的代码示例比较两个<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes">
          <source>Returns the address of the current instance.</source>
          <target state="translated">返回当前实例的地址。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array containing the address.</source>
          <target state="translated">包含地址的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes">
          <source>The following code example calls this method to retrieve the address of a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph> and formats the address for display.</source>
          <target state="translated">下面的代码示例调用此方法来检索的地址<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>和格式显示的地址。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.GetHashCode">
          <source>Returns the hash value of a physical address.</source>
          <target state="translated">返回物理地址的哈希值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.GetHashCode">
          <source>An integer hash value.</source>
          <target state="translated">整数哈希值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Net.NetworkInformation.PhysicalAddress.None">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> instance with a zero length address.</source>
          <target state="translated">返回一个具有零长度地址的新 <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Net.NetworkInformation.PhysicalAddress.None">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.NetworkInformation.PhysicalAddress.None">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph> method returns <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.None&gt;</ph> if you specify <ph id="ph3">`null`</ph> address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.None&gt;</ph>如果指定<ph id="ph3">`null`</ph>地址。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.NetworkInformation.PhysicalAddress.None">
          <source>The following code example demonstrates using this field to test the result of parsing an address.</source>
          <target state="translated">下面的代码示例演示如何使用此字段来测试地址分析结果。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the address that will be used to initialize the <ph id="ph2">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> instance returned by this method.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含用于初始化由此方法返回的 <ph id="ph2">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> 实例的地址。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>Parses the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and stores its contents as the address bytes of the <ph id="ph2">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> returned by this method.</source>
          <target state="translated">分析指定的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 并将其内容存储为由此方法返回的 <ph id="ph2">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> 的地址字节。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> instance with the specified address.</source>
          <target state="translated">具有指定地址的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkInformation.PhysicalAddress" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>The <ph id="ph1">`address`</ph> parameter must contain a string that can only consist of numbers and upper-case letters as hexadecimal digits.</source>
          <target state="translated"><ph id="ph1">`address`</ph>参数必须包含一个字符串，只能包含数字和大写字母作为十六进制数字。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>Some examples of string formats that are acceptable are as follows:</source>
          <target state="translated">可接受的字符串格式的一些示例如下所示：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>Note that an address that contains <ph id="ph1">`f0-e1-d2-c3-b4-a5`</ph> will fail to parse and throw an exception.</source>
          <target state="translated">请注意，一个地址，包含<ph id="ph1">`f0-e1-d2-c3-b4-a5`</ph>将无法进行分析，并引发异常。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes%2A&gt;</ph> method to retrieve the address from an existing <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph> instance.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes%2A&gt;</ph>方法用于检索从现有地址<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph> instance by calling the <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>实例通过调用<ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter contains an illegal hardware address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 参数包含非法硬件地址。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)">
          <source>This exception also occurs if the <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter contains a string in the incorrect format.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="address" /&gt;</ph> 参数包含格式不正确的字符串，也会出现此异常。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.ToString">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the address of this instance.</source>
          <target state="translated">返回此实例的地址的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 表示形式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.NetworkInformation.PhysicalAddress.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the address contained in this instance.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含此实例中所含的地址。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.NetworkInformation.PhysicalAddress.ToString">
          <source>The following code example demonstrates displaying the address in a <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph> instance.</source>
          <target state="translated">下面的代码示例演示如何显示中的地址<ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>实例。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>