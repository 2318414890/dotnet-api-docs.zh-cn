<Type Name="TcpChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fadd0d1783d6b9e965ab0e32e4a8e0bb46476dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpChannel&#xA;Implements IChannel, IChannelReceiver, IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="63a0a-101">提供使用 TCP 协议传输消息的信道实现。</span>
      <span class="sxs-lookup">
        <span data-stu-id="63a0a-101">Provides a channel implementation that uses the TCP protocol to transmit messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-102">信道跨越远程处理边界 （例如，在应用程序域的计算机） 之间传输消息。</span><span class="sxs-lookup"><span data-stu-id="63a0a-102">Channels transport messages across remoting boundaries (for example, between computers on application domains).</span></span> <span data-ttu-id="63a0a-103"><xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>类是一个组合的功能的方便类<xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>类和<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>类。</span><span class="sxs-lookup"><span data-stu-id="63a0a-103">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> class is a convenience class combining the functionality of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class and the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class.</span></span>  
  
 <span data-ttu-id="63a0a-104">.NET Framework 远程处理基础结构使用的通道用于传输远程调用。</span><span class="sxs-lookup"><span data-stu-id="63a0a-104">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="63a0a-105">当客户端进行到的远程对象调用时，则会将调用序列化到一条消息是由客户端通道发送和接收的服务器信道。</span><span class="sxs-lookup"><span data-stu-id="63a0a-105">When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="63a0a-106">然后，它是反序列化和处理。</span><span class="sxs-lookup"><span data-stu-id="63a0a-106">It is then deserialized and processed.</span></span> <span data-ttu-id="63a0a-107">任何返回的值是由服务器通道传输和接收的客户端通道。</span><span class="sxs-lookup"><span data-stu-id="63a0a-107">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="63a0a-108">若要执行其他处理的消息，你可以指定的实现<xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>和<xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>通过由其处理的所有消息<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>传递。</span><span class="sxs-lookup"><span data-stu-id="63a0a-108">To perform additional processing of messages, you can specify implementations of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> and <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> are passed.</span></span>  
  
 <span data-ttu-id="63a0a-109">A<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>对象有关联的配置属性，可以在设置配置文件在运行时 (通过调用静态<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType>方法) 或以编程方式 (通过将传递<xref:System.Collections.IDictionary>集合到<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A>构造函数）。</span><span class="sxs-lookup"><span data-stu-id="63a0a-109">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="63a0a-110">有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。</span><span class="sxs-lookup"><span data-stu-id="63a0a-110">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63a0a-111">如果在服务器计算机正在运行 Windows 95/98/Me，则服务器<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>不能指定为安全。</span><span class="sxs-lookup"><span data-stu-id="63a0a-111">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-112">下面的代码示例演示如何使用<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>设置远程处理服务器和其客户端。</span><span class="sxs-lookup"><span data-stu-id="63a0a-112">The following code example shows how to use a <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> to set up a remoting server and its client.</span></span> <span data-ttu-id="63a0a-113">此示例包含三个部分、 一个服务器、 客户端，并且服务器和客户端使用的远程对象。</span><span class="sxs-lookup"><span data-stu-id="63a0a-113">The example contains three parts, a server, a client, and a remote object used by the server and the client.</span></span>  
  
 <span data-ttu-id="63a0a-114">下面的代码示例演示了一台服务器：</span><span class="sxs-lookup"><span data-stu-id="63a0a-114">The following code example shows a server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#1)]  
  
 <span data-ttu-id="63a0a-115">下面的代码示例演示了此服务器的客户端：</span><span class="sxs-lookup"><span data-stu-id="63a0a-115">The following code example shows a client for this server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#10)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#10)]  
  
 <span data-ttu-id="63a0a-116">下面的代码示例演示使用在服务器和客户端的远程对象：</span><span class="sxs-lookup"><span data-stu-id="63a0a-116">The following code example shows the remote object used by the server and the client:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/common.cpp#20)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/common.cs#20)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63a0a-117">初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63a0a-118">初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例，仅激活客户端信道，不激活服务器信道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating only a client channel, and not a server channel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-119">默认构造函数初始化为其默认值的所有字段。</span><span class="sxs-lookup"><span data-stu-id="63a0a-119">The default constructor initializes all fields to their default values.</span></span> <span data-ttu-id="63a0a-120">如果使用默认构造函数，则通道仅用作客户端通道，并不在任何端口上侦听。</span><span class="sxs-lookup"><span data-stu-id="63a0a-120">If the default constructor is used, the channel functions only as a client channel, and does not listen on any ports.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-121">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="63a0a-121">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#11)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="63a0a-122">服务器信道侦听的端口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-122">The port on which the server channel listens.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63a0a-123">使用侦听指定端口的服务器信道初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-123">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with a server channel that listens on the specified port.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-124">若要请求远程处理系统，选择代表你的开放端口，指定端口 0 （零）。</span><span class="sxs-lookup"><span data-stu-id="63a0a-124">To request that the remoting system choose an open port on your behalf, specify port 0 (zero).</span></span> <span data-ttu-id="63a0a-125">这将创建<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>实例以在动态分配的端口上侦听请求。</span><span class="sxs-lookup"><span data-stu-id="63a0a-125">This will create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance to listen for requests on the dynamically assigned port.</span></span> <span data-ttu-id="63a0a-126">这通常是在客户端若要确保<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>侦听回调方法。</span><span class="sxs-lookup"><span data-stu-id="63a0a-126">This is typically done on the client to make sure that a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> is listening for callback methods.</span></span>  
  
 <span data-ttu-id="63a0a-127">如果 0 传递到构造函数<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>实例化以使用可用端口。</span><span class="sxs-lookup"><span data-stu-id="63a0a-127">If 0 is passed to the constructor the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> is instantiated to use a free port.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-128">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="63a0a-128">The following code example demonstrates using this method.</span></span> <span data-ttu-id="63a0a-129">若要请求，动态分配可用的端口，设置`port`参数为零。</span><span class="sxs-lookup"><span data-stu-id="63a0a-129">To request that an available port be dynamically assigned, set the `port` parameter to zero.</span></span>  
  
 [!code-cpp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/VB/server.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, clientSinkProvider As IClientChannelSinkProvider, serverSinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ clientSinkProvider, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ serverSinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="clientSinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
        <Parameter Name="serverSinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="63a0a-130">一个 <see cref="T:System.Collections.IDictionary" /> 集合，它为客户端和服务器信道要使用的配置属性指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-130">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the client and server channels.</span>
          </span>
        </param>
        <param name="clientSinkProvider">
          <span data-ttu-id="63a0a-131">客户端信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-131">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel.</span>
          </span>
        </param>
        <param name="serverSinkProvider">
          <span data-ttu-id="63a0a-132">服务器信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-132">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63a0a-133">使用指定的配置属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-133">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with the specified configuration properties and sinks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-134">有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。</span><span class="sxs-lookup"><span data-stu-id="63a0a-134">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63a0a-135">如果在服务器计算机正在运行 Windows 95/98/Me，则服务器<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel>不能指定为安全。</span><span class="sxs-lookup"><span data-stu-id="63a0a-135">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
 <span data-ttu-id="63a0a-136">信道接收器提供插件的点，它允许访问基础消息流经通道，以及传输机制用于将消息发送到的远程对象的流。</span><span class="sxs-lookup"><span data-stu-id="63a0a-136">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="63a0a-137">信道接收器也要负责客户端和服务器之间的消息传输。</span><span class="sxs-lookup"><span data-stu-id="63a0a-137">Channel sinks are also responsible for transporting messages between the client and the server.</span></span> <span data-ttu-id="63a0a-138">信道接收器链中链接在一起，所有信道消息流过此接收器链之前最终序列化和传输消息。</span><span class="sxs-lookup"><span data-stu-id="63a0a-138">Channel sinks are linked together in a chain, and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span> <span data-ttu-id="63a0a-139">如果不需要接收器功能，设置`clientSinkProvider`和`serverSinkProvider`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="63a0a-139">If you do not require sink functionality, set the `clientSinkProvider` and `serverSinkProvider` parameters to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-140">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="63a0a-140">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63a0a-141">所提供的信道属性的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-141">A provided channel property was improperly formatted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63a0a-142">获取信道特定数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-142">Gets the channel-specific data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63a0a-143">包含特定于信道的数据的 <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-143">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-144">尽管实例的形式返回<xref:System.Object?displayProperty=nameWithType>，此属性的值可以强制转换为的实例<xref:System.Runtime.Remoting.Channels.ChannelDataStore>描述的通道<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel>对象侦听。</span><span class="sxs-lookup"><span data-stu-id="63a0a-144">Although returned as an instance of <xref:System.Object?displayProperty=nameWithType>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-145">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="63a0a-145">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#5)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63a0a-146">获取当前信道的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-146">Gets the name of the current channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63a0a-147">一个 <see cref="T:System.String" /> 包含信道名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-147">A <see cref="T:System.String" /> that contains the name of the channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-148">每个已注册的通道具有一个唯一名称。</span><span class="sxs-lookup"><span data-stu-id="63a0a-148">Every registered channel has a unique name.</span></span> <span data-ttu-id="63a0a-149">该名称用于检索特定通道时调用<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>。</span><span class="sxs-lookup"><span data-stu-id="63a0a-149">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span> <span data-ttu-id="63a0a-150">若要设置<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A>属性、 分配的值为"name"索引属性传递到字典中的<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="63a0a-150">To set the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> property, assign the value to the "name" indexed property in the dictionary passed to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-151">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="63a0a-151">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#3)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63a0a-152">获取当前信道的优先级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-152">Gets the priority of the current channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63a0a-153">一个整数，表示分配给该信道的优先级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-153">An integer that represents the priority assigned to the channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63a0a-154">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="63a0a-154">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#4)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="63a0a-155">新接收器应将消息传递到的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-155">The URL to which the new sink should deliver messages.</span>
          </span>
          <span data-ttu-id="63a0a-156">可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-156">Can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="remoteChannelData">
          <span data-ttu-id="63a0a-157">新接收器应将消息传递到的远程主机的信道数据对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-157">The channel data object of the remote host to which the new sink should deliver messages.</span>
          </span>
          <span data-ttu-id="63a0a-158">可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-158">Can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="objectURI">
          <span data-ttu-id="63a0a-159">此方法返回时，包含新信道消息接收器的 URI，该信道消息接收器将消息传送到指定 URL 或信道数据对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-159">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span>
          </span>
          <span data-ttu-id="63a0a-160">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-160">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63a0a-161">返回将消息传送到指定 URL 或信道数据对象的信道消息接收器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-161">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63a0a-162">将消息传递给指定 URL 或信道数据对象的信道消息接收器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-162">A channel message sink that delivers messages to the specified URL or channel data object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-163"><xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A>方法返回的通道消息接收器将消息传送到任一指定的 URL 或通道数据对象。</span><span class="sxs-lookup"><span data-stu-id="63a0a-163">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or channel data object.</span></span> <span data-ttu-id="63a0a-164">如果`uri`参数是`null`，`remoteChannelData`用作接收器的目标。</span><span class="sxs-lookup"><span data-stu-id="63a0a-164">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="63a0a-165">请`url`或`remoteChannelData`参数可以是`null`，但不是两者。</span><span class="sxs-lookup"><span data-stu-id="63a0a-165">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
 <span data-ttu-id="63a0a-166">信道接收器提供插件的点，它允许访问基础消息流经通道，以及传输机制用于将消息发送到的远程对象的流。</span><span class="sxs-lookup"><span data-stu-id="63a0a-166">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="63a0a-167">信道接收器链中的链接在一起`ChannelSinkProviders`之前，所有信道消息流经此接收器链最终序列化和传输消息。</span><span class="sxs-lookup"><span data-stu-id="63a0a-167">Channel sinks are linked together in a chain of `ChannelSinkProviders` and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-168">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="63a0a-168">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public string[] GetUrlsForUri (string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUrlsForUri (objectURI As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectURI">
          <span data-ttu-id="63a0a-169">需要其 URL 的对象的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-169">The URI of the object for which URLs are required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63a0a-170">返回具有指定 URI 的对象的所有 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-170">Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63a0a-171">具有指定 URI 的对象的所有 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-171">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-172">使用此方法的<xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="63a0a-172">This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-173">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="63a0a-173">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63a0a-174">获取或设置一个布尔值，该值指示当前信道是否安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-174">Gets or sets a Boolean value that indicates whether the current channel is secure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63a0a-175">一个布尔值，指示当前实例是否安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-175">A Boolean value that indicates whether the current instance is secure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-176">因为它是不足以将负责确保安全性参数的设置，此属性需要未显式设置<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>。</span><span class="sxs-lookup"><span data-stu-id="63a0a-176">This property need not be set explicitly, as it is sufficient to set the ensureSecurity parameter of <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="63a0a-177">从中提取远程已知对象的 URI 的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-177">The URL from which to extract the URI of the remote well-known object.</span>
          </span>
        </param>
        <param name="objectURI">
          <span data-ttu-id="63a0a-178">当此方法返回时，包含含有远程已知对象的 URI 的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-178">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object.</span>
          </span>
          <span data-ttu-id="63a0a-179">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-179">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63a0a-180">从指定 URL 提取信道 URI 和远程已知对象 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-180">Extracts the channel URI and the remote well-known object URI from the specified URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63a0a-181">当前信道的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-181">The URI of the current channel.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-182">对象的 URI 是唯一标识特定对象实例的值。</span><span class="sxs-lookup"><span data-stu-id="63a0a-182">A URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63a0a-183">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="63a0a-183">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#6)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="63a0a-184">可选的初始化信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-184">Optional initialization information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63a0a-185">指示当前信道开始侦听请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-185">Instructs the current channel to start listening for requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-186">不需要调用此方法以开始侦听新初始化的通道。</span><span class="sxs-lookup"><span data-stu-id="63a0a-186">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="63a0a-187">使用此方法重新启动后的通道上侦听<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="63a0a-187">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called.</span></span>  
  
 <span data-ttu-id="63a0a-188">如果您的通道使用动态分配的端口号，则重新开始侦听时，可能会更改端口号。</span><span class="sxs-lookup"><span data-stu-id="63a0a-188">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="63a0a-189">`data`参数可以用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="63a0a-189">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="63a0a-190">如果不希望将特定状态传递到通道，设置`data`到`null`。</span><span class="sxs-lookup"><span data-stu-id="63a0a-190">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="63a0a-191">该信道的可选状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-191">Optional state information for the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63a0a-192">指示当前信道停止侦听请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="63a0a-192">Instructs the current channel to stop listening for requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a0a-193">使用此方法以停止侦听通道上。</span><span class="sxs-lookup"><span data-stu-id="63a0a-193">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="63a0a-194">若要重新开始侦听，使用<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="63a0a-194">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="63a0a-195">如果您的通道使用动态分配的端口号，则重新开始侦听时，可能会更改端口号。</span><span class="sxs-lookup"><span data-stu-id="63a0a-195">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="63a0a-196">`data`参数可以用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="63a0a-196">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="63a0a-197">如果不希望将特定状态传递到通道，设置`data`到`null`。</span><span class="sxs-lookup"><span data-stu-id="63a0a-197">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>