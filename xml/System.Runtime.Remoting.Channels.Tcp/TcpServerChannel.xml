<Type Name="TcpServerChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel">
  <TypeSignature Language="C#" Value="public class TcpServerChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpServerChannel&#xA;Implements IChannel, IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpServerChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2d938-101">为远程调用实现使用 TCP 协议传输消息的服务器信道。</span><span class="sxs-lookup"><span data-stu-id="2d938-101">Implements a server channel for remote calls that uses the TCP protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-102">通道跨越远程处理边界 （例如，计算机或应用程序域） 传输消息。</span><span class="sxs-lookup"><span data-stu-id="2d938-102">Channels transport messages across remoting boundaries (for example, computers or application domains).</span></span> <span data-ttu-id="2d938-103"><xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>类传输使用 TCP 协议的消息。</span><span class="sxs-lookup"><span data-stu-id="2d938-103">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class transports messages using the TCP protocol.</span></span>  
  
 <span data-ttu-id="2d938-104">.NET Framework 远程处理基础结构使用的通道用于传输远程调用。</span><span class="sxs-lookup"><span data-stu-id="2d938-104">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="2d938-105">当客户端进行到的远程对象调用时，则会将调用序列化到一条消息是由客户端通道发送和接收的服务器信道。</span><span class="sxs-lookup"><span data-stu-id="2d938-105">When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="2d938-106">然后，它是反序列化和处理。</span><span class="sxs-lookup"><span data-stu-id="2d938-106">It is then deserialized and processed.</span></span> <span data-ttu-id="2d938-107">任何返回的值是由服务器通道传输和接收的客户端通道。</span><span class="sxs-lookup"><span data-stu-id="2d938-107">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="2d938-108">若要执行其他处理的消息在服务器端中，你可以指定的实现<xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>接口处理的所有消息都可通过<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>传递实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-108">To perform additional processing of messages on the server side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance are passed.</span></span>  
  
 <span data-ttu-id="2d938-109"><xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>实例接受二进制或 SOAP 格式中序列化的消息。</span><span class="sxs-lookup"><span data-stu-id="2d938-109">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance accepts messages serialized in either binary or SOAP format.</span></span>  
  
 <span data-ttu-id="2d938-110">A<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>对象有关联的配置属性，可以在设置配置文件在运行时 (通过调用静态<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType>方法) 或以编程方式 (通过将传递<xref:System.Collections.IDictionary>集合到<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A>构造函数）。</span><span class="sxs-lookup"><span data-stu-id="2d938-110">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="2d938-111">有关这些配置属性的列表，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。</span><span class="sxs-lookup"><span data-stu-id="2d938-111">For a list of these configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d938-112">如果在服务器计算机正在运行 Windows 95/98/Me，<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>不能指定为安全。</span><span class="sxs-lookup"><span data-stu-id="2d938-112">If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-113">下面的代码示例演示了利用可远程处理类型。</span><span class="sxs-lookup"><span data-stu-id="2d938-113">The following code example shows the use of a remotable type.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]
 [!code-csharp[Remoting_TcpInfo#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]  
  
 <span data-ttu-id="2d938-114">下面的代码示例演示了利用<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>类公开可远程处理类型。</span><span class="sxs-lookup"><span data-stu-id="2d938-114">The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class to expose a remotable type.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#30](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#30)]
 [!code-csharp[Remoting_TcpInfo#30](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d938-115">初始化在指定端口上侦听的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-115">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class that listens on the specified port.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="2d938-116">信道侦听的端口。</span><span class="sxs-lookup"><span data-stu-id="2d938-116">The port on which the channel listens.</span></span></param>
        <summary><span data-ttu-id="2d938-117">初始化在指定端口上侦听的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-118">若要请求，动态分配可用的端口，设置`port`参数设为 0 （零）。</span><span class="sxs-lookup"><span data-stu-id="2d938-118">To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-119">下面的代码示例演示此构造函数的用法。</span><span class="sxs-lookup"><span data-stu-id="2d938-119">The following code example shows the use of this constructor.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#31)]
 [!code-csharp[Remoting_TcpInfo#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="2d938-120">一个 <see cref="T:System.Collections.IDictionary" /> 集合，它为信道要使用的配置属性指定值。</span><span class="sxs-lookup"><span data-stu-id="2d938-120">A <see cref="T:System.Collections.IDictionary" /> collection specifying values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="2d938-121">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="2d938-121">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="2d938-122">使用指定的信道属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-122">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified channel properties and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-123">有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。</span><span class="sxs-lookup"><span data-stu-id="2d938-123">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d938-124">如果在服务器计算机正在运行 Windows 95/98/Me，<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>不能指定为安全。</span><span class="sxs-lookup"><span data-stu-id="2d938-124">If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.</span></span>  
  
 <span data-ttu-id="2d938-125">如果不需要接收器功能，设置`sinkProvider`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="2d938-125">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-126">下面的代码示例演示如何使用此构造函数创建<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>具有特定的配置属性的对象。</span><span class="sxs-lookup"><span data-stu-id="2d938-126">The following code example shows the use of this constructor to create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object with specific configuration properties.</span></span>  
  
 [!code-cpp[Remoting_TcpAuth#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/server.cpp#21)]
 [!code-csharp[Remoting_TcpAuth#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d938-127">提供的信道属性有格式错误。</span><span class="sxs-lookup"><span data-stu-id="2d938-127">A provided channel property was badly formatted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::String ^ name, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d938-128">信道的名称。</span><span class="sxs-lookup"><span data-stu-id="2d938-128">The name of the channel.</span></span></param>
        <param name="port"><span data-ttu-id="2d938-129">信道侦听的端口。</span><span class="sxs-lookup"><span data-stu-id="2d938-129">The port on which the channel listens.</span></span></param>
        <summary><span data-ttu-id="2d938-130">使用给定名称初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> 类的新实例，该实例侦听指定的端口。</span><span class="sxs-lookup"><span data-stu-id="2d938-130">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the given name and that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-131">此构造函数设置<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A>属性使用`name`参数。</span><span class="sxs-lookup"><span data-stu-id="2d938-131">This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="2d938-132">如果你想要注册多个通道，每个通道都必须具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="2d938-132">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="2d938-133">若要请求，动态分配可用的端口，设置`port`参数设为 0 （零）。</span><span class="sxs-lookup"><span data-stu-id="2d938-133">To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-134">下面的代码示例显示如何构造<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>。</span><span class="sxs-lookup"><span data-stu-id="2d938-134">The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, authorizeCallback As IAuthorizeRemotingConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Runtime::Remoting::Channels::IAuthorizeRemotingConnection ^ authorizeCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="authorizeCallback" Type="System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="2d938-135">一个 <see cref="T:System.Collections.IDictionary" /> 集合，它为信道要使用的配置属性指定值。</span><span class="sxs-lookup"><span data-stu-id="2d938-135">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="2d938-136">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="2d938-136">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <param name="authorizeCallback"><span data-ttu-id="2d938-137">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="2d938-137">The <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="2d938-138">使用指定的信道属性、接收器和授权提供程序初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-138">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified channel properties, sink, and authorization provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-139">有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。</span><span class="sxs-lookup"><span data-stu-id="2d938-139">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d938-140">如果在服务器计算机正在运行 Windows 95/98/Me，<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>不能指定为安全。</span><span class="sxs-lookup"><span data-stu-id="2d938-140">If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d938-141">提供的信道属性有格式错误。</span><span class="sxs-lookup"><span data-stu-id="2d938-141">A provided channel property was badly formatted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, port As Integer, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::String ^ name, int port, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d938-142">信道的名称。</span><span class="sxs-lookup"><span data-stu-id="2d938-142">The name of the channel.</span></span></param>
        <param name="port"><span data-ttu-id="2d938-143">信道侦听的端口。</span><span class="sxs-lookup"><span data-stu-id="2d938-143">The port on which the channel listens.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="2d938-144">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="2d938-144">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="2d938-145">以给定的名称初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> 类的新实例，该实例侦听指定的端口并使用指定的接收器。</span><span class="sxs-lookup"><span data-stu-id="2d938-145">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the given name, which listens on the specified port, and uses the specified sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-146">此构造函数设置<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A>属性使用`name`参数。</span><span class="sxs-lookup"><span data-stu-id="2d938-146">This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="2d938-147">如果你想要注册多个通道，每个通道都必须具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="2d938-147">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="2d938-148">若要请求，动态分配可用的端口，设置`port`参数设为 0 （零）。</span><span class="sxs-lookup"><span data-stu-id="2d938-148">To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).</span></span>  
  
 <span data-ttu-id="2d938-149">如果不需要接收器功能，设置`sinkProvider`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="2d938-149">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-150">下面的代码示例显示如何构造<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>。</span><span class="sxs-lookup"><span data-stu-id="2d938-150">The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d938-151">获取通道特定的数据。</span><span class="sxs-lookup"><span data-stu-id="2d938-151">Gets channel-specific data.</span></span></summary>
        <value><span data-ttu-id="2d938-152">包含信道特定数据的 <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-152">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance containing channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-153">尽管实例的形式返回<xref:System.Object?displayProperty=nameWithType>，此属性的值可以强制转换为的实例<xref:System.Runtime.Remoting.Channels.ChannelDataStore>描述的通道<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>对象侦听。</span><span class="sxs-lookup"><span data-stu-id="2d938-153">Although returned as an instance of <xref:System.Object?displayProperty=nameWithType>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-154">下面的代码示例演示了利用此属性。</span><span class="sxs-lookup"><span data-stu-id="2d938-154">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#33](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#33)]
 [!code-csharp[Remoting_TcpInfo#33](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d938-155">获取当前信道的名称。</span><span class="sxs-lookup"><span data-stu-id="2d938-155">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="2d938-156">包含信道名称的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-156">A <see cref="T:System.String" /> instance that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-157">每个已注册的通道具有一个唯一名称。</span><span class="sxs-lookup"><span data-stu-id="2d938-157">Every registered channel has a unique name.</span></span> <span data-ttu-id="2d938-158">该名称用于检索特定通道时调用<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>。</span><span class="sxs-lookup"><span data-stu-id="2d938-158">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-159">下面的代码示例演示了利用此属性。</span><span class="sxs-lookup"><span data-stu-id="2d938-159">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d938-160">获取当前信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="2d938-160">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="2d938-161">一个整数，表示分配给该信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="2d938-161">An integer that represents the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-162">优先级控制在哪个通道将出现在的数据的顺序<xref:System.Runtime.Remoting.ObjRef>实例; 出现在较低的优先级通道之前的更高优先级通道。</span><span class="sxs-lookup"><span data-stu-id="2d938-162">The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels.</span></span> <span data-ttu-id="2d938-163">客户端尝试连接到中列出的顺序中的服务器信道<xref:System.Runtime.Remoting.ObjRef>实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-163">Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance.</span></span> <span data-ttu-id="2d938-164">默认优先级为 1;允许负的优先级。</span><span class="sxs-lookup"><span data-stu-id="2d938-164">The default priority is 1; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-165">下面的代码示例演示了利用此属性。</span><span class="sxs-lookup"><span data-stu-id="2d938-165">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d938-166">返回当前信道的 URI。</span><span class="sxs-lookup"><span data-stu-id="2d938-166">Returns the URI of the current channel.</span></span></summary>
        <returns><span data-ttu-id="2d938-167">当前信道的 URI。</span><span class="sxs-lookup"><span data-stu-id="2d938-167">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2d938-168">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="2d938-168">The following code example shows the use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri"><span data-ttu-id="2d938-169">需要其 URL 的对象的 URI。</span><span class="sxs-lookup"><span data-stu-id="2d938-169">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="2d938-170">返回具有指定 URI 的对象的所有 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 实例上。</span><span class="sxs-lookup"><span data-stu-id="2d938-170">Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</span></span></summary>
        <returns><span data-ttu-id="2d938-171">具有指定 URI 的对象的 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> 实例上。</span><span class="sxs-lookup"><span data-stu-id="2d938-171">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-172">使用此方法的<xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2d938-172">This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-173">下面的代码示例演示了利用<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d938-173">The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri%2A> method.</span></span>  
  
 [!code-cpp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d938-174">获取或设置一个布尔值，该值指示当前信道是否安全。</span><span class="sxs-lookup"><span data-stu-id="2d938-174">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="2d938-175">一个布尔值，指示当前实例是否安全。</span><span class="sxs-lookup"><span data-stu-id="2d938-175">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="2d938-176">从中提取远程已知对象的 URI 的 URL。</span><span class="sxs-lookup"><span data-stu-id="2d938-176">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="2d938-177">当此方法返回时，包含含有远程已知对象的 URI 的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2d938-177">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="2d938-178">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="2d938-178">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="2d938-179">从指定 URL 提取信道 URI 和远程已知对象 URI。</span><span class="sxs-lookup"><span data-stu-id="2d938-179">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="2d938-180">当前信道的 URI。</span><span class="sxs-lookup"><span data-stu-id="2d938-180">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-181">一个对象的 URI 是唯一标识特定对象实例的值。</span><span class="sxs-lookup"><span data-stu-id="2d938-181">The URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d938-182">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="2d938-182">The following code example shows the use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2d938-183">可选的初始化信息。</span><span class="sxs-lookup"><span data-stu-id="2d938-183">Optional initialization information.</span></span></param>
        <summary><span data-ttu-id="2d938-184">在调用 <see cref="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" /> 方法停止侦听通道后，指示当前通道开始侦听通道。</span><span class="sxs-lookup"><span data-stu-id="2d938-184">Instructs the current channel to start listening on a channel after the <see cref="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" /> method has been called to stop listening on the channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-185"><xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>构造函数自动调用`StartListening`，因此不应调用此方法，除非<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A>之前已调用。</span><span class="sxs-lookup"><span data-stu-id="2d938-185">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> constructor automatically calls `StartListening`, so you shouldn't call this method unless <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> was previously called.</span></span>  
  
 <span data-ttu-id="2d938-186">调用`StartListening`已侦听通道上可能会导致意外行为，应当避免。</span><span class="sxs-lookup"><span data-stu-id="2d938-186">Calling `StartListening` on an already listening channel may lead to unexpected behaviors and should be avoided.</span></span>  
  
 <span data-ttu-id="2d938-187">如果您的通道使用动态分配的端口号，则重新开始侦听时，可能会更改端口号。</span><span class="sxs-lookup"><span data-stu-id="2d938-187">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="2d938-188">数据对象可以用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="2d938-188">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="2d938-189">如果不希望将特定状态传递到通道，设置`data`到`null`。</span><span class="sxs-lookup"><span data-stu-id="2d938-189">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2d938-190">该信道的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="2d938-190">Optional state information for the channel.</span></span></param>
        <summary><span data-ttu-id="2d938-191">指示当前信道停止侦听请求。</span><span class="sxs-lookup"><span data-stu-id="2d938-191">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d938-192">使用此方法以停止侦听通道上。</span><span class="sxs-lookup"><span data-stu-id="2d938-192">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="2d938-193">若要重新开始侦听，使用<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2d938-193">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="2d938-194">如果您的通道使用动态分配的端口号，则重新开始侦听时，可能会更改端口号。</span><span class="sxs-lookup"><span data-stu-id="2d938-194">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="2d938-195">数据对象可以用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="2d938-195">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="2d938-196">如果不希望将特定状态传递到通道，设置`data`到`null`。</span><span class="sxs-lookup"><span data-stu-id="2d938-196">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>