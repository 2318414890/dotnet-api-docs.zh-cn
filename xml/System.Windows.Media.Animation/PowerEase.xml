<Type Name="PowerEase" FullName="System.Windows.Media.Animation.PowerEase">
  <TypeSignature Language="C#" Value="public class PowerEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PowerEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.PowerEase" />
  <TypeSignature Language="VB.NET" Value="Public Class PowerEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class PowerEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4eb4d-101">表示缓动函数，该函数使用公式 f(t) = t<sup>p</sup> 创建加速和/或减速的动画，其中 p 等于 <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-101">Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>p</sup> where p is equal to the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eb4d-102">你可以控制是否动画加快，减速，或这二者通过指定<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-102">You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span> <span data-ttu-id="4eb4d-103">下图演示的不同值<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>，其中*f*(*t*) 表示的动画进度和*t*表示时间。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-103">The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.</span></span>  
  
 <span data-ttu-id="4eb4d-104">![CubicEase EasingMode 图。] (~/add/media/cubicease-graph.png "CubicEase EasingMode 图。")</span><span class="sxs-lookup"><span data-stu-id="4eb4d-104">![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png "CubicEase EasingMode graphs.")</span></span>  
  
 <span data-ttu-id="4eb4d-105">通过使用<xref:System.Windows.Media.Animation.PowerEase>函数，你可以指定如何快速加速/减速的发生通过指定<xref:System.Windows.Media.Animation.PowerEase.Power%2A>属性：</span><span class="sxs-lookup"><span data-stu-id="4eb4d-105">By using the <xref:System.Windows.Media.Animation.PowerEase> function, you can specify how quickly acceleration/deceleration takes place by specifying the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property:</span></span>  
  
 <span data-ttu-id="4eb4d-106">*f*(*t*) = *t*<sup>p</sup>其中`p`等同于<xref:System.Windows.Media.Animation.PowerEase.Power%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-106">*f*(*t*) = *t*<sup>p</sup> where `p` is equal to the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property.</span></span>  
  
 <span data-ttu-id="4eb4d-107">因此，<xref:System.Windows.Media.Animation.PowerEase>函数可以替换为<xref:System.Windows.Media.Animation.QuadraticEase>(*f*(*t*) = *t*<sup>2</sup>)， <xref:System.Windows.Media.Animation.CubicEase>(*f*(*t*) = *t*<sup>3</sup>)， <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t*) = *t*<sup>4</sup>)，和<xref:System.Windows.Media.Animation.QuinticEase>(*f*(*t*) = *t* <sup>5</sup>)。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-107">Because of this, the <xref:System.Windows.Media.Animation.PowerEase> function can be substituted for <xref:System.Windows.Media.Animation.QuadraticEase> (*f*(*t*) = *t*<sup>2</sup>), <xref:System.Windows.Media.Animation.CubicEase> (*f*(*t*) = *t*<sup>3</sup>), <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t*) = *t*<sup>4</sup>), and <xref:System.Windows.Media.Animation.QuinticEase> (*f*(*t*) = *t*<sup>5</sup>).</span></span> <span data-ttu-id="4eb4d-108">例如，如果你想要使用<xref:System.Windows.Media.Animation.PowerEase>函数来创建相同的行为<xref:System.Windows.Media.Animation.QuadraticEase>函数 (*f*(*t*) = *t*<sup>2</sup>)，则会指定<xref:System.Windows.Media.Animation.PowerEase.Power%2A>属性值为 2。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-108">For example, if you wanted to use a <xref:System.Windows.Media.Animation.PowerEase> function to create the same behavior as a <xref:System.Windows.Media.Animation.QuadraticEase> function (*f*(*t*) = *t*<sup>2</sup>), you would specify a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of 2.</span></span>  
  
 <span data-ttu-id="4eb4d-109">还有一些其他缓动函数除了<xref:System.Windows.Media.Animation.PowerEase>其中你可以使用下面的 Silverlight 示例。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-109">There are several other easing functions besides <xref:System.Windows.Media.Animation.PowerEase> which you can explore using the following Silverlight sample.</span></span>  
  
 [<span data-ttu-id="4eb4d-110">运行此示例</span><span class="sxs-lookup"><span data-stu-id="4eb4d-110">Run this sample</span></span>](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  
  
 <span data-ttu-id="4eb4d-111">除了使用运行时中附带的缓动函数，您可以通过继承创建您自己的自定义缓动函数<xref:System.Windows.Media.Animation.EasingFunctionBase>。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-111">In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span></span>  
  
<a name="xamlObjectElementUsage_PowerEase"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="4eb4d-112">XAML 对象元素用法</span><span class="sxs-lookup"><span data-stu-id="4eb4d-112">XAML Object Element Usage</span></span>  
  
```  
<PowerEase .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4eb4d-113">下面的示例应用<xref:System.Windows.Media.Animation.PowerEase>缓动函数与<xref:System.Windows.Media.Animation.PowerEase.Power%2A>属性值`20`到<xref:System.Windows.Media.Animation.DoubleAnimation>创建减速的动画。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-113">The following example applies a <xref:System.Windows.Media.Animation.PowerEase> easing function with a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span> <span data-ttu-id="4eb4d-114">因为<xref:System.Windows.Media.Animation.PowerEase.Power%2A>值量因此较高，减速突然相比，如果你使用较低的值。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-114">Because the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value is so high, the deceleration is sudden compared to if you used a lower value.</span></span>  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PowerEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PowerEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4eb4d-115">初始化 <see cref="T:System.Windows.Media.Animation.PowerEase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-115">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PowerEase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4eb4d-116">创建 <see cref="T:System.Windows.Freezable" /> 派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-116">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span></span> <span data-ttu-id="4eb4d-117">在创建派生类时，必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-117">When creating a derived class, you must override this method.</span></span></summary>
        <returns><span data-ttu-id="4eb4d-118">新实例。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-118">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eb4d-119">动画类间接继承自<xref:System.Windows.Freezable>。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-119">Animation classes inherit indirectly from <xref:System.Windows.Freezable>.</span></span> <span data-ttu-id="4eb4d-120">因此，您需要重写<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>方法来构造自定义的动画对象。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-120">Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4eb4d-121">下面的示例演示的典型实现<xref:System.Windows.Freezable.CreateInstanceCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-121">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime"><span data-ttu-id="4eb4d-122">动画的标准化时间（进度）。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-122">Normalized time (progress) of the animation.</span></span></param>
        <summary><span data-ttu-id="4eb4d-123">提供可以重写的缓动函数的逻辑部分，以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> 模式。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-123">Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</span></span></summary>
        <returns><span data-ttu-id="4eb4d-124">双精度值，该值表示已转换的进度。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-124">A double that represents the transformed progress.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4eb4d-125">此方法转换规范化的时间，以控制动画节奏<xref:System.Windows.Media.Animation.EasingMode.EaseIn>用例<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-125">This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span>  
  
 <span data-ttu-id="4eb4d-126">只需指定你缓动函数<xref:System.Windows.Media.Animation.EasingMode.EaseIn>种情况下，因为的实现<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>方法转换`normalizedTime`为<xref:System.Windows.Media.Animation.EasingMode.EaseOut>和<xref:System.Windows.Media.Animation.EasingMode.EaseInOut>用例。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-126">You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public double Power { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Power" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.PowerEase.Power" />
      <MemberSignature Language="VB.NET" Value="Public Property Power As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Power { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4eb4d-127">获取或设置动画内插的指数幂。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-127">Gets or sets the exponential power of the animation interpolation.</span></span> <span data-ttu-id="4eb4d-128">例如，值为 7 将创建遵循方程式 f(t) = t<sup>7</sup> 的动画内插曲线。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-128">For example, a value of 7 will create an animation interpolation curve that follows the formula *f*(*t*) = *t*<sup>7</sup>.</span></span></summary>
        <value><span data-ttu-id="4eb4d-129">动画内插的指数幂。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-129">The exponential power of the animation interpolation.</span></span> <span data-ttu-id="4eb4d-130">此值必须大于等于 0。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-130">This value must be greater or equal to 0.</span></span> <span data-ttu-id="4eb4d-131">默认值为 2。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-131">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]<span data-ttu-id="4eb4d-132"> <xref:System.Windows.Media.Animation.PowerEase.PowerProperty></span><span class="sxs-lookup"><span data-stu-id="4eb4d-132"> <xref:System.Windows.Media.Animation.PowerEase.PowerProperty></span></span>  
  
<a name="xamlAttributeUsage_Power"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4eb4d-133">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="4eb4d-133">XAML Attribute Usage</span></span>  
  
```  
<object Power="double" .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4eb4d-134">下面的示例应用<xref:System.Windows.Media.Animation.PowerEase>缓动函数与<xref:System.Windows.Media.Animation.PowerEase.Power%2A>属性值`20`到<xref:System.Windows.Media.Animation.DoubleAnimation>创建减速的动画。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-134">The following example applies a <xref:System.Windows.Media.Animation.PowerEase> easing function with a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span> <span data-ttu-id="4eb4d-135">因为<xref:System.Windows.Media.Animation.PowerEase.Power%2A>值量因此较高，减速突然相比，如果你使用较低的值。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-135">Because the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value is so high, the deceleration is sudden compared to if you used a lower value.</span></span>  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PowerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PowerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.PowerEase.PowerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PowerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PowerProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4eb4d-136">标识 <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="4eb4d-136">Identifies the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>