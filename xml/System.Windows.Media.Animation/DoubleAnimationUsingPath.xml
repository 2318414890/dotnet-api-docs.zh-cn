<Type Name="DoubleAnimationUsingPath" FullName="System.Windows.Media.Animation.DoubleAnimationUsingPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="556396bf458a465e6e5c5089b76765bde662c5b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659311" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DoubleAnimationUsingPath : System.Windows.Media.Animation.DoubleAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DoubleAnimationUsingPath extends System.Windows.Media.Animation.DoubleAnimationBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />
  <TypeSignature Language="VB.NET" Value="Public Class DoubleAnimationUsingPath&#xA;Inherits DoubleAnimationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DoubleAnimationUsingPath : System::Windows::Media::Animation::DoubleAnimationBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.DoubleAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用 <see cref="T:System.Windows.Media.PathGeometry" /> 在两个或多个目标值之间对 <see cref="T:System.Double" /> 属性值进行动画处理，以指定这些值。 此动画可用于沿路径移动可视对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath> 通过指定使用线性内插<xref:System.Windows.Media.Animation.Timeline.Duration%2A>。  
  
 <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath> 类似于<xref:System.Windows.Media.Animation.DoubleAnimation>，只不过前者使用<xref:System.Windows.Media.PathGeometry>进行而不是类似的仅有两个值之间的两个或多个值通过插值<xref:System.Windows.Media.Animation.DoubleAnimation>。 尽管<xref:System.Windows.Media.Animation.DoubleAnimation>适用于大多数涉及一个双精度值的简单动画<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath>非常适用的屏幕上的对象位置进行动画处理。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathGeometry" />
    <altmember cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleAnimation" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleKeyFrame" />
    <altmember cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleAnimationUsingPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DoubleAnimationUsingPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 没有默认值<xref:System.Windows.Media.PathGeometry>因此用户必须指定一个。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.DoubleAnimationUsingPath Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.DoubleAnimationUsingPath Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DoubleAnimationUsingPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::DoubleAnimationUsingPath ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.DoubleAnimationUsingPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> 的可修改克隆，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。 为方便起见，此方法将隐藏继承的强类型实现的版本。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Windows.Freezable.CreateInstanceCore" /> 的实现。</summary>
        <returns>新创建的 <see cref="T:System.Windows.Freezable" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override double GetCurrentValueCore (double defaultOriginValue, double defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 GetCurrentValueCore(float64 defaultOriginValue, float64 defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double GetCurrentValueCore(double defaultOriginValue, double defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Double" />
        <Parameter Name="defaultDestinationValue" Type="System.Double" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</param>
        <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
        <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，用来生成动画所使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
        <summary>计算一个值，该值表示正在进行动画处理的属性的当前值，并由 <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> 确定。</summary>
        <returns>计算得出的属性值，该值由当前动画确定。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`defaultOriginValue`是第一个组合链中此值将为快照值 （如果有的话） 或基属性值; 否则此值将为返回链中的上一个动画的值<xref:System.Windows.Media.Animation.AnimationClock>不 <c4 1> <xref:System.Windows.Media.Animation.Clock.Stopped%2A> 。  
  
 `defaultDestinationValue`是基本值，如果动画在动画的属性上的第一个组合层，则; 否则值为前一的组合图层的属性的动画的输出值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAdditive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAdditive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否应将目标属性的当前值添加到此动画的起始值。</summary>
        <value>
          如果应将目标属性的当前值与此动画的起始值相加，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Additive"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|元数据属性设置为 `true`|无|  
  
> [!NOTE]
>  此依赖属性是异常，因为它的标识符字段来自于<xref:System.Windows.Media.Animation.AnimationTimeline>，并由共享各种派生的类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCumulative">
      <MemberSignature Language="C#" Value="public bool IsCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCumulative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定动画重复时是否累计该动画的值。</summary>
        <value>
          <see langword="true" /> 如果动画累计它的值时其<see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />属性使其重复播放其简单持续时间。 否则为<see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`true`，该动画的输出时，值仅累计该动画的<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>属性使其重复播放其简单持续时间。 它不会不会累计其值，因为其父重复重新启动时，或因为其时钟已重新启动从<xref:System.Windows.Media.Animation.ClockController.Begin%2A>调用。  
  
<a name="dependencyPropertyInfo_Cumulative"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|  
|元数据属性设置为 `true`|无|  
  
> [!NOTE]
>  此依赖属性是异常，因为它的标识符字段来自于<xref:System.Windows.Media.Animation.AnimationTimeline>，并由共享各种派生的类。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当此 <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> 被修改时调用。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>请参阅<see cref="M:System.Windows.Freezable.OnChanged" />有关重写此方法的信息。</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.OnChanged" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry PathGeometry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PathGeometry PathGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Property PathGeometry As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PathGeometry ^ PathGeometry { System::Windows::Media::PathGeometry ^ get(); void set(System::Windows::Media::PathGeometry ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定用于生成此动画输出值的几何图形。</summary>
        <value>用于生成此动画输出值的路径。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]，你可以使用特殊的缩写的语法来描述该路径。  
  
 [!code-xaml[PathAnimationGallery_snippet#DoubleAnimationUsingPathAttributeSyntaxExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/doubleanimationusingpathattributesyntaxexample.xaml#doubleanimationusingpathattributesyntaxexample)] 
  
 有关详细信息<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry%2A>标记语法，请参阅[路径标记语法](~/docs/framework/wpf/graphics-multimedia/path-markup-syntax.md)。 有关创建使用标记或代码路径的更多示例，请参阅<xref:System.Windows.Media.PathGeometry>。  
  
<a name="dependencyPropertyInfo_PathGeometry"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometryProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathGeometryProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathGeometryProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathGeometryProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathGeometryProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.PathAnimationSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.PathAnimationSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As PathAnimationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::PathAnimationSource Source { System::Windows::Media::Animation::PathAnimationSource get(); void set(System::Windows::Media::Animation::PathAnimationSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.PathAnimationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此动画的 <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" /> 方位，确定此动画的输出值。</summary>
        <value>确定此动画输出值的此动画的 <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" /> 方位。 默认值为 <see cref="F:System.Windows.Media.Animation.PathAnimationSource.X" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Source"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SourceProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>