<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dbff06c5772fd82ffc6441052e669335c725dc8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36496106" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Timeline&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeline abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Timeline = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义一个时间段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 时间线表示时间的段。  它提供的属性让你可以指定该时间段的长度、开始时间、重复次数、该时间段内时间进度的快慢等。  
  
 从时间线类继承的类可提供附加功能，例如动画和媒体播放。 以下是一些可用的专用时间线的不同类型的示例。  
  
-   **动画**:<xref:System.Windows.Media.Animation.AnimationTimeline>是一种生成输出值的时间线。 当你将与属性关联动画时，动画将更新属性的值，它播放时，从而"进行动画处理"。 动画的简介，请参阅[动画概述](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。 有关应用动画的不同方法的信息，请参阅[属性动画技术概述](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md)。  
  
-   **MediaTimelines**: A<xref:System.Windows.Media.MediaTimeline>是一种控制播放的媒体文件的时间线。  
  
-   **ParallelTimelines**: A<xref:System.Windows.Media.Animation.ParallelTimeline>是一种分组其他时间线的时间线。  
  
-   **情节提要**: A<xref:System.Windows.Media.Animation.Storyboard>是一种特殊的<xref:System.Windows.Media.Animation.ParallelTimeline>提供对象和属性目标的时间线，它包含的信息。 有关详细信息<xref:System.Windows.Media.Animation.Storyboard>对象，请参阅[情节提要概述](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。  
  
 有关使用时间线详细信息，请参阅[动画概述](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。 时间线的时间的计时功能的介绍，请参阅[计时行为概述](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)。  
  
## <a name="data-binding-and-animating-timelines"></a>数据绑定和动画时间线  
 大多数时间线属性可以是数据绑定，或进行动画处理;但是，由于计时系统的方法，不执行操作的绑定或动画时间线行为类似于其他数据的数据绑定，或进行动画处理的对象。 若要了解其行为，它有助于了解一下激活时间线的含义。  
  
 时间线应用时，将制作时间线及其子时间线的副本。 这些副本已冻结 （使其只读的） 和<xref:System.Windows.Media.Animation.Clock>从中创建对象。 它是这些时钟将执行对目标的属性进行动画处理的实际工作。 如果时间线为数据绑定或进行动画处理，其当前值的快照已创建其时钟时。 即使原始时间线可能继续更改，其时钟却没有。  
  
 时间线以反映数据绑定或动画更改，必须重新生成其时钟。 时钟不会自动重新生成。 以下是应用时间线更改的几种方法：  
  
-   如果时间线或属于<xref:System.Windows.Media.Animation.Storyboard>，你可以通过重新应用其情节提要使用反映更改<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。 这还会产生重新启动动画的附带影响。 在代码中，你可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>方法向前移动情节提要重新为其以前的位置。  
  
-   如果你将动画应用于属性使用直接<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，调用<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>再次方法并将其传递已修改的动画。  
  
-   如果要直接在时钟级别上工作，请创建并应用一组新的时钟，然后用它们替换之前生成的一组时钟。  
  
 有关数据的一个示例绑定动画，请参阅[密钥样条动画示例](http://go.microsoft.com/fwlink/?LinkID=160011)。  
  
## <a name="using-a-timeline-as-a-timer"></a>作为计时器使用时间线  
 没有与之关联的事件处理程序时，才会前进时间线的时钟或 (对于<xref:System.Windows.Media.Animation.AnimationClock>对象) 是与属性相关联。 此原因 （和其他内容），不建议你使用<xref:System.Windows.Media.Animation.Timeline>作为计时器。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.Timeline" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.Timeline" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 将要开始的时间。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 属性。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 将要开始的时间。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 属性。</param>
        <param name="duration">此时间线播放的时间长度，而不是计数重复。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 将要开始的时间。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 属性。</param>
        <param name="duration">此时间线播放的时间长度，而不是计数重复。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
        <param name="repeatBehavior">此时间线的重复行为，可以作为迭代 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />，也可以作为重复 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />。 有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 属性。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" />、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property AccelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AccelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AccelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定在将时间消逝从零加速到其最大速率过程中所占用时间线的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的百分比。</summary>
        <value>一个介于 0 和 1 之间的值（包括 0 和 1），用于指定在将时间消逝从零加速到其最大速率过程中所占用时间线的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的百分比。 如果同时设置时间线的 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 属性，则 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 之和必须小于等于 1。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>属性来创建动画启动缓慢，然后随着时间的推移加快。 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>属性可用于创建渐入效果或使看上去更自然的移动。 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>属性在一起以创建开始缓慢、 的动画，提高速度，然后在完成之前再次变慢。  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 小于 0 或大于 1。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 与 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 之和大于 1。</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AccelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="abstract member AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock&#xA;override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建一个 <see cref="T:System.Windows.Media.Animation.Timeline" />。</summary>
        <returns>此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的时钟。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>方法，不应直接由你的代码调用。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>实现者<see cref="T:System.Windows.Media.Animation.Timeline" />具有相应的自定义时钟，应与类一起使用时应重写此方法。重写的方法应创建并返回继承自的类的新实例<see cref="T:System.Windows.Media.Animation.Clock" />。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReverse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReverse : bool with get, set" Usage="System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示时间线在完成向前迭代后是否按相反的顺序播放。</summary>
        <value>如果时间线在每次迭代结束时按相反的顺序播放，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>属性设置为`true`，时间线播放指定的时间长度的两倍的其<xref:System.Windows.Media.Animation.Timeline.Duration%2A>属性。  
  
### <a name="autoreverse-and-repetitions"></a>AutoReverse 和重复  
 当时间线的<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>属性设置为`true`及其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>属性使其重复播放，每个向前迭代后跟一个向后迭代。 这样一次重复。 例如，时间线与<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>值`true`与迭代<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>的 2 将向前播放一次，然后向后，再次，然后转发，然后再次向后。  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoReverseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoReverseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoReverseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; BeginTime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BeginTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 应开始的时间。</summary>
        <value>相对于其父级的 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />，此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 应开始的时间。 如果此时间线为根时间线，则该时间相对于其交互开始时间（触发时间线的时刻）。 此值可能为正数、负数或 <see langword="null" />；<see langword="null" /> 值表示永远不会播放该时间线。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>属性可用于创建序列中的播放的时间线： 通过增加<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>可以共享同一个父的连续时间线，错开它们的播放时间。  
  
## <a name="negative-values"></a>负值  
 负<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>值使<xref:System.Windows.Media.Animation.Timeline>表现得像它在过去的某个时刻启动。 例如，<xref:System.Windows.Media.Animation.Timeline>与<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>的负 2.5 秒和<xref:System.Windows.Media.Animation.Timeline.Duration%2A>的 5 秒看起来处于半方式开始就已完成。  
  
## <a name="begintime-and-speedratio"></a>BeginTime 和 SpeedRatio  
 所描述的时间<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>属性按时间线的父级的时间计算。 例如，时间线与<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>的其父代具有的 5 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 的实际开始 2.5 秒后。  
  
 时间线的自己<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>设置不影响其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>。 例如，时间线与<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>为 5 秒， <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 和父时间线的<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>5 秒，不是 2.5 之后启动的 1。  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|元数据属性设置为 `true`|无|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 \<*对象* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*天*。]*小时*:*分钟*:*秒*[。*秒的小数部分*]"/ >  
  
 \- 或 -  
  
 \<*对象* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*天*。]*小时*:*分钟*"/ >  
  
 \- 或 -  
  
 \<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/>  
  
 \- 或 -  
  
 \<*对象* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="{[X:null 标记扩展](~/docs/framework/xaml-services/x-null-markup-extension.md)}"/ >  
  
<a name="xamlValues_BeginTime"></a>   
## <a name="xaml-values"></a>XAML 值  
 方括号中的项 (`[`和`]`) 都是可选的。  
  
 *天*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 一个值大于或等于 0，用于描述跨越此天数开始时间。  
  
 *小时数*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 一个介于 0 和 23 之间的值，表示此跨越的小时数开始时间。  
  
 *分钟*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 一个介于 0 和 59 之间的值，表示此跨越的分钟数开始时间。  
  
 *秒*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 一个介于 0 和 59 之间的值，表示此跨越的秒数开始时间。  
  
 *fractionalSeconds*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 一个包含 1 至 7 位值，表示秒的小数部分。  
  
 有关完整<xref:System.TimeSpan>语法，请参阅备注部分的<xref:System.TimeSpan.Parse%2A>页。  
  
   
  
## Examples  
 时间线的<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>属性确定时间线的活动期开始。 如果时间线具有父时间线，<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>属性确定所需时间线来启动其父级启动后多长时间。 如果时间线为根时间线 ( <xref:System.Windows.Media.Animation.Storyboard>，例如)，则<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>属性确定时间线所需的时间开始播放后触发它时。  
  
 下面的示例演示具有不同的几个不同时间线<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>设置。  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeginTimeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BeginTimeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeginTimeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的可修改克隆，从而深度复制此对象的值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。 为方便起见，此方法将隐藏继承的强类型实现的版本。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 对象的可修改复本，从而深度复制此对象的当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="false" />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。 为方便起见，此方法将隐藏继承的强类型实现的版本。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 不复制资源引用、数据绑定和动画，而是复制其当前值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当此时间线完全播放完毕时发生：它将不再进入其活动周期。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此时间线的时间线树根时间线，它已完成播放后到达其有效期 （其中包括重复） 结尾，并且所有子项具有都达到其活动周期的结尾。 如果此时间线为子时间线，它被视为完全完成播放时其所属达到的时间线树的根时间线活动期和所有子时间线的末尾具有播放完毕的信息。  
  
 停止时间线不会触发其已完成的事件，但正在到其填充期间跳过它。  
  
 <xref:System.Object>参数<xref:System.EventHandler>事件处理程序是时间线的<xref:System.Windows.Media.Animation.Clock>。  
  
 虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。  有关详细信息，请参阅[计时事件概述](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
   
  
## Examples  
 在下面的示例中，两个<xref:System.Windows.Media.Animation.Storyboard>对象用于创建两个映像，使用存储之间的动画过渡<xref:System.Windows.Media.ImageSource>对象，并显示使用<xref:System.Windows.Controls.Image>控件。 一个情节提要收缩图像控件，直到它消失。 其完成后，旧后<xref:System.Windows.Media.ImageSource>替换为另<xref:System.Windows.Media.ImageSource>，和第二个的情节提要展开图像控件，直到它是全尺寸试。  
  
 [!code-xaml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建一个 <see cref="T:System.Windows.Media.Animation.Timeline" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="member this.CreateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 创建一个可以控制的新 <see cref="T:System.Windows.Media.Animation.Clock" />。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 含有子级，则创建时钟树时将此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 作为根。</summary>
        <returns>从此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 构造的一个可以控制的新 <see cref="T:System.Windows.Media.Animation.Clock" />。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 是一个包含子时间线的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />，则创建一个 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象树，将从此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 创建的可以控制的 <see cref="T:System.Windows.Media.Animation.Clock" /> 作为根。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管这<xref:System.Windows.Media.Animation.Timeline>可能是一个或多个的子<xref:System.Windows.Media.Animation.TimelineGroup>对象，此信息将被忽略： 此方法将当前<xref:System.Windows.Media.Animation.Timeline>root <xref:System.Windows.Media.Animation.Timeline>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock (hasControllableRoot As Boolean) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock(bool hasControllableRoot);" />
      <MemberSignature Language="F#" Value="member this.CreateClock : bool -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock hasControllableRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot">如果返回的根 <see cref="T:System.Windows.Media.Animation.Clock" /> 要从其 <see cref="T:System.Windows.Media.Animation.ClockController" /> 属性返回一个 <see cref="P:System.Windows.Media.Animation.Clock.Controller" />，以便可以交互控制 <see cref="T:System.Windows.Media.Animation.Clock" /> 树，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>从此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建一个新的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 并指定新的 <see cref="T:System.Windows.Media.Animation.Clock" /> 是否可以控制。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 含有子级，则创建时钟树时将此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 作为根。</summary>
        <returns>从此 <see cref="T:System.Windows.Media.Animation.Clock" /> 构造一个新 <see cref="T:System.Windows.Media.Animation.Timeline" />。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 是一个包含子时间线的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />，则创建一个 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象树，将从此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 创建的可以控制的 <see cref="T:System.Windows.Media.Animation.Clock" /> 作为根。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管这<xref:System.Windows.Media.Animation.Timeline>可能是一个或多个的子<xref:System.Windows.Media.Animation.TimelineGroup>对象，此信息将被忽略： 此方法将当前<xref:System.Windows.Media.Animation.Timeline>root <xref:System.Windows.Media.Animation.Timeline>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在时间线时钟的时间前进速率发生变化时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在以下情况下的时间线的时钟更改当前全局速度：  
  
-   时钟由于其时间线的更改方向<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>设置。  
  
-   时钟而加速或由于其时间线的减速<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>属性设置。  
  
-   时钟连接而暂停或恢复。  
  
-   时钟变为非活动状态，或重新激活。  
  
-   <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>的时钟的父更改之一。  
  
 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件可用于跟踪在时间线的时钟变为暂停时; 在事件处理程序，请使用你的情节提要<xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>方法或检查时钟<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>属性来确定是否已暂停其时钟，则将对此进行比较要确定是否它更改以前缓存的值。  
  
 <xref:System.Object>参数<xref:System.EventHandler>事件处理程序是时间线的<xref:System.Windows.Media.Animation.Clock>。  
  
 虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。  有关详细信息，请参阅[计时事件概述](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
   
  
## Examples  
 下面的示例演示如何注册以进行<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新时间线的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 属性时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件时想要被通知时时间线的<xref:System.Windows.Media.Animation.Clock>启动、 停止或填充。  
  
 暂停<xref:System.Windows.Media.Animation.Clock>不会更改其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>。 若要要得到通知时钟变为暂停时，使用<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。  
  
 虽然此事件发生时<xref:System.Windows.Media.Animation.ClockState>变为无效，并不一定意味着<xref:System.Windows.Media.Animation.ClockState>更改：<xref:System.Windows.Media.Animation.Clock>用于从切换<xref:System.Windows.Media.Animation.ClockState.Active>到<xref:System.Windows.Media.Animation.ClockState.Filling>和再转回<xref:System.Windows.Media.Animation.ClockState.Active>在同一个计时周期将导致此事件激发，但其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>属性不会实际更改。  
  
 <xref:System.Object>参数<xref:System.EventHandler>事件处理程序是<xref:System.Windows.Media.Animation.Clock>创建为此时间线。  
  
 虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。  有关详细信息，请参阅[计时事件概述](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新时间线的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 属性时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>时你想要的事件时收到通知<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>时间线的<xref:System.Windows.Media.Animation.Clock>更新。  
  
 <xref:System.Object>参数<xref:System.EventHandler>事件处理程序是时间线的<xref:System.Windows.Media.Animation.Clock>。  
  
 虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。  有关详细信息，请参阅[计时事件概述](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
   
  
## Examples  
 下面的示例演示如何注册以进行<xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated>事件。  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property DecelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DecelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DecelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定在将时间消逝从其最大速率减速到零的过程中所占用时间线的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的百分比。</summary>
        <value>一个介于 0 和 1 之间的值（包括 0 和 1），用于指定在将时间消逝从其最大速率减速到零所占用时间线的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的百分比。 如果同时设置时间线的 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 属性，则 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 之和必须小于等于 1。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>属性来创建该在停止前减速的动画。 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>属性可用于创建渐入效果或使看上去更自然的移动。 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>属性在一起以创建开始缓慢、 的动画，提高速度，然后在完成之前再次变慢。  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 小于 0 或大于 1。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 与 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 之和大于 1。</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DecelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 依赖属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesiredFrameRateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DesiredFrameRateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesiredFrameRateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration Duration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : System.Windows.Duration with get, set" Usage="System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此时间线播放的时间长度，而不是计数重复。</summary>
        <value>时间线的简单持续时间：此时间线完成一次向前迭代所花费的时间。 默认值为 <see cref="P:System.Windows.Duration.Automatic" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 时间线的简单持续时间构成一次的向前迭代，而不是总播放时间，其中包括重复的时间。  
  
## <a name="default-duration-behavior"></a>默认持续时间行为  
 行为<xref:System.Windows.Media.Animation.Timeline.Duration%2A>值为结构<xref:System.Windows.Duration.Automatic%2A>取决于时间线的类型：  
  
|**时间线**|**行为**|  
|-|-|  
|<xref:System.Windows.Media.Animation.Timeline>|无法确定 (<xref:System.Windows.Media.Animation.Timeline>为抽象类)|  
|<xref:System.Windows.Media.Animation.ParallelTimeline>,<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>,<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|扩展以容纳子时间线|  
|\<*类型*> 动画 （称为"从/到/者"或"基本"动画）|1 秒|  
|\<*类型*> AnimationUsingKeyFrames （称为关键帧动画）|所有关键帧的总和<xref:System.Windows.Media.Animation.KeyTime>值|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 <xref:System.Windows.Media.Animation.ParallelTimeline> 和<xref:System.Windows.Media.Animation.Storyboard>类型的<xref:System.Windows.Media.Animation.TimelineGroup>对象。 持续时间<xref:System.Windows.Media.Animation.TimelineGroup>由其子时间线的持续时间。 例如，<xref:System.Windows.Media.Animation.Storyboard>下面会为六秒 （持续时间为 6 秒），因为它是当其最后一个子级时间线 (<xref:System.Windows.Media.Animation.DoubleAnimation>) 结束。  
  
> [!NOTE]
>  注意： 以下示例中，仅用于说明提供从，代码已被省略。  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 示例\<*类型*> 动画包括<xref:System.Windows.Media.Animation.DoubleAnimation>， <xref:System.Windows.Media.Animation.PointAnimation>， <xref:System.Windows.Media.Animation.ColorAnimation>，等等。如果没有<xref:System.Windows.Media.Animation.Timeline.Duration%2A>指定为这些类型的动画，则会为 1 秒。  
  
 [xaml]  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 示例\<*类型*> AnimationUsingKeyFrames 包括<xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>， <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>，等等。如果没有<xref:System.Windows.Media.Animation.Timeline.Duration%2A>指定为这些类型的所有关键帧都完成后将运行它们的动画。  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DurationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property FillBehavior As FillBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::FillBehavior FillBehavior { System::Windows::Media::Animation::FillBehavior get(); void set(System::Windows::Media::Animation::FillBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillBehavior : System.Windows.Media.Animation.FillBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 在活动周期结束后的行为方式。</summary>
        <value>一个值，该值指定时间线在到达其有效期末尾后但其父级仍处于其有效期或填充期时的行为表现。 默认值为 <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置动画<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>属性<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>如果想要保留其值，它到达其有效期末尾后的动画。 已达到其有效期末尾的动画<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>设置<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>被认为是在其填充期间。 如果不希望保留后的其值的动画它到达其有效期末尾时，设置其  
  
 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 属性设置为<xref:System.Windows.Media.Animation.FillBehavior.Stop>。  
  
 因为动画在其填充期间继续重写其目标属性的值，尝试设置通过其他方式的目标属性的值可能会不产生任何影响。 有关演示如何设置属性值进行动画处理后的示例，请参阅[如何： 设置属性后进行动画处理其与情节提要](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md)。  
  
 播放和填充其父时间线停止; 时，子时间线将停止如果你想子时间线，以填充，请确保其父时间线具有<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>的<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>。  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FillBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="timeline.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">如果是 <see langword="true" />，则检查是否可冻结该实例；如果是 <see langword="false" />，则冻结该实例。</param>
        <summary>使此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 成为不可修改的，或确定是否可使其成为不可修改的。</summary>
        <returns>如果 <paramref name="isChecking" /> 为 true，则该方法将在可使该实例为只读的情况下返回 <see langword="true" />，而在其他情况下返回 <see langword="false" />。  如果 <paramref name="isChecking" /> 为 false，则该方法将在该实例目前为只读的情况下返回 <see langword="true" />，而在其他情况下返回 <see langword="false" />，并且其副作用是已开始更改该对象的冻结状态。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请勿调用此方法，直接 （但调用基实现中）。 内部调用此方法<xref:System.Windows.Freezable.Freeze%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="T:System.Windows.Media.Animation.Timeline" /> 当类包含不存储使用依赖项属性的数据时，实施者必须重写此方法。典型实现应调用基类，然后调用静态<see cref="M:System.Windows.Freezable.Freeze" />方法对所有<see cref="T:System.Windows.Freezable" />类型的类包含，返回的属性<see langword="true" />仅当所有属性都被冻结 （或可能已被冻结，对于传递通过<see langword="false" />值<paramref name="isChecking" />)。</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 实例。</param>
        <summary>使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 对象的复本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。 请注意，如果这些属性包含资源引用或数据绑定<xref:System.Windows.Freezable.GetAsFrozen%2A>将失败时尝试冻结该对象，并将引发<xref:System.InvalidOperationException>。  
  
 调用此方法<xref:System.Windows.Freezable.GetAsFrozen%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。 若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接调用此方法。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要复制和冻结的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <summary>使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的冻结复本。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。 若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>而不是直接调用此方法。  
  
 有关详细信息，请参阅 <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; GetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="static member GetDesiredFrameRate : System.Windows.Media.Animation.Timeline -&gt; Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Timeline.GetDesiredFrameRate timeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">要从其中检索所需帧速率的时间线。</param>
        <summary>获取指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 所需的帧速率。</summary>
        <returns>此时间线所需的帧速率。 默认值为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供读取访问权限<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加属性。 有关详细信息，请参阅<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>页。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Duration GetNaturalDuration(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="member this.GetNaturalDuration : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDuration clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <summary>返回此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 单次迭代的长度。</summary>
        <returns>此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 单个迭代的长度；如果自然持续时间未知，则为 <see cref="P:System.Windows.Duration.Automatic" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 时，仅应调用此方法<xref:System.Windows.Media.Animation.Timeline.Duration%2A>属性设置为<xref:System.Windows.Duration.Automatic%2A>。 如果<xref:System.Windows.Media.Animation.Timeline.Duration%2A>是<xref:System.Windows.Duration.Automatic%2A>，自然持续时间由该特定类的实现<xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>。  
  
 如果<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>返回<xref:System.Windows.Duration.Automatic%2A>，则意味着自然持续时间是未知，这表示自然持续时间为<xref:System.Windows.Duration.Forever%2A>。 此类是用于流式处理媒体这种情况。  
  
 请注意，传递此时间线创建以外的时钟的此方法是可行的但将提供不可靠的结果。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration&#xA;override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <summary>返回此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 单次迭代的长度。 此方法提供 <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" /> 的实现。</summary>
        <returns>此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 单个迭代的长度；如果自然持续时间未知，则为 <see cref="P:System.Windows.Duration.Automatic" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供的实现<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>且不应在代码中直接调用。 请改用 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>此方法应由提供自定义的自然所需要的时间线类实现<see cref="T:System.Windows.Duration" />时<see cref="P:System.Windows.Media.Animation.Timeline.Duration" />属性设置为<see cref="P:System.Windows.Duration.Automatic" />。如果作者无法确定自然持续时间，则此方法应返回<see cref="P:System.Windows.Duration.Automatic" />。</para>
        </block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的名称。</summary>
        <value>此时间线的名称。 默认值为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当移除为此时间线创建的时钟或其中一个父时间线时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过应用引发此事件<xref:System.Windows.Media.Animation.RemoveStoryboard>操作到使用情节提要的情节提要<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法，或 （当直接处理时钟） 调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType>方法。  
  
 虽然此事件处理程序看起来与时间线关联，但它实际上注册<xref:System.Windows.Media.Animation.Clock>为此时间线创建。  有关详细信息，请参阅[计时事件概述](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatBehavior As RepeatBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::RepeatBehavior RepeatBehavior { System::Windows::Media::Animation::RepeatBehavior get(); void set(System::Windows::Media::Animation::RepeatBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatBehavior : System.Windows.Media.Animation.RepeatBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此时间线的重复行为。</summary>
        <value>一个迭代 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />，指定时间线将要播放的次数；一个 <see cref="T:System.TimeSpan" /> 值，指定此时间线活动周期的总长度；或者特殊值 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />，指定时间线应该无限重复。 默认值是<see cref="T:System.Windows.Media.Animation.RepeatBehavior" />与<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />的<c>1</c>，指示时间线播放一次。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果迭代<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>指定的时间线<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>属性设置为`true`，一次重复组成一个向前迭代和向后的一次迭代。 时间线<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>属性设置为 true 迭代<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>的 2 将播放向前，然后向后，再次，然后转发，然后再次向后。  
  
 而不是指定的时间线播放的次数，还可以指定时间线要播放的时间的总的长度。 时间线来重复，这对于<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>值应大于时间线的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>。 例如，时间线与<xref:System.Windows.Media.Animation.Timeline.Duration%2A>的 2 秒和<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>的 4 秒，将播放一两次。 如果<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>小于时间线的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>，时间线的活动期被中止。  
  
 有关重复时间线详细信息，请参阅[动画概述](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RepeatBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RepeatBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RepeatBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="F#" Value="static member SetDesiredFrameRate : System.Windows.Media.Animation.Timeline * Nullable&lt;int&gt; -&gt; unit" Usage="System.Windows.Media.Animation.Timeline.SetDesiredFrameRate (timeline, desiredFrameRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline">分配有 <c>desiredFrameRate</c> 的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <param name="desiredFrameRate">此时间线每秒应生成的最大帧数量；如果系统将控制帧的数量，则为 <see langword="null" />。</param>
        <summary>设置指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 所需的帧速率。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法会设置<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加属性。 有关详细信息，请参阅<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>页。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的时间相对于其父级的前进速率。</summary>
        <value>一个大于 0 的有限值，表示此时间线的时间相对于其父级的前进速率；如果此时间线为根时间线，则为默认时间线速度。 默认值为 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 时间线的<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>设置没有影响其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; 该时间是相对于时间线的父级或如果时间线为根时间线，从该处开始时间线的时钟时间。  
  
 如果<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>指定，这<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>平均比率高于自然长度的时间线。  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 时间线的<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>属性控制自己的进度，相对于其父级的速率。 如果时间线为根，其<xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A>相对于默认时间线速度。 下面的示例演示几个具有不同的时间线<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>设置。  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 小于 0 或并非有限值。</exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpeedRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpeedRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpeedRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 依赖属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>