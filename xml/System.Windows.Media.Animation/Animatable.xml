<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Animatable.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58ea9713148e10c8f9a95421b6bcd7b78a6cb4d56.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ea9713148e10c8f9a95421b6bcd7b78a6cb4d56</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Abstract class that provides animation support.</source>
          <target state="translated">一个提供动画支持的抽象类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Animates the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 对指定的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 进行动画处理。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The property to animate.</source>
          <target state="translated">要进行动画处理的属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">用于动画处理指定属性的时钟。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则将从指定属性删除（而非停止）所有动画。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 应用到指定的 <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If the property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">如果该属性已进行动画处理，则使用 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> 切换行为。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Note that using this method to removing clocks from a property does not stop those clocks.</source>
          <target state="translated">请注意，从属性中移除时钟使用此方法时，不会停止这些时钟。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">要进行动画处理的属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">用于动画处理指定属性的时钟。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> 并且 <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，则将从指定属性删除（而非停止）所有动画。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> and clock is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method has no effect.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> 并且 clock 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，则此方法不起作用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">一个值，用来指定新动画应该如何与当前已在影响该属性值的任何动画进行交互。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 应用到指定的 <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">如果该属性已进行动画处理，则使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that using this method to remove clocks from a property does not stop those clocks.</source>
          <target state="translated">请注意，使用此方法从属性中移除时钟不会停止这些时钟。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">使用使用</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">当你将<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>，或<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>属性使用<ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>、 任何<ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>以前与该属性关联的对象可继续使用系统资源; 计时系统不会自动删除这些时钟。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免出现性能问题，当应用大量使用的时钟<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>，完成后，应从属性的基值移除组合时钟。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">删除时钟有多种方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">若要从属性中移除所有时钟，请使用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph>动画对象的方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定正进行动画处理的第一个参数的属性和<ph id="ph1">`null`</ph>为第二个。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">这将从该属性中删除所有动画时钟。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">若要删除特定<ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>时钟的列表，从使用<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>检索<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>，然后调用<ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>方法<ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">这通常是<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>时钟的事件处理程序。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">请注意，仅根时钟可以受<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>;<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>子时钟属性将返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">另请注意，<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>如果时钟的有效持续时间都是永久性的不会调用事件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">在这种情况下，用户将需要确定何时调用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">此动画问题主要出现在生存期较长的对象上。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">当对某个对象进行垃圾回收时，它的时钟也会断开连接并进行垃圾回收。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">有关时钟对象的详细信息，请参阅<bpt id="p1">[</bpt>动画和计时系统概述<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animation clocks using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">下面的示例演示如何应用使用不同的动画时钟<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>设置。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">将动画应用于指定 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The property to animate.</source>
          <target state="translated">要进行动画处理的属性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">用于对指定属性进行动画处理的动画。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">如果动画的 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，则移除当前的任何动画，并保持属性的当前值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则从属性中移除所有动画，属性值会还原为其基值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">将动画应用于指定 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">动画会在呈现下一帧时启动。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the specified property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">如果指定属性已进行动画处理，则使用 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> 切换行为。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">如果动画<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph>大于零，与动画开始这段时间已过后从呈现下一步的帧的时间。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">要进行动画处理的属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">用于对指定属性进行动画处理的动画。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and the animation's <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>，并且该动画的 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>，则将移除当前的任何动画，并且将保持该属性的当前值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> is a <ph id="ph2">&lt;see langword="null" /&gt;</ph> reference, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>，并且 <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 引用，则将从该属性中移除所有动画，并且将属性值恢复为它的基值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>, this method will have no effect if the animation or its <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>，则当该动画或其 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 时，此方法将不起作用。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">一个值，用来指定新动画应该如何与当前已在影响该属性值的任何动画进行交互。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">将动画应用于指定 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">动画会在呈现下一帧时启动。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the specified property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">如果指定的属性已进行动画处理，则使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">如果动画<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph>大于零，与动画开始这段时间已过后从呈现下一步的帧的时间。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">使用使用</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">当你将<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>，或<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>属性使用<ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>、 任何<ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>以前与该属性关联的对象可继续使用系统资源; 计时系统不会自动删除这些时钟。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免出现性能问题，当应用大量使用的时钟<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>，完成后，应从属性的基值移除组合时钟。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">删除时钟有多种方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">若要从属性中移除所有时钟，请使用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph>动画对象的方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定正进行动画处理的第一个参数的属性和<ph id="ph1">`null`</ph>为第二个。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">这将从该属性中删除所有动画时钟。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">若要删除特定<ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>时钟的列表，从使用<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>检索<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>，然后调用<ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>方法<ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">这通常是<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>时钟的事件处理程序。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">请注意，仅根时钟可以受<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>;<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>子时钟属性将返回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">另请注意，<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>如果时钟的有效持续时间都是永久性的不会调用事件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">在这种情况下，用户将需要确定何时调用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">此动画问题主要出现在生存期较长的对象上。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">当对某个对象进行垃圾回收时，它的时钟也会断开连接并进行垃圾回收。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">有关时钟对象的详细信息，请参阅<bpt id="p1">[</bpt>动画和计时系统概述<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animations using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">下面的示例演示如何应用使用不同的动画<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>设置。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>, making deep copies of this object's values.</source>
          <target state="translated">创建此 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 的可修改克隆，从而深度复制此对象的值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">在复制此对象的依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>A modifiable clone of this instance.</source>
          <target state="translated">此实例的可修改复本。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The returned clone is effectively a deep copy of the current object.</source>
          <target state="translated">返回的复本实际上是当前对象的深层副本。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The clone's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
          <target state="translated">该复本的 <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 属性为 false。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph> method can be used to produce modifiable copies of frozen <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph>方法可以用于生成的可修改副本冻结<ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>For convenience, this method shadows the inherited <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method to provide a strongly typed implementation.</source>
          <target state="translated">为方便起见，此方法将隐藏继承<ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph>方法以提供强类型的实现。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should simply determine whether this instance can be frozen.</source>
          <target state="translated">如果此方法只应确定该实例是否可冻结，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if this instance should actually freeze itself when this method is called.</source>
          <target state="translated">如果调用此方法时该实例实际上应冻结其自身，则为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Makes this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> object unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">使此 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 对象成为不可修改的对象，或确定是否可使其成为不可修改的对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> can be made unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable.</source>
          <target state="translated">当 <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 时，如果可以使此 <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 成为不可修改的，则此方法返回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>；否则返回 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> is now unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</source>
          <target state="translated">当 <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 时，如果此 <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 当前不可修改，则此方法返回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>；或者，如果无法使其成为不可修改的，并且副作用是已开始更改此对象的冻结状态，则返回 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method will return <bpt id="p1">**</bpt>false<ept id="p1">**</ept> when <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="translated">此方法将返回<bpt id="p1">**</bpt>false<ept id="p1">**</ept>时<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph>是<bpt id="p2">**</bpt>true<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
          <target state="translated">请勿调用此方法，直接 （但调用基实现中）。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method is called internally by <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (with <ph id="ph2">`isChecking`</ph> equal to <ph id="ph3">`true`</ph>) and  <ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (with <ph id="ph5">`isChecking`</ph> equal to <ph id="ph6">`false`</ph>).</source>
          <target state="translated">内部调用此方法<ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph>(与<ph id="ph2">`isChecking`</ph>等于<ph id="ph3">`true`</ph>) 和<ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph>(与<ph id="ph5">`isChecking`</ph>等于<ph id="ph6">`false`</ph>)。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Classes that derive from <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> must override this method when the class contains data that is not stored using dependency properties.</source>
          <target state="translated">派生自的类<ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>必须重写此方法，当类中包含不存储使用依赖项属性的数据。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>A typical implementation would call the base implementation, then call the static <ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph> method on all <ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> typed properties that the class contains, returning <ph id="ph3">&lt;see langword="true" /&gt;</ph> only if all properties were frozen (or could have been frozen, in the case of passing through a <ph id="ph4">&lt;see langword="false" /&gt;</ph> value for <ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>).</source>
          <target state="translated">典型的实现将调用基实现中，然后调用静态<ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph>方法对所有<ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>类型的类包含，返回的属性<ph id="ph3">&lt;see langword="true" /&gt;</ph>仅当所有属性都被都冻结 (或可能已被都冻结，请在用例通过传递<ph id="ph4">&lt;see langword="false" /&gt;</ph>值<ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Identifies the property whose base (non-animated) value should be retrieved.</source>
          <target state="translated">标识应该检索其基值（未经过动画处理的值）的属性。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Returns the non-animated value of the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">返回指定的 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 的未经过动画处理的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>The value that would be returned if the specified property were not animated.</source>
          <target state="translated">在指定的属性未经过动画处理时返回的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>If the specified property is not animated, this method returns the same result as <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>.</source>
          <target state="translated">如果指定的属性不进行动画处理，此方法将返回与相同的结果<ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>In the following example, the non-animated values of animated properties are retrieved and displayed.</source>
          <target state="translated">在下面的示例中，非动画的动画属性检索和显示值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>Gets a value that indicates whether one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties.</source>
          <target state="translated">获取一个值，该值指示一个或多个 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 对象是否与此对象的任何依赖项属性相关联。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>true<ept id="p1">**</ept>如果一个或多个<ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>对象是与此对象的依赖项属性的任何相关联; 否则为<bpt id="p2">**</bpt>false<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>This property does not indicate whether this object contains animated sub-objects.</source>
          <target state="translated">此属性不指示此对象是否包含动画的子对象。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">表示参与依赖属性系统的对象。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Specifies whether a dependency object should be serialized.</source>
          <target state="translated">指明是否应该序列化依赖项对象。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize <ph id="ph2">&lt;paramref name="target" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 则系列化 <ph id="ph2">&lt;paramref name="target" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph> method to determine if a property should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>类使用<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph>方法来确定是否应序列化属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
