<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4bb1869b126ba0d1f8e9a01fb47fc080f82a8066" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52211802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b9c07-101">一个容器时间线，该时间线为子动画提供对象和属性确定信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9c07-101">A container timeline that provides object and property targeting information for its child animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="b9c07-102">以交互方式控制情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="b9c07-103">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-104">若要使情节提要可以控制在标记中，您可以指定<xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A>的属性<xref:System.Windows.Media.Animation.BeginStoryboard>对象，将创建它; 有关示例，请参阅[如何： 使用事件触发器来控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="b9c07-105">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-106">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="b9c07-107">数据绑定和动画时间线</span><span class="sxs-lookup"><span data-stu-id="b9c07-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="b9c07-108">大多数时间线属性可以是数据绑定或动画处理;但是，由于计时系统工作的方式，数据绑定或动画时间线不类似于其他数据绑定或动画处理的对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="b9c07-109">若要了解它们的行为，最好先了解一下激活时间线的含义。</span><span class="sxs-lookup"><span data-stu-id="b9c07-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="b9c07-110">激活时间线时，副本由时间线及其子时间线的副本。</span><span class="sxs-lookup"><span data-stu-id="b9c07-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="b9c07-111">这些副本均已冻结 （使只读的） 和<xref:System.Windows.Media.Animation.Clock>根据它们来创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="b9c07-112">这些时钟将执行对目标属性进行动画处理的实际工作。</span><span class="sxs-lookup"><span data-stu-id="b9c07-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="b9c07-113">如果数据绑定或进行动画处理，其当前值的快照由创建它的时钟时，时间线。</span><span class="sxs-lookup"><span data-stu-id="b9c07-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="b9c07-114">即使原始时间线可能会继续更改，其时钟却没有。</span><span class="sxs-lookup"><span data-stu-id="b9c07-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="b9c07-115">时间线以反映数据绑定或动画更改，必须重新创建它的时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="b9c07-116">时钟不会重新为你自动创建。</span><span class="sxs-lookup"><span data-stu-id="b9c07-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="b9c07-117">以下是应用时间线更改的几种方法：</span><span class="sxs-lookup"><span data-stu-id="b9c07-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="b9c07-118">如果时间线是或属于<xref:System.Windows.Media.Animation.Storyboard>，你可以使其通过重新应用其情节提要使用反映更改<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="b9c07-119">这还会产生重新启动动画的附带影响。</span><span class="sxs-lookup"><span data-stu-id="b9c07-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="b9c07-120">在代码中，可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>方法将情节提要回其之前的位置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="b9c07-121">如果您将动画应用于属性使用直接<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，调用<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>再次方法并将其传递已修改的动画。</span><span class="sxs-lookup"><span data-stu-id="b9c07-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="b9c07-122">如果您正在直接在时钟级别上，创建和应用一组新的时钟，并使用它们来替换以前创建的时钟的集。</span><span class="sxs-lookup"><span data-stu-id="b9c07-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="b9c07-123">有关数据的示例绑定动画，请参见[密钥样条动画示例](https://go.microsoft.com/fwlink/?LinkID=160011)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-123">For an example of a data bound animation, see [Key Spline Animation Sample](https://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-124">初始化 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-125">启动与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的那组动画。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-126">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-127">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-128">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-129">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-130">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-130">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-131">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-132">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-133">如果目标的属性已进行动画处理，则会使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>的切换行为。</span><span class="sxs-lookup"><span data-stu-id="b9c07-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="b9c07-134">不能暂停、 恢复后，或否则以交互方式控制它们启动后开始使用此方法的情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="b9c07-135">若要使情节提要可以控制，请使用<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="b9c07-136">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-137">下面的示例使用演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-138"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-139">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-139">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-140">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-141">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-142">如果目标的属性已进行动画处理，则会使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>的切换行为。</span><span class="sxs-lookup"><span data-stu-id="b9c07-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="b9c07-143">不能暂停、 恢复后，或否则以交互方式控制它们启动后开始使用此方法的情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="b9c07-144">若要使情节提要可以控制，请使用<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29>或<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="b9c07-145">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-146">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-146">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-147">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="b9c07-148">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-148">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-149">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-150">如果目标的属性已进行动画处理，则会使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>的切换行为。</span><span class="sxs-lookup"><span data-stu-id="b9c07-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="b9c07-151">若要以交互方式控制此情节提要，必须指定相同`containingObject`时调用的交互式方法用于开始情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="b9c07-152">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-153">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-154">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-155">下面的示例使用可控制演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-156"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-157">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-157">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-158">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="b9c07-159">新动画应该用来与任何当前动画进行交互的行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-159">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-160">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，将与此 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 关联的动画应用到它们的目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-161">当应用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>属性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，则所有<xref:System.Windows.Media.Animation.Clock>之前与该属性相关联的对象继续消耗系统资源时，计时系统不自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="b9c07-162">若要避免出现性能问题时应用大量时钟使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，它们完成后，您应该从属性的基值删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="b9c07-163">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="b9c07-164">若要从属性中删除所有时钟，请使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>经过动画处理的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="b9c07-165">指定要进行动画处理的第一个参数的属性和`null`为第二个。</span><span class="sxs-lookup"><span data-stu-id="b9c07-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="b9c07-166">这将从属性中删除所有的动画时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="b9c07-167">若要删除特定<xref:System.Windows.Media.Animation.AnimationClock>从列表中的时钟，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性<xref:System.Windows.Media.Animation.AnimationClock>检索<xref:System.Windows.Media.Animation.ClockController>，然后调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="b9c07-168">这通常是<xref:System.Windows.Media.Animation.Clock.Completed>时钟的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9c07-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="b9c07-169">请注意，只有根时钟可以受<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性的子时钟返回`null`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="b9c07-170">另请注意，<xref:System.Windows.Media.Animation.Clock.Completed>如果时钟的有效持续时间将永远不调用事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="b9c07-171">在这种情况下，用户必须确定何时调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-172">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="b9c07-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="b9c07-173">垃圾回收对象时，它的时钟也会断开连接和垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="b9c07-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="b9c07-174">有关时钟对象的详细信息，请参阅[动画和计时系统概述](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-175">下面的示例使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>进行动画处理时在用户左键单击，并<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>用户单击鼠标右键时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-176">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-176">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-177">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="b9c07-178">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-178">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-179">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-180">如果目标的属性已进行动画处理，则会使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>的切换行为。</span><span class="sxs-lookup"><span data-stu-id="b9c07-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="b9c07-181">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时</span><span class="sxs-lookup"><span data-stu-id="b9c07-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="b9c07-182">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-183">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-184">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-185">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-185">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span>
          </span>
          <span data-ttu-id="b9c07-186">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="b9c07-187">要进行动画处理的模板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-187">The template to animate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-188">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-189">如果目标的属性已进行动画处理，则会使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>的切换行为。</span><span class="sxs-lookup"><span data-stu-id="b9c07-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="b9c07-190">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-191">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-192">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-193">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-193">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-194">没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="b9c07-195">新动画应该用来与任何当前动画进行交互的行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-195">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-196">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，将与此 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 关联的动画应用到它们的目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9c07-197">下面的示例使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>进行动画处理时在用户左键单击，并<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>用户单击鼠标右键时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-198">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-198">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-199">没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="b9c07-200">新动画应该用来与任何当前动画进行交互的行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-200">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="b9c07-201">声明在动画启动后是否可以控制（可以暂停）动画。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-201">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-202">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，将与此 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 关联的动画应用到它们的目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-203">如果目标的属性已进行动画处理，则会使用指定的切换行为。</span><span class="sxs-lookup"><span data-stu-id="b9c07-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="b9c07-204">若要以交互方式控制此情节提要，必须指定相同`containingObject`时调用的交互式方法用于开始情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="b9c07-205">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-206">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-207">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="b9c07-208">使用组合 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="b9c07-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="b9c07-209">当应用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>属性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，则所有<xref:System.Windows.Media.Animation.Clock>之前与该属性相关联的对象继续消耗系统资源时，计时系统不自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="b9c07-210">若要避免出现性能问题时应用大量时钟使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，它们完成后，您应该从属性的基值删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="b9c07-211">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="b9c07-212">若要从属性中删除所有时钟，请使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>经过动画处理的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="b9c07-213">指定要进行动画处理的第一个参数的属性和`null`为第二个。</span><span class="sxs-lookup"><span data-stu-id="b9c07-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="b9c07-214">这将从属性中删除所有的动画时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="b9c07-215">若要删除特定<xref:System.Windows.Media.Animation.AnimationClock>从列表中的时钟，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性<xref:System.Windows.Media.Animation.AnimationClock>检索<xref:System.Windows.Media.Animation.ClockController>，然后调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="b9c07-216">这通常是<xref:System.Windows.Media.Animation.Clock.Completed>时钟的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9c07-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="b9c07-217">请注意，只有根时钟可以受<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性的子时钟返回`null`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="b9c07-218">另请注意，<xref:System.Windows.Media.Animation.Clock.Completed>如果时钟的有效持续时间将永远不调用事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="b9c07-219">在这种情况下，用户必须确定何时调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-220">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="b9c07-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="b9c07-221">垃圾回收对象时，它的时钟也会断开连接和垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="b9c07-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="b9c07-222">有关时钟对象的详细信息，请参阅[动画和计时系统概述](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-223">下面的示例使用可控制演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-224"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="b9c07-225">下面的示例使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>进行动画处理时在用户左键单击，并<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>用户单击鼠标右键时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-226">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-226">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span>
          </span>
          <span data-ttu-id="b9c07-227">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="b9c07-228">要进行动画处理的模板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-228">The template to animate.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="b9c07-229">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-229">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-230">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-231">如果目标的属性已进行动画处理，则会使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>的切换行为。</span><span class="sxs-lookup"><span data-stu-id="b9c07-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="b9c07-232">若要以交互方式控制此情节提要，必须指定相同`containingObject`时调用的交互式方法用于开始情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="b9c07-233">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-234">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-235">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-236">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-236">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span>
          </span>
          <span data-ttu-id="b9c07-237">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="b9c07-238">要进行动画处理的模板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-238">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="b9c07-239">新动画应该用来与任何当前动画进行交互的行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-239">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-240">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-241">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-242">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-243">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="b9c07-244">使用组合 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="b9c07-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="b9c07-245">当应用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>属性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，则所有<xref:System.Windows.Media.Animation.Clock>之前与该属性相关联的对象继续消耗系统资源时，计时系统不自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="b9c07-246">若要避免出现性能问题时应用大量时钟使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，它们完成后，您应该从属性的基值删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="b9c07-247">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="b9c07-248">若要从属性中删除所有时钟，请使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>经过动画处理的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="b9c07-249">指定要进行动画处理的第一个参数的属性和`null`为第二个。</span><span class="sxs-lookup"><span data-stu-id="b9c07-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="b9c07-250">这将从属性中删除所有的动画时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="b9c07-251">若要删除特定<xref:System.Windows.Media.Animation.AnimationClock>从列表中的时钟，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性<xref:System.Windows.Media.Animation.AnimationClock>检索<xref:System.Windows.Media.Animation.ClockController>，然后调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="b9c07-252">这通常是<xref:System.Windows.Media.Animation.Clock.Completed>时钟的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9c07-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="b9c07-253">请注意，只有根时钟可以受<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性的子时钟返回`null`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="b9c07-254">另请注意，<xref:System.Windows.Media.Animation.Clock.Completed>如果时钟的有效持续时间将永远不调用事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="b9c07-255">在这种情况下，用户必须确定何时调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-256">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="b9c07-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="b9c07-257">垃圾回收对象时，它的时钟也会断开连接和垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="b9c07-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="b9c07-258">有关时钟对象的详细信息，请参阅[动画和计时系统概述](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-259">包含在与此情节提要的动画目标相同的名称范围内的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-259">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="b9c07-260">没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="b9c07-261">新动画应该用来与任何当前动画进行交互的行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-261">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="b9c07-262">声明在动画启动后是否可以控制（可以暂停）动画。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-262">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-263">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-264">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时</span><span class="sxs-lookup"><span data-stu-id="b9c07-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="b9c07-265">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-266">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-267">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="b9c07-268">使用组合 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="b9c07-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="b9c07-269">当应用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>属性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，则所有<xref:System.Windows.Media.Animation.Clock>之前与该属性相关联的对象继续消耗系统资源时，计时系统不自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="b9c07-270">若要避免出现性能问题时应用大量时钟使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，它们完成后，您应该从属性的基值删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="b9c07-271">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="b9c07-272">若要从属性中删除所有时钟，请使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>经过动画处理的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="b9c07-273">指定要进行动画处理的第一个参数的属性和`null`为第二个。</span><span class="sxs-lookup"><span data-stu-id="b9c07-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="b9c07-274">这将从属性中删除所有的动画时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="b9c07-275">若要删除特定<xref:System.Windows.Media.Animation.AnimationClock>从列表中的时钟，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性<xref:System.Windows.Media.Animation.AnimationClock>检索<xref:System.Windows.Media.Animation.ClockController>，然后调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="b9c07-276">这通常是<xref:System.Windows.Media.Animation.Clock.Completed>时钟的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9c07-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="b9c07-277">请注意，只有根时钟可以受<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性的子时钟返回`null`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="b9c07-278">另请注意，<xref:System.Windows.Media.Animation.Clock.Completed>如果时钟的有效持续时间将永远不调用事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="b9c07-279">在这种情况下，用户必须确定何时调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-280">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="b9c07-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="b9c07-281">垃圾回收对象时，它的时钟也会断开连接和垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="b9c07-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="b9c07-282">有关时钟对象的详细信息，请参阅[动画和计时系统概述](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-283">下面的示例演示如何创建可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="b9c07-284">下面的示例使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>进行动画处理时在用户左键单击，并<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>用户单击鼠标右键时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-285">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-285">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span>
          </span>
          <span data-ttu-id="b9c07-286">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="b9c07-287">要进行动画处理的模板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-287">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="b9c07-288">新动画应该用来与任何当前动画进行交互的行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-288">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="b9c07-289">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-289">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-290">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-291">若要以交互方式控制此情节提要，必须指定相同`containingObject`时调用的交互式方法用于开始情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="b9c07-292">调用此方法时，<xref:System.Windows.Media.Animation.Clock>情节提要和它所包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="b9c07-293">这些时钟与`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="b9c07-294">从情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="b9c07-295">使用组合 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="b9c07-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="b9c07-296">当应用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>属性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，则所有<xref:System.Windows.Media.Animation.Clock>之前与该属性相关联的对象继续消耗系统资源时，计时系统不自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="b9c07-297">若要避免出现性能问题时应用大量时钟使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，它们完成后，您应该从属性的基值删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="b9c07-298">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="b9c07-299">若要从属性中删除所有时钟，请使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>经过动画处理的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="b9c07-300">指定要进行动画处理的第一个参数的属性和`null`为第二个。</span><span class="sxs-lookup"><span data-stu-id="b9c07-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="b9c07-301">这将从属性中删除所有的动画时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="b9c07-302">若要删除特定<xref:System.Windows.Media.Animation.AnimationClock>从列表中的时钟，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性<xref:System.Windows.Media.Animation.AnimationClock>检索<xref:System.Windows.Media.Animation.ClockController>，然后调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="b9c07-303">这通常是<xref:System.Windows.Media.Animation.Clock.Completed>时钟的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9c07-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="b9c07-304">请注意，只有根时钟可以受<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>属性的子时钟返回`null`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="b9c07-305">另请注意，<xref:System.Windows.Media.Animation.Clock.Completed>如果时钟的有效持续时间将永远不调用事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="b9c07-306">在这种情况下，用户必须确定何时调用<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-307">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="b9c07-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="b9c07-308">垃圾回收对象时，它的时钟也会断开连接和垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="b9c07-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="b9c07-309">有关时钟对象的详细信息，请参阅[动画和计时系统概述](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-310">创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的可修改克隆，从而深度复制此对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="b9c07-311">在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-312">当前对象的可修改复本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-312">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="b9c07-313">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-314">此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="b9c07-315">为方便起见，此方法隐藏继承的版本使用的强类型实现。</span><span class="sxs-lookup"><span data-stu-id="b9c07-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="b9c07-316">有关详情，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-317">创建 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-318">新 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-319">在内部调用此方法<xref:System.Windows.Freezable.CreateInstance%2A>创建的新实例时<xref:System.Windows.Media.Animation.Storyboard>类的各种克隆方法 (如<xref:System.Windows.Freezable.Clone%2A>和<xref:System.Windows.Freezable.CloneCurrentValue%2A>)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-320">下面的示例演示的典型实现<xref:System.Windows.Freezable.CreateInstanceCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b9c07-321">每个<see cref="T:System.Windows.Media.Animation.Storyboard" />子类必须实现此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b9c07-321">Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method.</span>
            </span>
            <span data-ttu-id="b9c07-322">典型的实现是只需调用类默认构造函数，并返回结果。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b9c07-322">Typical implementation is to simply call the class default constructor and return the result.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-323">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-323">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-324">时钟的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是相对于现实世界的时间的时间的当前前进的速率。</span><span class="sxs-lookup"><span data-stu-id="b9c07-324">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="b9c07-325">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-325">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-326">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-326">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-327">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-327">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-328">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-328">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-329">当前全局速度，或者为 0（如果时钟停止）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-329">The current global speed, or 0 if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-330">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-330">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-331">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-331">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-332">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-332">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-333">当前全局速度，或者为 <see langword="null" />（如果时钟停止）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-333">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-334">时钟的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是相对于现实世界的时间的时间的当前前进的速率。</span><span class="sxs-lookup"><span data-stu-id="b9c07-334">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="b9c07-335">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-335">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-336">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-336">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-337">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-337">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-338">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-338">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-339">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-339">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-340">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-340">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-341">当前全局速度，或者为 <see langword="null" />（如果时钟停止）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-341">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-342">时钟的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是相对于现实世界的时间的时间的当前前进的速率。</span><span class="sxs-lookup"><span data-stu-id="b9c07-342">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="b9c07-343">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-343">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-344">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-344">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-345">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-345">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-346">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-347">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-347">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-348">此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-348">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-349">时钟的第一次迭代的值为 1。</span><span class="sxs-lookup"><span data-stu-id="b9c07-349">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="b9c07-350">如果此演示图板<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>设置的`true`、 完整的迭代包含正向和反向迭代，而不仅仅是其中一个段。</span><span class="sxs-lookup"><span data-stu-id="b9c07-350">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="b9c07-351">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-351">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-352">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-352">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-353">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-353">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-354">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-354">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-355">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-355">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-356">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-356">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-357">此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-357">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-358">时钟的第一次迭代的值为 1。</span><span class="sxs-lookup"><span data-stu-id="b9c07-358">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="b9c07-359">如果此演示图板<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>设置的`true`、 完整的迭代包含正向和反向迭代，而不仅仅是其中一个段。</span><span class="sxs-lookup"><span data-stu-id="b9c07-359">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="b9c07-360">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-360">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-361">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-361">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-362">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-362">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-363">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-363">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-364">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-364">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-365">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-365">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-366">此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-366">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-367">时钟的第一次迭代的值为 1。</span><span class="sxs-lookup"><span data-stu-id="b9c07-367">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="b9c07-368">如果此时钟的时间线具有<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>设置的`true`、 完整的迭代包含正向和反向迭代，而不仅仅是其中一个段。</span><span class="sxs-lookup"><span data-stu-id="b9c07-368">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="b9c07-369">而不考虑其当前迭代中，定位时钟都会将其当前迭代为 1。</span><span class="sxs-lookup"><span data-stu-id="b9c07-369">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="b9c07-370">重新启动时钟也为 1 返回其当前迭代。</span><span class="sxs-lookup"><span data-stu-id="b9c07-370">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="b9c07-371">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-371">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-372">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-372">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-373">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-373">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-374">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-375">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-375">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-376">如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-376">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="b9c07-377">值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-377">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-378">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-378">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-379">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-379">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-380">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-380">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-381">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-381">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-382">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-382">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-383">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-383">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-384">如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-384">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="b9c07-385">值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-385">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-386">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-386">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-387">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-387">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-388">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-388">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-389">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-389">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-390">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-390">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-391">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-391">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-392">如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-392">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="b9c07-393">值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-393">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-394">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-394">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-395">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-395">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-396">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-396">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-397">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-398">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-398">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-399">为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-399">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-400">此方法不会告知你是否暂停情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-400">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="b9c07-401">若要确定是否已暂停情节提要，请使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-401">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="b9c07-402">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-402">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-403">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-403">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-404">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-404">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-405">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-405">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-406">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-406">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-407">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-407">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-408">为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-408">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-409">此方法不会告知你是否暂停情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-409">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="b9c07-410">若要确定是否已暂停情节提要，请使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-410">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="b9c07-411">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-411">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-412">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-412">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-413">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-413">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-414">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-414">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-415">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-415">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-416">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-416">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-417">为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-417">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-418">此方法不会告知你是否暂停情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-418">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="b9c07-419">若要确定是否已暂停情节提要，请使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-419">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="b9c07-420">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-420">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-421">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-421">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-422">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-422">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-423">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-424">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-424">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-425">如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；否则为此演示图板的时钟的当前时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-425">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-426">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-426">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-427">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-427">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-428">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-428">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-429">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-429">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-430">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-430">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-431">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-431">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-432">如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；否则为此演示图板的时钟的当前时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-432">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-433">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-433">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-434">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-434">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-435">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-435">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-436">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-436">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-437">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-437">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-438">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-438">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-439">如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；否则为此演示图板的时钟的当前时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-439">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-440">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-440">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-441">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-441">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-442">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-442">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-443">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-444">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-444">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-445">如果为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-445">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-446">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-446">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-447">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-447">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-448">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-448">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-449">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-449">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-450">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-450">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-451">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-451">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-452">如果为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-452">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-453">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-453">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-454">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-454">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-455">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-455">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-456">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-456">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-457">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-457">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-458">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-458">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-459">如果为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-459">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-460">若要使用此方法检索有关演示图板的时钟的信息，必须可控制情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-460">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="b9c07-461">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-461">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-462">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-462">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b9c07-463">要从其中检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的时间线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-463">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-464">检索指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-464">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-465">作为 <paramref name="element" /> 的目标的依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-465">The dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-466">使用<xref:System.Windows.Media.Animation.Storyboard.Target%2A>附加使用动画时间线以指示它们针对的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="b9c07-466">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="b9c07-467">有关情节提要目标的工作原理的详细信息，请参阅<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-467">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="b9c07-468">有关如何附加属性的工作的详细信息，请参阅[附加属性概述](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-468">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b9c07-469">要从其中检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的时间线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-469">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-470">检索指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-470">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-471">作为 <paramref name="element" /> 的目标的依赖项对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-471">The name of the dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-472">此方法获取<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>附加属性上指定的对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-472">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="b9c07-473">有关情节提要目标的工作原理的详细信息，请参阅<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-473">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="b9c07-474">有关如何附加属性的工作的详细信息，请参阅[附加属性概述](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-474">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b9c07-475">要从中获取 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的依赖项对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-475">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-476">检索指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-476">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9c07-477">作为 <paramref name="element" /> 的目标的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-477">The property targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-478">此方法获取<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加属性上指定的对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-478">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="b9c07-479">有关情节提要目标的工作原理的详细信息，请参阅<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加属性。</span><span class="sxs-lookup"><span data-stu-id="b9c07-479">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="b9c07-480">有关如何附加属性的工作的详细信息，请参阅[附加属性概述](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-480">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="b9c07-481">请注意，如果<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>已设置在标记中，此方法返回一个空<xref:System.Windows.PropertyPath>因为解析和分析该内部存储的属性引用。</span><span class="sxs-lookup"><span data-stu-id="b9c07-481">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-482">暂停为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-483">暂停为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-483">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-484">此方法暂停情节提要，但如果不是活动或暂停当前已无明显的效果。</span><span class="sxs-lookup"><span data-stu-id="b9c07-484">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="b9c07-485">产生了负面影响，它还会暂停所有关联的子项。</span><span class="sxs-lookup"><span data-stu-id="b9c07-485">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="b9c07-486">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-486">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-487">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-487">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-488">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-488">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="b9c07-489">从暂停的情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-489">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="b9c07-490">当您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暂停情节提要，它显示为恢复并重新启动。</span><span class="sxs-lookup"><span data-stu-id="b9c07-490">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="b9c07-491">但是，这是实际情况并非如此。</span><span class="sxs-lookup"><span data-stu-id="b9c07-491">However, that is not what actually happens.</span></span> <span data-ttu-id="b9c07-492"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法实际上会暂停<xref:System.Windows.Media.Animation.Storyboard>使用新的未暂停版本。</span><span class="sxs-lookup"><span data-stu-id="b9c07-492">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="b9c07-493">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法调用时，时钟对象创建的情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-493">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="b9c07-494">这些时钟分配给它们进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="b9c07-494">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="b9c07-495">因此，当<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>调用方法同样，不重新启动它的时钟，并将它们替换用新时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-495">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-496">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-496">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-497">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-497">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-498">暂停与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的指定 <see cref="T:System.Windows.FrameworkContentElement" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-498">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-499">此方法暂停情节提要，但如果不是活动或暂停当前已无明显的效果。</span><span class="sxs-lookup"><span data-stu-id="b9c07-499">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="b9c07-500">产生了负面影响，它还会暂停所有关联的子项。</span><span class="sxs-lookup"><span data-stu-id="b9c07-500">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="b9c07-501">查找暂停的情节提要不会恢复它。</span><span class="sxs-lookup"><span data-stu-id="b9c07-501">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="b9c07-502">恢复暂停的情节提要的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-502">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="b9c07-503">调用<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法再次暂停的情节提要会替换为一个新的活动，具有恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="b9c07-503">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="b9c07-504">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-504">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-505">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-505">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-506">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-506">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-507">从示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-507">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-508">暂停演示图板的时钟将触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-508">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="b9c07-509">从暂停的情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-509">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="b9c07-510">当您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暂停情节提要，它显示为恢复并重新启动。</span><span class="sxs-lookup"><span data-stu-id="b9c07-510">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="b9c07-511">但是，这是实际情况并非如此。</span><span class="sxs-lookup"><span data-stu-id="b9c07-511">However, that is not what actually happens.</span></span> <span data-ttu-id="b9c07-512"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法实际上是替换了本身未暂停的版本。</span><span class="sxs-lookup"><span data-stu-id="b9c07-512">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="b9c07-513">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法调用时，时钟对象创建的情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-513">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="b9c07-514">这些时钟分配给它们进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="b9c07-514">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="b9c07-515">因此，当<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>调用方法同样，不重新启动它的时钟，并将它们替换用新时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-515">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-516">下面的示例使用可控制演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-516">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-517"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-517">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-518">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-518">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-519">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-519">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-520">暂停与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的指定 <see cref="T:System.Windows.FrameworkElement" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-520">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-521">此方法暂停情节提要，但如果不是活动或暂停当前已无明显的效果。</span><span class="sxs-lookup"><span data-stu-id="b9c07-521">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="b9c07-522">产生了负面影响，它还会暂停所有关联的子项。</span><span class="sxs-lookup"><span data-stu-id="b9c07-522">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="b9c07-523">查找暂停的情节提要不会恢复它。</span><span class="sxs-lookup"><span data-stu-id="b9c07-523">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="b9c07-524">恢复暂停的情节提要的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-524">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="b9c07-525">调用<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法再次暂停的情节提要会替换为一个新的活动，具有恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="b9c07-525">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="b9c07-526">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-526">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-527">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-527">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-528">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-528">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-529">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-529">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-530">暂停演示图板的时钟将触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-530">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="b9c07-531">从暂停的情节提要</span><span class="sxs-lookup"><span data-stu-id="b9c07-531">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="b9c07-532">当您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暂停情节提要，它显示为恢复并重新启动。</span><span class="sxs-lookup"><span data-stu-id="b9c07-532">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="b9c07-533">但是，这是实际情况并非如此。</span><span class="sxs-lookup"><span data-stu-id="b9c07-533">However, that is not what actually happens.</span></span> <span data-ttu-id="b9c07-534"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法实际上是替换了本身未暂停的版本。</span><span class="sxs-lookup"><span data-stu-id="b9c07-534">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="b9c07-535">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法调用时，时钟对象创建的情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-535">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="b9c07-536">这些时钟分配给它们进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="b9c07-536">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="b9c07-537">因此，当<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>调用方法同样，不重新启动它的时钟，并将它们替换用新时钟。</span><span class="sxs-lookup"><span data-stu-id="b9c07-537">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-538">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-538">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="b9c07-539">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-539">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-540">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-540">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="b9c07-541">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-541">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-542">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-542">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-543">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-543">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-544">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-544">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-545">对所执行的所有交互操作<xref:System.Windows.Media.Animation.Clock>，并因此同样，在<xref:System.Windows.Media.Animation.Storyboard>，计时引擎，这种情况下一步呈现之前短暂发生的下一计时周期发生。</span><span class="sxs-lookup"><span data-stu-id="b9c07-545">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="b9c07-546">这意味着，<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法仍在此之前将影响动画的属性。</span><span class="sxs-lookup"><span data-stu-id="b9c07-546">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="b9c07-547">换而言之下, 一次显示帧，则会删除情节提要。</span><span class="sxs-lookup"><span data-stu-id="b9c07-547">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="b9c07-548">如果需要取消此时间之前从属性动画的关联，请使用<xref:System.Windows.UIElement.BeginAnimation%2A>方法替换`animation`的参数值`null`。</span><span class="sxs-lookup"><span data-stu-id="b9c07-548">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-549">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-549">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-550">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-550">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-551">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-551">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="b9c07-552">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-552">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-553">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-553">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-554">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-554">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-555">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-555">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-556">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-556">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-557">删除情节提要的时钟触发器<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-557">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-558">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-558">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-559">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-559">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-560">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-560">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="b9c07-561">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-561">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-562">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-562">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-563">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-563">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-564">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-564">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-565">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-565">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-566">删除情节提要的时钟触发器<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-566">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-567">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-568">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-568">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-569">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-569">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-570">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-570">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-571">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-571">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-572">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-572">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-573">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-573">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-574">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-574">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-575">恢复未暂停的情节提要没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="b9c07-575">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="b9c07-576">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-576">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-577">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-577">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-578">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-578">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-579">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-579">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-580">查找暂停的情节提要不会恢复它。</span><span class="sxs-lookup"><span data-stu-id="b9c07-580">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="b9c07-581">恢复暂停的情节提要的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-581">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="b9c07-582">调用<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法情节提要启动后将替换旧情节提要，具有恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="b9c07-582">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="b9c07-583">恢复暂停的演示图板的时钟触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-583">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-584">下面的示例使用可控制演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-584">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-585"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-585">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-586">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-586">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-587">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-587">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-588">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-588">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-589">恢复未暂停的情节提要没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="b9c07-589">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="b9c07-590">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-590">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-591">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-591">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-592">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-592">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-593">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-593">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-594">查找暂停的情节提要不会恢复它。</span><span class="sxs-lookup"><span data-stu-id="b9c07-594">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="b9c07-595">恢复暂停的情节提要的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-595">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="b9c07-596">调用<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法情节提要启动后将替换旧情节提要，具有恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="b9c07-596">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="b9c07-597">恢复暂停的演示图板的时钟触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-597">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-598">在时钟下一次走动时将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到新位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-598">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="b9c07-599">一个正值或负值，用来描述时间线应向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-599">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-600">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-600">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="b9c07-601">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-601">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-602">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-602">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-603">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-603">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-604">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-604">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-605">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-605">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-606">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-606">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-607">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-607">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="b9c07-608">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-608">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="b9c07-609">从此处应用 <paramref name="offset" /> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-609">The position from which <paramref name="offset" /> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-610">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-610">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="b9c07-611">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-611">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-612">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-612">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-613">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-613">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-614">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-614">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-615">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-615">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-616">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-616">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-617">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-617">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-618">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-618">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-619">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-619">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="b9c07-620">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-620">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="b9c07-621">从此处应用 <paramref name="offset" /> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-621">The position from which <paramref name="offset" /> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-622">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-622">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="b9c07-623">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-623">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-624">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-624">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-625">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-625">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-626">此方法将更改情节提要时钟<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>到<xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-626">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="b9c07-627">此方法具有下一次处理一个对勾之前不会影响计时树。</span><span class="sxs-lookup"><span data-stu-id="b9c07-627">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="b9c07-628">其副作用是，引发相应事件是还不在此之前。</span><span class="sxs-lookup"><span data-stu-id="b9c07-628">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="b9c07-629">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-629">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-630">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-630">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-631">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-631">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-632">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-632">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-633">查找情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-633">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-634">下面的示例演示这两<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-634">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-635">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-635">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-636">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-636">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="b9c07-637">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-637">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="b9c07-638">从此处应用 <paramref name="offset" /> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-638">The position from which <paramref name="offset" /> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-639">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-639">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="b9c07-640">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-640">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-641">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-641">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-642">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-642">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-643">此方法将更改情节提要时钟<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>到<xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-643">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="b9c07-644">此方法具有下一次处理一个对勾之前不会影响计时树。</span><span class="sxs-lookup"><span data-stu-id="b9c07-644">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="b9c07-645">其副作用是，引发相应事件是还不在此之前。</span><span class="sxs-lookup"><span data-stu-id="b9c07-645">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="b9c07-646">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-646">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-647">可控制情节提要可以暂停、 恢复、 查找和停止，并且如果它由可控制将其删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-647">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="b9c07-648">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-648">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-649">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-649">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-650">查找情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-650">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-651">下面的示例演示如何以定位到一秒钟，直到情节提要开始 （跳过）。</span><span class="sxs-lookup"><span data-stu-id="b9c07-651">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="b9c07-652">下面的示例演示这两<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-652">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-653">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-653">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="b9c07-654">一个正值或负值，用来描述时间线应向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-654">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-655">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-655">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 对齐的查找时间<xref:System.Windows.Media.Animation.Storyboard>与最后一个时钟周期。</span><span class="sxs-lookup"><span data-stu-id="b9c07-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="b9c07-657">值会立即更新以反映由于更改<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使在屏幕的屏幕更新之前不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="b9c07-657">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="b9c07-658">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-658">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-659">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-659">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-660">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-660">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-661">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-661">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="b9c07-662">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-662">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="b9c07-663">从此处应用 <paramref name="offset" /> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-663">The position from which <paramref name="offset" /> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-664">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-664">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 对齐的查找时间<xref:System.Windows.Media.Animation.Storyboard>与最后一个时钟周期。</span><span class="sxs-lookup"><span data-stu-id="b9c07-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="b9c07-666">值会立即更新以反映由于更改<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使在屏幕的屏幕更新之前不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="b9c07-666">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="b9c07-667">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-667">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-668">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-668">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-669">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-669">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-670">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-670">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-671">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-671">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-672">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-672">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="b9c07-673">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-673">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="b9c07-674">从此处应用 <paramref name="offset" /> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-674">The position from which <paramref name="offset" /> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-675">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-675">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 对齐的查找时间<xref:System.Windows.Media.Animation.Storyboard>与最后一个时钟周期。</span><span class="sxs-lookup"><span data-stu-id="b9c07-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="b9c07-677">值会立即更新以反映由于更改<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使在屏幕的屏幕更新之前不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="b9c07-677">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="b9c07-678">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-678">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-679">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-679">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-680">此方法将更改情节提要时钟的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>到</span><span class="sxs-lookup"><span data-stu-id="b9c07-680">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="b9c07-681"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="b9c07-682">查找情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-682">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="b9c07-683">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-683">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-684">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-684">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-685">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-685">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-686">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-686">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-687">下面的示例演示这两<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-687">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-688">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-688">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-689">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-689">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="b9c07-690">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-690">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="b9c07-691">从此处应用 <paramref name="offset" /> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-691">The position from which <paramref name="offset" /> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-692">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-692">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 对齐的查找时间<xref:System.Windows.Media.Animation.Storyboard>与最后一个时钟周期。</span><span class="sxs-lookup"><span data-stu-id="b9c07-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="b9c07-694">值会立即更新以反映由于更改<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使在屏幕的屏幕更新之前不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="b9c07-694">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="b9c07-695">请注意，查找操作不会情节提要<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>到帐户设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-695">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="b9c07-696">情节提要被视为如同它具有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>为 1 且无<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-696">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="b9c07-697">此方法将更改情节提要时钟的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>到</span><span class="sxs-lookup"><span data-stu-id="b9c07-697">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="b9c07-698"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="b9c07-699">查找情节提要触发器<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-699">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="b9c07-700">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-700">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-701">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-701">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-702">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-702">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-703">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-703">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-704">下面的示例演示这两<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b9c07-704">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-705">设置为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的交互速度比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-705">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">
          <span data-ttu-id="b9c07-706">大于零的有限值，该值为 storyboard 的新的交互式速比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-706">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="b9c07-707">该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-707">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="b9c07-708">该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-708">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="b9c07-709">例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-709">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-710">设置为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的交互速度比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-710">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-711">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-711">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-712">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-712">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-713">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-713">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-714">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-714">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-715">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-715">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="b9c07-716">大于零的有限值，该值为 storyboard 的新的交互式速比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-716">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="b9c07-717">该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-717">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="b9c07-718">该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-718">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="b9c07-719">例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-719">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-720">设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互式速比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-720">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-721">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-721">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-722">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-722">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-723">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-723">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-724">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-724">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-725">调用此方法会触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-725">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-726">下面的示例使用可控制演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-726">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-727"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-727">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-728">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-728">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-729">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-729">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="b9c07-730">大于零的有限值，该值为 storyboard 的新的交互式速比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-730">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="b9c07-731">该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-731">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="b9c07-732">该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-732">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="b9c07-733">例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-733">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-734">设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互式速比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-734">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-735">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-735">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-736">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-736">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-737">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-737">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-738">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-738">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="b9c07-739">调用此方法会触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-739">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b9c07-740">应面向指定依赖对象的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-740">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b9c07-741">要作为目标的依赖项对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-741">The dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-742">使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 以此依赖项对象为目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-742">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-743">此方法设置<xref:System.Windows.Media.Animation.Storyboard.Target%2A>附加属性上指定的对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-743">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="b9c07-744">有关情节提要目标的工作原理的详细信息，请参阅<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-744">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="b9c07-745">有关如何附加属性的工作的详细信息，请参阅[附加属性概述](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-745">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9c07-746"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>属性不是可序列化，因为它可以将设置为任何<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-746">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="b9c07-747">不保证可以从 XAML 正确引用该对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-747">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b9c07-748">应面向指定依赖对象的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-748">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b9c07-749">要面向的依赖对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-749">The name of the dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-750">使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 面向具有指定名称的依赖属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-750">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-751">此方法设置<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>附加属性上指定的对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-751">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="b9c07-752">有关情节提要目标的工作原理的详细信息，请参阅<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-752">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="b9c07-753">有关如何附加属性的工作的详细信息，请参阅[附加属性概述](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-753">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b9c07-754">要与指定的依赖属性关联的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-754">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="b9c07-755">描述要进行动画处理的依赖属性的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-755">A path that describe the dependency property to be animated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-756">使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目标成为指定的依赖属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-756">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-757">此方法设置<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加属性上指定的对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-757">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="b9c07-758">有关情节提要目标的工作原理的详细信息，请参阅<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-758">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="b9c07-759">有关如何附加属性的工作的详细信息，请参阅[附加属性概述](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-759">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-760">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-761">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-761">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-762">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-762">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-763">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-763">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-764">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-764">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-765">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-765">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-766">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-766">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-767">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-767">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-768">此方法将推进情节提要的当前时间和结束活动期;情节提要的行为在此时指定通过其<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-768">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="b9c07-769">如果<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>设置为<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>，情节提要填充; 如果该属性设置为<xref:System.Windows.Media.Animation.FillBehavior.Stop>，情节提要停止。</span><span class="sxs-lookup"><span data-stu-id="b9c07-769">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="b9c07-770">带有无限持续时间在 storyboard 上调用此方法，无限数量的重复项无效。</span><span class="sxs-lookup"><span data-stu-id="b9c07-770">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="b9c07-771">在处于非活动状态的情节提要上调用此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="b9c07-771">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="b9c07-772">将时钟至其填充期会触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-772">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="b9c07-773">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-773">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-774">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-774">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-775">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-775">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-776">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-776">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-777">下面的示例使用可控制演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-777">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-778"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-778">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-779">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-779">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-780">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-780">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-781">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-781">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-782">此方法将推进情节提要的当前时间和结束活动期;情节提要的行为在此时指定通过其<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>设置。</span><span class="sxs-lookup"><span data-stu-id="b9c07-782">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="b9c07-783">如果<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>设置为<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>，情节提要填充; 如果该属性设置为<xref:System.Windows.Media.Animation.FillBehavior.Stop>，情节提要停止。</span><span class="sxs-lookup"><span data-stu-id="b9c07-783">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="b9c07-784">带有无限持续时间在 storyboard 上调用此方法，无限数量的重复项无效。</span><span class="sxs-lookup"><span data-stu-id="b9c07-784">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="b9c07-785">在处于非活动状态的情节提要上调用此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="b9c07-785">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="b9c07-786">将时钟至其填充期会触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-786">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="b9c07-787">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-787">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-788">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-788">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-789">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-789">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-790">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-790">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-791">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-792">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-792">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-793">请注意，停止情节提要不会激发<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-793">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-794">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-794">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-795">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-795">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-796">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-796">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-797">一个<xref:System.Windows.Media.Animation.ClockState.Stopped>情节提要不会再影响其目标属性： 属性已进行动画处理还原为其以前的值。</span><span class="sxs-lookup"><span data-stu-id="b9c07-797">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="b9c07-798">停止时钟将触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>并<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件，但不是<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-798">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="b9c07-799">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-799">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-800">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-800">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-801">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-801">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-802">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-802">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9c07-803">下面的示例使用可控制演示图板进行动画处理<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-803">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="b9c07-804"><xref:System.Windows.Media.TextEffect>包含在<xref:System.Windows.FrameworkContentElement>的命名作用域。</span><span class="sxs-lookup"><span data-stu-id="b9c07-804">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="b9c07-805">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-805">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="b9c07-806">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-806">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9c07-807">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-807">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-808">一个<xref:System.Windows.Media.Animation.ClockState.Stopped>情节提要不会再影响其目标属性： 属性已进行动画处理还原为其以前的值。</span><span class="sxs-lookup"><span data-stu-id="b9c07-808">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="b9c07-809">停止时钟将触发<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>并<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件，但不是<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="b9c07-809">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="b9c07-810">若要以交互方式控制此情节提要，必须使用相同`containingObject`参数调用用于开始情节提要的交互式方法时。</span><span class="sxs-lookup"><span data-stu-id="b9c07-810">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="b9c07-811">可控制情节提要可以暂停、 恢复、 查找、 停止和删除。</span><span class="sxs-lookup"><span data-stu-id="b9c07-811">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="b9c07-812">若要使情节提要可以控制在代码中，必须使用情节提要的适当重载<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法并指定`true`以使其可以控制。</span><span class="sxs-lookup"><span data-stu-id="b9c07-812">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="b9c07-813">有关示例，请参阅[如何： 控制情节提要启动之后](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="b9c07-813">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-814">获取或设置应进行动画处理的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-814">Gets or sets the object that should be animated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-815">目标对象必须是依赖项对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-815">The target object must be a dependency object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9c07-816"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>属性不是可序列化，因为它可以将设置为任何<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="b9c07-816">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="b9c07-817">没有任何保证可以在 XAML 中正确引用该对象。</span><span class="sxs-lookup"><span data-stu-id="b9c07-817">There is no guaranteed that this object can be correctly referenced in XAML.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9c07-818">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="b9c07-818">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9c07-819">标识符字段</span><span class="sxs-lookup"><span data-stu-id="b9c07-819">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetProperty>|  
|<span data-ttu-id="b9c07-820">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="b9c07-820">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9c07-821">无</span><span class="sxs-lookup"><span data-stu-id="b9c07-821">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-822">获取或设置要进行动画处理的对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-822">Gets or sets the name of the object to animate.</span>
          </span>
          <span data-ttu-id="b9c07-823">该对象必须是 <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" /> 或 <see cref="T:System.Windows.Freezable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-823">The object must be a <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9c07-824">设置此属性是可选的。</span><span class="sxs-lookup"><span data-stu-id="b9c07-824">Setting this property is optional.</span></span> <span data-ttu-id="b9c07-825">如果<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>未指定，情节提要的动画应用于下列情况之一：</span><span class="sxs-lookup"><span data-stu-id="b9c07-825">If the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> is not specified, a storyboard's animations are applied to one of the following:</span></span>  
  
-   <span data-ttu-id="b9c07-826">如果使用启动情节提要动画所属<xref:System.Windows.Media.Animation.BeginStoryboard>，拥有的元素<xref:System.Windows.Media.Animation.BeginStoryboard>触发情节提要的操作为目标。</span><span class="sxs-lookup"><span data-stu-id="b9c07-826">If the storyboard to which the animation belongs was started using a <xref:System.Windows.Media.Animation.BeginStoryboard>, the element that owns the <xref:System.Windows.Media.Animation.BeginStoryboard> action that triggers the storyboard is targeted.</span></span>  
  
-   <span data-ttu-id="b9c07-827">如果使用启动情节提要<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法，<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>指定当启动情节提要时采用了<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法为目标。</span><span class="sxs-lookup"><span data-stu-id="b9c07-827">If the storyboard was started using the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method, the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> specified when the storyboard was started with the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is targeted.</span></span>  
  
 <span data-ttu-id="b9c07-828">如果使用子时间线上设置此属性，这些子时间线"继承"的父<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>除非指定其自己。</span><span class="sxs-lookup"><span data-stu-id="b9c07-828">When this property is set on a timeline with children, those child timelines "inherit" the parent's <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> unless they specify their own.</span></span>  
  
## <a name="making-an-object-targetable"></a><span data-ttu-id="b9c07-829">使对象作为目标</span><span class="sxs-lookup"><span data-stu-id="b9c07-829">Making an Object Targetable</span></span>  
 <span data-ttu-id="b9c07-830">当使用[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，执行以下两个操作，以使对象可通过一个情节提要之一：</span><span class="sxs-lookup"><span data-stu-id="b9c07-830">When using [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you perform one of the following two actions to make an object targetable by a storyboard:</span></span>  
  
-   <span data-ttu-id="b9c07-831">如果对象是<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>，将其<xref:System.Windows.FrameworkElement.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b9c07-831">If the object is a <xref:System.Windows.FrameworkElement> or a <xref:System.Windows.FrameworkContentElement>, set its <xref:System.Windows.FrameworkElement.Name%2A> property.</span></span>  
  
-   <span data-ttu-id="b9c07-832">如果对象是<xref:System.Windows.Freezable>或自定义<xref:System.Windows.FrameworkContentElement>或<xref:System.Windows.FrameworkContentElement>，将其分配名称使用[X:name 指令](~/docs/framework/xaml-services/x-name-directive.md)标记扩展。</span><span class="sxs-lookup"><span data-stu-id="b9c07-832">If the object is a <xref:System.Windows.Freezable> or a custom <xref:System.Windows.FrameworkContentElement> or <xref:System.Windows.FrameworkContentElement>, assign it a name using the [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) markup extension.</span></span>  
  
 <span data-ttu-id="b9c07-833">使用代码时，您使对象可通过使用<xref:System.Windows.NameScope.RegisterName%2A>方法以将对象分配一个名称。</span><span class="sxs-lookup"><span data-stu-id="b9c07-833">When using code, you make an object targetable by using the <xref:System.Windows.NameScope.RegisterName%2A> method to assign the object a name.</span></span>  
  
<a name="dependencyPropertyInfo_TargetName"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9c07-834">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="b9c07-834">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9c07-835">标识符字段</span><span class="sxs-lookup"><span data-stu-id="b9c07-835">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetNameProperty>|  
|<span data-ttu-id="b9c07-836">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="b9c07-836">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9c07-837">无</span><span class="sxs-lookup"><span data-stu-id="b9c07-837">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-838">标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-838">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-839">标识 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-839">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9c07-840">标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9c07-840">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>