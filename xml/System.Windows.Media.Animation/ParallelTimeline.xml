<Type Name="ParallelTimeline" FullName="System.Windows.Media.Animation.ParallelTimeline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="860d5738594c33e4d6c1785ac0eb5aae30211cb1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660121" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParallelTimeline : System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelTimeline extends System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelTimeline&#xA;Inherits TimelineGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelTimeline : System::Windows::Media::Animation::TimelineGroup" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.TimelineGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义可以包含子 <see cref="T:System.Windows.Media.Animation.Timeline" /> 对象的时间段。 这些子时间线将按各自的 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 属性变为活动状态。 此外，子时间线也可相互重叠（并行运行）。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ParallelTimeline> 对象可以是子级 （嵌套） <xref:System.Windows.Media.Animation.Storyboard>。 这可以提供更好地封装的计时复杂动画序列。  
  
 <xref:System.Windows.Media.Animation.ParallelTimeline> 具有其自己<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>属性因此所有子时间线<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>值是相对于父<xref:System.Windows.Media.Animation.ParallelTimeline>值<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">用于此 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">用于此 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <param name="duration">用于此 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">用于此 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <param name="duration">用于此 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <param name="repeatBehavior">用于此 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> 的可修改克隆，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。 为方便起见，此方法将隐藏继承的强类型实现的版本。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> 对象的可修改复本，从而深度复制此对象的当前值。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。 为方便起见，此方法将隐藏继承的强类型实现的版本。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Freezable" /> 的新实例。</summary>
        <returns>新的 <see cref="T:System.Windows.Freezable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将替代<xref:System.Windows.Freezable.CreateInstanceCore%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">从中返回自然持续时间的 <see cref="T:System.Windows.Media.Animation.Clock" />。</param>
        <summary>从指定的 <see cref="T:System.Windows.Media.Animation.Clock" /> 返回自然持续时间（单个迭代的持续时间）。</summary>
        <returns>表示自然持续时间的 <see cref="T:System.Windows.Duration" /> 量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自然的持续时间为一次迭代的段。 如果此方法返回<xref:System.Windows.Duration.Automatic%2A>则意味着未知的自然持续时间。 在这种情况下，<xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A>的<xref:System.Windows.Media.Animation.Clock>由作者确定。 例如，将通过流式处理媒体的提供程序来确定的流式处理媒体的持续时间。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlipBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.SlipBehavior SlipBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.SlipBehavior SlipBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property SlipBehavior As SlipBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::SlipBehavior SlipBehavior { System::Windows::Media::Animation::SlipBehavior get(); void set(System::Windows::Media::Animation::SlipBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.SlipBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示此时间线在其一个或多个 <see cref="T:System.Windows.Media.Animation.Timeline" /> 子时间线滑动时的行为方式。</summary>
        <value>一个指示此时间线在其一个或多个 <see cref="T:System.Windows.Media.Animation.Timeline" /> 子级滑动时的行为方式的值。 默认值为 <see cref="F:System.Windows.Media.Animation.SlipBehavior.Grow" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它通常是需要同步动画和媒体。 但是，这复杂，因为可以通过加载或缓冲使得很难可靠地播放动画和媒体延迟播放该媒体。 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>属性用于确定在一起播放媒体和动画时，会发生什么情况。 值为<xref:System.Windows.Media.Animation.SlipBehavior.Grow>（默认值） 指定动画时间线不需要进行同步，并指定而无论其他媒体时间线中的状态时，将播放。 值为<xref:System.Windows.Media.Animation.SlipBehavior.Slip>另一方面，指定动画将等待 （滑动），直到已准备好播放媒体。 下图说明了此行为。  
  
 这<xref:System.Windows.Media.Animation.Storyboard>播放视频和动画。 当<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>设置为<xref:System.Windows.Media.Animation.SlipBehavior.Grow>和<xref:System.Windows.Media.Animation.Timeline.Duration%2A>属性<xref:System.Windows.Media.Animation.Storyboard>设置为<xref:System.Windows.Duration.Automatic%2A>、<xref:System.Windows.Media.Animation.Storyboard>增大以播放所有媒体和动画。  
  
 ![示意图： slipbehavior 要点示意图密钥](~/add/media/slipbehaviorkey.png "示意图： slipbehavior 要点示意图密钥")  
  
 ![示意图： SlipBehavior 属性值 Grow](~/add/media/slipbehaviorgrow1.png "示意图： SlipBehavior 属性值 Grow")  
  
 这<xref:System.Windows.Media.Animation.Storyboard>具有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>的<xref:System.Windows.Media.Animation.SlipBehavior.Grow>和<xref:System.Windows.Media.Animation.Timeline.Duration%2A>的 5 秒，因此媒体和动画 5 秒播放无论滑动了多少。  
  
 ![示意图： SlipBehavior 属性值 Grow](~/add/media/slipbehaviorgrow2.png "示意图： SlipBehavior 属性值 Grow")  
  
 这<xref:System.Windows.Media.Animation.Storyboard>具有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>的<xref:System.Windows.Media.Animation.SlipBehavior.Slip>。 请注意， <xref:System.Windows.Media.Animation.DoubleAnimation> (和任何其他非媒体的子级的<xref:System.Windows.Media.Animation.Storyboard>) 不无法继续，除非在媒体时间线时也的进展情况。  如果媒体将一段时间才能加载，或如果它缓冲，动画将与其等待 （滑动）。  这允许与单个媒体文件进行同步的动画。  
  
 ![SlipBehavior 媒体和动画的关系图](~/add/media/slipbehaviorslip1.png "SlipBehavior 媒体和动画的关系图")  
  
 这<xref:System.Windows.Media.Animation.Storyboard>具有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>的<xref:System.Windows.Media.Animation.SlipBehavior.Slip>和<xref:System.Windows.Media.Animation.Timeline.Duration%2A>的 5 秒。  在此方案中，确保媒体文件和动画播放 5 秒钟。  
  
 ![示意图： 演示图板的 SlipBehavior 属性](~/add/media/slipbehaviorslip2.png "关系图： 演示图板的 SlipBehavior 属性")  
  
<a name="dependencyPropertyInfo_SlipBehavior"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.MediaTimeline" />
      </Docs>
    </Member>
    <Member MemberName="SlipBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SlipBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SlipBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SlipBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SlipBehaviorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 依赖项属性的标识符。  
  
   
  
## Examples  
 [依赖项属性概述](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>