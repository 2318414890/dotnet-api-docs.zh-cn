<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fbb46569ea8c3e2c36d884eb360682eca12794a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461041" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="505da-101">指定使用 PNRP 命名空间提供程序 API 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 的值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="505da-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-102">A<xref:System.Net.PeerToPeer.PeerNameRecord>其中包含的所有信息<xref:System.Net.PeerToPeer.PeerName>，已发布在<xref:System.Net.PeerToPeer.Cloud>或在解析过程中查询的云。</span><span class="sxs-lookup"><span data-stu-id="505da-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="505da-103">初始化 <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 类的新默认实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-104">已成功解决后<xref:System.Net.PeerToPeer.PeerName>、<xref:System.Net.PeerToPeer.PeerNameRecord>包含指定的所有信息<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>过程中查询的群中发布的<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>操作。</span><span class="sxs-lookup"><span data-stu-id="505da-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="505da-105">一个 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 对象，包含 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件返回的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-106">引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件后，将返回对等解析数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-107">此方法是用来处理对等名称解析数据之后对等解析已完成, 的异步回调。</span><span class="sxs-lookup"><span data-stu-id="505da-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="505da-108">派生的类型可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件由对等解析程序对象引发。</span><span class="sxs-lookup"><span data-stu-id="505da-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="505da-109">一个 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 对象，它包含由 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件返回的对等名称解析进度信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-109">
              <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-110">引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件时，将返回对等解析进度数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-111">此方法是用来处理对等解析数据后已请求对等解析进度的异步回调。</span><span class="sxs-lookup"><span data-stu-id="505da-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="505da-112">派生的类型可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件发生。</span><span class="sxs-lookup"><span data-stu-id="505da-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="505da-113">在重写此方法在派生类型，一定要调用基类型的<see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="505da-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="505da-114">使用 PNRP 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-115">此方法将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="505da-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="505da-116">调用<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法为在每个对等名称记录<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。</span><span class="sxs-lookup"><span data-stu-id="505da-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="505da-117">请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。</span><span class="sxs-lookup"><span data-stu-id="505da-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="505da-118">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="505da-119">它们是在传递的参数完全相同，只不过 ResolveAsync 方法在异步事件处理其参数列表中包括系统令牌。</span><span class="sxs-lookup"><span data-stu-id="505da-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="505da-120">如果<xref:System.Net.PeerToPeer.Cloud>未提供参数，该方法使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式来填写云参数。</span><span class="sxs-lookup"><span data-stu-id="505da-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="505da-121">如果`maxRecords`缺少参数，默认值为零原因<xref:System.ArgumentOutOfRangeException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="505da-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="505da-122">如果解析操作完成时出错或已取消，则也将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="505da-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-123">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-124">解析调用对等方已知的所有群中指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="505da-125">包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="505da-126">对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-127">此方法将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="505da-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="505da-128">所有云进行都查询以获得<xref:System.Net.PeerToPeer.PeerName>。</span><span class="sxs-lookup"><span data-stu-id="505da-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="505da-129">如果对等机名称无法解析或者是`null`、<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</span><span class="sxs-lookup"><span data-stu-id="505da-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="505da-130">对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。</span><span class="sxs-lookup"><span data-stu-id="505da-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="505da-131">调用<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法为在每个对等名称记录<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。</span><span class="sxs-lookup"><span data-stu-id="505da-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="505da-132">请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。</span><span class="sxs-lookup"><span data-stu-id="505da-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="505da-133">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="505da-134">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。</span><span class="sxs-lookup"><span data-stu-id="505da-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="505da-135">如果<xref:System.Net.PeerToPeer.Cloud>未提供参数，该方法使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式来填写云参数。</span><span class="sxs-lookup"><span data-stu-id="505da-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="505da-136"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505da-137">下面的代码示例演示如何以解决<xref:System.Net.PeerToPeer.PeerName>中任何发布<xref:System.Net.PeerToPeer.Cloud>。</span><span class="sxs-lookup"><span data-stu-id="505da-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-138">
            <paramref name="peerName" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="505da-139">指定的对等名称无法解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-139">The peer name specified cannot be resolved.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-140">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="505da-141">要从所有 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中获取提供的 <c>peerName</c> 的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象的最大数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-142">解析调用对等方已知的所有群中的指定对等名称，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="505da-143">大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="505da-144">此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-145">此方法将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="505da-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="505da-146">所有云都被都查询的对等名称。</span><span class="sxs-lookup"><span data-stu-id="505da-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="505da-147">对于不安全的对等名称，可由不同用户在同一个注册相同的对等名称<xref:System.Net.PeerToPeer.Cloud>，以及与不同的终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="505da-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="505da-148">如果<xref:System.Net.PeerToPeer.PeerName>无法解析 （例如，未发布的对等名称）<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</span><span class="sxs-lookup"><span data-stu-id="505da-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="505da-149">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="505da-150">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。</span><span class="sxs-lookup"><span data-stu-id="505da-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="505da-151"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-152">
            <paramref name="peerName" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="505da-153">
            <paramref name="maxRecords" /> 参数小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="505da-154">提供的对等名称无法解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-154">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-155">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="505da-156">要在其中解析对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-157">解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="505da-158">包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-158">
              <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="505da-159">对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-160">如果<xref:System.Net.PeerToPeer.PeerName>无法解析 （即未发布的对等名称）<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</span><span class="sxs-lookup"><span data-stu-id="505da-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (i.e., the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="505da-161">对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。</span><span class="sxs-lookup"><span data-stu-id="505da-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="505da-162">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="505da-163">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。</span><span class="sxs-lookup"><span data-stu-id="505da-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="505da-164">如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`、<xref:System.Net.PeerToPeer.PeerNameResolver>使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式填充<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。</span><span class="sxs-lookup"><span data-stu-id="505da-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="505da-165"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-166">
            <paramref name="peerName" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="505da-167">提供的对等名称无法解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-167">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-168">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="505da-169">要在其中解析 <c>peerName</c> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="505da-170">要从指定群中获取指定 <c>peerName</c> 的最大对等名称记录对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-171">解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="505da-172">大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="505da-173">此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-174">对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。</span><span class="sxs-lookup"><span data-stu-id="505da-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="505da-175">如果对等机名称不能解析，<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</span><span class="sxs-lookup"><span data-stu-id="505da-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="505da-176">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="505da-177">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。</span><span class="sxs-lookup"><span data-stu-id="505da-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="505da-178">如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`、<xref:System.Net.PeerToPeer.PeerNameResolver>使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式填充<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。</span><span class="sxs-lookup"><span data-stu-id="505da-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="505da-179"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-180">
            <paramref name="peerName" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="505da-181">
            <paramref name="maxRecords" /> 参数小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="505da-182">提供的对等名称无法解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-182">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="505da-183">这些方法在调用对等方已知的所有群中开始指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的异步解析操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-184">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，它用来在所需的异步处理。</span><span class="sxs-lookup"><span data-stu-id="505da-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="505da-185">它们是在传递的参数完全相同，只不过 ResolveAsync 事件处理其参数列表中包括系统令牌。</span><span class="sxs-lookup"><span data-stu-id="505da-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="505da-186">如果参数不匹配之间的解决方法和 ResolveAsync 方法中，发生和<xref:System.Net.PeerToPeer.Cloud>未提供参数，该方法使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式来填写云参数。</span><span class="sxs-lookup"><span data-stu-id="505da-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-187">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="505da-188">一个用户定义的对象，其中包含对等名称解析操作的状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-188">A user-defined object that contains state information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-189">在调用对等方已知的所有云中为指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 开始异步对等名称解析操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-190">此方法以异步方式将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="505da-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="505da-191">所有云进行都查询以获得<xref:System.Net.PeerToPeer.PeerName>。</span><span class="sxs-lookup"><span data-stu-id="505da-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="505da-192">它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="505da-193">或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="505da-194">如果对等机名称不能解析，<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</span><span class="sxs-lookup"><span data-stu-id="505da-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="505da-195">对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。</span><span class="sxs-lookup"><span data-stu-id="505da-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="505da-196">调用<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法为在每个对等名称记录<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。</span><span class="sxs-lookup"><span data-stu-id="505da-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="505da-197">请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。</span><span class="sxs-lookup"><span data-stu-id="505da-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="505da-198">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="505da-199">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="505da-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="505da-200">解析程序对象的所有异步引用均与一个唯一标识符标记协调。</span><span class="sxs-lookup"><span data-stu-id="505da-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="505da-201">这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。</span><span class="sxs-lookup"><span data-stu-id="505da-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="505da-202"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-203">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-204">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="505da-205">为对等名称获取的最大的记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-205">The maximum number of records to obtain for the Peer Name.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="505da-206">一个用户定义对象，其中包含解析操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-206">A user-defined object that contains information about the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-207">在调用对等方已知的所有云中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作，返回不超过 <paramref name="maxRecords" /> 的对等名称条目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-208">此方法以异步方式将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="505da-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="505da-209">所有云进行都查询以获得<xref:System.Net.PeerToPeer.PeerName>。</span><span class="sxs-lookup"><span data-stu-id="505da-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="505da-210">对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。</span><span class="sxs-lookup"><span data-stu-id="505da-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="505da-211">如果对等机名称无法解析或者是`null`、<xref:System.Net.PeerToPeer.PeerToPeerException>引发。</span><span class="sxs-lookup"><span data-stu-id="505da-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="505da-212">此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="505da-213">或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="505da-214">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="505da-215">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="505da-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="505da-216">解析程序对象的所有异步引用均与一个唯一标识符标记协调<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="505da-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="505da-217">这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。</span><span class="sxs-lookup"><span data-stu-id="505da-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="505da-218"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-219">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="505da-220">
            <paramref name="maxRecords" /> 参数小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-221">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="505da-222">要在其中解析 <c>peerName</c> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="505da-223">一个用户定义的 <see cref="T:System.Object" />，其中包含对等名称解析操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-224">在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-225">此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="505da-226">或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="505da-227">对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。</span><span class="sxs-lookup"><span data-stu-id="505da-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="505da-228">如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`，则解析的名称，使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式，初始化默认值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="505da-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="505da-229">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="505da-230">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="505da-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="505da-231">解析程序对象的所有异步引用均与一个唯一标识符标记协调。</span><span class="sxs-lookup"><span data-stu-id="505da-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="505da-232">这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。</span><span class="sxs-lookup"><span data-stu-id="505da-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="505da-233"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-234">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="505da-235">要解析的 <c>peerName</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-235">The <c>peerName</c> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="505da-236">要在其中解析 <c>peerName</c> 的 <c>cloud</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-236">The <c>cloud</c> in which to resolve <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="505da-237">从 <c>cloud</c> 获取的 <c>peerName</c> 的最大记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-237">The maximum number of records to obtain from <c>cloud</c> for <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="505da-238">一个用户定义的对象，其中包含对等名称解析操作的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-238">A user-defined object that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-239">在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
          <span data-ttu-id="505da-240">该解析操作为指定的对等名称所解析的条目不会超过 <paramref name="maxRecords" /> 个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-241">对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。</span><span class="sxs-lookup"><span data-stu-id="505da-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="505da-242">此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="505da-243">或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="505da-244">如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`，则解析的名称，使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式，初始化默认值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="505da-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="505da-245">为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="505da-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="505da-246">它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="505da-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="505da-247">对等解析程序对象的所有异步引用都与一个唯一标识符标记协调<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="505da-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="505da-248">这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。</span><span class="sxs-lookup"><span data-stu-id="505da-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="505da-249"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。</span><span class="sxs-lookup"><span data-stu-id="505da-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-250">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="505da-251">提供的一个或多个参数均无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-251">One or more supplied parameters are invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="505da-252">要成功完成此操作至少需要一个事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-252">Successful completion of this operation requires at least one event handler.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="505da-253">
            <paramref name="maxRecords" /> 参数小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <span data-ttu-id="505da-254">向启动解析操作的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 方法实例提供的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="505da-255">取消指定的异步对等名称解析请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-255">Cancels the specified asynchronous peer name resolution request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-256">调用此方法可确保系统不会尝试获取指定的其他记录<xref:System.Net.PeerToPeer.PeerName>。</span><span class="sxs-lookup"><span data-stu-id="505da-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="505da-257">如果不未完成的异步对等名称解析操作时调用此方法，则它将充当"没有操作"(NO OP)。</span><span class="sxs-lookup"><span data-stu-id="505da-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="505da-258">`userState`必须提供对象，因为它用于跟踪特定的异步调用，多个调用时。</span><span class="sxs-lookup"><span data-stu-id="505da-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="505da-259">此调用方提供的对象是唯一的每个对等名称解析请求。</span><span class="sxs-lookup"><span data-stu-id="505da-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="505da-260">此方法将立即返回，但该操作可能适用也可能会不立即取消。</span><span class="sxs-lookup"><span data-stu-id="505da-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="505da-261">事件自变量返回<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件包含的字段的可能轮询由客户端用于确定是否发生取消。</span><span class="sxs-lookup"><span data-stu-id="505da-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="505da-262">调用此方法可以确保 ResolveCompleted 事件都将与事件自变量越早越好收到信号<xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="505da-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="505da-263">
            <paramref name="userState" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="505da-264">特定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 的对等名称解析请求完成时发出 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件信号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-265"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件将会引发一次每个终结点找到，并且仅在当发现的所有终结点后后，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="505da-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="505da-266">如果也会引发此事件<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>操作完成时出错或已取消。</span><span class="sxs-lookup"><span data-stu-id="505da-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="505da-267">每当发现 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象时会发出有关此事件的信号，以响应针对特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="505da-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505da-268">如果选择多个<xref:System.Net.PeerToPeer.PeerName>正在查询的群中存在的对象，该事件处于有信号状态一次每个<xref:System.Net.PeerToPeer.PeerNameRecord>找到。</span><span class="sxs-lookup"><span data-stu-id="505da-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>