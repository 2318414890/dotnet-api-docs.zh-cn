<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0ef47501ae96e53003b1752ec8df6d362c66781" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473899" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定使用 PNRP 命名空间提供程序 API 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 的值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Net.PeerToPeer.PeerNameRecord>其中包含的所有信息<xref:System.Net.PeerToPeer.PeerName>，已发布在<xref:System.Net.PeerToPeer.Cloud>或在解析过程中查询的云。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 类的新默认实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已成功解决后<xref:System.Net.PeerToPeer.PeerName>、<xref:System.Net.PeerToPeer.PeerNameRecord>包含指定的所有信息<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>过程中查询的群中发布的<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 对象，包含 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件返回的数据。</param>
        <summary>引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件后，将返回对等解析数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是用来处理对等名称解析数据之后对等解析已完成, 的异步回调。  
  
 派生的类型可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件由对等解析程序对象引发。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 对象，它包含由 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件返回的对等名称解析进度信息。</param>
        <summary>引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件时，将返回对等解析进度数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是用来处理对等解析数据后已请求对等解析进度的异步回调。  
  
 派生的类型可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件发生。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在重写此方法在派生类型，一定要调用基类型的<see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />方法，以便已注册的委托对事件进行接收。</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用 PNRP 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将对等名称与云相关联。 调用<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法为在每个对等名称记录<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。 请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。  它们是在传递的参数完全相同，只不过 ResolveAsync 方法在异步事件处理其参数列表中包括系统令牌。  
  
 如果<xref:System.Net.PeerToPeer.Cloud>未提供参数，该方法使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式来填写云参数。  如果`maxRecords`缺少参数，默认值为零原因<xref:System.ArgumentOutOfRangeException>引发异常。  
  
 如果解析操作完成时出错或已取消，则也将引发此事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <summary>解析调用对等方已知的所有群中指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</summary>
        <returns>包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。 对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将对等名称与云相关联。 所有云进行都查询以获得<xref:System.Net.PeerToPeer.PeerName>。 如果对等机名称无法解析或者是`null`、<xref:System.Net.PeerToPeer.PeerToPeerException>引发。  
  
 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。  
  
 调用<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法为在每个对等名称记录<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。 请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。  
  
 如果<xref:System.Net.PeerToPeer.Cloud>未提供参数，该方法使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式来填写云参数。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
   
  
## Examples  
 下面的代码示例演示如何以解决<xref:System.Net.PeerToPeer.PeerName>中任何发布<xref:System.Net.PeerToPeer.Cloud>。  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定的对等名称无法解析。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="maxRecords">要从所有 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中获取提供的 <c>peerName</c> 的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象的最大数目。</param>
        <summary>解析调用对等方已知的所有群中的指定对等名称，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</summary>
        <returns>大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将对等名称与云相关联。 所有云都被都查询的对等名称。 对于不安全的对等名称，可由不同用户在同一个注册相同的对等名称<xref:System.Net.PeerToPeer.Cloud>，以及与不同的终结点相关联。 如果<xref:System.Net.PeerToPeer.PeerName>无法解析 （例如，未发布的对等名称）<xref:System.Net.PeerToPeer.PeerToPeerException>引发。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="cloud">要在其中解析对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <summary>解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />。</summary>
        <returns>包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。 对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Net.PeerToPeer.PeerName>无法解析 （即未发布的对等名称）<xref:System.Net.PeerToPeer.PeerToPeerException>引发。  
  
 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。  
  
 如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`、<xref:System.Net.PeerToPeer.PeerNameResolver>使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式填充<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="cloud">要在其中解析 <c>peerName</c> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <param name="maxRecords">要从指定群中获取指定 <c>peerName</c> 的最大对等名称记录对象数。</param>
        <summary>解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</summary>
        <returns>大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。 如果对等机名称不能解析，<xref:System.Net.PeerToPeer.PeerToPeerException>引发。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理系统令牌。  
  
 如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`、<xref:System.Net.PeerToPeer.PeerNameResolver>使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式填充<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>这些方法在调用对等方已知的所有群中开始指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的异步解析操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，它用来在所需的异步处理。  它们是在传递的参数完全相同，只不过 ResolveAsync 事件处理其参数列表中包括系统令牌。  
  
 如果参数不匹配之间的解决方法和 ResolveAsync 方法中，发生和<xref:System.Net.PeerToPeer.Cloud>未提供参数，该方法使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式来填写云参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="userState">一个用户定义的对象，其中包含对等名称解析操作的状态信息。</param>
        <summary>在调用对等方已知的所有云中为指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 开始异步对等名称解析操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法以异步方式将对等名称与云相关联。 所有云进行都查询以获得<xref:System.Net.PeerToPeer.PeerName>。 它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。  
  
 如果对等机名称不能解析，<xref:System.Net.PeerToPeer.PeerToPeerException>引发。  
  
 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。  
  
 调用<xref:System.Net.PeerToPeer.PeerNameResolver>方法是类似于调用<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法为在每个对等名称记录<xref:System.Net.PeerToPeer.PeerNameRecordCollection>。 请注意对单个对等名称记录使用 Resolve 方法不不是无效解析多个对等名称。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。  
  
 解析程序对象的所有异步引用均与一个唯一标识符标记协调。 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="maxRecords">为对等名称获取的最大的记录数。</param>
        <param name="userState">一个用户定义对象，其中包含解析操作的相关信息。</param>
        <summary>在调用对等方已知的所有云中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作，返回不超过 <paramref name="maxRecords" /> 的对等名称条目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法以异步方式将对等名称与云相关联。 所有云进行都查询以获得<xref:System.Net.PeerToPeer.PeerName>。 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。 如果对等机名称无法解析或者是`null`、<xref:System.Net.PeerToPeer.PeerToPeerException>引发。  
  
 此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。  
  
 解析程序对象的所有异步引用均与一个唯一标识符标记协调<xref:System.Object>。 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> 参数小于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="cloud">要在其中解析 <c>peerName</c> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <param name="userState">一个用户定义的 <see cref="T:System.Object" />，其中包含对等名称解析操作的相关信息。</param>
        <summary>在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。  
  
 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。  
  
 如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`，则解析的名称，使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式，初始化默认值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>属性。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。  
  
 解析程序对象的所有异步引用均与一个唯一标识符标记协调。 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <c>peerName</c>。</param>
        <param name="cloud">要在其中解析 <c>peerName</c> 的 <c>cloud</c>。</param>
        <param name="maxRecords">从 <c>cloud</c> 获取的 <c>peerName</c> 的最大记录数。</param>
        <param name="userState">一个用户定义的对象，其中包含对等名称解析操作的相关信息。</param>
        <summary>在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。  该解析操作为指定的对等名称所解析的条目不会超过 <paramref name="maxRecords" /> 个。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于不安全的对等名称，相同的名称可以是注册 （与不同的终结点关联) 的同一云内的其他对等方。  
  
 此方法将引发<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>方法。 或者，它会发出<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件，回调到<xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>方法。  
  
 如果<xref:System.Net.PeerToPeer.Cloud>参数是`null`，则解析的名称，使用<xref:System.Net.PeerToPeer.Cloud.Available>快捷方式，初始化默认值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>属性。  
  
 为每个<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>方法，没有等效项<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>方法。  它们的参数列表相等，只不过 ResolveAsync 方法包括异步事件处理中，系统令牌和解决方法适用于同步处理。  
  
 对等解析程序对象的所有异步引用都与一个唯一标识符标记协调<xref:System.Object>。 这`userState`令牌或消息标识符允许操作系统后已在消息队列消息放入消息传递给单个接收进程语音消息。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作完成时出错或已取消，则将引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">提供的一个或多个参数均无效。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">要成功完成此操作至少需要一个事件处理程序。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> 参数小于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">向启动解析操作的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 方法实例提供的对象。</param>
        <summary>取消指定的异步对等名称解析请求。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可确保系统不会尝试获取指定的其他记录<xref:System.Net.PeerToPeer.PeerName>。  如果不未完成的异步对等名称解析操作时调用此方法，则它将充当"没有操作"(NO OP)。  
  
 `userState`必须提供对象，因为它用于跟踪特定的异步调用，多个调用时。 此调用方提供的对象是唯一的每个对等名称解析请求。  
  
 此方法将立即返回，但该操作可能适用也可能会不立即取消。 事件自变量返回<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>事件包含的字段的可能轮询由客户端用于确定是否发生取消。  
  
 调用此方法可以确保 ResolveCompleted 事件都将与事件自变量越早越好收到信号<xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>设置为`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userState" /> 参数不能为 <see langword="null" />。</exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 的对等名称解析请求完成时发出 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件信号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>事件将会引发一次每个终结点找到，并且仅在当发现的所有终结点后后，将引发此事件。  
  
 如果也会引发此事件<xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>操作完成时出错或已取消。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>每当发现 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象时会发出有关此事件的信号，以响应针对特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果选择多个<xref:System.Net.PeerToPeer.PeerName>正在查询的群中存在的对象，该事件处于有信号状态一次每个<xref:System.Net.PeerToPeer.PeerNameRecord>找到。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>