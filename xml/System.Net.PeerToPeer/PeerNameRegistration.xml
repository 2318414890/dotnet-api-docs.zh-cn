<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerNameRegistration.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57cd8457b2e09ced1cfe602c70df106251aec2f71.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd8457b2e09ced1cfe602c70df106251aec2f71</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registers a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> or set of clouds.</source>
          <target state="translated">在一个 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 或一组群中注册 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registration creates (or updates) all the information that is associated with a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> in a peer cloud or clouds.</source>
          <target state="translated">注册创建 （或更新） 与关联的所有信息<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>中对等云或云。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>It is possible to have multiple <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objects for the same peer name.</source>
          <target state="translated">可以有多个<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>具有相同的对等名称的对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>In such a case, if the peer name is secured, each instance represents <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> in a different cloud.</source>
          <target state="translated">在这种情况下，如果安全的对等机名称，每个实例表示<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>中另一个云。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</source>
          <target state="translated">但是，如果未保护的对等名称，则可以注册在相同的云多次，提供每个注册将来自不同的进程。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 类的新默认实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Returns a new default instance of type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.</source>
          <target state="translated">返回类型的新默认实例<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>It does not perform peer name registration during construction.</source>
          <target state="translated">它不在构造过程中执行对等名称注册。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.</source>
          <target state="translated">实例化后使用此构造函数的对象，调用方应填充之前调用的实例中的相应字段<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">要注册的 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">指定要注册的端口号的整数值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified name and port number.</source>
          <target state="translated">使用指定的名称和端口号初始化 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</source>
          <target state="translated">调用此构造函数创建一个实例，它将用于注册所有源地址 (包括 ipv6 和 IPv4) 和对等当前参与的所有云提供的端口。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the object is constructed successfully, the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> are populated.</source>
          <target state="translated">如果在成功时，请构造对象指定<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>进行填充。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the peer name is secured and was previously registered in a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> the peer is currently participating in, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">如果对等机名称进行保护，在以前注册<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>当前参与对等方，<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This constructor only creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance; it does not perform the registration.</source>
          <target state="translated">此构造函数只创建<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>实例; 不执行注册。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>After instantiating the registration object with this constructor and populating its fields, the application must call <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> to perform the actual registration.</source>
          <target state="translated">在实例化此构造函数的注册对象和填充其字段之后, 应用程序必须调用<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph>来执行实际的注册。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 参数不能为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">指定的端口号小于零。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">端口号必须大于或等于零且小于 65,535 (0xFFFF)。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">已从此主机注册指定的 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">远程对等方不具有提供的 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 对象的 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
          <target state="translated">对象的引用，该对象保存反序列化此实例时所需的数据。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Context that provides the means for deserializing the data.</source>
          <target state="translated">提供反序列化数据的方式的上下文。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Also referred to as the source of the serialized data.</source>
          <target state="translated">也称为序列化数据的源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new serializable <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">初始化一个新的可序列化 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">要注册的 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">指定要注册的端口号的整数值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to register the peer name.</source>
          <target state="translated">要在其中注册对等名称的 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified peer name, port number, and <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">使用指定的对等名称、端口号和 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">调用此构造函数创建一个实例，它将用于注册所有源地址 （IPv6 和 IPv4）、 提供的端口和指定<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the object is constructed successfully, the properties are populated with the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">如果成功构造对象时，填充其属性与指定<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the cloud parameter is <ph id="ph1">`null`</ph>, the name is registered using the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">如果云参数是<ph id="ph1">`null`</ph>，该名称注册使用<ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph>快捷方式，初始化默认值<ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>After instantiation, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method must be called to register the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">实例化之后,<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph>必须调用方法来注册<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 参数不能为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">指定的端口号小于零。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">端口号必须大于或等于零且小于 65,535 (0xFFFF)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">已从此主机注册指定的 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">远程对等方不具有提供的 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 对象的 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>Gets or sets information in a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> into which this <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> object will be registered.</source>
          <target state="translated">获取或设置要在其中注册此对此 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> 中的信息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> that specifies the peer cloud for which this registration is defined.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 类型的对象，它指定为其定义此注册的对等群。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">默认情况下，此属性设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>Gets or sets additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object that will be registered with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">获取或设置将要在 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 中注册的 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 对象的其他信息。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The comment that contains additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to associate with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">包含要与 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 的其他信息的注释。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">默认情况下，此属性设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The specified string value is greater than 39 Unicode characters.</source>
          <target state="translated">指定的字符串值大于 39 个 Unicode 字符。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>Gets or sets application-defined binary data for the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象的应用程序定义的二进制数据。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
          <target state="translated">包含与此项关联的二进制数据的字节数组。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">默认情况下，此属性设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The maximum amount of <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> that can be supplied is 4,096 bytes.</source>
          <target state="translated">最大量<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph>可提供为 4,096 个字节。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph> is greater than 4096 bytes.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph> 大于 4096 字节。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象使用的资源。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>When a peer leaves a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, the cloud no longer requires the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object associated with the peer.</source>
          <target state="translated">当对等节点离开<ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>，因此云不再要求<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>与对等方关联的对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</source>
          <target state="translated">注册对象已停止或释放是否是依赖于云是否将重复使用要注册此对等方或其他对等方的对象。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</source>
          <target state="translated">如果在对等主机进行通信而进行缺少注册对象内的任何其他终结点，注册云内的这些终结点必须出现在停止或释放此对象之前。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If the cloud expects to register more peers, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">如果希望注册多个对等方，云<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>推荐使用方法; 当云中不再需要的内存，它应返回到通过操作系统<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象使用的所有资源。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>lways call the Dispose method before destroying the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">lways 销毁之前调用的 Dispose 方法<ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="True" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources and optionally releases the managed resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">释放非托管资源，并（可选）释放由 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象占用的托管资源。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Always call the Dispose method before releasing the last reference to the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">始终在发布到的最后一个引用之前调用的 Dispose 方法<ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Gets the collection of network endpoints for which the associated peer name is registered.</source>
          <target state="translated">获取为其注册关联对等名称的网络终结点的集合。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>An <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> object that contains the network endpoints for which the associated peer name is registered.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> 对象，其中包含为其注册关联对等名称的网络终结点。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">除非显式指定，否则对于引用类型，所有属性的默认值均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>In the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace, an <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> represents a network endpoint as an IP address and a port number.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Net&gt;</ph>命名空间，<ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>网络终结点表示为 IP 地址和端口号。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>For PNRP, an IP address and port value must be provided for each endpoint.</source>
          <target state="translated">对于 PNRP，必须为每个终结点提供的 IP 地址和端口值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The maximum number of endpoints that can be provided is ten.</source>
          <target state="translated">可以提供的终结点的最大数为 10。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Automatic address selection is used when this parameter is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">此参数时，将使用自动地址选择<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</source>
          <target state="translated">如果注册方法使用自动选择要注册的地址，没有方法来确定的要为其注册的对等名称。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">也就是说，<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph>属性将不会更新以反映所选择的地址。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>When a peer name is registered for more than one node, each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> is distinct and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property defined on each registration instance will be different.</source>
          <target state="translated">对于多个节点，注册对等机名称时每个<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>不同和<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph>在每个注册实例上定义的属性将不同。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Also, when a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> is registered into more than one <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, each registration is distinct and the collection of endpoints will usually be different for each instance.</source>
          <target state="translated">此外，当<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>注册到多个<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>、 每个注册将截然不同和终结点的集合通常将为每个实例不同。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</source>
          <target state="translated">此对等方将与之通信的终结点的列表不是以不同的方式存储终结点来识别此对等机名称，列表相同。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">保存与 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象关联的序列化数据。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">包含与 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象关联的序列化流的目标。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">使用序列化 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 实例所需的数据填充序列化信息对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>Gets or sets whether the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> on a host.</source>
          <target state="translated">获取或设置在 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性中指定的对等名称是否向主机上的特定 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 进行了注册。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the peer name is registered with a <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> for the peer host.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则说明对等名称向对等主机的 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> 进行了注册。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, then the registration process can be started with <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则说明可以使用 <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph> 启动注册过程。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>An object that has been disposed already cannot be registered.</source>
          <target state="translated">不能注册已经释放的对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Gets or sets the peer name to register with a peer cloud.</source>
          <target state="translated">获取或设置要向对等群注册的对等名称。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that contains values associated with this <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 类型的对象，其中包含与此 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象关联的值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">除非显式指定，否则对于引用类型，所有属性的默认值均为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>A peer name can be registered for more than one node; each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance is distinct.</source>
          <target state="translated">可以为多个节点; 注册对等机名称每个<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>实例是不同。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property associated with each corresponding <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instance is different.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph>与每个相应关联属性<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>实例是不同。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</source>
          <target state="translated">此外，就可以注册多个节点都连接到; 的云的对等名称这些注册的每个都不相同。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The peer name's <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> will be different in each of these instances.</source>
          <target state="translated">对等机名称<ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph>在其中每个实例会有所不同。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Gets or sets the <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> port number used by the peer being registered into the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">获取或设置正在 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象中注册的对等方使用的 <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> 端口号。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>An integer value indicating the TCP port number of the <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>.</source>
          <target state="translated">一个整数值，指示 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> 的 TCP 端口号。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Unless explicitly specified, the default value for this property is zero (0).</source>
          <target state="translated">除非显式指定，否则此属性的默认值设置为零 (0)。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The default port is used by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method only when no endpoints are specified.</source>
          <target state="translated">使用默认端口<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph>方法仅在未不指定任何终结点时。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The specified port value is less than zero.</source>
          <target state="translated">指定的端口值小于零。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">端口号必须大于或等于零且小于 65,535 (0xFFFF)。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Registers the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> into the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 注册到 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If no <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph> is specified, automatic address selection is used with the port value specified by the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph> property.</source>
          <target state="translated">如果未指定 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph>，则将自动地址选择和由 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph> 属性指定的端口值结合使用。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The method registers the peer name specified in the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> property with all source addresses and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> specified in the constructor.</source>
          <target state="translated">方法注册中指定的对等名称<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>所有源地址的属性和<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>构造函数中指定。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The default port is used by this method only when no endpoints are specified.</source>
          <target state="translated">仅当未不指定任何终结点时，此方法使用的默认端口。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, this method registers the peer name specified in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property using the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> field, which initializes default values for the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>属性是<ph id="ph2">`null`</ph>，此方法注册中指定的对等名称<ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph>属性使用<ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph>字段，这将初始化为默认值<ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object has been started, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is used to stop it.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>对象已启动，<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>方法用于将其停止。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>To update a registration, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> method must be used.</source>
          <target state="translated">更新注册，<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph>必须使用方法。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> and registers it along with the metadata specified.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>并将其注册以及指定的元数据。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">此对象此前让 Dispose() 对其进行调用。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 已注册。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method must be used to update a registration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> 方法必须用于更新注册。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified.</source>
          <target state="translated">远程对等方不具有指定 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Either the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph> is not specified; at least one needs to be provided.</source>
          <target state="translated">未指定 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph>；必须提供其中一个。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The message or data elements are invalid.</source>
          <target state="translated">消息或数据元素均无效。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Or, <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph> is not set and no data blob or <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> is specified.</source>
          <target state="translated">或者，未设置 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph> 或未指定任何数据 blob 或 <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>Unregisters the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property from all the clouds in which it was registered.</source>
          <target state="translated">从对等名称注册的所有云中注销 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性中指定的对等名称。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</source>
          <target state="translated">注册过程已停止后，注册对象的状态后等于状态直接正在构造的默认构造函数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In this state, all of its properties are assumed to have no value.</source>
          <target state="translated">在此状态下，所有其属性假定没有值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method may be used to restart it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph>方法可用于重新启动它。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>It is possible to have multiple registration objects for the same peer name.</source>
          <target state="translated">很可能有相同的对等名称的多个注册对象。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</source>
          <target state="translated">在这种情况下，如果安全的对等机名称，每个实例将表示不同的 PNRP 群中注册。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times.</source>
          <target state="translated">但是，如果未保护的对等名称，则可以注册在相同的云多次。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">如果此实例已停止，调用此方法无效。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated">尚未注册 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This occurs when a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object is constructed using the empty constructor.</source>
          <target state="translated">使用空构造函数构造 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 对象时会出现此种情况。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property must be populated in this instance prior to calling <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated">调用 <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph> 前必须在此实例中填充 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">此对象此前让 Dispose() 对其进行调用。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">保存与 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 实例关联的序列化数据。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains the destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">包含与 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 实例关联的序列化流的目标。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> 接口，并返回序列化 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> 实例所需的数据。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> for a node registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">为在特定 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> 中注册的节点更新 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Update is performed using the information specified in the properties.</source>
          <target state="translated">使用属性中指定的信息执行更新。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All information registered in cloud(s) for this <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> prior to the call is completely discarded.</source>
          <target state="translated">所有信息群中都注册此<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>完全放弃调用之前。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The new data is not combined with the existing registration.</source>
          <target state="translated">新的数据不会合并到现有注册。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>To update a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, first update the properties on this instance and then call this method.</source>
          <target state="translated">若要更新<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>，第一次更新此实例上的属性，然后调用此方法。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> is registered, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property cannot be updated.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph>注册时， <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> ，无法更新属性。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All other fields in the record may be updated.</source>
          <target state="translated">可能更新记录中的所有其他字段。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated">尚未注册 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method cannot be called until the peer name specified in the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered in one or more clouds.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性中指定的对等名在一个或多个云中注册之前，无法调用 <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has changed since the corresponding <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> was registered.</source>
          <target state="translated">在注册相应的 <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> 后，<ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> 属性中指定的对等名会更改。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>An object that has been disposed cannot be registered.</source>
          <target state="translated">无法注册已处理的对象。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated">获取或设置一个值，该值指定当遍历对等网格或 <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> 时是否使用自动终结点选择。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if automatic endpoint selection is to be used; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if some other method will be used to determine an endpoint.</source>
          <target state="translated">如果使用自动终结点选择，则为 <ph id="ph1">&lt;see langword="True" /&gt;</ph>；如果使用其他某个方法来确定终结点，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When auto endpoint selection is used (this property is set to <ph id="ph1">`true`</ph>) with no endpoint information specified prior to the start of a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</source>
          <target state="translated">当使用自动终结点选择 (此属性设置为<ph id="ph1">`true`</ph>) 在开始之前指定任何终结点信息<ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>，系统选择各个终结点，并将其与关联的对等名称发布到所有可用云。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If the port is not specified, auto selection chooses zero as the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.</source>
          <target state="translated">如果未指定端口，将自动选择选择零作为<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When set to <ph id="ph1">`false`</ph>, auto selection as described above is not performed.</source>
          <target state="translated">当设置为<ph id="ph1">`false`</ph>，则不会执行自动选择上文所述。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>This enables the registration process to publish a peer name along with a data blob (as specified by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> property).</source>
          <target state="translated">这使发布以及数据 blob 的对等名称的注册过程 (所指定的<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph>属性)。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>No endpoints are associated with the name.</source>
          <target state="translated">没有任何终结点都具有名称相关联。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> object was registered.</source>
          <target state="translated">如果注册方法使用自动选择要注册的地址，没有方法来确定什么样的地址为其<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>对象已注册。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">也就是说，<ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph>属性将不会更新以反映所选择的地址。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Updating this property after peer name registration has started has no effect.</source>
          <target state="translated">启动对等名称注册后更新此属性不起作用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>