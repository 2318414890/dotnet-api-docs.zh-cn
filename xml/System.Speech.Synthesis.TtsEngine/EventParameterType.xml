<Type Name="EventParameterType" FullName="System.Speech.Synthesis.TtsEngine.EventParameterType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="507886422a9f99432d003296d42f946cf8816159" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527311" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum EventParameterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventParameterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.EventParameterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum EventParameterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class EventParameterType" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>枚举传递到语音合成事件的数据指针的类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.EventParameterType> 在构造时使用<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>对象。 实例<xref:System.Speech.Synthesis.TtsEngine.EventParameterType>作为传递`parameterType`为构造函数的自变量<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>指定如何`param2`构造函数的参数 (它必须是`System.IntPtr`) 将被解释。  
  
 所选的<xref:System.Speech.Synthesis.TtsEngine.EventParameterType>根据所请求的事件的类型来确定所指定的成员的<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。  
  
 有关详细信息如何使用<xref:System.Speech.Synthesis.TtsEngine.EventParameterType>，请参阅文档 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>  
  
   
  
## Examples  
 下面的示例是从继承的自定义语音合成器实现的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，并使用了利用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。  
  
 实现 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  
  
1.  接收的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例并创建一个新数组的<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例传递给`Speak`基础的合成引擎上的方法。  
  
2.  如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>枚举值通过找到从<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>属性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>返回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每个属性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，实现  
  
    -   转换到 Britishisms Americanism 中要朗读的文本。  
  
    -   如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>属性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>接口提供给实现支持<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件类型，<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>实例用于创建一个事件到创建合成进度表驱动器。  
  
         上的参数<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>，包括<xref:System.Speech.Synthesis.TtsEngine.EventParameterType>返回的成员值<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>，用于通过生成将事件记录`LogSpeechEvent`方法。  
  
3.  然后调用语音呈现引擎使用修改后<xref:System.Speech.Synthesis.TtsEngine.TextFragment>数组。  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  </Docs>
  <Members>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="Object" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Object = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
      <MemberSignature Language="VB.NET" Value="Object" />
      <MemberSignature Language="C++ CLI" Value="Object" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>当前不支持。</summary>
      </Docs>
    </Member>
    <Member MemberName="Pointer">
      <MemberSignature Language="C#" Value="Pointer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Pointer = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
      <MemberSignature Language="VB.NET" Value="Pointer" />
      <MemberSignature Language="C++ CLI" Value="Pointer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>当前不支持。</summary>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="String" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType String = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      <MemberSignature Language="VB.NET" Value="String" />
      <MemberSignature Language="C++ CLI" Value="String" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的 <paramref name="param2" /> 参数是使用引用 <see langword="System.IntPtr" /> 的对象的 <see langword="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni" /> 创建的 <see langword="System.String" />；<paramref name="param1" /> 可以具有任何值。</summary>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="Token" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Token = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
      <MemberSignature Language="VB.NET" Value="Token" />
      <MemberSignature Language="C++ CLI" Value="Token" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的参数 <paramref name="param2" /> 是一个</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 是`System.IntPtr`使用创建 `System.Runtime.InteropServices.Marshal.PtrToStructure`  
  
 引用的 Windows 桌面语音技术令牌-Windows 桌面语音技术对象表示某个资源，例如语音 (<xref:System.Speech.Synthesis.VoiceInfo>);`param1`可能需要对任何值。  
  
> [!NOTE]
>  当前实例的托管合成语音引擎，使用的成员编写<xref:System.Speech.Synthesis>命名空间，在构造之后无法更改资源  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undefined">
      <MemberSignature Language="C#" Value="Undefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Undefined = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
      <MemberSignature Language="VB.NET" Value="Undefined" />
      <MemberSignature Language="C++ CLI" Value="Undefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的参数 <paramref name="param2" /> 未定义。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，`param1`和`param2`都将被忽略。 但是，如果<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>是<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>，可以生成一个进度指示器事件`param1`应为包含当前的单词，长度的整数和`param2``System.IntPtr`引用一个整数，包含当前的偏移量word。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>