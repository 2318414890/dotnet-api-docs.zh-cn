<Type Name="TextFragment" FullName="System.Speech.Synthesis.TtsEngine.TextFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="def6eea7dc6f5b64c21d95cefd98e719174e586d" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58686723" /></Metadata><TypeSignature Language="C#" Value="public class TextFragment" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit TextFragment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TextFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class TextFragment" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFragment" />
  <TypeSignature Language="F#" Value="type TextFragment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a0d8a-101">包含供语音合成引擎使用的文本和语音特性信息。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-101">Contains text and speech attribute information for consumption by a speech synthesizer engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0d8a-102">语音平台基础结构将解压的 SSML 输入和构造基于 XML 结构<xref:System.Speech.Synthesis.TtsEngine.TextFragment>对象。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-102">The Speech platform infrastructure unpacks the XML based structure of the SSML input and constructs <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objects.</span></span>  
  
 <span data-ttu-id="a0d8a-103">语音内容可通过<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>， <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，并<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>的属性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-103">Speech content is available through the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> properties of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance.</span></span>  
  
 <span data-ttu-id="a0d8a-104">语音特性信息，如强调、 音调、 和速度，获取从<xref:System.Speech.Synthesis.TtsEngine.FragmentState>返回的对象<xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-104">Speech attribute information, such as emphasis, pitch, and rate, are obtained from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> object returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0d8a-105">下面的示例是继承的自定义语音合成实现的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，并使用利用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-105">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="a0d8a-106">实现 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="a0d8a-106">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="a0d8a-107">接收的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例，并创建一个新的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例将传递给`Speak`基础的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-107">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="a0d8a-108">特别注意用于遵守<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>上原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>创建时<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>的新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-108">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="a0d8a-109">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>枚举值由从中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>返回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每个属性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，实现</span><span class="sxs-lookup"><span data-stu-id="a0d8a-109">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="a0d8a-110">要朗读的文本中，将转换到 Britishisms Americanism。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-110">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="a0d8a-111">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>接口提供实现支持<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件类型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>实例用于创建将事件与创建合成器进度条的驱动器。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-111">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="a0d8a-112">然后调用语音呈现引擎使用已修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>数组。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-112">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TextFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0d8a-113">构造 <see langword="TextFragment" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-113">Constructs a new instance of <see langword="TextFragment" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0d8a-114">默认构造函数<xref:System.Speech.Synthesis.TtsEngine.TextFragment>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-114">Default constructor for <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.FragmentState State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.TtsEngine.FragmentState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.State" />
      <MemberSignature Language="VB.NET" Value="Public Property State As FragmentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::FragmentState State { System::Speech::Synthesis::TtsEngine::FragmentState get(); void set(System::Speech::Synthesis::TtsEngine::FragmentState value); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.TtsEngine.FragmentState with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.FragmentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0d8a-115">获取或设置 <see langword="TextFragment" /> 的语音特性信息。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-115">Gets or sets speech attribute information for a <see langword="TextFragment" />.</span></span></summary>
        <value><span data-ttu-id="a0d8a-116">返回或使用 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 实例来为 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 设置语音特性信息。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-116">A <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> instance is returned, or used to set speech attribute information for a <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0d8a-117">此属性的默认值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-117">The default value of this property is `null`.</span></span>  
  
 <span data-ttu-id="a0d8a-118">可以从实例获取诗体论信息<xref:System.Speech.Synthesis.TtsEngine.Prosody>返回的<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A>的实例上的属性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>返回的<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-118">Prosody information can be obtained from the instance of <xref:System.Speech.Synthesis.TtsEngine.Prosody> returned by the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A> property on the instance of <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public int TextLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0d8a-119">设置或获取片段中的语音文本的长度。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-119">Gets or sets the length of the speech text in the fragment.</span></span></summary>
        <value><span data-ttu-id="a0d8a-120">返回或使用 <see langword="int" /> 以字符设置与此要朗读的片段相关联的文本字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-120">An <see langword="int" /> is returned or can be used to set the length, in character, of the text string associated with this fragment to be spoken.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0d8a-121">此属性的默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-121">The default value of this property is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0d8a-122">下面的示例是继承的自定义语音合成实现的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，并使用利用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-122">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="a0d8a-123">实现 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="a0d8a-123">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="a0d8a-124">接收的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例，并创建一个新的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例将传递给`Speak`基础的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-124">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="a0d8a-125">特别注意用于遵守<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>上原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>创建时<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>的新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-125">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="a0d8a-126">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>枚举值由从中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>返回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每个属性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，实现</span><span class="sxs-lookup"><span data-stu-id="a0d8a-126">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="a0d8a-127">要朗读的文本中，将转换到 Britishisms Americanism。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-127">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="a0d8a-128">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>接口提供实现支持<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件类型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>实例用于创建将事件与创建合成器进度条的驱动器。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-128">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="a0d8a-129">然后调用语音呈现引擎使用已修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>数组。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-129">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextOffset">
      <MemberSignature Language="C#" Value="public int TextOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextOffset" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property TextOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextOffset : int with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0d8a-130">设置或获取片段中的文本的起始位置。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-130">Gets or sets the starting location of the text in the fragment.</span></span></summary>
        <value><span data-ttu-id="a0d8a-131">返回或使用 <see langword="int" /> 以字符设置与此要朗读的片段相关联的部分文本字符串的开始位置。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-131">An <see langword="int" /> is returned or can be used to set the start location, in character, of the part of text string associated with this fragment to be spoken.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0d8a-132">此属性的默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-132">The default value of this property is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0d8a-133">下面的示例是继承的自定义语音合成实现的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，并使用利用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-133">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="a0d8a-134">实现 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="a0d8a-134">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="a0d8a-135">接收的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例，并创建一个新的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例将传递给`Speak`基础的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-135">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="a0d8a-136">特别注意用于遵守<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>上原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>创建时<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>的新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-136">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="a0d8a-137">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>枚举值由从中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>返回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每个属性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，实现</span><span class="sxs-lookup"><span data-stu-id="a0d8a-137">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="a0d8a-138">要朗读的文本中，将转换到 Britishisms Americanism。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-138">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="a0d8a-139">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>接口提供实现支持<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件类型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>实例用于创建将事件与创建合成器进度条的驱动器。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-139">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="a0d8a-140">然后调用语音呈现引擎使用已修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>数组。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-140">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToSpeak">
      <MemberSignature Language="C#" Value="public string TextToSpeak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextToSpeak" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" />
      <MemberSignature Language="VB.NET" Value="Public Property TextToSpeak As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextToSpeak { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextToSpeak : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0d8a-141">设置或获取片段的语音文本。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-141">Sets or gets the speech text of the fragment.</span></span></summary>
        <value><span data-ttu-id="a0d8a-142">返回或使用 <see langword="System.String" /> 来设置语音合成引擎用来生成音频输出的语音文本。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-142">A <see langword="System.String" /> is returned or can be used to set the speech text to be used by a speech synthesis engine to generate audio output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0d8a-143">此属性的默认值为 `System.String.Empty`。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-143">The default value of this property is `System.String.Empty`.</span></span>  
  
 <span data-ttu-id="a0d8a-144">应用程序可随意的值完全更改<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-144">Applications are free to completely change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>.</span></span>  
  
 <span data-ttu-id="a0d8a-145">值重置<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>不会更改的值<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>和<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-145">Resetting the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> will not change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A> and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0d8a-146">下面的示例是继承的自定义语音合成实现的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，并使用利用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-146">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="a0d8a-147">实现 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="a0d8a-147">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="a0d8a-148">接收的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例，并创建一个新的数组<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例将传递给`Speak`基础的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-148">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="a0d8a-149">特别注意用于遵守<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>上原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>创建时<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>的新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-149">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="a0d8a-150">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>枚举值由从中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>返回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每个属性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>实例是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，实现</span><span class="sxs-lookup"><span data-stu-id="a0d8a-150">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="a0d8a-151">要朗读的文本中，将转换到 Britishisms Americanism。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-151">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="a0d8a-152">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的属性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>接口提供实现支持<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件类型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>实例用于创建将事件与创建合成器进度条的驱动器。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-152">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="a0d8a-153">然后调用语音呈现引擎使用已修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>数组。</span><span class="sxs-lookup"><span data-stu-id="a0d8a-153">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>