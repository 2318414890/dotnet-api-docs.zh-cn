<Type Name="WebPartConnection" FullName="System.Web.UI.WebControls.WebParts.WebPartConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9876a0ff584b9342112f635529e62289ab52c444" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebPartConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebPartConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPartConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartConnection sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Transformers")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="73736-101">Provides an object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to form a connection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="73736-101">Provides an object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to form a connection.</span>
      </span>
      <span data-ttu-id="73736-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="73736-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-103">在 Web 部件控件集，连接是链接或两个之间的关联<xref:System.Web.UI.WebControls.WebParts.WebPart>（或其他服务器或用户） 控件，使它们可以共享数据。</span><span class="sxs-lookup"><span data-stu-id="73736-103">In the Web Parts control set, a connection is a link or association between two <xref:System.Web.UI.WebControls.WebParts.WebPart> (or other server or user) controls that enables them to share data.</span></span> <span data-ttu-id="73736-104">共享数据这种能力使得连接超过提供独立的控件的功能的方式使用的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-104">This ability to share data allows connected controls to be used in ways that exceed the functionality offered by the isolated controls.</span></span> <span data-ttu-id="73736-105">例如，如果一个控件提供了邮政编码数据，而另一个控件可以读取该数据并提供本地天气信息基于邮政编码，然后连接的功能的两个控件提供更大的价值对用户。</span><span class="sxs-lookup"><span data-stu-id="73736-105">For example, if one control provides postal code data, and another control can read that data and provide local weather information based on the postal code, then the connected capability of the two controls provides more value to users.</span></span> <span data-ttu-id="73736-106">若要扩展此示例中，无法创建其他控件还基于邮政编码，如具有链接到本地新闻的控件的显示信息，并可以使用的邮政编码数据的所有这些控件可以与提供的单个控件共享数据邮政编码。</span><span class="sxs-lookup"><span data-stu-id="73736-106">To extend this example, other controls could be created that also display information based on a postal code, such as a control with links to local news, and all these controls that can work with postal code data could share data with the single control that provides a postal code.</span></span> <span data-ttu-id="73736-107">Web 部件应用程序的最终用户可以创建和管理直接从 Web 浏览器，使用标准连接用户界面 (UI) 提供的所有此类兼容的控件之间的连接<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件，或使用提供的自定义用户界面开发人员。</span><span class="sxs-lookup"><span data-stu-id="73736-107">End users of Web Parts applications can create and manage connections between all such compatible controls directly from a Web browser, using the standard connections user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control, or using a custom UI provided by a developer.</span></span>  
  
 <span data-ttu-id="73736-108">这<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类概述是用于创建连接的基本详细信息的常规语句。</span><span class="sxs-lookup"><span data-stu-id="73736-108">This <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview is a general statement of the basic details for creating a connection.</span></span> <span data-ttu-id="73736-109">有关特定组件和创建连接的涉及到的要求的详细信息，请参阅[Web 部件连接概述](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)，或请参阅引用类和代码示例下面的讨论中所述。</span><span class="sxs-lookup"><span data-stu-id="73736-109">For more on specific components and requirements involved in creating connections, see [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b), or see the reference classes and code examples mentioned in the following discussion.</span></span> <span data-ttu-id="73736-110">有几个 Web 部件连接中基本方面：</span><span class="sxs-lookup"><span data-stu-id="73736-110">There are several fundamental aspects of a Web Parts connection:</span></span>  
  
-   <span data-ttu-id="73736-111">两个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-111">Two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-112">每个 Web 部件连接由两个控件组成。</span><span class="sxs-lookup"><span data-stu-id="73736-112">Every Web Parts connection consists of two controls.</span></span> <span data-ttu-id="73736-113">一个控件，用于同时参与多个连接可能但每个单个连接由两个控件组成。</span><span class="sxs-lookup"><span data-stu-id="73736-113">It is possible for a control to participate in more than one connection simultaneously, but every single connection consists of exactly two controls.</span></span> <span data-ttu-id="73736-114">控件可以直接从派生<xref:System.Web.UI.WebControls.WebParts.WebPart>基类，也可以是其他服务器控件，包括 ASP.NET 控件、 自定义服务器控件和用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-114">The controls can derive directly from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, or they can be other server controls, including ASP.NET controls, custom server controls, and user controls.</span></span> <span data-ttu-id="73736-115">不要从派生的控件<xref:System.Web.UI.WebControls.WebParts.WebPart>类，如果置于<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域，使用自动包装<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象在运行时，使其能够从继承<xref:System.Web.UI.WebControls.WebParts.WebPart>类和函数作为运行时<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-115">Controls that do not derive from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, are automatically wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, which enables them to inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and function as run-time <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span>  
  
-   <span data-ttu-id="73736-116">控件位于<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。</span><span class="sxs-lookup"><span data-stu-id="73736-116">Controls residing in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones.</span></span> <span data-ttu-id="73736-117">同时<xref:System.Web.UI.WebControls.WebParts.WebPart>控件和任何其他类型的服务器控件必须驻留在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域能够参与 Web 部件连接 （和大多数其他 Web 部件功能）。</span><span class="sxs-lookup"><span data-stu-id="73736-117">Both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and any other type of server control must reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone to be able to participate in Web Parts connections (and most other Web Parts features).</span></span>  
  
-   <span data-ttu-id="73736-118">使用者和提供程序。</span><span class="sxs-lookup"><span data-stu-id="73736-118">Consumers and providers.</span></span> <span data-ttu-id="73736-119">每个 Web 部件连接中有两个控件： 数据和数据的使用者的提供程序。</span><span class="sxs-lookup"><span data-stu-id="73736-119">In every Web Parts connection there are two controls: a provider of data and a consumer of data.</span></span> <span data-ttu-id="73736-120">提供程序数据提供给使用者通过接口的形式返回数据的指定的回调方法。</span><span class="sxs-lookup"><span data-stu-id="73736-120">The provider furnishes data to the consumer through a specified callback method that returns data in the form of an interface.</span></span> <span data-ttu-id="73736-121">（有关如何创建和指定的回调方法的示例，请参阅本主题的示例部分）。此回调方法被称为提供程序连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-121">(For an example of how to create and specify the callback method, see the Example section of this topic.) This callback method is known as a provider connection point.</span></span> <span data-ttu-id="73736-122">此连接点 （其"友好的"名称、 ID 和返回的接口的类型） 的详细信息包含在<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>与提供程序控件关联的对象。</span><span class="sxs-lookup"><span data-stu-id="73736-122">The details of this connection point (its "friendly" name, an ID, and the type of the returned interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object associated with the provider control.</span></span> <span data-ttu-id="73736-123">使用者通过可以接受接口的实例的指定方法将接收数据。</span><span class="sxs-lookup"><span data-stu-id="73736-123">The consumer receives the data through a specified method that can accept an instance of the interface.</span></span> <span data-ttu-id="73736-124">此方法被称为使用者连接点，以及连接点 （名称、 ID 和的接口类型） 的详细信息包含在<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>与使用者控件关联的对象。</span><span class="sxs-lookup"><span data-stu-id="73736-124">This method is known as a consumer connection point, and the details of the connection point (name, ID, and type of interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object associated with the consumer control.</span></span>  
  
-   <span data-ttu-id="73736-125">兼容的控件或有效的转换器。</span><span class="sxs-lookup"><span data-stu-id="73736-125">Compatible controls or a valid transformer.</span></span> <span data-ttu-id="73736-126">若要连接，使用者和提供程序必须是兼容 （即其指定的连接点方法可以使用相同类型的接口） 或必须是<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象支持的转换由提供的类型转换为使用者理解为类型的提供程序。</span><span class="sxs-lookup"><span data-stu-id="73736-126">For a connection to work, the consumer and provider must either be compatible (meaning that their specified connection point methods can work with the same type of interface), or there must be a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object capable of translating the type offered by the provider into a type understood by the consumer.</span></span>  
  
-   <span data-ttu-id="73736-127">一个 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象。</span><span class="sxs-lookup"><span data-stu-id="73736-127">A <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="73736-128">可用于存在，连接必须有的实例<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类，其中包含对提供程序和使用者的控制，以及它们的连接点的详细信息的引用。</span><span class="sxs-lookup"><span data-stu-id="73736-128">For a connection to exist, there must be an instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class that contains references to the provider and consumer controls, along with the details of their connection points.</span></span> <span data-ttu-id="73736-129">如果提供程序和使用者不兼容，并且改用<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象进行连接，则连接引用转换器。</span><span class="sxs-lookup"><span data-stu-id="73736-129">If the provider and consumer are incompatible and instead use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to connect, the connection references the transformer.</span></span>  
  
-   <span data-ttu-id="73736-130">建立连接的方法。</span><span class="sxs-lookup"><span data-stu-id="73736-130">A means of establishing the connection.</span></span> <span data-ttu-id="73736-131">兼容的使用者和提供程序控件已正确连接点方法在设计和放置在区域中之后, 和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象都不可用，最后一个必要的基本步骤是发起的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-131">After compatible consumer and provider controls have been properly designed with connection point methods and placed in a zone, and a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object is available, the last basic step necessary is to initiate the connection.</span></span> <span data-ttu-id="73736-132">发生这种情况的一种方法是对用户创建的连接通过用户界面。</span><span class="sxs-lookup"><span data-stu-id="73736-132">One way this can happen is for users to create the connection through the UI.</span></span> <span data-ttu-id="73736-133">如果你将放置`<asp:connectionszone>`元素上的网页和其他所需的连接的组件是到位，在运行时用户可以将页切换到连接的显示模式，单击连接上的谓词提供程序或使用者的谓词菜单和一个连接用户界面 (基于<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件) 将出现。</span><span class="sxs-lookup"><span data-stu-id="73736-133">If you place an `<asp:connectionszone>` element on the page, and the other required components for a connection are in place, at run time a user can switch the page into connect display mode, click a connect verb on the verbs menu of either the provider or consumer, and a connection UI (based on the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control) will appear.</span></span> <span data-ttu-id="73736-134">通过此 UI 中，用户可以发起的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-134">Through this UI, the user can initiate the connection.</span></span> <span data-ttu-id="73736-135">启动连接另一种方法是以编程方式执行。</span><span class="sxs-lookup"><span data-stu-id="73736-135">Another way to initiate the connection is to do it programmatically.</span></span> <span data-ttu-id="73736-136">在任一情况下，是否通过 UI 或以编程方式，基础方法，启动的连接是相同的。</span><span class="sxs-lookup"><span data-stu-id="73736-136">In either case, whether through the UI or programmatically, the underlying method that initiates the connection is the same.</span></span> <span data-ttu-id="73736-137">应用程序调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法 (或<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法如果使用转换器) 上<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制，并向它传递提供程序、 使用者和及其各自的连接点对象，并且该方法返回<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-137">The application calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method (or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method if using a transformer) on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider, the consumer, and their respective connection point objects, and the method returns a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="73736-138"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类定义一个对象，封装之间两个连接的重要详细信息<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-138">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class defines an object that encapsulates the essential details of a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-139">类包含几乎完全与一个特定连接的详细信息相关的属性。</span><span class="sxs-lookup"><span data-stu-id="73736-139">The class consists almost entirely of properties related to the details of a particular connection.</span></span> <span data-ttu-id="73736-140">多个属性涉及连接中的使用者控件。</span><span class="sxs-lookup"><span data-stu-id="73736-140">Several properties concern the consumer control in a connection.</span></span> <span data-ttu-id="73736-141"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>属性引用自身，使用者控件和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>属性将引用使用者的 id。</span><span class="sxs-lookup"><span data-stu-id="73736-141">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property references the consumer control itself, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property references the consumer's ID.</span></span> <span data-ttu-id="73736-142"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象，包含使用者的连接点的详细信息，该对象引用的使用者的<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-142">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, which contains the details of the consumer's connection point, is referenced by the consumer's <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="73736-143"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>属性引用的 ID<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-143">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property references the ID of the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="73736-144">所有这些与用户相关的连接属性必须具有值分配给他们创建的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-144">All these consumer-related connection properties must have a value assigned to them to create a connection.</span></span>  
  
 <span data-ttu-id="73736-145"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类还具有与在连接中，该提供程序控件相关的多个属性，这些属性与对应的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-145">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class also has several properties that relate to the provider control in a connection, and these correspond to the properties for a consumer.</span></span> <span data-ttu-id="73736-146"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>属性引用的提供者控件本身，而<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>属性引用其 id。</span><span class="sxs-lookup"><span data-stu-id="73736-146">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property references the provider control itself, while the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property references its ID.</span></span> <span data-ttu-id="73736-147"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>属性引用<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>对象，与<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>属性引用的提供程序的连接点的 ID。</span><span class="sxs-lookup"><span data-stu-id="73736-147">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property references the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property references the ID of the provider's connection point.</span></span>  
  
 <span data-ttu-id="73736-148">多个属性涉及连接的状态。</span><span class="sxs-lookup"><span data-stu-id="73736-148">Several properties concern the state of the connection.</span></span> <span data-ttu-id="73736-149"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>属性指示连接是否处于活动状态 （当前交换数据） 或处于非活动状态 （仍已连接但不是主动共享数据）。</span><span class="sxs-lookup"><span data-stu-id="73736-149">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates whether the connection is active (currently exchanging data) or inactive (still connected but not actively sharing data).</span></span> <span data-ttu-id="73736-150"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>属性指示连接是否共享 （适用于页的所有用户） 或特定于用户的连接，和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>属性指示控件是静态的 （声明中的页标记并因此是永久） 或动态 (以编程方式创建，这意味着它可以 deleted)。</span><span class="sxs-lookup"><span data-stu-id="73736-150">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property indicates whether the connection is a shared (available to all users of a page) or a user-specific connection, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property indicates whether the control is static (declared in the page markup and thus permanent) or dynamic (created programmatically, meaning that it can be deleted).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-151">下面的代码示例演示如何创建两个之间的简单连接<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-151">The following code example demonstrates how to create a simple connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-152">该示例演示建立连接的三种方式： 声明方式，通过将连接标记放置在网页; 的标记以编程方式在代码; 中创建连接和 UI，通过将放置<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件在页上，这使得用户能够建立连接。</span><span class="sxs-lookup"><span data-stu-id="73736-152">The example demonstrates three ways of forming a connection: declaratively, by placing tags for the connection in the markup of the Web page; programmatically, by creating the connection in code; and through the UI, by placing a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on the page, which enables users to establish a connection.</span></span>  
  
 <span data-ttu-id="73736-153">下面的代码示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-153">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-154">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-154">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-155">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-155">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-156">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-156">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-157">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-157">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-158">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-158">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-159">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-159">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-160">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-160">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-161">下面的代码示例的第二部分是接口和控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-161">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="73736-162">源文件包含名为一个简单的界面`IZipCode`。</span><span class="sxs-lookup"><span data-stu-id="73736-162">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="73736-163">此外，还有<xref:System.Web.UI.WebControls.WebParts.WebPart>类名为`ZipCodeWebPart`，实现接口，并充当提供程序控制。</span><span class="sxs-lookup"><span data-stu-id="73736-163">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="73736-164">其`ProvideIZipCode`方法是实现接口的唯一成员的回调方法。</span><span class="sxs-lookup"><span data-stu-id="73736-164">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="73736-165">方法只返回接口的实例。</span><span class="sxs-lookup"><span data-stu-id="73736-165">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="73736-166">请注意，该方法将标有`ConnectionProvider`其元数据中的属性。</span><span class="sxs-lookup"><span data-stu-id="73736-166">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="73736-167">这是用于将方法标识为提供程序的连接点的回调方法的机制。</span><span class="sxs-lookup"><span data-stu-id="73736-167">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="73736-168">其他<xref:System.Web.UI.WebControls.WebParts.WebPart>类命名为`WeatherWebPart`，并且它可作为连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-168">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="73736-169">此类具有一个名为方法`GetZipCode`获取的实例`IZipCode`从提供者控件的接口。</span><span class="sxs-lookup"><span data-stu-id="73736-169">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="73736-170">请注意，此方法作为使用者的连接点方法标记为`ConnectionConsumer`其元数据中的属性。</span><span class="sxs-lookup"><span data-stu-id="73736-170">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span>  
  
 <span data-ttu-id="73736-171">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-171">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-172">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-172">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-173">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-173">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-174">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-174">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-175">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-175">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-176">下面的代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-176">The third part of the code example is the Web page.</span></span> <span data-ttu-id="73736-177">顶部附近是`Register`用户控制和自定义的指令<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-177">Near the top are the `Register` directives for the user control and the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-178">该示例假定的控件的动态编译，因为控件的源代码应在 App_Code 子文件夹中;`Register`页中的标记引用仅任意标记前缀和控件的命名空间。</span><span class="sxs-lookup"><span data-stu-id="73736-178">Because the example assumes dynamic compilation of the controls, the source code for the controls should be in an App_Code subfolder; the `Register` tag in the page references only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="73736-179">自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件 （提供程序和使用者） 中声明，网页的`<asp:webpartzone>`元素中，内部`<zonetemplate>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-179">The custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (the provider and consumer) are declared within the Web page's `<asp:webpartzone>` element, inside a `<zonetemplate>` element.</span></span>  
  
 <span data-ttu-id="73736-180">页提供了三种方式自定义控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-180">The page provides three ways to form a connection between the custom controls.</span></span> <span data-ttu-id="73736-181">第一种方法是声明性。</span><span class="sxs-lookup"><span data-stu-id="73736-181">The first method is declarative.</span></span> <span data-ttu-id="73736-182">在页中，标记 <`StaticConnections>`元素声明，并且在其中为`<asp:WebPartConnections>`元素，与为属性指定的连接的各种使用者和提供程序详细信息。</span><span class="sxs-lookup"><span data-stu-id="73736-182">In the markup for the page, a <`StaticConnections>` element is declared, and within that is an `<asp:WebPartConnections>` element, with the various consumer and provider details of the connection specified as attributes.</span></span> <span data-ttu-id="73736-183">这是一种方法创建的连接，具体而言是在直接在 Web 页中，声明`<asp:WebPartManager>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-183">This is one way to create a connection, by declaring it directly in the Web page, specifically within the `<asp:WebPartManager>` element.</span></span> <span data-ttu-id="73736-184">由于此静态连接，首次加载页面时立即创建两个自定义控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-184">Because of this static connection, a connection between the two custom controls is created immediately the first time the page loads.</span></span>  
  
 <span data-ttu-id="73736-185">构成控件之间的连接的第二种由`<asp:connectionszone>`在页中的元素。</span><span class="sxs-lookup"><span data-stu-id="73736-185">A second method for forming a connection between the controls is provided by the `<asp:connectionszone>` element in the page.</span></span> <span data-ttu-id="73736-186">如果用户在运行时，将页切换为连接的显示模式，单击上的一个自定义控件的连接谓词`<asp:connectionszone>`元素自动呈现用于创建连接的用户界面。</span><span class="sxs-lookup"><span data-stu-id="73736-186">If a user switches a page into connect display mode at run time, and clicks a connect verb on one of the custom controls, the `<asp:connectionszone>` element automatically renders the UI for creating a connection.</span></span>  
  
 <span data-ttu-id="73736-187">该页还演示创建连接，这是以编程方式执行操作的第三个方法。</span><span class="sxs-lookup"><span data-stu-id="73736-187">The page also demonstrates a third way of creating a connection, which is to do it programmatically.</span></span> <span data-ttu-id="73736-188">在`Button1_Click`方法，该代码创建<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>对象的提供程序控制和检索其连接点的详细信息通过调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="73736-188">In the `Button1_Click` method, the code creates a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object for the provider control, and retrieves its connection point details by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method.</span></span> <span data-ttu-id="73736-189">它执行类似任务的使用者控件中，调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="73736-189">It carries out a similar task for the consumer control, calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method.</span></span> <span data-ttu-id="73736-190">最后，它会创建新<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象通过调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-190">Finally, it creates the new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-191">加载网页浏览器中之后，第一个连接已经存在，因为它在内声明`<StaticConnections>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-191">After you load the Web page in a browser, the first connection already exists because it is declared within the `<StaticConnections>` element.</span></span> <span data-ttu-id="73736-192">输入中的某些文本**ZIP 代码提供程序**控制，以及它将显示在使用者控件。</span><span class="sxs-lookup"><span data-stu-id="73736-192">Enter some text in the **ZIP Code Provider** control, and it will be displayed in the consumer control.</span></span> <span data-ttu-id="73736-193">接下来，断开连接两个控件。</span><span class="sxs-lookup"><span data-stu-id="73736-193">Next, disconnect the two controls.</span></span> <span data-ttu-id="73736-194">使用**显示模式**下拉列表控件中，更改页后，可以连接的显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-194">Using the **Display Mode** drop-down list control, change the page to connect display mode.</span></span> <span data-ttu-id="73736-195">单击 （由标题栏中的向下箭头） 的谓词菜单为每个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并请注意，每个都**连接**选项。</span><span class="sxs-lookup"><span data-stu-id="73736-195">Click the verbs menu (represented by a downward arrow in the title bar) for each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and notice that each has a **Connect** option.</span></span> <span data-ttu-id="73736-196">这是显示的谓词菜单中的连接动词仅页位于在连接模式下。</span><span class="sxs-lookup"><span data-stu-id="73736-196">This is a connect verb, which appears in the verbs menu only when the page is in connect mode.</span></span> <span data-ttu-id="73736-197">单击其中一个控件，并连接提供的用户界面上的连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件的外观。</span><span class="sxs-lookup"><span data-stu-id="73736-197">Click the connect verb on one of the controls, and the connection UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control appears.</span></span> <span data-ttu-id="73736-198">单击**断开连接**按钮以结束控件之间的静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-198">Click the **Disconnect** button to end the static connection between the controls.</span></span> <span data-ttu-id="73736-199">使用**显示模式**控件来返回到浏览模式的页。</span><span class="sxs-lookup"><span data-stu-id="73736-199">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="73736-200">尝试一些新的文本提供程序中重新输入，并请注意，控件会断开的连接，因为文本无法更新使用者控件中。</span><span class="sxs-lookup"><span data-stu-id="73736-200">Try to enter some new text in the provider again, and note that because the controls are disconnected, the text fails to update in the consumer control.</span></span>  
  
 <span data-ttu-id="73736-201">接下来，使用按上面所述的相同方法将页切换到连接的显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-201">Next, use the same method as above to switch the page into connect display mode again.</span></span> <span data-ttu-id="73736-202">单击上每个控件的连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-202">Click a connect verb on one of the controls.</span></span> <span data-ttu-id="73736-203">单击**创建连接**链接，并使用提供的用户界面<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件创建控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-203">Click the **Create a Connection** link, and use the UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control to create a connection between the controls.</span></span> <span data-ttu-id="73736-204">这是创建连接的第二个方法。</span><span class="sxs-lookup"><span data-stu-id="73736-204">This is the second method for creating a connection.</span></span> <span data-ttu-id="73736-205">请注意，一旦建立连接，最后一个的字符串你输入提供程序控件 （即会显示，因为控件已断开连接失败） 中会立即出现在使用者，因为已重新创建连接。</span><span class="sxs-lookup"><span data-stu-id="73736-205">Note that as soon as the connection is formed, the last string you entered in the provider control (that failed to appear because the controls were disconnected) suddenly appears in the consumer, because the connection has been recreated.</span></span> <span data-ttu-id="73736-206">单击**断开连接**按钮以结束当前你刚刚创建的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-206">Click the **Disconnect** button to end the current connection that you just created.</span></span> <span data-ttu-id="73736-207">返回页后，可以浏览模式。</span><span class="sxs-lookup"><span data-stu-id="73736-207">Return the page to browse mode.</span></span> <span data-ttu-id="73736-208">在要演示，将不会更新文本，并且控件再次断开连接的提供程序中输入一些新的文本。</span><span class="sxs-lookup"><span data-stu-id="73736-208">Enter some new text in the provider to demonstrate that the text is not updated, and that the controls are again disconnected.</span></span>  
  
 <span data-ttu-id="73736-209">返回页后，可以连接的显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-209">Return the page to connect display mode.</span></span> <span data-ttu-id="73736-210">而是单击连接谓词，单击**连接 web 部件控件**按钮，说明了建立连接的第三个方法。</span><span class="sxs-lookup"><span data-stu-id="73736-210">Instead of clicking a connect verb, click the **Connect WebPart Controls** button, which illustrates the third method of forming a connection.</span></span> <span data-ttu-id="73736-211">此方法而无需使用连接以编程方式在一个简单的步骤中的控件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-211">This approach connects the controls programmatically in one simple step without having to use the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="73736-212">请注意，创建连接时，你突然输入提供程序中的最后一个字符串显示在使用者控件中。</span><span class="sxs-lookup"><span data-stu-id="73736-212">Note that as the connection is created, the last string you entered in the provider suddenly appears in the consumer control.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
    <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73736-213">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-213">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-214"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A>构造函数是公共的以便在网页上的标记中声明连接时，ASP.NET 分析器可以创建实例; 此构造函数不应在开发人员代码中使用。</span><span class="sxs-lookup"><span data-stu-id="73736-214">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor is public so that the ASP.NET parser can create an instance when a connection is declared in the markup of a Web page; this constructor is not intended to be used in developer code.</span></span>  
  
 <span data-ttu-id="73736-215">如果想要创建<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象以编程方式，应使用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType>或<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType>中提供的方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-215">When you want to create a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object programmatically, you should use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> method provided in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="73736-216">这些方法处理创建连接的许多详细信息，返回<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-216">These methods handle the many details of creating a connection, and return a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="73736-217"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A>构造函数<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类设置的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="73736-217">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class sets the values of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties to `true`.</span></span> <span data-ttu-id="73736-218">因此新的连接的默认状态将是静态 （这意味着在包含的 Web 页的标记中声明），并共享 （页上的所有用户可见）。</span><span class="sxs-lookup"><span data-stu-id="73736-218">Thus the default state of a new connection is to be static (meaning that it is declared in the markup of the containing Web page) and shared (visible to all users of the page).</span></span> <span data-ttu-id="73736-219">通过声明标记中的页的连接，在典型的方案中，添加连接时，会遇到这种情况`<asp:webpartconnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-219">This will be the case when you add a connection in the typical scenario, by declaring the connection in the markup of the page with an `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="73736-220">但是，在其他情况下连接将具有这些属性的不同值。</span><span class="sxs-lookup"><span data-stu-id="73736-220">However, in other circumstances a connection will have different values for these properties.</span></span> <span data-ttu-id="73736-221">例如，当你添加连接以编程方式通过在代码中，创建连接对象以及用户在默认用户个性化设置作用域中查看页上，则连接该创建作为动态的每个 user(visible only to the specific user)连接。</span><span class="sxs-lookup"><span data-stu-id="73736-221">For example, when you add a connection programmatically by creating the connection object in code, and the user is viewing the page in the default user personalization scope, the connection is created as a dynamic, per-user(visible only to the specific user) connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73736-222"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>属性是只读的且这些属性用于确定连接的性质内部设置<xref:System.Web.UI.WebControls.WebParts.WebPartManager>具体取决于如何创建连接的控件 (以声明方式在页标记中，或以编程方式通过你的代码或用户界面）。</span><span class="sxs-lookup"><span data-stu-id="73736-222">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties are read-only, and these properties that determine the nature of a connection are set internally by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control depending on how a connection is created (declaratively in the page markup, or programmatically through your code or the user interface).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      </Docs>
    </Member>
    <Member MemberName="Consumer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Consumer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Consumer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Consumer As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Consumer { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-223">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> object that is acting as the consumer control in a connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-223">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> object that is acting as the consumer control in a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-224">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ，表示作为连接中使用者的 Web 部件控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-224">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that represents the Web Parts control acting as the consumer in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-225">每个 Web 部件连接中包含的共享数据的两个控件。</span><span class="sxs-lookup"><span data-stu-id="73736-225">Every Web Parts connection consists of two controls that share data.</span></span> <span data-ttu-id="73736-226">一个控件充当数据，提供程序和其他控件充当使用者，接收和处理从提供程序的数据。</span><span class="sxs-lookup"><span data-stu-id="73736-226">One control acts as the provider of data, and the other control acts as a consumer, receiving and processing the data from the provider.</span></span> <span data-ttu-id="73736-227"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>属性获取的引用<xref:System.Web.UI.WebControls.WebParts.WebPart>控制作为连接关系中的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-227">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property gets a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer in a connection relationship.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-228">下面的代码示例演示如何以编程方式使用的<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-228">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 <span data-ttu-id="73736-229">下面的代码示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-229">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-230">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-230">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-231">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-231">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-232">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-232">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-233">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-233">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-234">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-234">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-235">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-235">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-236">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-236">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-237">下面的代码示例的第二部分是对这两个源代码<xref:System.Web.UI.WebControls.WebParts.WebPart>充当使用者和提供程序连接和用于连接点的接口的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-237">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="73736-238">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-238">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-239">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-239">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-240">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-240">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-241">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-241">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-242">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-242">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-243">下面的代码示例的第三部分是所承载控件并演示如何使用的 Web 页的代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-243">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span> <span data-ttu-id="73736-244">页面顶部附近是`Register`用户控制和自定义控件的指令。</span><span class="sxs-lookup"><span data-stu-id="73736-244">Near the top of the page are the `Register` directives for the user control and the custom controls.</span></span> <span data-ttu-id="73736-245">由于本示例使用动态编译`Register`源文件的文件名的指令不需要引用程序集名称; 它包括仅任意标记前缀和控件的命名空间。</span><span class="sxs-lookup"><span data-stu-id="73736-245">Because this example uses dynamic compilation, the `Register` directive for the source file does not need to reference an assembly name; it includes only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="73736-246">在`Button2_Click`方法中，代码访问连接对象，通过<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制，并获取对使用者控件的引用。</span><span class="sxs-lookup"><span data-stu-id="73736-246">In the `Button2_Click` method, the code accesses the connection object through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and gets a reference to the consumer control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-247">加载浏览器中后，使用**显示模式**下拉列表控件，以将页切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-247">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="73736-248">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-248">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-249">使用**连接 web 部件控件**按钮或提供的连接用户界面 (UI) 中，创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-249">Use the **Connect WebPart Controls** button, or the provided connection user interface (UI), to create a connection between the two controls.</span></span> <span data-ttu-id="73736-250">单击**显示使用者信息**按钮以运行演示代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-250">Click the **Display Consumer Info** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="73736-251">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> property is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-251">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> property is zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerConnectionPoint As ConsumerConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ ConsumerConnectionPoint { System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-252">Gets the object that serves as a connection point for a control that is acting as a consumer in a connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-252">Gets the object that serves as a connection point for a control that is acting as a consumer in a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-253">A<see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />与连接中使用者控件关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-253">A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> associated with the consumer control in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-254">用于创建两个连接所需的步骤之一<xref:System.Web.UI.WebControls.WebParts.WebPart>控件是创建每个控件的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-254">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="73736-255">使用者连接点是包含有关如何连接到充当使用者的控件的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="73736-255">The consumer connection point is an object that contains the information about how to connect to the control acting as a consumer.</span></span> <span data-ttu-id="73736-256">在使用者的源代码，一种方法必须标识与`ConnectionConsumer`属性。</span><span class="sxs-lookup"><span data-stu-id="73736-256">In the consumer's source code, one of the methods must be identified with the `ConnectionConsumer` attribute.</span></span> <span data-ttu-id="73736-257"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>与使用者控件关联的对象包含有关方法和属性，包括的方法，在用户界面 (UI) 中使用的显示名称的 ID 的详细信息和哪种类型的接口方法可以检索。</span><span class="sxs-lookup"><span data-stu-id="73736-257">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object that is associated with a consumer control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface the method can retrieve.</span></span> <span data-ttu-id="73736-258">此组的使用者有关的信息，其用于形成连接和了解，接口的类型方法共同形成了使用者连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-258">This set of information about the consumer, its method for forming connections, and the type of interface it understands, collectively forms a consumer connection point.</span></span>  
  
 <span data-ttu-id="73736-259">默认情况下，<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象可连接到仅一个<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>对象一次。</span><span class="sxs-lookup"><span data-stu-id="73736-259">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="73736-260">使用者可以有多个方法标识为可能的使用者连接点，但使用者仅可参与一个连接为使用者 （因此，仅其中一个其使用者连接点可以处于活动状态） 一次。</span><span class="sxs-lookup"><span data-stu-id="73736-260">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="73736-261">与此相反，<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>可以连接到任意数量的<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-261">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="73736-262">可以通过替代来更改此默认行为<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A>属性<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-262">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-263">下面的代码示例演示如何以编程方式使用的<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-263">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="73736-264">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-264">The example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-265">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-265">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-266">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-266">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-267">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-267">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-268">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-268">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-269">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-269">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-270">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-270">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-271">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-271">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-272">下面的代码示例的第二部分是对这两个源代码<xref:System.Web.UI.WebControls.WebParts.WebPart>充当使用者和提供程序连接和用于连接点的接口的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-272">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="73736-273">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-273">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-274">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-274">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-275">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-275">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-276">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-276">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-277">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-277">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-278">下面的代码示例的第三部分是所承载控件并演示如何使用的 Web 页的代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-278">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="73736-279">在`Button1_Click`方法，以形成连接所需的所有对象都创建，包括<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-279">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="73736-280">这些对象传递给<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法才能创建连接。</span><span class="sxs-lookup"><span data-stu-id="73736-280">These objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="73736-281">在`Button2_Click`方法中，代码访问<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>属性并显示点连接的一些详细信息。</span><span class="sxs-lookup"><span data-stu-id="73736-281">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-282">加载浏览器中后，使用**显示模式**下拉列表控件，以将页切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-282">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="73736-283">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-283">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-284">使用**连接 web 部件控件**按钮或提供的连接 UI 中，创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-284">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="73736-285">单击**连接点的详细信息**按钮以运行演示代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-285">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPointID">
      <MemberSignature Language="C#" Value="public string ConsumerConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-286">Gets or sets the property value on a connection that references the ID of the object serving as the consumer connection point for that connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-286">Gets or sets the property value on a connection that references the ID of the object serving as the consumer connection point for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-287">点包含的使用者连接的 ID 的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-287">A string that contains the ID for the consumer connection point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-288">对于在网页上的标记中声明静态连接，开发人员可以指定的使用者连接点将用于通过分配到的值连接`ConsumerConnectionPointID`属性`<asp:webpartconnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-288">For a static connection declared in the markup of a Web page, developers can specify which consumer connection point will be used for the connection by assigning a value to the `ConsumerConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="73736-289">如果值不分配给该属性，<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>使用属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-289">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="73736-290">在创建动态 （编程） 的连接时，通常不应将的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-290">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span> <span data-ttu-id="73736-291">你可以轻松调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件中，将传递给它的使用者和使用者连接点对象，（以及其他必需的参数），而该方法将确定正确的 ID，用于使用者的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-291">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the consumer and consumer connection point objects (along with the other required parameters), and that method determines the correct ID to use for the consumer's connection point.</span></span> <span data-ttu-id="73736-292">同样，如果在断开连接时，你可以调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>方法而无需指定<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-292">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73736-293">当你指定时，可以确定使用者的连接点的 ID<xref:System.Web.UI.WebControls.WebParts.WebPart>或其他服务器控件充当使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-293">The ID of a consumer's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a consumer.</span></span> <span data-ttu-id="73736-294">你必须确定检索的提供者控件或转换器提供的接口的实例的使用者中的方法。</span><span class="sxs-lookup"><span data-stu-id="73736-294">You must identify a method in the consumer that retrieves an instance of an interface furnished by either a provider control or a transformer.</span></span> <span data-ttu-id="73736-295">若要标识的方法，将其与标记`ConnectionConsumer`code 属性。</span><span class="sxs-lookup"><span data-stu-id="73736-295">To identify the method, mark it with the `ConnectionConsumer` code attribute.</span></span> <span data-ttu-id="73736-296">当添加此属性时，你可以添加一个可选的字符串值参数，作为使用者的 ID<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-296">When you add this attribute, you can add an optional string value parameter that serves as an ID for the consumer's <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="73736-297">如果你提供可选的 ID 参数的值，该值将成为的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>连接的属性。</span><span class="sxs-lookup"><span data-stu-id="73736-297">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="73736-298">如果未提供的 ID 值，<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>使用属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-298">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-299">下面的代码示例演示了声明性和以编程方式利用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-299">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="73736-300">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-300">The example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-301">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-301">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-302">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-302">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-303">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-303">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-304">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-304">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-305">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-305">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-306">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-306">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-307">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-307">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-308">下面的代码示例的第二部分是为接口和使用者和提供程序的控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-308">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-309">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-309">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-310">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-310">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-311">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-311">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-312">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-312">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-313">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-313">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-314">下面的代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-314">The third part of the code example is the Web page.</span></span> <span data-ttu-id="73736-315">请注意，在页标记中，声明连接使用`<StaticConnections>`和`<asp:WebPartsConnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-315">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="73736-316">连接声明包含所需`ConsumerConnectionPointID`属性。</span><span class="sxs-lookup"><span data-stu-id="73736-316">The connection declaration includes the required `ConsumerConnectionPointID` attribute.</span></span> <span data-ttu-id="73736-317">用于创建连接的第二个方式出现在`Button1_Click`方法，该代码在其中创建新的连接，使用在使用者控件中定义的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-317">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="73736-318">然后，在`Button2_Click`方法中，代码访问<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-318">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-319">加载浏览器中后，已存在的连接由于在页中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-319">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="73736-320">在提供程序控件中，输入一些文本，并记下它将显示在由于连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-320">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="73736-321">接下来，断开的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-321">Next, disconnect the controls.</span></span> <span data-ttu-id="73736-322">使用**显示模式**下拉列表控件中，切换页后，可以连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-322">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="73736-323">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-323">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-324">单击**断开连接**按钮。</span><span class="sxs-lookup"><span data-stu-id="73736-324">Click the **Disconnect** button.</span></span> <span data-ttu-id="73736-325">使用**连接 web 部件控件**按钮以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-325">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="73736-326">单击**连接点的详细信息**按钮以运行访问代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-326">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span> <span data-ttu-id="73736-327">在控件的下方的标签中情况下，值写出。</span><span class="sxs-lookup"><span data-stu-id="73736-327">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerID">
      <MemberSignature Language="C#" Value="public string ConsumerID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-328">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a consumer for that connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-328">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a consumer for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-329">包含控件充当连接中使用者的 ID 的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-329">A string that contains the ID of the control acting as a consumer in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-330"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>属性值是必需的当你创建之间的连接时<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-330">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value is required when you create a connection between <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-331">如果值未分配给该属性，将引发异常时<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件尝试激活连接。</span><span class="sxs-lookup"><span data-stu-id="73736-331">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-332">下面的代码示例演示了声明性和以编程方式利用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-332">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property.</span></span>  
  
 <span data-ttu-id="73736-333">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-333">The example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-334">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-334">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-335">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-335">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-336">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-336">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-337">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-337">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-338">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-338">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-339">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-339">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-340">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-340">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-341">下面的代码示例的第二部分是为接口和使用者和提供程序的控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-341">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-342">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-342">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-343">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-343">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-344">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-344">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-345">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-345">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-346">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-346">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-347">下面的代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-347">The third part of the code example is the Web page.</span></span> <span data-ttu-id="73736-348">请注意，在页标记中，声明连接使用`<StaticConnections>`和`<asp:WebPartsConnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-348">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="73736-349">连接声明包含所需`ConsumerID`属性。</span><span class="sxs-lookup"><span data-stu-id="73736-349">The connection declaration includes the required `ConsumerID` attribute.</span></span> <span data-ttu-id="73736-350">用于创建连接的第二个方式出现在`Button1_Click`方法，该代码在其中创建新的连接，使用在使用者控件中定义的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-350">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="73736-351">然后，在`Button2_Click`方法中，代码访问的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>属性并将其显示在标签中。</span><span class="sxs-lookup"><span data-stu-id="73736-351">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-352">加载浏览器中后，已存在的连接由于在页中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-352">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="73736-353">在提供程序控件中，输入一些文本，并记下它将显示在由于连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-353">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="73736-354">接下来，断开的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-354">Next, disconnect the controls.</span></span> <span data-ttu-id="73736-355">使用**显示模式**下拉列表控件中，切换页后，可以连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-355">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="73736-356">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-356">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-357">单击**断开连接**按钮。</span><span class="sxs-lookup"><span data-stu-id="73736-357">Click the **Disconnect** button.</span></span> <span data-ttu-id="73736-358">使用**连接 web 部件控件**按钮以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-358">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="73736-359">单击**使用者详细信息**按钮以运行访问代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-359">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-360">Gets or sets the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-360">Gets or sets the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-361">一个字符串，包含的 ID <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-361">A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-362">每个<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象具有唯一值分配给其<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-362">Every <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object has a unique value assigned to its <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span> <span data-ttu-id="73736-363">这是为了确保没有一种方法来区分多个连接。</span><span class="sxs-lookup"><span data-stu-id="73736-363">This is to ensure that there is a way to distinguish between multiple connections.</span></span>  
  
 <span data-ttu-id="73736-364">如果通过声明创建静态连接`<asp:webpartconnection>`元素在网页上，并且你不将值赋给`ID`时，将引发连接异常属性<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件尝试激活连接。</span><span class="sxs-lookup"><span data-stu-id="73736-364">If you create a static connection by declaring an `<asp:webpartconnection>` element in a Web page, and you do not assign a value to the `ID` attribute for the connection, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
 <span data-ttu-id="73736-365">当<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件创建一个新的动态连接时，它调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A>方法来生成连接的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="73736-365">When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control creates a new dynamic connection, it calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> method to generate a unique ID for the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-366">下面的代码示例演示了声明性和以编程方式利用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-366">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span>  
  
 <span data-ttu-id="73736-367">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-367">The example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-368">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-368">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-369">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-369">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-370">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-370">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-371">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-371">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-372">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-372">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-373">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-373">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-374">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-374">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-375">下面的代码示例的第二部分是为接口和使用者和提供程序的控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-375">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-376">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-376">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-377">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-377">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-378">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-378">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-379">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-379">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-380">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-380">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-381">下面的代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-381">The third part of the code example is the Web page.</span></span> <span data-ttu-id="73736-382">请注意，在页标记中，声明连接使用`<StaticConnections>`和`<asp:WebPartsConnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-382">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="73736-383">连接声明包含所需`ID`属性。</span><span class="sxs-lookup"><span data-stu-id="73736-383">The connection declaration includes the required `ID` attribute.</span></span> <span data-ttu-id="73736-384">用于创建连接的第二个方式出现在`Button1_Click`方法，该代码在其中创建新的连接，使用在使用者控件中定义的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-384">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="73736-385">在这里，ID 属性不是必需的因为连接是动态的与<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件分配一个 ID 为的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-385">Here, the ID property is not required, because the connection is dynamic, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns an ID to the connection.</span></span> <span data-ttu-id="73736-386">在`Button2_Click`方法中，代码访问的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>属性并将其显示在标签中。</span><span class="sxs-lookup"><span data-stu-id="73736-386">In the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-387">加载浏览器中后，已存在的连接由于在页中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-387">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="73736-388">在提供程序控件中，输入一些文本，并记下它将显示在由于连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-388">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="73736-389">接下来，断开的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-389">Next, disconnect the controls.</span></span> <span data-ttu-id="73736-390">使用**显示模式**下拉列表控件中，切换页后，可以连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-390">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="73736-391">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-391">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-392">单击**断开连接**按钮。</span><span class="sxs-lookup"><span data-stu-id="73736-392">Click the **Disconnect** button.</span></span> <span data-ttu-id="73736-393">使用**连接 web 部件控件**按钮以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-393">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="73736-394">单击**连接详细信息**按钮以运行访问代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-394">Click the **Connection Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-395">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is currently established and able to exchange data between its provider and consumer controls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-395">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is currently established and able to exchange data between its provider and consumer controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-396">
            <see langword="true" /> 如果连接处于活动状态;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-396">
              <see langword="true" /> if the connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-397"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>属性指示的状态<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-397">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates a state of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="73736-398">此状态连接时，连接中的提供程序和使用者的控件进行通信，并且能够交换通过公共接口的数据或<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-398">When the connection is in this state, the provider and consumer controls in the connection are communicating and able to exchange data through a common interface or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="73736-399">当用户查看呈现的页面，其中包含已建立的连接中正常浏览模式时，则将连接通常 active （除非它无法在加载页面时被激活由于某些冲突或其他问题）。</span><span class="sxs-lookup"><span data-stu-id="73736-399">When a user views a rendered page that includes an established connection in normal browse mode, the connection is typically active (unless it failed to be activated due to some conflict or other issue when the page loaded).</span></span> <span data-ttu-id="73736-400">在页和控件的生命周期的早期阶段，该属性值将`false`。</span><span class="sxs-lookup"><span data-stu-id="73736-400">In the early stages of the page and control life cycle, the property value is `false`.</span></span> <span data-ttu-id="73736-401">该连接将紧后面激活<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>上的事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>引发控件。</span><span class="sxs-lookup"><span data-stu-id="73736-401">The connection is activated just after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is raised.</span></span> <span data-ttu-id="73736-402">具体而言，该连接将激活后使用者是否已从提供程序检索指定的接口的实例或<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-402">Specifically, the connection is activated after the consumer has retrieved an instance of the specified interface from the provider or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="73736-403">它是有助于你了解连接是否处于活动状态的情况下可能出现冲突或由于页上的多个连接的同步问题的位置。</span><span class="sxs-lookup"><span data-stu-id="73736-403">It is useful to know whether a connection is active in situations where there might be conflicts or synchronization issues due to multiple connections on a page.</span></span> <span data-ttu-id="73736-404">例如，如果没有某种类型的两个连接之间的冲突<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件可以选择不激活的多个连接，以避免冲突。</span><span class="sxs-lookup"><span data-stu-id="73736-404">For example, if there is some kind of conflict between two connections, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has the option of not activating one of the connections to avoid the conflict.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-405">下面的代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-405">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property.</span></span>  
  
 <span data-ttu-id="73736-406">该示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-406">The example has three parts:</span></span>  
  
-   <span data-ttu-id="73736-407">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-407">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-408">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-408">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-409">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-409">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-410">下面的代码示例的第一部分是接口，以及使用者和提供程序控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-410">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-411">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-411">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-412">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-412">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-413">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-413">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-414">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-414">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-415">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-415">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-416">下面的代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-416">The second part of the code example is the Web page.</span></span> <span data-ttu-id="73736-417">顶部附近，有`Register`指的是两个动态编译的源代码的指令<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-417">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-418">在中声明静态连接`<StaticConnections>`页面上的元素。</span><span class="sxs-lookup"><span data-stu-id="73736-418">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="73736-419">在`<script>`元素是四个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="73736-419">Within the `<script>` element are four event handlers.</span></span> <span data-ttu-id="73736-420">每个事件处理程序检查的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>属性静态连接，并将消息写入<xref:System.Web.UI.WebControls.Label>，该值指示连接在该状态页和控件的生命周期中是否为活动或非活动的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-420">Each event handler checks the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property on the static connection, and writes a message to the <xref:System.Web.UI.WebControls.Label> control indicating whether the connection is active or inactive at that state of the page and control life cycle.</span></span> <span data-ttu-id="73736-421">此示例演示在哪一时间点连接将变为活动状态，并且，它将保持活动页后面呈现。</span><span class="sxs-lookup"><span data-stu-id="73736-421">This demonstrates at what point the connection becomes active, and that it remains active after the page is rendered.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/wpConnectIsActiveCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/wpConnectIsActiveVB.aspx#1)]  
  
 <span data-ttu-id="73736-422">加载浏览器中的页。</span><span class="sxs-lookup"><span data-stu-id="73736-422">Load the page in a browser.</span></span> <span data-ttu-id="73736-423">已创建静态连接，并且消息已写入显示是否页和控件的生命周期中处于活动状态的不同位置已连接的标签。</span><span class="sxs-lookup"><span data-stu-id="73736-423">The static connection is already created, and messages have already been written to the labels showing whether the connection was active at various points in the page and control life cycle.</span></span> <span data-ttu-id="73736-424">单击**连接详细信息**按钮，然后请注意，此连接不是活动在该点，但连接被重新激活后每次<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>事件，并且，它仍处于活动状态 （会保持操作） 后<xref:System.Web.UI.Control.PreRender>页的事件。</span><span class="sxs-lookup"><span data-stu-id="73736-424">Click the **Connection Details** button, and note that the connection is not active at that point, but that the connection is reactivated each time after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event, and that it is still active (and will remain so) after the <xref:System.Web.UI.Control.PreRender> event of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-425">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is visible to all users or only to the current user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-425">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is visible to all users or only to the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-426">
            <see langword="true" /> 如果连接共享;，否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-426">
              <see langword="true" /> if the connection is shared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-427">个人与<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象可以是共享或每个用户实例。</span><span class="sxs-lookup"><span data-stu-id="73736-427">As with individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object can be a shared or a per-user instance.</span></span> <span data-ttu-id="73736-428">共享的实例表示的连接是可见的网页上，所有用户，每个用户实例表示的连接是只对特定用户可见。</span><span class="sxs-lookup"><span data-stu-id="73736-428">A shared instance means that the connection is visible to all users of a Web page, and a per-user instance means the connection is visible only to a specific user.</span></span>  
  
 <span data-ttu-id="73736-429">一般情况下，连接将会添加到页的方式确定是否共享的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-429">In general, the way a connection is added to a page determines whether the connection is shared.</span></span> <span data-ttu-id="73736-430">如果在 Web 网页、 的标记中声明连接，则共享的连接和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>属性值是`true`。</span><span class="sxs-lookup"><span data-stu-id="73736-430">If the connection is declared in the markup of a Web page, then the connection is shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `true`.</span></span> <span data-ttu-id="73736-431">此外，如果添加连接时，Web 页被共享个性化设置作用域中，连接也会共享。</span><span class="sxs-lookup"><span data-stu-id="73736-431">In addition, if the Web page is in shared personalization scope when a connection is added, the connection is also shared.</span></span> <span data-ttu-id="73736-432">通常情况下，当用户使用`<asp:connectionszone>`用户界面 (UI) 来添加连接时，页上已在用户个性化设置作用域，因此不共享的连接和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>属性值是`false`。</span><span class="sxs-lookup"><span data-stu-id="73736-432">Typically, when a user uses the `<asp:connectionszone>` user interface (UI) to add a connection, the page is in user personalization scope, so the connection is not shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-433">下面的代码示例演示如何以编程方式使用的<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-433">The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property.</span></span>  
  
 <span data-ttu-id="73736-434">此代码示例包括五个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-434">The code example has five parts:</span></span>  
  
-   <span data-ttu-id="73736-435">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-435">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-436">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-436">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-437">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-437">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-438">运行示例所需的 Web.config 文件中的条目。</span><span class="sxs-lookup"><span data-stu-id="73736-438">An entry in the Web.config file that is required to run the example.</span></span>  
  
-   <span data-ttu-id="73736-439">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-439">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-440">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-440">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-441">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-441">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-442">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-442">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-443">下面的代码示例的第二部分是为接口和使用者和提供程序的控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-443">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-444">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-444">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-445">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-445">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-446">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-446">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-447">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-447">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-448">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-448">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-449">下面的代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-449">The third part of the code example is the Web page.</span></span> <span data-ttu-id="73736-450">在`Button2_Click`方法，它会检查<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>的现有连接的属性，并在页上显示结果。</span><span class="sxs-lookup"><span data-stu-id="73736-450">In the `Button2_Click` method, it checks the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property of the existing connection and displays the result on the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-451">代码示例的第四个部分是将运行示例后，若要能够编辑共享个性化设置范围中的页的用户帐户需要的 Web.config 文件中的条目。</span><span class="sxs-lookup"><span data-stu-id="73736-451">The fourth part of the code example is an entry in the Web.config file that is required for the user account that will be running the example to be able to edit the page in shared personalization scope.</span></span> <span data-ttu-id="73736-452">若要启用此功能，必须具有一个条目在 Web.config 文件内`<system.web>`如以下示例所示的部分。</span><span class="sxs-lookup"><span data-stu-id="73736-452">To enable this, you must have an entry in the Web.config file within the `<system.web>` section that looks like the following example.</span></span>  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow users="UserAccount"  
             roles="admin"  
             verbs="enterSharedScope"/>  
    </authorization>            
  </personalization>  
</webParts>  
```  
  
 <span data-ttu-id="73736-453">加载浏览器中后，使用**显示模式**下拉列表控件，以将页切换到连接的显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-453">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect display mode.</span></span> <span data-ttu-id="73736-454">单击**连接 web 部件控件**按钮以形成连接。</span><span class="sxs-lookup"><span data-stu-id="73736-454">Click the **Connect WebPart Controls** button to form a connection.</span></span> <span data-ttu-id="73736-455">接下来，单击**连接详细信息**按钮以显示是否共享的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-455">Next, click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="73736-456">如果你使用默认的用户个性化设置作用域中的页创建连接<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>属性值应为`false`连接。</span><span class="sxs-lookup"><span data-stu-id="73736-456">If you created the connection with the page in the default user personalization scope, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value should be `false` for the connection.</span></span>  
  
 <span data-ttu-id="73736-457">谓词菜单中的其中一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件 （由标题栏中的向下箭头指示），单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-457">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (indicated by the downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="73736-458">连接 UI 出现时，单击**断开连接**按钮终止连接。</span><span class="sxs-lookup"><span data-stu-id="73736-458">When the connection UI appears, click the **Disconnect** button to end the connection.</span></span> <span data-ttu-id="73736-459">使用**显示模式**控件来返回到浏览模式的页。</span><span class="sxs-lookup"><span data-stu-id="73736-459">Use the **Display Mode** control to return the page to browse mode.</span></span>  
  
 <span data-ttu-id="73736-460">在**显示模式**控件中，选择**共享**选项以将页切换到共享个性化设置作用域。</span><span class="sxs-lookup"><span data-stu-id="73736-460">In the **Display Mode** control, select the **Shared** option to switch the page into shared personalization scope.</span></span> <span data-ttu-id="73736-461">请按照与这些上面创建的连接，并再次单击相同的步骤**连接详细信息**按钮以显示是否共享的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-461">Follow the same steps as those above to create a connection, and again click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="73736-462">在此情况下，值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>属性应为`true`。</span><span class="sxs-lookup"><span data-stu-id="73736-462">In this case, the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property should be `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-463">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is declared in the markup of a Web page, or created programmatically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-463">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is declared in the markup of a Web page, or created programmatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-464">
            <see langword="true" /> 如果连接是静态的;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-464">
              <see langword="true" /> if the connection is static; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-465">Web 部件控件之间的连接可以是静态或动态。</span><span class="sxs-lookup"><span data-stu-id="73736-465">Connections between Web Parts controls can be either static or dynamic.</span></span> <span data-ttu-id="73736-466">在网页中，标记中声明静态连接使用`<asp:WebPartConnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-466">A static connection is declared in the markup of a Web page, using an `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="73736-467">以编程方式创建动态连接或当用户创建一个通过由定义的用户界面 (UI) 的连接<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-467">Dynamic connections are created programmatically or when a user creates a connection through the user interface (UI) defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span>  
  
 <span data-ttu-id="73736-468">静态连接都共享的对象，这意味着它们将可供所有用户的网页。</span><span class="sxs-lookup"><span data-stu-id="73736-468">Static connections are shared objects, meaning they are available to all users of the Web page.</span></span> <span data-ttu-id="73736-469">此外，它们是实质上是永久因为，如静态<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，它们不能被永久删除。</span><span class="sxs-lookup"><span data-stu-id="73736-469">Also, they are essentially permanent because, like a static <xref:System.Web.UI.WebControls.WebParts.WebPart> control, they cannot be permanently deleted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73736-470">虽然静态连接对象不能被永久删除，它可以被永久断开。</span><span class="sxs-lookup"><span data-stu-id="73736-470">While a static connection object cannot be permanently deleted, it can be permanently disconnected.</span></span> <span data-ttu-id="73736-471">在这种情况下，断开连接的对象将存在于服务器，但最终用户永远不会注意在页中的对象存在。</span><span class="sxs-lookup"><span data-stu-id="73736-471">In this case, the disconnected object would exist on the server, but an end user would never be aware of the object's existence in a page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-472">下面的代码示例演示如何以编程方式使用的<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-472">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="73736-473">代码示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-473">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="73736-474">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-474">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-475">若要承载控件并运行此代码示例网页。</span><span class="sxs-lookup"><span data-stu-id="73736-475">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-476">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-476">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-477">下面的代码示例的第一部分是接口，以及使用者和提供程序控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-477">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-478">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-478">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-479">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-479">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-480">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-480">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-481">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-481">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-482">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-482">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-483">下面的代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-483">The second part of the code example is the Web page.</span></span> <span data-ttu-id="73736-484">顶部附近，有`Register`指的是两个动态编译的源代码的指令<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-484">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-485">在中声明静态连接`<StaticConnections>`页面上的元素。</span><span class="sxs-lookup"><span data-stu-id="73736-485">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="73736-486">`Button1_Click`方法访问<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>属性检查连接是否为静态字段。</span><span class="sxs-lookup"><span data-stu-id="73736-486">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property to check whether the connection is static.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/wpConnectIsStaticCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/wpConnectIsStaticVB.aspx#1)]  
  
 <span data-ttu-id="73736-487">加载浏览器中的页。</span><span class="sxs-lookup"><span data-stu-id="73736-487">Load the page in a browser.</span></span> <span data-ttu-id="73736-488">已创建静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-488">The static connection is already created.</span></span> <span data-ttu-id="73736-489">在提供程序控件中，输入一些文本，并请注意，在使用者控件中显示的文本。</span><span class="sxs-lookup"><span data-stu-id="73736-489">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="73736-490">单击**连接详细信息**按钮以显示的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-490">Click the **Connection Details** button to display the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Provider { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-491">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that acts as the provider in a Web Parts connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-491">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that acts as the provider in a Web Parts connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-492">A<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />充当数据的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-492">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that acts as the provider of data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-493">每个 Web 部件连接包含两个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件-使用者和提供程序--和<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>属性返回中连接到提供程序控件的引用。</span><span class="sxs-lookup"><span data-stu-id="73736-493">Every Web Parts connection consists of two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls--a consumer and a provider--and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property returns a reference to the provider control in a connection.</span></span>  
  
 <span data-ttu-id="73736-494">连接 （使用者控件） 中其对应项，如提供程序控件需要建立连接。</span><span class="sxs-lookup"><span data-stu-id="73736-494">Like its counterpart in a connection (the consumer control), the provider control is required to establish a connection.</span></span> <span data-ttu-id="73736-495">是否以编程方式，或通过声明以页持久性格式创建连接，你必须指定一个控件，用于充当用于连接的提供程序。</span><span class="sxs-lookup"><span data-stu-id="73736-495">Whether you create the connection programmatically, or by declaring it in page persistence format, you must specify a control to act as the provider for a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-496">下面的代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-496">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 <span data-ttu-id="73736-497">代码示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-497">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="73736-498">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-498">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-499">若要承载控件并运行此代码示例网页。</span><span class="sxs-lookup"><span data-stu-id="73736-499">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-500">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-500">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-501">下面的代码示例的第一部分是接口，以及使用者和提供程序控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-501">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-502">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-502">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-503">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-503">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-504">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-504">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-505">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-505">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-506">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-506">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Provider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Provider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-507">下面的代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-507">The second part of the code example is the Web page.</span></span> <span data-ttu-id="73736-508">顶部附近，有`Register`指的是两个动态编译的源代码的指令<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-508">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-509">在中声明静态连接`<StaticConnections>`页面上的元素。</span><span class="sxs-lookup"><span data-stu-id="73736-509">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="73736-510">请注意，在`<asp:webpartconnection>`元素，`ProviderID`属性具有分配给它的提供者控件的 ID。</span><span class="sxs-lookup"><span data-stu-id="73736-510">Notice that in the `<asp:webpartconnection>` element, the `ProviderID` attribute has the ID of the provider control assigned to it.</span></span> <span data-ttu-id="73736-511">这是标识提供程序的静态连接所需的。</span><span class="sxs-lookup"><span data-stu-id="73736-511">This is required to identify the provider for the static connection.</span></span> <span data-ttu-id="73736-512">`Button1_Click`方法访问<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>属性和一些其详细信息将写入一个标签。</span><span class="sxs-lookup"><span data-stu-id="73736-512">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property and writes some of its details to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Provider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/wpConnectProviderCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Provider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/wpConnectProviderVB.aspx#1)]  
  
 <span data-ttu-id="73736-513">加载浏览器中的页。</span><span class="sxs-lookup"><span data-stu-id="73736-513">Load the page in a browser.</span></span> <span data-ttu-id="73736-514">已创建静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-514">The static connection is already created.</span></span> <span data-ttu-id="73736-515">在提供程序控件中，输入一些文本，并请注意，在使用者控件中显示的文本。</span><span class="sxs-lookup"><span data-stu-id="73736-515">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="73736-516">单击**提供程序详细信息**按钮以显示一些通过访问的属性值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-516">Click the **Provider Details** button to display some of the property values accessed through the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="73736-517">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> property value is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-517">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> property value is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderConnectionPoint As ProviderConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ ProviderConnectionPoint { System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-518">Gets the object that serves as a connection point for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for a connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-518">Gets the object that serves as a connection point for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-519">A<see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />与连接中的提供者控件相关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-519">A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> associated with the provider control in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-520">用于创建两个连接所需的步骤之一<xref:System.Web.UI.WebControls.WebParts.WebPart>控件是创建每个控件的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-520">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="73736-521">提供程序连接点是包含有关如何连接到控件中充当提供程序的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="73736-521">The provider connection point is an object that contains the information about how to connect to the control acting as a provider.</span></span> <span data-ttu-id="73736-522">在提供程序的源代码，一种方法必须标识与`ConnectionProvider`属性。</span><span class="sxs-lookup"><span data-stu-id="73736-522">In the provider's source code, one of the methods must be identified with the `ConnectionProvider` attribute.</span></span> <span data-ttu-id="73736-523"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>即关联控件使用提供程序包含有关方法和属性，包括的方法，在用户界面 (UI) 中使用的显示名称的 ID 的详细信息，哪种类型的接口实例方法可以返回到使用者控件。</span><span class="sxs-lookup"><span data-stu-id="73736-523">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> that is associated with a provider control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface instance the method can return to a consumer control.</span></span> <span data-ttu-id="73736-524">这套有关提供程序的信息，其用于形成方法连接，以及它提供的接口的类型共同形成了提供程序连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-524">This set of information about the provider, its method for forming connections, and the type of interface it provides, collectively forms a provider connection point.</span></span>  
  
 <span data-ttu-id="73736-525">默认情况下，<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>可连接到仅一个<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>对象一次。</span><span class="sxs-lookup"><span data-stu-id="73736-525">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="73736-526">使用者可以有多个方法标识为可能的使用者连接点，但使用者仅可参与一个连接为使用者 （因此，仅其中一个其使用者连接点可以处于活动状态） 一次。</span><span class="sxs-lookup"><span data-stu-id="73736-526">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="73736-527">与此相反，<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>可以连接到任意数量的<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>默认情况下的对象。</span><span class="sxs-lookup"><span data-stu-id="73736-527">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects by default.</span></span> <span data-ttu-id="73736-528">例如，提供的邮政编码的提供程序控件无法连接到使用邮政代码来创建基于邮政编码，如天气数据、 新闻和等等的数据的各种类型的多个使用者控件。</span><span class="sxs-lookup"><span data-stu-id="73736-528">For example, a provider control that provides a postal code could be connected to multiple consumer controls that use a postal code to create various kinds of data based on a postal code, such as weather data, news, and so on.</span></span> <span data-ttu-id="73736-529">可以通过替代来更改此默认行为<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A>属性<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-529">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-530">下面的代码示例演示如何以编程方式使用的<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-530">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="73736-531">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-531">The example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-532">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-532">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-533">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-533">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-534">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-534">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-535">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-535">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-536">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-536">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-537">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-537">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-538">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-538">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-539">下面的代码示例的第二部分是对这两个源代码<xref:System.Web.UI.WebControls.WebParts.WebPart>充当使用者和提供程序连接和用于连接点的接口的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-539">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="73736-540">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-540">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-541">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-541">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-542">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-542">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-543">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-543">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-544">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-544">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-545">下面的代码示例的第三部分是所承载控件并演示如何使用的 Web 页的代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-545">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span> <span data-ttu-id="73736-546">在`Button1_Click`方法，以形成连接所需的所有对象都创建，包括<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-546">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="73736-547">请注意调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-547">Note the call to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="73736-548">各种创建的对象被传递给<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法才能创建连接。</span><span class="sxs-lookup"><span data-stu-id="73736-548">The various created objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="73736-549">在`Button2_Click`方法中，代码访问<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>属性并显示点连接的一些详细信息。</span><span class="sxs-lookup"><span data-stu-id="73736-549">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-550">加载浏览器中后，使用**显示模式**下拉列表控件，以将页切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-550">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="73736-551">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-551">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-552">使用**连接 web 部件控件**按钮或提供的连接 UI 中，创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-552">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="73736-553">单击**连接点的详细信息**按钮以运行演示代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-553">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPointID">
      <MemberSignature Language="C#" Value="public string ProviderConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-554">Gets or sets the property value on a connection that references the ID of the object serving as the provider connection point for that connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-554">Gets or sets the property value on a connection that references the ID of the object serving as the provider connection point for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-555">包含提供程序连接点对象的 ID 的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-555">A string that contains the ID for a provider connection point object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-556">对于在网页上的标记中声明静态连接，开发人员可以指定的提供程序连接点将用于通过分配到的值连接`ProviderConnectionPointID`属性`<asp:webpartconnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-556">For a static connection declared in the markup of a Web page, developers can specify which provider connection point will be used for the connection by assigning a value to the `ProviderConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="73736-557">如果值不分配给该属性，<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>使用属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-557">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="73736-558">在创建动态 （编程） 的连接时，通常不应将的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-558">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span> <span data-ttu-id="73736-559">你可以轻松调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件中，传给该提供程序和提供程序连接点对象，（以及其他必需的参数），而该方法将确定正确的 ID，用于提供程序的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-559">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider and provider connection point objects (along with the other required parameters), and that method determines the correct ID to use for the provider's connection point.</span></span> <span data-ttu-id="73736-560">同样，如果在断开连接时，你可以调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>方法而无需指定<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-560">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73736-561">当你指定时，可以确定的提供程序的连接点的 ID<xref:System.Web.UI.WebControls.WebParts.WebPart>或作为提供程序的其他服务器控件。</span><span class="sxs-lookup"><span data-stu-id="73736-561">The ID of a provider's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a provider.</span></span> <span data-ttu-id="73736-562">你必须标识提供程序都包含数据的使用者的接口的实例中的回调方法。</span><span class="sxs-lookup"><span data-stu-id="73736-562">You must identify a callback method in the provider that serves an instance of an interface containing data to a consumer.</span></span> <span data-ttu-id="73736-563">若要标识的方法，将其与标记`ConnectionProvider`code 属性。</span><span class="sxs-lookup"><span data-stu-id="73736-563">To identify the method, mark it with the `ConnectionProvider` code attribute.</span></span> <span data-ttu-id="73736-564">当添加此属性时，你可以添加可选的字符串值参数，用作提供程序的 ID<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-564">When you add this attribute, you can add an optional string value parameter that serves as an ID for the provider's <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="73736-565">如果你提供可选的 ID 参数的值，该值将成为的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>连接的属性。</span><span class="sxs-lookup"><span data-stu-id="73736-565">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="73736-566">如果未提供的 ID 值，<xref:System.Web.UI.WebControls.WebParts.WebPartManager>创建对象时，控件将分配一个默认 ID。</span><span class="sxs-lookup"><span data-stu-id="73736-566">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns a default ID when the object is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-567">下面的代码示例演示了声明性和以编程方式利用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-567">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="73736-568">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-568">The example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-569">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-569">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-570">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-570">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-571">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-571">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-572">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-572">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-573">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-573">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-574">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-574">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-575">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-575">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-576">下面的代码示例的第二部分是为接口和使用者和提供程序的控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-576">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-577">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-577">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-578">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-578">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-579">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-579">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-580">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-580">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-581">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-581">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-582">下面的代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-582">The third part of the code example is the Web page.</span></span> <span data-ttu-id="73736-583">请注意，在页标记中，声明连接使用`<StaticConnections>`和`<asp:WebPartsConnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-583">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="73736-584">连接声明包含所需`ProviderConnectionPointID`属性。</span><span class="sxs-lookup"><span data-stu-id="73736-584">The connection declaration includes the required `ProviderConnectionPointID` attribute.</span></span> <span data-ttu-id="73736-585">用于创建连接的第二个方式出现在`Button1_Click`方法，其中该代码创建新的连接，使用的连接点 （和 ID） 提供程序在控件中定义。</span><span class="sxs-lookup"><span data-stu-id="73736-585">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point (and the ID) defined in the provider control.</span></span> <span data-ttu-id="73736-586">然后，在`Button2_Click`方法中，代码访问<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-586">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-587">加载浏览器中后，已存在的连接由于在页中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-587">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="73736-588">在提供程序控件中，输入一些文本，并记下它将显示在由于连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-588">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="73736-589">接下来，断开的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-589">Next, disconnect the controls.</span></span> <span data-ttu-id="73736-590">使用**显示模式**下拉列表控件中，切换页后，可以连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-590">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="73736-591">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-591">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-592">单击**断开连接**按钮。</span><span class="sxs-lookup"><span data-stu-id="73736-592">Click the **Disconnect** button.</span></span> <span data-ttu-id="73736-593">使用**连接 web 部件控件**按钮以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-593">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="73736-594">单击**连接点的详细信息**按钮以运行访问代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-594">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span> <span data-ttu-id="73736-595">在控件的下方的标签中情况下，值写出。</span><span class="sxs-lookup"><span data-stu-id="73736-595">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      </Docs>
    </Member>
    <Member MemberName="ProviderID">
      <MemberSignature Language="C#" Value="public string ProviderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-596">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for that connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-596">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-597">包含提供程序控件的 ID 的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-597">A string that contains the ID of the provider control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-598"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>属性值是必需的当您创建两个连接<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-598">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value is required when you create a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-599">如果值未分配给该属性，将引发异常时<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件尝试激活连接。</span><span class="sxs-lookup"><span data-stu-id="73736-599">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-600">下面的代码示例演示了声明性和以编程方式利用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-600">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property.</span></span>  
  
 <span data-ttu-id="73736-601">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-601">The example has four parts:</span></span>  
  
-   <span data-ttu-id="73736-602">用户控件，使你能够更改 Web 部件页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="73736-602">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="73736-603">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-603">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-604">网页上承载的控件和运行的代码示例。</span><span class="sxs-lookup"><span data-stu-id="73736-604">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-605">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-605">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-606">此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="73736-606">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="73736-607">将以下源代码保存到一个.ascx 文件中，将其分配到的文件名称`Src`属性`Register`指令为此用户控件，即托管的 Web 页面顶部附近。</span><span class="sxs-lookup"><span data-stu-id="73736-607">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="73736-608">有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="73736-608">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="73736-609">下面的代码示例的第二部分是为接口和使用者和提供程序的控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-609">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-610">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-610">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-611">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-611">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-612">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-612">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-613">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-613">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-614">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-614">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-615">下面的代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-615">The third part of the code example is the Web page.</span></span> <span data-ttu-id="73736-616">请注意，在页标记中，声明连接使用`<StaticConnections>`和`<asp:WebPartsConnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-616">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="73736-617">连接声明包含所需`ProviderID`属性。</span><span class="sxs-lookup"><span data-stu-id="73736-617">The connection declaration includes the required `ProviderID` attribute.</span></span> <span data-ttu-id="73736-618">用于创建连接的第二个方式出现在`Button1_Click`方法，该代码在其中创建新的连接，使用在使用者控件中定义的连接点。</span><span class="sxs-lookup"><span data-stu-id="73736-618">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="73736-619">然后，在`Button2_Click`方法中，代码访问的值<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>属性并将其显示在标签中。</span><span class="sxs-lookup"><span data-stu-id="73736-619">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="73736-620">加载浏览器中后，已存在的连接由于在页中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-620">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="73736-621">在提供程序控件中，输入一些文本，并记下它将显示在由于连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-621">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="73736-622">接下来，断开的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-622">Next, disconnect the controls.</span></span> <span data-ttu-id="73736-623">为此，请使用**显示模式**下拉列表控件，以将页切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="73736-623">To do that, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="73736-624">单击 （由标题栏中的向下箭头） 之一上的谓词菜单<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="73736-624">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="73736-625">单击**断开连接**按钮和控件断开连接。</span><span class="sxs-lookup"><span data-stu-id="73736-625">Click the **Disconnect** button, and the controls are disconnected.</span></span> <span data-ttu-id="73736-626">接下来，使用**连接 web 部件控件**按钮以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="73736-626">Next, use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="73736-627">单击**使用者详细信息**按钮以运行访问代码<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="73736-627">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73736-628">Overrides the inherited <see cref="M:System.Object.ToString" /> method and returns a short type name for the connection object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-628">Overrides the inherited <see cref="M:System.Object.ToString" /> method and returns a short type name for the connection object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73736-629">A string that contains the short (unqualified) type name of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-629">A string that contains the short (unqualified) type name of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-630">此方法使用主要为方便起见，由控件开发人员。</span><span class="sxs-lookup"><span data-stu-id="73736-630">This method is used mostly for convenience by control designers.</span></span> <span data-ttu-id="73736-631">它可以提高连接对象的显示方式在设计视图中使用较短的类型名，而不是完全限定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="73736-631">It improves how connection objects appear in Design view by using the shorter type name, as opposed to a fully qualified type name.</span></span> <span data-ttu-id="73736-632">但是，该方法可以调用你的代码中的任何点在你想要知道连接对象的类型名称。</span><span class="sxs-lookup"><span data-stu-id="73736-632">However, the method can be called at any point in your code where you want to know the type name of a connection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73736-633">下面的代码示例演示如何调用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>方法返回的短类型名称<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-633">The following code example demonstrates how to call the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to return the short type name of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="73736-634">代码示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="73736-634">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="73736-635">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="73736-635">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="73736-636">若要承载控件并运行此代码示例网页。</span><span class="sxs-lookup"><span data-stu-id="73736-636">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="73736-637">如何运行该示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="73736-637">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="73736-638">下面的代码示例的第一部分是接口，以及使用者和提供程序控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-638">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="73736-639">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-639">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="73736-640">你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="73736-640">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="73736-641">或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。</span><span class="sxs-lookup"><span data-stu-id="73736-641">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="73736-642">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="73736-642">This code example uses dynamic compilation.</span></span> <span data-ttu-id="73736-643">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="73736-643">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ToString#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ToString#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="73736-644">下面的代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="73736-644">The second part of the code example is the Web page.</span></span> <span data-ttu-id="73736-645">顶部附近，有`Register`指的是两个动态编译的源代码的指令<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="73736-645">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="73736-646">在中声明静态连接`<StaticConnections>`页面上的元素。</span><span class="sxs-lookup"><span data-stu-id="73736-646">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="73736-647">`Button1_Click`方法调用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>方法写入标签的连接类型名称。</span><span class="sxs-lookup"><span data-stu-id="73736-647">The `Button1_Click` method calls the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to write the type name of the connection to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ToString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/wpConnectToStringCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ToString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/wpConnectToStringVB.aspx#1)]  
  
 <span data-ttu-id="73736-648">加载浏览器中的页。</span><span class="sxs-lookup"><span data-stu-id="73736-648">Load the page in a browser.</span></span> <span data-ttu-id="73736-649">已创建静态连接。</span><span class="sxs-lookup"><span data-stu-id="73736-649">The static connection is already created.</span></span> <span data-ttu-id="73736-650">在提供程序控件中，输入一些文本，并请注意，在使用者控件中显示的文本。</span><span class="sxs-lookup"><span data-stu-id="73736-650">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="73736-651">单击**连接详细信息**按钮以执行<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="73736-651">Click the **Connection Details** button to execute the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Transformer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformer As WebPartTransformer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformer ^ Transformer { System::Web::UI::WebControls::WebParts::WebPartTransformer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-652">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that is used to transform data between two otherwise incompatible connection points in a Web Parts connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-652">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that is used to transform data between two otherwise incompatible connection points in a Web Parts connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-653">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-653">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</span>
          </span>
          <span data-ttu-id="73736-654">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-654">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-655">在 Web 部件连接中，有两种方法可以在其中连接连接中的提供程序和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="73736-655">In a Web Parts connection, there are two ways in which the provider and consumer controls in the connection can connect.</span></span> <span data-ttu-id="73736-656">它们可以通过其各自直接连接<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>对象和理解的两个控件的接口类型。</span><span class="sxs-lookup"><span data-stu-id="73736-656">They can connect directly, through their respective <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects and an interface type that is understood by both controls.</span></span> <span data-ttu-id="73736-657">或者，如果它们不兼容，它们可以连接间接使用<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>将从提供程序接口实例转换为理解使用者的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="73736-657">Or, if they are incompatible, they can connect indirectly, using a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object that transforms an interface instance from a provider into a type understood by a consumer.</span></span>  
  
 <span data-ttu-id="73736-658">Transformer 需要作为连接的一部分时<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A>属性提供对的引用<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象。</span><span class="sxs-lookup"><span data-stu-id="73736-658">When a transformer is needed as part of a connection, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property provides a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span> <span data-ttu-id="73736-659">您可以通过添加自定义转换器 （或 Web 部件控件集提供的转换器之一） 的标记中添加的连接以声明方式在标记中的 Web 网页、 transformer`<asp:WebPartConnection>`元素。</span><span class="sxs-lookup"><span data-stu-id="73736-659">You can add a transformer for a connection declaratively in the markup of a Web page, by adding a tag for a custom transformer (or one of the transformers provided with the Web Parts control set) within the `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="73736-660">你还可以添加转换器，以编程方式在代码中，创建它的实例，然后调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件创建的连接，并向它传递 transformer 对象以及其他必需的参数。</span><span class="sxs-lookup"><span data-stu-id="73736-660">You can also add a transformer programmatically, creating an instance of it in your code, and calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to create the connection, passing to it the transformer object along with the other required parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Docs>
    </Member>
    <Member MemberName="Transformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformers As WebPartTransformerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ Transformers { System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73736-661">Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects used internally by the Web Parts control set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-661">Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects used internally by the Web Parts control set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73736-662">一个包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> 对象的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73736-662">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> containing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73736-663"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A>属性永远不会适合由开发人员使用。</span><span class="sxs-lookup"><span data-stu-id="73736-663">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is never intended for use by developers.</span></span> <span data-ttu-id="73736-664">若要访问与连接关联的转换器，开发人员应始终使用<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73736-664">To access the transformer associated with a connection, developers should always use the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property.</span></span>  
  
 <span data-ttu-id="73736-665"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A>属性内部由 Web 部件控件集用来启用页开发人员可以声明中的转换器元素`<asp:webpartconnection>`Web 页的标记中的元素。</span><span class="sxs-lookup"><span data-stu-id="73736-665">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is used internally by the Web Parts control set to enable page developers to declare transformer elements within the `<asp:webpartconnection>` element in the markup of a Web page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      </Docs>
    </Member>
  </Members>
</Type>