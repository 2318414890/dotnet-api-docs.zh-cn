<Type Name="WebPartDescription" FullName="System.Web.UI.WebControls.WebParts.WebPartDescription">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c03d3617f18b9ae4ee2b0c5ad84e29a6df48463" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39962918" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebPartDescription" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartDescription extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartDescription" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartDescription" />
  <TypeSignature Language="F#" Value="type WebPartDescription = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的有关信息，该控件无需创建实例即可显示在 Web 部件控件目录中。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.WebParts.WebPart>控件显示在用户可以添加到页面的控件的目录中，需要每个控件的一些基本信息。 例如，它是很有用的标题控件，并输入说明，以便当用户查看目录具有足够的信息来决定是否将控件添加到页面。 但是，目录<xref:System.Web.UI.WebControls.WebParts.WebPart>控件可能包含许多控件，并且如果的实例，它可能会影响应用程序的性能每个<xref:System.Web.UI.WebControls.WebParts.WebPart>必须创建控件以提取要在目录中显示的信息。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> ，以便不需要创建的实例存在的类<xref:System.Web.UI.WebControls.WebParts.WebPart>控件来检索有关控件显示在控件目录中的信息。 在 Web 部件控件集，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象还与各种结合使用<xref:System.Web.UI.WebControls.WebParts.CatalogPart>当页面已在目录中的控件显示模式。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类具有其构造函数，另一个采用两个重载<xref:System.Web.UI.WebControls.WebParts.WebPart>作为参数实例不可用的控件 (<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>构造函数)，和一个接受多个字符串形式表示的控件有关的信息参数 (<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>构造函数)。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类还具有几个属性设计为包含的说明信息<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 下表总结了<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>属性和每个哪些属性对应于在<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
|Description 属性|相关的部件控件属性|  
|--------------------------|-----------------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>|<xref:System.Web.UI.Control.ID%2A>|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>|<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>|  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式使用<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类。 通常，此类主要由 Web 部件控件集，但此代码示例仅演示主要说明属性的基本编程的使用情况。  
  
 代码示例包含四个部分：  
  
-   使用户能够更改的用户控件在网页上显示模式。  
  
-   自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
-   Web 页面以承载其他控件。  
  
-   代码示例的工作原理的说明。  
  
 代码示例的第一部分是用户控件。 用户控件的源代码来自另一个主题。 有关用户控件的更多详细信息，请参阅主题[演练： 在 Web 部件页上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_WebPartDescription_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_WebPartDescription_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 代码示例的第二部分是一个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 若要运行的代码示例，必须编译此源代码。 可以显式对其进行编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在你网站的 App_Code 文件夹中，其中它将被动态编译在运行时。 此代码示例使用动态编译的方法。 有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartDescription_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/textdisplaywebpart.vb#3)]  
  
 代码示例的第三部分是 Web 页。 顶部附近是两个`Register`指令： 注册用户控件，另一个用于注册自定义的其中一个<xref:System.Web.UI.WebControls.WebParts.WebPart>其源文件位于您的网站的 App_Code 文件夹中的控件。 该页面包含`<asp:catalogzone>`元素，它又包含对两个控件的声明性引用： 自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件命名为`TextDisplayWebPart`，和一个<xref:System.Web.UI.WebControls.BulletedList>Web 服务器控件，将被视为<xref:System.Web.UI.WebControls.WebParts.WebPart>在运行控件时间，因为<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件将其与包装<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象。 请注意，在的代码`Button1_Click`方法，可用<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象的<xref:System.Web.UI.WebControls.WebParts.WebPart>使用目录中的控件进行检索<xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A>方法，然后说明详细信息被所有写出到页面。  
  
 [!code-aspx-csharp[WebParts_WebPartDescription_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartDescription_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#1)]  
  
 加载浏览器中的页面后，使用**显示模式**下拉列表控件，然后选择**目录**页切换到目录显示模式。 在目录中，您应看到两个可用于添加到页面的控件。 单击**列表 web 部件说明信息**按钮，然后代码写出的所有可用值<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>到页的对象。 此示例演示您可以检索说明详细信息<xref:System.Web.UI.WebControls.WebParts.WebPart>而无需创建控件本身的实例的目录中的控件。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化包含特定 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件有关信息的类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关重载<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>构造函数都返回的新实例<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类，其中包含有关特定信息<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 重载之间的区别是在其中创建新的实例的方案。 在某些情况下，当应用程序具有的可用实例时<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>使用构造函数。 当应用程序没有控件实例时要通过导入控件说明文件都是如此<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控件，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>使用构造函数。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartDescription (System.Web.UI.WebControls.WebParts.WebPart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.WebPart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (part As WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartDescription(System::Web::UI::WebControls::WebParts::WebPart ^ part);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartDescription : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPartDescription" Usage="new System.Web.UI.WebControls.WebParts.WebPartDescription part" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="part" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="part">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件，其信息包含在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 中。</param>
        <summary>如果 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件实例可用，则初始化类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>构造函数用于创建一个新<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象上的现有基于<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 此构造函数只需调用另一个重载<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>构造函数中上, 获取所需的参数值从属性`part`参数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="part" /> 的 <see cref="P:System.Web.UI.Control.ID" /> 属性为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartDescription (string id, string title, string description, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string title, string description, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, title As String, description As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartDescription(System::String ^ id, System::String ^ title, System::String ^ description, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartDescription : string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.WebPartDescription" Usage="new System.Web.UI.WebControls.WebParts.WebPartDescription (id, title, description, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要分配给 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID" /> 的值。</param>
        <param name="title">要分配给 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Title" /> 的值。</param>
        <param name="description">要分配给 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Description" /> 的值。</param>
        <param name="imageUrl">要分配给 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" /> 的值。</param>
        <summary>使用几个包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件说明信息的字符串初始化类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>构造函数用于创建的新实例<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类时<xref:System.Web.UI.WebControls.WebParts.WebPart>控件不可用。 例如，发生这种情况的情况下<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制导入的描述文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 获取创建所需的信息<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>直接从说明文件中，对象和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>实例不存在。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> 或 <paramref name="title" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 URL，该 URL 包含用作 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件图标的图像的路径。</summary>
        <value>包含 URL 的字符串；默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>属性直接对应于<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=nameWithType>属性。 如果在设置该属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，则该属性在相应<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象还具有一个值。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>页面时才在目录显示模式下，应用的属性和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件要显示在控件目录。 如果控件具有分配给它的属性值中的图标，图标显示在控件旁边的目录。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式使用<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>属性。 运行此代码示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类概述主题。  
  
 下面的代码中`Button1_Click`Web 页的方法演示如何获取的集合<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>在目录中使用的对象<xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A>方法，然后显示每个详细信息<xref:System.Web.UI.WebControls.WebParts.WebPart>通过循环在目录中的控件通过<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象。 请注意，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>在下面的代码检索属性值。  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的说明文本。</summary>
        <value>包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件说明的字符串；默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>属性直接对应于<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=nameWithType>属性。 如果在设置该属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，则该属性在相应<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象还具有一个值。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>页面时才在目录显示模式下，应用的属性和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件要显示在控件目录。 如果控件具有分配给它的说明，该描述显示在目录中为该控件上的工具提示。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式使用<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>属性。 运行此代码示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类概述主题。  
  
 下面的代码中`Button1_Click`Web 页的方法演示如何获取的集合<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>在目录中使用的对象<xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A>方法，然后显示每个详细信息<xref:System.Web.UI.WebControls.WebParts.WebPart>通过循环在目录中的控件通过<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象。 请注意，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>在下面的代码检索属性值。  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取相应 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的 ID。</summary>
        <value>包含控件 ID 的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>属性不能为`null`; 它必须始终具有值。 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>属性直接对应于<xref:System.Web.UI.Control.ID%2A?displayProperty=nameWithType>属性。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>页面时才在目录显示模式下，应用的属性和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件要显示在控件目录。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式使用<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>属性。 运行此代码示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类概述主题。  
  
 下面的代码中`Button1_Click`Web 页的方法演示如何获取的集合<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>在目录中使用的对象<xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A>方法，然后显示每个详细信息<xref:System.Web.UI.WebControls.WebParts.WebPart>通过循环在目录中的控件通过<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象。 请注意，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>在下面的代码检索属性值。  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Title" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Title : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取相应 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的标题文本。</summary>
        <value>字符串，包含相应控件的标题。 默认值是一个计算出的字符串，由 .NET Framework 提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>属性直接对应于<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=nameWithType>属性。 任何对应<xref:System.Web.UI.WebControls.WebParts.WebPart>控件具有为其<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>属性的值变得<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>属性; 否则，标题是计算得出的值。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>页面时才在目录显示模式下，应用的属性和一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件要显示在控件目录。 无论标题分配给<xref:System.Web.UI.WebControls.WebParts.WebPart>目录中的控件旁边显示的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式使用<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>属性。 运行此代码示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>类概述主题。  
  
 下面的代码中`Button1_Click`Web 页的方法演示如何获取的集合<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>在目录中使用的对象<xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A>方法，然后显示每个详细信息<xref:System.Web.UI.WebControls.WebParts.WebPart>通过循环在目录中的控件通过<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象。 请注意，<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>在下面的代码检索属性值。  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
  </Members>
</Type>