<Type Name="DeclarativeCatalogPart" FullName="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65b5bbe0dde3600105120339623142d8f75015d8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591291" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DeclarativeCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DeclarativeCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DeclarativeCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class DeclarativeCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>支持开发人员将 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 目录或其他服务器控件添加到声明性、页持久性格式的网页中。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 就像 Web 部件控件集内有面向工具的区域 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.ToolZone>类概述)，有工具面向<xref:System.Web.UI.WebControls.WebParts.Part>控件和每个控件必须驻留在工具区域的特定类型。 Web 部件控件集内的面向工具的一部分控件具有两个显著特征：  
  
-   它们是启用最终用户在 Web 部件页面上的控件进行个性化设置的帮助器控件。  
  
-   它们是仅在某些显示模式中可见。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 是必须驻留在一个部分的控件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>键入的区域，如<xref:System.Web.UI.WebControls.WebParts.CatalogZone>Web 部件控件集提供的区域。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件变为可见网页时才在目录的显示模式。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件提供了开发人员能够以声明方式将一组服务器控件添加到网页上目录的方法。 目录，在 Web 部件控件集，只是在列表的<xref:System.Web.UI.WebControls.WebParts.WebPart>或在目录页处于时显示其他服务器控件显示模式。 用户可以从列表中选择控件，并将它们添加到网页，这有效地使用户能够更改的控件和在页面上的功能集。  
  
> [!NOTE]
>  用户可以在目录中添加到网页上同一个控件中的多个实例。  
  
 使用的一个优点<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件创建的服务器控件目录是它不需要编写任何代码。 页开发人员可以使用完全在声明性的控件 （或页持久性） 格式，因此控件的名称。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件有一个有用的属性，允许开发人员设置可以在整个站点使用的控件目录。 而不是声明内的单个服务器控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件，开发人员可设置<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性值设置为包含应在目录中的服务器控件的列表的用户控件的路径。 在运行时，引用在用户控件中的服务器控件在目录中加载。 这种方式，多个页或站点无法引用相同的用户控件，来创建目录。 当更新的服务器控件的用户控件的列表时，它将更新基于用户控件的所有目录。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类具有多个重写继承的属性的公共属性。 这些属性的大多数实际上不用于为呈现控件;重写，则仅以便特殊代码可以将属性设置对它们以类似的设计工具中隐藏这些[!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]。 你不应使用这些隐藏的属性，因为它们不具有呈现任何影响。 它们隐藏的智能感知和 Visual Studio 中的属性窗格中的事实可帮助避免错误地使用它们的开发人员。 在其各自的帮助主题中，这种情况下注明了这些隐藏的所有属性。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类还具有几种方法。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法检索<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>每个对象<xref:System.Web.UI.WebControls.WebParts.WebPart>在目录中，这样的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件来显示有关每个服务器控件的信息，而无需创建它的实例。 另一个方法是<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A>方法。 此方法获取的特定实例<xref:System.Web.UI.WebControls.WebParts.WebPart>基于传递给方法的说明的控制。  
  
> [!NOTE]
>  若要提高可访问性，<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件呈现在`<fieldset>`元素。 `<fieldset>`元素进行分组的相关中用于编辑的控件集<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，以及它可以简化这些控件之间的选项卡式的导航，可视用户代理 （如普通 Web 浏览器） 和面向语音的用户代理 （如屏幕阅读软件）。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>以声明方式在网页上的控件。 该示例包含四个部分：  
  
-   一个用户控件，使你能够更改 Web 部件页面上的显示模式。  
  
-   网页包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件和<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件。  
  
-   源代码文件包含两个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
-   该示例的工作原理时加载浏览器中说明。  
  
 此代码示例的第一部分是使你能够更改页面上的显示模式的用户控件。 有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 下面的代码示例的第二部分是网页。 在页面顶部是两个卡`Register`指令、 用户控件和已编译包含两个自定义的组件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 请注意，该页有以声明方式引用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件，嵌套在适当的层次结构的声明性的元素，如本主题的备注部分中所述。 `<asp:declarativecatalogpart>`元素包含`<webpartstemplate>`元素，其中又包含引用标准 ASP.NET<xref:System.Web.UI.WebControls.Calendar>控制和两个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控制; 这些是用户可以从目录选择的控件。 此页还包含编辑功能，与<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>控件在页中声明。 此控件使用户能够编辑自定义某些属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控制它们已添加到页上后之后用户已切换页后，可以编辑模式。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/declarativeCatalogPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/declarativeCatalogPartVB.aspx#1)]  
  
 下面的代码示例的第三部分是对这两个源代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 请注意，这些控件的某些属性标记有`WebBrowsable`属性。 这使<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>控件为了让用户能够编辑这些属性，当控件处于编辑模式中动态生成的用户界面 (UI)。 属性也会标记与`WebDisplayName`特性，来指定的编辑 UI 中每个控件旁边显示的标签文本。  
  
 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 当加载浏览器中时，选择**目录模式**中**显示模式**下拉列表控件，以切换到目录模式。 在目录模式下，你可以查看可供添加到页面的控件。 添加所有三个控件，以及如何将**显示模式**下拉列表来返回到浏览模式的页。 这三个控件显示的页上。 如果你使用**显示模式**下拉列表和交换机页后，可以编辑模式，你可以单击的标题栏中的谓词菜单 （向下箭头）**用户信息 web 部件**控件，，然后单击**编辑**编辑该控件。 编辑 UI 可见时，你可以看到<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>控件。 请注意，控件呈现为每个属性的`UserInfoWebPart`类了标记有`WebBrowsable`属性。 如果在编辑 UI 和单击进行某些更改时**应用**按钮，你可以使用**显示模式**下拉列表，以返回页后，可以浏览模式，然后查看编辑更改的完整效果。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeclarativeCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeclarativeCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.%23ctor%2A>构造函数是默认值; 没有构造函数声明中<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类，因此没有特殊的任务不会执行创建类的新实例时。 .NET Framework 内部使用构造函数来创建类的实例。  
  
 很有可能，但可能性不大，需要使用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.%23ctor%2A>构造函数以编程方式在你自己的代码。 控件的预期的用途是供网页开发人员将其添加到页面以声明方式在设计时。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public override string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在呈现 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件时，Web 部件控件集不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>表示键盘键的字符串，用于控件的快速键盘导航。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>用于控件背景色的 <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public override string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在呈现 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件时，Web 部件控件集不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>包含图像 URL 的字符串，该图像用作控件背景。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.BackImageUrl%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.BackImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />，用作控件四周的边框颜色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.BorderStyle" />，确定控件的边框类型和标题显示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" />，确定控件四周的边框宽度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public override string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个字符串，包含用于为控件分配样式属性的级联样式表 (CSS) 类的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.CssClass" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个字符串，它包含用作控件默认按钮的 <see cref="T:System.Web.UI.WebControls.Button" /> 控件的 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.DefaultButton%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ContentDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ContentDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ContentDirection Direction { System::Web::UI::WebControls::ContentDirection get(); void set(System::Web::UI::WebControls::ContentDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContentDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.ContentDirection" />，指示控件中内容的流动方向。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.Direction%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.Direction" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个布尔值，指示控件当前已启用还是已禁用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个布尔值，指示控件是否可以使用主题。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置属性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.FontInfo" />，指示控件内容使用的字体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Font%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>确定控件前景色的 <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回目录中可用 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的说明的集合。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />，它包含目录中每个控件的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法提供一个实现抽象的基方法声明中<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法返回目录中的每个控件的说明信息。 A<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象是包含有关的基本信息的对象<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，包括其 ID，对该控件，并继承自的几个重要属性的值的对象引用<xref:System.Web.UI.WebControls.WebParts.Part>类，如<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>和<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法可以提高性能。 创建目录时，它需要包含，包括标题、 说明、 一个图标 （如果存在） 和一个 id。 每个控件有关的一些信息 而不是无需创建要获取此信息，每个控件实例<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域创建一个目录调用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法对于每个控件的目录，并调用将返回仅的说明信息控件。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 方法。 此示例具有四个部分：  
  
-   一个用户控件，使你能够更改 Web 部件页面上的显示模式。  
  
-   源代码文件包含两个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
-   网页包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件和<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>引用多个服务器控件的控件。 该页还包含调用的事件处理代码<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法。  
  
-   该示例的工作原理时加载浏览器中说明。  
  
 此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。 有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 下面的代码示例的第二部分是两个自定义的源代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 该示例的第三个部分是包含的 Web 页<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件。 请注意，`Button1_Click`方法调用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法中，包含的说明<xref:System.Web.UI.WebControls.WebParts.WebPart>控制在目录中，并写出到标签的详细信息。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/declarativeCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/declarativeCatalogPart_GetVB.aspx#1)]  
  
 当加载浏览器中时，选择**目录模式**中**显示模式**下拉列表控件，以切换到目录模式。 在目录模式下，你可以查看可供添加到页面的控件。 你可以单击**显示 web 部件说明**按钮以在目录中的控件有关的详细信息写入标签。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />，包含控件的详细信息。</param>
        <summary>根据传入方法的说明值，返回对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的引用。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件，它的说明与 <paramref name="description" /> 中的值匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A>方法返回对引用<xref:System.Web.UI.WebControls.WebParts.WebPart>其说明详细信息匹配的值的控件<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象传递给方法。 通常情况下，此方法使用连同<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法，用于检索在目录中的所有控件的说明。 单个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件然后可以检索或操作根据需要通过传递单个<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象添加到<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A>方法。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A> 方法。 此示例具有四个部分：  
  
-   一个用户控件，使你能够更改 Web 部件页面上的显示模式。  
  
-   源代码文件包含两个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
-   网页包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件和<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>引用多个服务器控件的控件。 该页还包含调用的事件处理代码<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A>方法。  
  
-   该示例的工作原理时加载浏览器中说明。  
  
 此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。 有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 下面的代码示例的第二部分是两个自定义的源代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 该示例的第三个部分是包含的 Web 页<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件。 请注意，`Button2_Click`方法获取的说明<xref:System.Web.UI.WebControls.WebParts.WebPart>在目录中，调用控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A>方法来检索与匹配的第三个控件的集合中的说明，然后将添加到该控件的控件页。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/declarativeCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/declarativeCatalogPart_GetVB.aspx#1)]  
  
 当加载浏览器中时，选择**目录模式**中**显示模式**下拉列表控件，以切换到目录模式。 在目录模式下，你可以查看可供添加到页面的控件。 如果你单击**添加 TextDisplayWebPart**按钮，该控件添加到页面上，而无需将其添加通过正常的目录用户界面 (UI)。 使用**显示模式**下拉列表来返回到正常浏览模式的页; 上添加页上可见的控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="Description" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="Description" /> 不是可用的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 实例。</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupingText">
      <MemberSignature Language="C#" Value="public override string GroupingText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupingText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GroupingText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GroupingText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个字符串，包含控件中分组子控件部分上部的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.GroupingText%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.GroupingText" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>指示控件高度的 <see cref="T:System.Web.UI.WebControls.Unit" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Height%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />，指示呈现控件时使用的水平对齐类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.HorizontalAlign%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ScrollBars ScrollBars { System::Web::UI::WebControls::ScrollBars get(); void set(System::Web::UI::WebControls::ScrollBars value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>控件中使用的 <see cref="T:System.Web.UI.WebControls.ScrollBars" />（如果需要）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.ScrollBars%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>包含控件外观 ID 的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置属性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public override short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>short 类型的数字，用作此控件的 Tab 键顺序索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在控件标题栏中显示的标题。</summary>
        <value>用作控件标题的字符串。 默认值是 Web 部件控件集提供的、计算出的控件名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title%2A>的标题栏中显示属性值<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制在目录模式可见控件时。 当控件被声明在页中时，你可以通过使用设置属性的值`Title`属性。 如果未提供标题的值，特定于区域性的默认值用于描述此控件允许用户编辑的属性的类型。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式使用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title%2A>属性。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类概述。  
  
 此示例演示如何设置<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title%2A>声明性的标记中的控件上的属性。 如果你未设置属性，或分配了一个空字符串 ("")，提供默认标题。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/declarativeCatalogPartCS.aspx#2)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/declarativeCatalogPartVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public override string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>包含工具提示内容的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>指示控件是否可见的布尔值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.Control.Visible%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="WebPartsListUserControlPath">
      <MemberSignature Language="C#" Value="public string WebPartsListUserControlPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebPartsListUserControlPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath" />
      <MemberSignature Language="VB.NET" Value="Public Property WebPartsListUserControlPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WebPartsListUserControlPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UserControlFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用户控件的路径，该控件包含用于该目录的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或其他服务器控件的列表。</summary>
        <value>带有用户控件路径的字符串，该控件包含一组 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或服务器控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性使开发人员能够指定到用户控件中包含的一组路径<xref:System.Web.UI.WebControls.WebParts.WebPart>或可以添加到其他服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。 如果用户控件的有效路径分配给此属性，控件将自动添加到该目录在编译时。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性可能非常有用，因为它提供一种方法来打包并在许多不同的页或站点间重复使用一组可用的控件。 而不是手动声明每个页面都想要提供目录的目录中每个控件，开发人员可以使用此属性指向引用到的一个整个组的用户控件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 此外，<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性可用于沿<xref:System.Web.UI.WebControls.WebParts.WebPart>显式声明内的控件`<asp:declarativecatalogpart>`在网页上的元素。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性以声明方式和以编程方式。 此示例具有五个部分：  
  
-   一个用户控件，使你能够更改 Web 部件页面上的显示模式。  
  
-   源代码文件包含两个自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
-   包含对自定义的引用的另一个用户控件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并通过引用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>在网页上的属性。  
  
-   网页包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件和<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>引用包含自定义控件的用户控件的控件。  
  
-   该示例的工作原理时加载浏览器中说明。  
  
 此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。 有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_WebPartsList#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/DisplayModeMenuVB.ascx#7)]  
  
 下面的代码示例的第二部分是两个自定义的源代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_WebPartsList#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/userinfowebpart.vb#6)]  
  
 下面的代码示例的第三部分是包含自定义用户控件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并通过引用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/WebUserControlCS.ascx#5)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_WebPartsList#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/WebUserControlVB.ascx#5)]  
  
 该示例的第四个部分是包含的 Web 页<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件。 请注意，<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性是以声明方式设置页的标记; 当用户单击目录的显示模式页面时公开的按钮的属性值可进行设置还以编程方式。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/declarativeCatalogPart_UserControlListCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_WebPartsList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/declarativeCatalogPart_UserControlListVB.aspx#1)]  
  
 当加载浏览器中时，选择**目录模式**中**显示模式**下拉列表控件，以切换到目录模式。 在目录模式下，你可以查看可供添加到页面的控件。 单击**更新 WebPartsListUserControlPath 属性**按钮，而无需在文本框中输入一个值。 请注意，使用空字符串 ("") 分配给属性，会更新该目录并仅显式声明在页中的控件保持在目录中。 如果你键入的名称包含的用户控件<xref:System.Web.UI.WebControls.WebParts.WebPart>文本框中，然后单击中的控件**更新 WebPartsListUserControlPath 属性**按钮再次，<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性现在指向用户控件同样，和其他<xref:System.Web.UI.WebControls.WebParts.WebPart>控件重新出现在目录中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate WebPartsTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate WebPartsTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property WebPartsTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ WebPartsTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对包含在目录中声明的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的模板的引用。</summary>
        <value>包含在目录中声明的控件的 <see cref="T:System.Web.UI.ITemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate%2A>属性引用包含控件在网页上声明为目录的一部分的模板。 中的声明性元素的层次结构中<xref:System.Web.UI.WebControls.WebParts.CatalogZone>区域，<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate%2A>属性都由`<webpartstemplate>`元素，它是子元素的`<asp:declarativecatalogpart>`元素，并且包含中的所有显式声明的服务器控件目录。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式使用<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate%2A>属性。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类概述。  
  
 此代码演示如何插入`<webpartstemplate>`中的元素`<asp:declarativecatalogpart>`声明性的标记中的元素。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/declarativeCatalogPartCS.aspx#2)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/declarativeCatalogPartVB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个指示控件宽度的 <see cref="T:System.Web.UI.WebControls.Unit" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.WebControl.Width%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public override bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 重写该属性仅仅是为了避免它在 [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 设计器工具中出现。</summary>
        <value>一个布尔值，指示控件中较长的行是否可以换行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap%2A>属性，作为的成员<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制，则不使用的 Web 部件控件集来呈现该控件中的任意位置。 因此，不应使用此属性;将其设置不起上呈现。  
  
 若要防止开发人员使用此属性，代码特性设置在其上为在 Visual Studio 中隐藏它。 当你处理的<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>Visual Studio 中的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap%2A>属性不是在属性窗格或 IntelliSense 中可见。  
  
 如果你想要使用此属性，你需要创建自定义类继承自<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。 自定义的类可以使用继承<xref:System.Web.UI.WebControls.Panel.Wrap%2A>属性作为它，或重写此方法并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.Wrap" />
      </Docs>
    </Member>
  </Members>
</Type>