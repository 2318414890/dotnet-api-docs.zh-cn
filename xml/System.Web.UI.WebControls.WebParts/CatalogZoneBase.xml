<Type Name="CatalogZoneBase" FullName="System.Web.UI.WebControls.WebParts.CatalogZoneBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41a7ff4ad5c113b46ec20581057bf30c19c99c1d" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59351574" /></Metadata><TypeSignature Language="C#" Value="public abstract class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CatalogZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CatalogZoneBase&#xA;Inherits ToolZone&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type CatalogZoneBase = class&#xA;    inherit ToolZone&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>用作充当目录的所有区域控件的基类。 目录包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的列表，用户可将这些控件添加到网页。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类是继承自基类<xref:System.Web.UI.WebControls.WebParts.ToolZone>类。 它的派生区域提供了一组基本的行为。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类提供了唯一的用户界面 (UI)，使用户能够添加<xref:System.Web.UI.WebControls.WebParts.WebPart>控件和其他服务器控件添加到网页。 从派生的控件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类，如<xref:System.Web.UI.WebControls.WebParts.CatalogZone>，是实际放置在网页的控件。 它们可充当其他控件，名为的容器<xref:System.Web.UI.WebControls.WebParts.CatalogPart>创建列表的用户添加到页面的服务器控件的控件。 派生的区域<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类可以显示页面时才显示模式下显示目录。  
  
> [!NOTE]
>  一个<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域只能包含<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，并与之相反，<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件只能位于<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域。  
  
 将服务器控件添加到目录的机制是从基类派生的三个控件的下面一<xref:System.Web.UI.WebControls.WebParts.CatalogPart>类。  
  
|控件|描述|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|维护对已关闭的页的控件的引用。 这些控件可以由用户重新打开 （添加的回页面）。|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|包含对在 Web 页的标记中的 Web 部件目录中声明的控件的引用。 这些控件可以由用户添加到 Web 页。|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|提供用户界面，用户可以将定义文件上传到目录，以便该控件可以添加到 Web 页。 定义文件是 XML 文件。导入设置控件的 web 部件文件名称扩展。 可以导入定义文件之前，控件必须在服务器上存在。|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类具有多个可用于显示的目录的属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>属性引用的谓词可将所选的控件从目录添加到页上，而<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>属性引用的谓词可关闭目录，并返回要浏览模式的页面的显示模式。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性引用的所有集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中的控件。 多个面向文本的属性，如<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>，和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>，重写基属性，以提供适用于目录的默认文本。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>属性包含允许用户选择一个控件，控件的区域将添加到下拉列表控件旁边的文本。  
  
 多个其他属性都包含在<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性是当前所选的唯一字符串标识符<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>属性指示是否显示可通过设置与控件关联的图标<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>属性上的<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>属性包含的链接的样式特性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>当前未选区域中的控件。 与此相反，<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>属性包含的链接的样式特性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>用户当前选定的区域中的控件。  
  
 除了属性外，还有一些方法在<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类，除了标准的事件处理和呈现方法继承自其他基控件，经过专门设计用于处理的目录控件。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>方法创建 chrome （即外围 UI 元素，如边框、 谓词、 图标和标题） 环绕每个<xref:System.Web.UI.WebControls.WebParts.CatalogPart>在区域中的控件，它还会为控件呈现。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法是一个抽象方法，派生的类重写它创建的所有实例<xref:System.Web.UI.WebControls.WebParts.CatalogPart>该区域中包含的控件。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>如果可以由派生类调用方法的集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件中以编程方式由于某种原因和派生的类的区域更改需要重新创建集合。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>方法加载以前就存在对应的复选框状态旁边<xref:System.Web.UI.WebControls.WebParts.WebPart>控件在目录中，每当页面回发到服务器; 相反，<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A>方法保存的复选框的状态。 最后，<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>方法提供了有关每个链接的所有呈现<xref:System.Web.UI.WebControls.WebParts.CatalogPart>该区域中包含的控件。  
  
   
  
## Examples  
 下面的代码示例演示了几个声明性，并以编程方式使用的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类。 因为此类是抽象的这些代码示例使用的派生<xref:System.Web.UI.WebControls.WebParts.CatalogZone>附带了 Web 部件控件集，演示的属性和它所继承的方法的类<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类。  
  
 代码示例包含四个部分：  
  
-   使你能够更改的用户控件在网页上显示模式。  
  
-   包含对引用的网页<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件，并演示如何使用某些键的一些代码<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类成员。  
  
-   自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>添加到自定义控件，<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件。  
  
-   在浏览器中的示例工作原理的说明。  
  
 此代码示例的第一个部分是使你能够更改页面上的显示模式的用户控件。 有关详细信息显示在此控件模式和对源代码的说明，请参见[演练：更改显示模式同时适用于 Web 部件页](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/displaymodemenucs.ascx#8)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/displaymodemenuvb.ascx#8)]  
  
 代码示例的第二部分是一个网页，其中包含声明性引用<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控件。 页面顶部附近是两个`Register`指令-一个用户控件，一个用于自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 请注意，下面`<asp:WebPartZone>`元素是`<asp: CatalogZone>`元素，其中包含对自定义的声明性引用<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并向 ASP.NET<xref:System.Web.UI.WebControls.Calendar>控件。 此外提供了不同的标记的区域，并设置属性以确定其外观和行为。 之间`<script>`页中的标记为各种事件处理代码时，其中大多数演示各种编程的使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>成员。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#1)]  
  
 代码示例的第三个部分是自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>名为控件`TextDisplayWebPart`。 在该区域中声明和最终用户可以将其添加目录中的页。 若要运行的代码示例，必须编译此源代码。 可以显式对其进行编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在你网站的 App_Code 文件夹中，其中它将被动态编译在运行时。 这两种方法编译的演示，请参阅[演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/textdisplaywebpart.vb#9)]  
  
 请注意，对于代码示例正常工作，必须在 Web.config 文件，以使导出 Web 部件说明文件中添加的设置。 确保您有 Web 页所在的目录中为此代码示例的 Web.config 文件。 内`<system.web>`部分中，请确保有`<webParts>`具有元素`enableExport`属性设置为`true`，如以下标记。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表框中，若要切换到目录显示模式。 声明性和编程时是可见的目录，可以看到的两个服务器控件，可以从目录添加到页上，并且你可能还注意在 UI 中的效果的使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类成员。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>如果你想要开发一个自定义区域，以便承载<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控件，您必须确定您是否想要提供区域模板支持。 在区域模板创建的实现的类型<see cref="T:System.Web.UI.ITemplate" />接口，并且如果你想要启用页面开发人员能够使用自定义区域来引用是必需的<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />您 Web 页的声明性标记中的区域中的控件。 如果您需要区域模板支持，则应从继承<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />类。 与此相反，如果自定义区域并将其<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控件要用作独立的并将不带任何选项的页面开发人员在区域模板中，以声明方式指定控件以编程方式创建它们，然后您可以直接继承从<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />类。 如果继承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />类，必须重写<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />方法，并添加<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />或你想对你目录中其他服务器控件<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />对象。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CatalogZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CatalogZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化该类供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始化派生的类，如时调用的构造函数<xref:System.Web.UI.WebControls.WebParts.CatalogZone>Web 部件控件集提供的类。 基<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.%23ctor%2A>构造函数可帮助准备页后，可以显示 Web 部件目录用户界面 (UI) 中，通过传递相应<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>对象传递给<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。 具体而言，构造函数传递<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>对象。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AddVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ AddVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，最终用户使用该对象可以将控件从目录添加到 Web 部件页。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，最终用户可用来将控件从目录添加到网页。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由引用添加谓词<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>控件上的属性派生自<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类。 添加谓词添加到 Web 页目录中最终用户选择一个控件。 通常情况下，添加谓词显示用户界面 (UI) 中为<xref:System.Web.UI.WebControls.Button>控件，但也可以是一个链接或图像。  
  
 添加谓词是区域级别的控件，这意味着，尽管可能存在多个<xref:System.Web.UI.WebControls.WebParts.CatalogPart>目录中的控件，添加谓词应用于用户选择的所有控件，并将它们添加到所选的区域。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>属性声明的方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 代码示例的第一部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>以声明方式在网页中的属性。 此示例中自定义的谓词的文本。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>属性以编程方式，通过使用切换按钮来启用或禁用它。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，你可以在检查自定义的文本<xref:System.Web.UI.WebControls.Button>控件，添加谓词，并且您可以单击**启用或禁用谓词**按钮，以演示您可以以编程方式访问应用谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CatalogPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogPartChrome As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CatalogPartChrome { System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogPartChrome : System.Web.UI.WebControls.WebParts.CatalogPartChrome" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 类的实例的引用，该类与 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域关联。</summary>
        <value>与区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>方法调用时，它将创建的一个实例<xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome>类与此实例使用的所有呈现外围用户界面 (UI) 元素 （也称为 chrome）<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中的控件。  
  
 个人的 chrome 元素<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件包括其边框和标题文本。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Web 部件控件集提供的控件在默认情况下没有标头谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CatalogParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogParts As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CatalogParts { System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogParts : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 区域中包含的所有 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件的集合。</summary>
        <value>包含区域中所有单个 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性提供对所有的集合的引用<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中的控件。 它将同时引用<xref:System.Web.UI.WebControls.WebParts.CatalogPart>提供与 Web 部件控件集，以及任何自定义控件<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件添加到的区域。  
  
 当另一种方法访问时，最初创建集合<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性和属性调用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法。  
  
> [!NOTE]
>  请注意的任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>添加到的集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>的实现中的控件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法必须具有分配给其 ID 属性的值，否则将集合分配给时引发异常<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性，循环访问集合，并列出的所有 Id<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中的控件。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#4)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#4)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，可以单击**列表 CatalogParts**按钮，以演示如何将<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>可以访问属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要添加到集合的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 的 ID 属性尚未赋值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="catalogZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将网页从目录显示模式切换到正常浏览模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close%2A>方法忽略任何当前所选的控件目录中。 它只需调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件以返回 Web 页后，可以浏览模式。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，最终用户可使用该对象关闭目录用户界面 (UI) 并将页返回到正常浏览模式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，最终用户可用来关闭网页上的目录用户界面。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引用关闭谓词<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>控件上的属性派生自<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类。  
  
 用户可以单击关闭谓词区域页脚中。 当用户单击关闭谓词，任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>用户选定的控件将被忽略、 关闭目录用户界面，并将页返回到正常浏览模式。  
  
 关闭谓词是区域级别控件，这意味着其操作在整个区域的级别应用。 当用户单击关闭谓词时，已选择但不是会添加到页面的任何控件将被忽略、 该目录已关闭，和将页返回到浏览模式。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>属性声明的方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 代码示例的第一部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>以声明方式在网页中的属性。 本示例自定义<xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Description%2A>的谓词的属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>属性以编程方式，通过使用切换按钮来启用或禁用它。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 何时可见，请通过将鼠标指针置于**关闭**按钮，可以看到工具提示中的其说明文本。 此外可以单击**启用或禁用谓词**按钮，以演示您可以以编程方式访问关闭的谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCatalogPartChrome () As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CreateCatalogPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateCatalogPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartChrome&#xA;override this.CreateCatalogPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartChrome" Usage="catalogZoneBase.CreateCatalogPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 对象的实例，该对象用于呈现区域中 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的外围用户界面 (UI) 元素。</summary>
        <returns>呈现区域外围用户界面元素的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> 方法返回 <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> 对象。 个人的 chrome 元素<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件包括其边框和标题文本。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Web 部件控件集提供的控件在默认情况下没有标头谓词。 但是，就可以设置<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>属性的<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制，以便可以降至最低并根据需要以编程方式还原的控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZoneBase.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供一个基方法声明，派生的区域可以重写该声明，以便处理创建 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的详细信息，这些控件包含在某个区域中。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />，包含与区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法不提供任何实现。 它旨在在派生类中实现，因此应创建的集合的实例<xref:System.Web.UI.WebControls.WebParts.CatalogPart>包含区域中托管的 Web 页面进入目录模式时的控件。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=nameWithType>方法提供的实现的一个示例<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法。  
  
> [!NOTE]
>  请注意的任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>添加到的集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>的实现中的控件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法必须具有分配给其 ID 属性的值，否则将集合分配给时引发异常<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性。  
  
 该方法可以创建<xref:System.Web.UI.WebControls.WebParts.CatalogPart>来自多个源的控件： 声明中的持久性格式的控件<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件或保留在不同的存储机制，如 XML 文件或数据库中的控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>创建自定义开发人员<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控件应继承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />或<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />类，并重写此方法，如果用户想要创建自定义<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />要呈现其自定义对象<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控件。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="catalogZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建与 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域关联的子控件集。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当区域不包含任何控件时显示的消息。</summary>
        <value>一个字符串，其中包含在空区域中显示的消息。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字符串值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>属性时显示 Web 页面上输入目录模式下，如果<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域不包含任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>属性以声明方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 请注意，该代码示例声明两个`<asp:catalogzone>`元素和第二个没有声明任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，但它会为分配到的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，请注意，下面的第一个区域中，其中包含两个<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，第二个区域出现，并显示的内容<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>属性因为它不包含任何控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域的页眉区的文本。</summary>
        <value>一个字符串，包含区域的页眉文本。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字符串值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>的标头区域中显示属性<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域，这是该区域的最顶部。 文本<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>属性时，显示页面上输入目录模式和目录用户界面 (UI) 变得可见。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>属性以声明方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 请注意，该代码示例声明两个`<asp:catalogzone>`元素。 第二个没有声明任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，但同时声明的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 中的第二个代码示例中，值的一部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>第一个区域中的属性以编程方式分配给不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，请注意，每个值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>标头区域的每个区域中显示的属性。 可以单击**设置区域的文本属性**按钮，并<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>上部区域的属性设置为在代码中分配给它的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域中为最终用户提供说明的文本。</summary>
        <value>字符串，包含为最终用户提供的说明。 Web 部件控件集提供的特定于区域性的默认字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字符串值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>属性的标头区域的下方只显示<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域。 文本<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>属性时，显示页面上输入目录模式和目录用户界面 (UI) 变得可见。  
  
 用途<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>属性是为用户提供要执行的操作时显示目录用户界面的一般说明。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>属性以声明方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 请注意，该代码示例声明两个`<asp:catalogzone>`元素，其中第一个元素声明的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 中的第二个代码示例中，值的一部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>第一个区域中的属性以编程方式分配给不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，请注意，值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>标头区域的每个区域中显示的属性。 可以单击**设置区域的文本属性**按钮，并<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>上部区域的属性设置为在代码中分配给它的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCatalogParts">
      <MemberSignature Language="C#" Value="protected void InvalidateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCatalogParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCatalogParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateCatalogParts : unit -&gt; unit" Usage="catalogZoneBase.InvalidateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>销毁与 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>如果可以由派生类调用方法的列表<xref:System.Web.UI.WebControls.WebParts.CatalogPart>与关联控件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>出于某种原因，更改区域，并且派生的类需要获取的更新的列表<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。 派生的类应首先调用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>若要销毁当前集合中，和类的基类将调用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>所需更新后的集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="catalogZoneBase.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前保存的状态数据。</param>
        <summary>加载上一次控件属性页请求的状态，即使控件禁用视图状态，也应在回发间保存控件属性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 不是有效的控件状态。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="catalogZoneBase.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">发布到服务器的名称/值对的集合。</param>
        <summary>当页回发到服务器时，处理目录中 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的对应复选框的状态。</summary>
        <returns>与重写基方法相比，此方法始终返回 <see langword="false" />，因为该类不公开任何更改事件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法循环访问的集合<xref:System.Web.UI.WebControls.CheckBox>控件，以确定哪些<xref:System.Web.UI.WebControls.WebParts.WebPart>或已由用户选择在目录中的其他服务器控件。 所选的项分配到一个内部数组，然后处理相应的控件添加到 Web 页。  
  
 该方法不用于从你的代码; 调用它是由 Web 部件控件集内部使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="catalogZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前保存的状态数据。</param>
        <summary>为某个区域加载以前保存的状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构并不应在代码中直接使用。 但是，您可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState%2A>方法首先调用基方法以加载任何先前存在的状态信息。 接下来，它还将包含添加谓词，关闭谓词的状态信息的视图状态数据对象添加<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>对象，和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 对象的大小与当前视图状态对象的大小不相等。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="catalogZoneBase.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>注册页对象以使页需要控件状态。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="catalogZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件并注册页对象以使其需要回发。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="PartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ PartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PartLinkStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象包含区域中当前未选 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的样式特性。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，包含当前未选控件的样式特性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在中<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域中，每种类型的显示的链接<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件： <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>，和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>。 当用户单击其中一个链接，相应<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件成为所选的控件，并包含由该所选控件的子控件使其可见。  
  
 <xref:System.Web.UI.WebControls.Style>所引用的对象<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>属性包含的样式特性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>当前未选择的控件。 尽管该属性引用的对象是只读的但仍可以使用设置的基础的样式属性将未选<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>属性以声明方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 请注意，代码示例的第一部分声明了两个`<asp:catalogzone>`元素，其中第一个元素声明的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 对于未选定的文本颜色的代码示例的第二部分，<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件设置为不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，请注意，未选定的样式特性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中列出的控件 (默认情况下，所选<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件是<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件)。 可以单击**更改部件链接样式**按钮以更改未选控件的文本颜色。 此外可以单击以查看时选择控件的样式特性的更改未选定控件的链接。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="catalogZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含该事件参数的 <see cref="T:System.String" />。</param>
        <summary>执行与某一区域谓词关联的操作，或引发发布回服务器的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`eventArgument`参数数据指示已单击关闭谓词或添加谓词，则<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent%2A>方法执行操作的谓词，例如，添加与关联<xref:System.Web.UI.WebControls.WebParts.WebPart>控件添加到页上，或关闭目录。 如果出于任何其他原因调用方法时，然后调用基方法来引发回发到服务器事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果你想要添加到自定义谓词<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />区域，则需要重写<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />方法以处理事件，如果用户单击自定义谓词。</para></block>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将区域呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>方法重写基方法，从<xref:System.Web.UI.WebControls.WebControl>类来调用<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>方法，该验证在运行时以 HTML 形式呈现该区域控件的方法。 验证之后，该方法然后呈现区域的其余内容。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>重写基方法，以便呈现某个区域的正文区，该区域从 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 类派生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法将呈现的正文区<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域，这是页眉和页脚区域之间的主要内容区域，包含<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法重写基方法中的<xref:System.Web.UI.WebControls.WebParts.WebZone>类以提供专用的呈现的布局和样式属性仅适用于<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域。 该方法将呈现包含正文，响应正文的全部内容的表，并在该表中，它设置不同的属性值，具体取决于各种条件，包括多少<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件是在区域中。 如果有多个<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，为每个控件创建的链接和仅当前所选控件的内容显示。 在中设置特殊的样式特性<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A>为所选属性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制而不是那些当前未选。  
  
 如果有任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中的控件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法将呈现的值<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderCatalogPartLinks">
      <MemberSignature Language="C#" Value="protected virtual void RenderCatalogPartLinks (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderCatalogPartLinks(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderCatalogPartLinks (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderCatalogPartLinks(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderCatalogPartLinks : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderCatalogPartLinks : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderCatalogPartLinks writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />，接收到区域的控件的链接的内容。</param>
        <summary>呈现到 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 区域中单个 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件的链接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>方法可呈现链接到个人<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制在某个区域中，如果有多个<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。  
  
 当前所选链接<xref:System.Web.UI.WebControls.WebParts.CatalogPart>，以便它从未选定控件醒目以不同的方式呈现控件。 开发人员可以通过使用设置的选定和未选定控件链接的样式特性<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>属性，分别。  
  
 链接到<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中的控件不是导航; 它们是用于显示控件的用户界面 (UI)。 当用户单击的链接控件时，隐藏的任何其他显示控件的 UI，并显示所选控件的用户界面。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果创建自定义类继承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />类，可选择替代<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />方法。 此方法使您以编程方式控制如何链接到<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />呈现区域中的控件。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="protected override void RenderFooter (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderFooter(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderFooter (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderFooter(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderFooter : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderFooter writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">呈现区域页脚区的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域的页脚区。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 页脚<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域是包含如 add 动作和关闭谓词区域级别的谓词的区域的底部区域。 在基础标记中，页脚是只需一个 HTML 表中的单元格。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter%2A>方法首先创建页脚的样式特性，然后调用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>方法以呈现添加并关闭谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">呈现区域谓词的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域页脚区中的谓词。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>方法将呈现添加谓词和关闭谓词中的页脚区域<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />方法不会处理任何自定义的呈现<see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />开发人员将添加到自定义的对象<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />区域。 如果你想要添加到自定义谓词<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />类，您必须从继承<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />类，并重写<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />方法，您可以使用它们来呈现的区域的自定义谓词。 您还必须重写<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />方法以处理事件时用户单击自定义谓词。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="catalogZoneBase.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存在网页回发到服务器之后 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件状态发生的所有更改。</summary>
        <returns><see cref="T:System.Object" />，包含控件的状态数据。 如果状态没有任何更改，则该方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A>方法涉及到所必需的控件的操作 （如索引或关键字） 和独立于控件的视图状态数据的状态数据。  
  
 该方法首先调用基方法，以保存控件的现有状态数据。 接下来，它确定是否<xref:System.Web.UI.WebControls.WebParts.CatalogPart>当前选定区域中的控件，通过检查是否<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性具有值。 如果没有选定的控件，该方法使用从所选控件的状态数据更新现有的状态数据，，然后返回状态的所有数据。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>您可以选择重写<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />派生类中的方法，以便可以更新该区域中的其他自定义对象的已保存的控件状态。</para></block>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="catalogZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将页面发布回服务器之后，保存已发生的所有视图状态的更改。</summary>
        <returns>返回区域控件的当前视图状态。 如果没有与区域关联的视图状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState%2A>方法调用基方法来保存与关联的视图状态<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域。 接下来，它将保存为添加和关闭动词，以及任何视图状态<xref:System.Web.UI.WebControls.Style>与关联的对象<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedCatalogPartID">
      <MemberSignature Language="C#" Value="public string SelectedCatalogPartID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedCatalogPartID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedCatalogPartID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedCatalogPartID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedCatalogPartID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串用作区域中当前所选 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的标识符。</summary>
        <value>字符串，用作当前所选控件的标识符。 默认为控件的 <see cref="P:System.Web.UI.Control.ID" /> 属性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性，可设置当前所选的所选的标识符<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。 这不会更改控件的<xref:System.Web.UI.Control.ID%2A>属性值，因此可以用于以编程方式目的使用此属性。 例如，如果你想始终执行一些以编程方式操作上当前所选<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，此属性，可通过预先设置的已知值访问该控件。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>并[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性以声明方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 请注意，代码示例的第一部分声明了两个`<asp:catalogzone>`元素，其中第一个元素声明的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 文本值中的代码示例的第二部分，<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>显示当前所选控件的属性。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#6)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#6)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，单击其中一个链接到<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件以选择它。 然后单击**显示所选 CatalogPart ID**按钮以显示属性值。 请注意该属性的值是以声明方式为该区域设置的值。 如果选择另<xref:System.Web.UI.WebControls.WebParts.CatalogPart>区域中的控件，相同的值将成为的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>选择此项时的每个控件的属性。 如果未设置的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性，默认值始终是值的<xref:System.Web.UI.Control.ID%2A>当前所选控件的属性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedPartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedPartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SelectedPartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPartLinkStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象包含区域中当前所选 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的样式特性。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，包含当前所选控件的样式特性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在中<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域中，每种类型的显示的链接<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件： <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>，和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>。 当用户单击其中一个链接，相应<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件成为所选的控件，并包含由该所选控件的子控件使其可见。  
  
 <xref:System.Web.UI.WebControls.Style>所引用的对象<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>属性包含的链接的样式特性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>当前选定的控件。 尽管该属性引用的对象是只读的但仍可以使用设置为所选的基础的样式属性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>属性以声明方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 请注意，代码示例的第一部分声明了两个`<asp:catalogzone>`元素，其中第一个元素声明的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 为所选的文本颜色的代码示例的第二部分，<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件设置为不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，单击其中一个列出的链接<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，并请注意，所选控件的样式特性。 可以单击**更改部件链接样式**按钮更改所选控件的文本颜色。 此外可以单击以查看时选择控件的样式特性的更改未选定控件的链接。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectTargetZoneText">
      <MemberSignature Language="C#" Value="public virtual string SelectTargetZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectTargetZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectTargetZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectTargetZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectTargetZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置目录用户界面 (UI) 中的控件旁边的文本，该控件允许用户选择将所选控件添加到哪个区域。</summary>
        <value>字符串，包含在区域选择控件旁边显示的文本。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目录用户界面首次出现时，用户可以选择其中一个<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，如<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>，，其中包含<xref:System.Web.UI.WebControls.WebParts.WebPart>或可以添加到网页上其他服务器控件。 用户选择一个或多个控件，并可以使用<xref:System.Web.UI.WebControls.DropDownList>目录的页脚区域中控制和选择<xref:System.Web.UI.WebControls.WebParts.WebPartZone>中放置所选的服务器控件的页上的控件。 文本值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>属性旁将显示<xref:System.Web.UI.WebControls.DropDownList>控件作为简单的指令。  
  
 此属性的值设置时，可以自动保存到资源文件使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>并[全球化和本地化](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>属性以声明方式和以编程方式。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类概述。  
  
 请注意，代码示例的第一部分声明了两个`<asp:catalogzone>`元素，其中第一个元素声明的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 中的第二个代码示例中，值的一部分<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>以编程方式更改属性。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 当在浏览器页面加载时，可以选择**目录**从下拉列表切换到目录显示模式。 目录可见时，请注意旁边显示的文本<xref:System.Web.UI.WebControls.DropDownList>目录的页脚中的控件。 可以单击**设置区域的文本属性**按钮可更改属性的文本值。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCatalogIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowCatalogIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCatalogIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowCatalogIcons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowCatalogIcons { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCatalogIcons : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示目录中的服务器控件是否在目录中显示其关联图标。</summary>
        <value>如果应显示目录中的服务器控件的关联图标，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件和包装为其他服务器控件<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控件在运行时具有<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>属性。 此属性的值是用作一个图标来表示控件目录中的控件的图像的 URL。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>属性指示图标是否与关联<xref:System.Web.UI.WebControls.WebParts.WebPart>和其他服务器控件显示在目录中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">发布到服务器的名称/值对的集合。</param>
        <summary>通过调用 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 类的 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 方法，可以实现 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 方法。</summary>
        <returns>如果应当引发事件以指示该数据已更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 实例强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。 方法只是调用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>方法<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类，它会反过来处理对应于目录中的服务器控件目录中的复选框的状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 实例强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="catalogZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪对区域控件的视图状态所做的更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState%2A>方法首先调用基方法<xref:System.Web.UI.WebControls.WebParts.ToolZone>与关联的类，以跟踪视图状态<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域。 接下来，该方法开始跟踪的添加和关闭谓词的视图状态并将<xref:System.Web.UI.WebControls.Style>与关联的对象<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>属性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>