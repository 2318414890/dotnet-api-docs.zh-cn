<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc82eecf035249111ad14ca20f2bcd1b0a8ac90c" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46630352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="de95a-101">用作定义连接点对象的基类，这些对象使 Web 部件连接中的使用者控件和提供者控件可以共享数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de95a-101">Serves as the base class for defining connection point objects that enable the consumer control and the provider control in a Web Parts connection to share data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-102">每个 Web 部件连接共享数据的两个服务器控件组成： 一个控件是使用者，另一个是提供程序。</span><span class="sxs-lookup"><span data-stu-id="de95a-102">Every Web Parts connection consists of two server controls sharing data: one control is the consumer, the other is the provider.</span></span> <span data-ttu-id="de95a-103">Web 部件连接中，并连接对象本身的基本组件的讨论，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类概述。</span><span class="sxs-lookup"><span data-stu-id="de95a-103">For a discussion of the essential components of a Web Parts connection, and the connection object itself, see the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview.</span></span> <span data-ttu-id="de95a-104">每个 Web 部件连接需要连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-104">Every Web Parts connection requires connection points.</span></span> <span data-ttu-id="de95a-105">提供程序和使用者控件都必须定义至少一个<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>可以共享 （其中每个可以根据需要有多个连接点） 的对象，其中包含有关如何控制可以与另一个控件的数据类型将其连接的详细信息。</span><span class="sxs-lookup"><span data-stu-id="de95a-105">The provider and the consumer control must each have at least one defined <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object (each of them can optionally have multiple connection points) that contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="de95a-106">在实际连接中，提供程序具有其自己的连接点对象类型 (派生自基本<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类)、 一个<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>实例和使用者都有其自己的对象，<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>实例。</span><span class="sxs-lookup"><span data-stu-id="de95a-106">In an actual connection, the provider has its own type of connection point object (derived from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class), a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> instance, and the consumer has its own object, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> instance.</span></span>  
  
 <span data-ttu-id="de95a-107">若要创建提供者连接点，开发人员必须将一个回调方法添加到将实现的接口实例返回给使用者的提供程序。</span><span class="sxs-lookup"><span data-stu-id="de95a-107">To create a provider connection point, developers must add a callback method to the provider that will return an implemented interface instance to a consumer.</span></span> <span data-ttu-id="de95a-108">它们必须标记中使用的源代码的回调方法`ConnectionProvider`code 属性 (请参阅<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>类)。</span><span class="sxs-lookup"><span data-stu-id="de95a-108">They must mark the callback method in the source code with a `ConnectionProvider` code attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class).</span></span> <span data-ttu-id="de95a-109">同样，若要创建使用者连接点，开发人员必须将方法添加到使用者接收接口实例，并且它们必须标记该方法以`ConnectionConsumer`属性 (请参阅<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>类)。</span><span class="sxs-lookup"><span data-stu-id="de95a-109">Similarly, to create a consumer connection point, developers must add a method to the consumer that receives an interface instance, and they must mark that method with a `ConnectionConsumer` attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class).</span></span>  
  
 <span data-ttu-id="de95a-110">当开发人员创建在网页上的连接时，则他们可以创建静态或动态连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-110">When developers create connections on a Web page, they can be created as static or dynamic connections.</span></span> <span data-ttu-id="de95a-111">在 Web 页面的标记中声明静态连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-111">Static connections are declared in the markup of a Web page.</span></span> <span data-ttu-id="de95a-112">当声明静态连接时，开发人员可以将指定的使用者和提供程序使用的连接点，应分配到的值`ProviderConnectionPointID`并`ConsumerConnectionPointID`属性内`<asp:webpartconnection>`元素标记。</span><span class="sxs-lookup"><span data-stu-id="de95a-112">When a static connection is declared, developers can designate which connection points are used for both the consumer and provider by assigning values to the `ProviderConnectionPointID` and `ConsumerConnectionPointID` attributes within the `<asp:webpartconnection>` element tag.</span></span> <span data-ttu-id="de95a-113">这种方法是特别有用，如果有多个连接点定义中的使用者和提供程序控件，因为它可以使静态连接来标识要用于连接的连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-113">This approach is especially useful if there are multiple connection points defined within the consumer and provider controls, because it enables the static connection to identify which connection points to use for the connection.</span></span>  
  
 <span data-ttu-id="de95a-114">开发人员的代码或通过用户界面 (UI) 提供的用户，以编程方式创建动态连接<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。</span><span class="sxs-lookup"><span data-stu-id="de95a-114">Dynamic connections are created programmatically, either by a developer's code or by users through the user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="de95a-115">若要在代码中创建的连接，开发人员必须获取的实例<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象通过调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</span><span class="sxs-lookup"><span data-stu-id="de95a-115">To create a connection in code, developers must get an instance of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="de95a-116">它们可以调用此方法之前，开发人员必须具有对使用者和提供程序服务器控件和其各自的连接点对象的引用。</span><span class="sxs-lookup"><span data-stu-id="de95a-116">Before they can call this method, developers must have references to the consumer and provider server controls and their respective connection point objects.</span></span> <span data-ttu-id="de95a-117">若要获取对连接点的引用的提供程序和使用者控件，开发人员首次调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>并<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>上的方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。</span><span class="sxs-lookup"><span data-stu-id="de95a-117">To get references to the connection points for a provider and a consumer control, developers first call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> methods on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="de95a-118">这些方法返回相应的连接点对象，又可以传递给创建的连接方法。</span><span class="sxs-lookup"><span data-stu-id="de95a-118">These methods return the appropriate connection point objects, which in turn can be passed to the method for creating a connection.</span></span>  
  
 <span data-ttu-id="de95a-119">当提供程序的和使用者的连接点对象均使用相同类型的接口，它们是兼容，可以形成共享数据的直接连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-119">When the provider's and the consumer's connection point objects both work with the same type of interface, they are compatible and can form a direct connection to share data.</span></span> <span data-ttu-id="de95a-120">如果不使用相同的接口类型，<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象必须用于从提供程序到使用者可以使用的类型的接口实例转换。</span><span class="sxs-lookup"><span data-stu-id="de95a-120">If they do not work with the same interface type, a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to translate the interface instance from the provider into a type that the consumer can work with.</span></span>  
  
 <span data-ttu-id="de95a-121">抽象<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类提供了由使用者和提供程序控件共享的连接点的基本详细信息。</span><span class="sxs-lookup"><span data-stu-id="de95a-121">The abstract <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class provides the base details of connection points that are shared by both consumer and provider controls.</span></span> <span data-ttu-id="de95a-122">多个属性包含这些详细信息。</span><span class="sxs-lookup"><span data-stu-id="de95a-122">Several properties contain these details.</span></span> <span data-ttu-id="de95a-123"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>属性指示连接点是否可以参与多个连接一次。</span><span class="sxs-lookup"><span data-stu-id="de95a-123">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property indicates whether a connection point can participate in more than one connection at a time.</span></span> <span data-ttu-id="de95a-124">默认情况下，提供者连接点可以参与多个连接，并且不能使用者连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-124">By default, provider connection points can participate in multiple connections, and consumer connection points cannot.</span></span> <span data-ttu-id="de95a-125"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>属性指示连接点与关联的服务器控件的类型。</span><span class="sxs-lookup"><span data-stu-id="de95a-125">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property indicates the type of the server control associated with a connection point.</span></span> <span data-ttu-id="de95a-126">请注意，并非仅<xref:System.Web.UI.WebControls.WebParts.WebPart>控件可以形成连接; 任何服务器控件，无论是 ASP.NET 控件、 自定义控件或用户控件，可以启用参与连接，如果放置在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。</span><span class="sxs-lookup"><span data-stu-id="de95a-126">Note that not only <xref:System.Web.UI.WebControls.WebParts.WebPart> controls can form connections; any server control, whether an ASP.NET control, a custom control, or a user control, can be enabled to participate in connections if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone.</span></span> <span data-ttu-id="de95a-127"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>属性提供了可以显示在 UI 中可帮助用户对于要创建连接的连接点的友好名称。</span><span class="sxs-lookup"><span data-stu-id="de95a-127">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property provides a friendly name for the connection point that can be displayed in the UI to assist users who are creating connections.</span></span> <span data-ttu-id="de95a-128"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>属性将充当自己的连接点对象的字符串标识符。</span><span class="sxs-lookup"><span data-stu-id="de95a-128">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property serves as a string identifier for the connection point object itself.</span></span> <span data-ttu-id="de95a-129"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>属性指示哪些类型的接口实例的连接点能够理解。</span><span class="sxs-lookup"><span data-stu-id="de95a-129">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface instance the connection point understands.</span></span> <span data-ttu-id="de95a-130">由给定的连接点是否提供或使用该接口的实例是否是<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>或<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-130">Whether a given connection point provides or consumes an instance of that interface is determined by whether it is a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> or a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span>  
  
 <span data-ttu-id="de95a-131"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类具有一种方法。</span><span class="sxs-lookup"><span data-stu-id="de95a-131">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class has one method.</span></span> <span data-ttu-id="de95a-132"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法返回一个布尔值，该值指示是否当前能够参与连接的连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-132">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method returns a Boolean value indicating whether a connection point is currently able to participate in connections.</span></span>  
  
 <span data-ttu-id="de95a-133"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类还具有一个公共字段， <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>。</span><span class="sxs-lookup"><span data-stu-id="de95a-133">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class also has one public field, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>.</span></span> <span data-ttu-id="de95a-134">此字段包含用来标识连接中的默认连接点的值。</span><span class="sxs-lookup"><span data-stu-id="de95a-134">This field contains a value used to identify the default connection point in a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="de95a-135">指定方法具有一个必需的参数的连接点的属性`displayName`，因此可以创建默认连接点的属性，而无需指定一个 id。</span><span class="sxs-lookup"><span data-stu-id="de95a-135">The attributes for specifying connection point methods have only one required parameter, `displayName`, so it is possible to create the default connection point attribute without specifying an ID.</span></span> <span data-ttu-id="de95a-136">在这种情况下，<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>字段提供要使用的基础值。</span><span class="sxs-lookup"><span data-stu-id="de95a-136">In such cases, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field supplies a base value to use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de95a-137">下面的代码示例演示如何创建包含所需的 Web 部件连接<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-137">The following code example demonstrates the creation of a Web Parts connection that includes the required <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects.</span></span> <span data-ttu-id="de95a-138">因为<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类是一个抽象基类，其子类-中的实例<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>-是用于形成连接的实际对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-138">Because the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class is an abstract base class, instances of its child classes--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--are the actual objects used to form a connection.</span></span>  
  
 <span data-ttu-id="de95a-139">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="de95a-139">The example has four parts:</span></span>  
  
-   <span data-ttu-id="de95a-140">使你能够更改 Web 部件的用户控件在页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="de95a-140">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="de95a-141">源接口和两个代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控件作为提供程序和使用者的连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-141">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="de95a-142">若要托管的所有控件和运行的代码示例网页。</span><span class="sxs-lookup"><span data-stu-id="de95a-142">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="de95a-143">如何运行示例页的说明。</span><span class="sxs-lookup"><span data-stu-id="de95a-143">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="de95a-144">此代码示例的第一个部分是使用户能够更改网页上的显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="de95a-144">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="de95a-145">将以下源代码保存到.ascx 文件，将其分配到的文件名称`Src`属性的`Register`指令对该用户控件，即托管的 Web 页面的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="de95a-145">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="de95a-146">有关详细信息显示在此控件模式和对源代码的说明，请参见[演练： 在 Web 部件页上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="de95a-146">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="de95a-147">代码示例的第二部分是为接口和控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="de95a-147">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="de95a-148">源代码文件包含一个简单的接口名为`IZipCode`。</span><span class="sxs-lookup"><span data-stu-id="de95a-148">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="de95a-149">此外，还有<xref:System.Web.UI.WebControls.WebParts.WebPart>类名为`ZipCodeWebPart`的实现接口，并充当提供者控件。</span><span class="sxs-lookup"><span data-stu-id="de95a-149">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="de95a-150">其`ProvideIZipCode`方法是实现接口的唯一成员的回调方法。</span><span class="sxs-lookup"><span data-stu-id="de95a-150">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="de95a-151">该方法只需返回接口的实例。</span><span class="sxs-lookup"><span data-stu-id="de95a-151">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="de95a-152">请注意，该方法标记与`ConnectionProvider`其元数据中的属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-152">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="de95a-153">这是用于标识提供者连接点的回调方法作为该方法的机制。</span><span class="sxs-lookup"><span data-stu-id="de95a-153">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="de95a-154">另<xref:System.Web.UI.WebControls.WebParts.WebPart>类命名为`WeatherWebPart`，并充当使用者的连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-154">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="de95a-155">此类有一个名为方法`GetZipCode`获取的实例`IZipCode`从提供者控件的接口。</span><span class="sxs-lookup"><span data-stu-id="de95a-155">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="de95a-156">请注意，此方法标记为与使用者的连接点方法`ConnectionConsumer`其元数据中的属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-156">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="de95a-157">这是用于标识使用者控件中的连接点方法的机制。</span><span class="sxs-lookup"><span data-stu-id="de95a-157">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="de95a-158">若要运行的代码示例，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="de95a-158">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="de95a-159">可以显式对其进行编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="de95a-159">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="de95a-160">或者，您可以将源代码放在你网站的 App_Code 文件夹中，其中它将被动态编译在运行时。</span><span class="sxs-lookup"><span data-stu-id="de95a-160">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="de95a-161">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="de95a-161">This code example uses dynamic compilation.</span></span> <span data-ttu-id="de95a-162">有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="de95a-162">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="de95a-163">代码示例的第三部分是 Web 页。</span><span class="sxs-lookup"><span data-stu-id="de95a-163">The third part of the code example is the Web page.</span></span> <span data-ttu-id="de95a-164">顶部附近是`Register`指令用于注册的自定义控件形成连接，并使用户能够更改的用户控件在页面上显示模式。</span><span class="sxs-lookup"><span data-stu-id="de95a-164">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="de95a-165">以声明方式内创建连接本身`<staticconnections>`页上的元素。</span><span class="sxs-lookup"><span data-stu-id="de95a-165">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="de95a-166">此外可以以编程方式; 创建连接执行该操作的代码包含在`Button1_Click`方法。</span><span class="sxs-lookup"><span data-stu-id="de95a-166">You can also create the connection programmatically; the code for doing that is contained in the `Button1_Click` method.</span></span> <span data-ttu-id="de95a-167">是否以声明方式或以编程方式创建的连接，连接点必须始终指定提供程序和使用者。</span><span class="sxs-lookup"><span data-stu-id="de95a-167">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="de95a-168">`Button2_Click`方法访问<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>对象提供程序和使用者，并将一些其属性值写入到页中的标签。</span><span class="sxs-lookup"><span data-stu-id="de95a-168">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="de95a-169">加载浏览器中的页面后，单击**连接点的详细信息**按钮。</span><span class="sxs-lookup"><span data-stu-id="de95a-169">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="de95a-170">有关建立在声明性的连接中的提供程序和使用者连接点的信息将出现。</span><span class="sxs-lookup"><span data-stu-id="de95a-170">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="de95a-171">接下来，使用**显示模式**下拉列表控件切换到页连接模式。</span><span class="sxs-lookup"><span data-stu-id="de95a-171">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="de95a-172">其中一个的谓词菜单上<xref:System.Web.UI.WebControls.WebParts.WebPart>控件 （由标题栏中的向下箭头表示），单击连接谓词。</span><span class="sxs-lookup"><span data-stu-id="de95a-172">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="de95a-173">UI 显示方式，连接会自动创建`<asp:connectionszone>`页面中声明的控件。</span><span class="sxs-lookup"><span data-stu-id="de95a-173">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="de95a-174">单击**断开连接**按钮来终止现有连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-174">Click the **Disconnect** button to terminate the existing connection.</span></span> <span data-ttu-id="de95a-175">使用**显示模式**控件以返回页后，可以浏览模式。</span><span class="sxs-lookup"><span data-stu-id="de95a-175">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="de95a-176">接下来，单击**动态连接**按钮以编程方式创建的连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-176">Next, click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="de95a-177">单击**点连接的详细信息**按钮再次，指示两个连接点对象有关的详细信息。</span><span class="sxs-lookup"><span data-stu-id="de95a-177">Click the **Connection Point Details** button again, to indicate details about the two connection point objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">
      <span data-ttu-id="de95a-178">Web 部件连接概述</span>
      <span class="sxs-lookup">
        <span data-stu-id="de95a-178">Web Parts Connections Overview</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
      <span data-ttu-id="de95a-179">ASP.NET Web 部件页</span>
      <span class="sxs-lookup">
        <span data-stu-id="de95a-179">ASP.NET Web Parts Pages</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de95a-180">获取一个指示连接点是否支持多个并发连接的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-180">Gets a value that indicates whether a connection point supports multiple simultaneous connections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de95a-181">如果连接点支持多个连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-181">
              <see langword="true" /> if the connection point supports multiple connections; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 对象具有其<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>属性值设置为`true`(通过<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>类)，因为默认情况下设置 Web 部件控件启用窗体连接到多个使用者提供者连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `true` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class), because the Web Parts control set by default enables provider connection points to form connections to multiple consumers.</span></span>  
  
 <span data-ttu-id="de95a-183">与此相反，<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象具有其<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>属性值设置为`false`(通过<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>类) 因为默认情况下设置的 Web 部件控件可让使用者连接点来建立在只有一个提供程序的连接时间。</span><span class="sxs-lookup"><span data-stu-id="de95a-183">In contrast, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `false` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class) because the Web Parts control set by default allows consumer connection points to establish a connection to only one provider at a time.</span></span>  
  
 <span data-ttu-id="de95a-184">你可以通过将分配到不同的值与多个连接的默认行为<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>属性 （对于提供程序） 或<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>对两个属性 （对于使用者）<xref:System.Attribute>用于连接属性的类。</span><span class="sxs-lookup"><span data-stu-id="de95a-184">You can change the default behavior concerning multiple connections by assigning different values to the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for providers) or the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for consumers) on the two <xref:System.Attribute> classes used for connection attributes.</span></span> <span data-ttu-id="de95a-185">如果启用了使用者连接点，同时连接到多个提供程序，你的代码必须处理任何导致的同步问题。</span><span class="sxs-lookup"><span data-stu-id="de95a-185">If you enable consumer connection points to connect to multiple providers at the same time, your code must deal with any resulting synchronization issues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de95a-186">下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>属性上都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-186">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="de95a-187">此代码示例显示了仅包含网页的代码来访问您的属性。运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类概述。</span><span class="sxs-lookup"><span data-stu-id="de95a-187">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="de95a-188">中的代码`Button2_Click`方法的 Web 页面访问<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>属性上每个连接点对象，并将每个值写入到一个标签。</span><span class="sxs-lookup"><span data-stu-id="de95a-188">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="de95a-189">通过单击执行代码**连接点的详细信息**按钮后在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="de95a-189">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
          <span data-ttu-id="de95a-190">ASP.NET Web 部件页</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-190">ASP.NET Web Parts Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de95a-191">获取连接点与之关联的服务器控件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-191">Gets the <see cref="T:System.Type" /> of the server control with which a connection point is associated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de95a-192">表示控件类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-192">A <see cref="T:System.Type" /> representing the control type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-193">值<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>属性通常是<xref:System.Web.UI.WebControls.WebParts.WebPart>类型。</span><span class="sxs-lookup"><span data-stu-id="de95a-193">The value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property is often the <xref:System.Web.UI.WebControls.WebParts.WebPart> type.</span></span> <span data-ttu-id="de95a-194">但是，由于任何类型的用户控件或服务器控件可以参与连接，如果它已正确启用并放入<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域，<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>属性可返回这些其他服务器控件类型之一。</span><span class="sxs-lookup"><span data-stu-id="de95a-194">However, because any type of user control or server control can participate in connections if it is properly enabled and placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property can return one of these other server control types as well.</span></span>  
  
 <span data-ttu-id="de95a-195">在服务器控件时，不是<xref:System.Web.UI.WebControls.WebParts.WebPart>控件都将置于<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域，它们的包装与<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象在运行时以便他们可以充当<xref:System.Web.UI.WebControls.WebParts.WebPart>控制并参与连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-195">When server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time so they can function as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and participate in connections.</span></span> <span data-ttu-id="de95a-196">但当涉及到在连接中，此类控件<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>属性值不会返回<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>类型; 它将返回的类型<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象的子控件，它是服务器或用户控件的类型。</span><span class="sxs-lookup"><span data-stu-id="de95a-196">But when such controls are involved in connections, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property value does not return the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> type; it returns the type of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object's child control, which is the type of the server or user control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de95a-197">下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>属性上都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-197">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="de95a-198">此代码示例显示了仅包含网页的代码来访问您的属性。运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类概述。</span><span class="sxs-lookup"><span data-stu-id="de95a-198">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="de95a-199">中的代码`Button2_Click`方法的 Web 页面访问<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>属性上每个连接点对象，并将每个值写入到一个标签。</span><span class="sxs-lookup"><span data-stu-id="de95a-199">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="de95a-200">通过单击执行代码**连接点的详细信息**按钮后在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="de95a-200">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
          <span data-ttu-id="de95a-201">ASP.NET Web 部件页</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-201">ASP.NET Web Parts Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de95a-202">表示一个字符串，该字符串用于标识与服务器控件关联的连接点集合中的默认连接点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-202">Represents a string used to identify the default connection point within a collection of connection points associated with a server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-203">创建连接点时，就可以在使用者或提供程序的源代码中指定的连接点的 ID<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并使用<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>或<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-203">When a connection point is created, it is possible to specify an ID for the connection point in the source code of a consumer or provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, using a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span> <span data-ttu-id="de95a-204">但是，属性添加到源代码中的连接点`ID`参数是可选的。</span><span class="sxs-lookup"><span data-stu-id="de95a-204">However, when an attribute is added to a connection point in the source code, the `ID` parameter is optional.</span></span> <span data-ttu-id="de95a-205">如果在属性中，未指定 ID<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>字段提供了一个字符串，用于标识默认连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-205">If the ID is not specified in the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field provides a string that is used to identify the default connection point.</span></span>  
  
 <span data-ttu-id="de95a-206">如果多个连接点定义中的使用者或提供程序控件，则有必要指定每个连接点的 ID，以便创建连接时可以区分连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-206">If multiple connection points are defined in a consumer or provider control, it is necessary to specify an ID for each connection point, so that the connection points can be distinguished when creating connections.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de95a-207">获取一个字符串，该字符串用作在用户界面 (UI) 中表示连接点的友好显示名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-207">Gets a string that serves as a friendly display name to represent a connection point in the user interface (UI).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de95a-208">一个字符串，包含 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> 对象的友好显示名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-208">A string that contains a friendly display name for a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-209">若要创建 Web 部件连接中，连接的提供程序和使用者控件必须每个指定至少一个连接点，使他们能够进行通信和共享数据的方法。</span><span class="sxs-lookup"><span data-stu-id="de95a-209">To create a Web Parts connection, the provider and consumer controls for the connection must each specify at least one connection point, a method that enables them to communicate and share data.</span></span> <span data-ttu-id="de95a-210">若要标识这些连接点方法，开发人员所选方法上指定一个属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-210">To identify these connection point methods, a developer specifies an attribute on the selected methods.</span></span> <span data-ttu-id="de95a-211">在提供程序，`ConnectionProvider`属性设置在所选的回调方法中，并在使用者，`ConnectionConsumer`接收包含从提供程序的数据的接口的实例的方法上设置属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-211">In the provider, a `ConnectionProvider` attribute is set on the selected callback method, and in the consumer, a `ConnectionConsumer` attribute is set on the method that receives an instance of an interface that contains data from the provider.</span></span> <span data-ttu-id="de95a-212">对于这两个特性，始终是必需的而不考虑哪个重载声明以创建该特性的一个参数是`displayName`参数。</span><span class="sxs-lookup"><span data-stu-id="de95a-212">For both of these attributes, the one parameter that is always required, regardless of which overload is declared to create the attribute, is the `displayName` parameter.</span></span> <span data-ttu-id="de95a-213">开发人员必须将分配要用作连接点的友好显示名称的字符串，该字符串将成为的值<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-213">The developer must assign a string to be used as a friendly display name for the connection point, and that string becomes the value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span>  
  
 <span data-ttu-id="de95a-214"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>用户创建连接时，Web 页的 UI 中显示的属性值。</span><span class="sxs-lookup"><span data-stu-id="de95a-214">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property value is displayed in the UI of a Web page when users create connections.</span></span> <span data-ttu-id="de95a-215">例如，当<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件添加到页上，它创建的用户控件之间创建连接用户界面。</span><span class="sxs-lookup"><span data-stu-id="de95a-215">For example, when the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is added to the page, it creates a UI for users to create connections between controls.</span></span> <span data-ttu-id="de95a-216">在用户切换到连接显示模式的一个页面，并单击连接谓词后<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，用户界面出现的连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-216">After a user switches a page into connect display mode and clicks a connect verb on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the connection UI appears.</span></span> <span data-ttu-id="de95a-217">可以参与连接的每个控件在 UI 中，列出，每个控件旁边显示其可用的连接点的友好名称的下拉列表控件。</span><span class="sxs-lookup"><span data-stu-id="de95a-217">Each control that can participate in a connection is listed in the UI, and next to each control is a drop-down list control that displays the friendly names of its available connection points.</span></span> <span data-ttu-id="de95a-218">用户必须选择至少一个连接点建立的连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-218">Users must select at least one connection point to establish a connection.</span></span> <span data-ttu-id="de95a-219">连接点的列表中显示的值从获取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-219">The values that appear in the list of connection points are obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span> <span data-ttu-id="de95a-220">如果开发人员构建自定义 UI，用于创建连接，他们可以使用<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>中类似的方式来提供表示连接点的友好名称的属性。</span><span class="sxs-lookup"><span data-stu-id="de95a-220">If developers build a custom UI for creating connections, they can use the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property in a similar way to provide a friendly name that represents a connection point.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
          <span data-ttu-id="de95a-221">ASP.NET Web 部件页</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-221">ASP.NET Web Parts Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="de95a-222">一个与连接点关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或其他服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-222">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is associated with a connection point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de95a-223">返回一个指示连接点是否可以参与连接的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-223">Returns a value that indicates whether a connection point can participate in connections.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de95a-224">如果控件可以创建连接点来参与连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-224">
              <see langword="true" /> if the control can create a connection point to participate in a connection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-225"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>基类中的方法<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类始终返回`true`，但派生的类可以重写此方法应返回`true`或`false`在不同的时间基于状态的`control`。</span><span class="sxs-lookup"><span data-stu-id="de95a-225">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method in the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class always returns `true`, but derived classes can override the method to return `true` or `false` at different times, based on the state of `control`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de95a-226">下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法上都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-226">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="de95a-227">此代码示例显示了仅包含网页的代码来访问您的属性。运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类概述。</span><span class="sxs-lookup"><span data-stu-id="de95a-227">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="de95a-228">中的代码`Button2_Click`方法的 Web 页面访问<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法在每个连接点对象，并将每个值写入到一个标签。</span><span class="sxs-lookup"><span data-stu-id="de95a-228">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="de95a-229">通过单击执行代码**连接点的详细信息**按钮后在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="de95a-229">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
          <span data-ttu-id="de95a-230">ASP.NET Web 部件页</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-230">ASP.NET Web Parts Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de95a-231">获取包含连接点的标识符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-231">Gets a string that contains the identifier for a connection point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de95a-232">包含连接点的标识符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-232">A string that contains the identifier for a connection point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-233">当开发人员声明<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>或<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性上的控件的源代码中的方法，以便该方法可以用作连接点，它不需要声明`ID`连接点的属性的参数。</span><span class="sxs-lookup"><span data-stu-id="de95a-233">When a developer declares a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute on a method in the source code of a control, so that the method can be used as a connection point, it is not required to declare the `ID` parameter for the connection point attribute.</span></span> <span data-ttu-id="de95a-234">所需的唯一属性是`displayName`参数。</span><span class="sxs-lookup"><span data-stu-id="de95a-234">The only required attribute is the `displayName` parameter.</span></span> <span data-ttu-id="de95a-235">默认 ID 分配给连接点，使用中的值<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>字段。</span><span class="sxs-lookup"><span data-stu-id="de95a-235">A default ID is assigned to the connection point, using the value from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="de95a-236">如果正在使用作为连接点的控件中只有一个方法，则不必指定连接点的 ID。</span><span class="sxs-lookup"><span data-stu-id="de95a-236">If there is only one method in a control being used as a connection point, it is unnecessary to specify an ID for the connection point.</span></span> <span data-ttu-id="de95a-237">如果有多个方法指定为连接点，则必须指定每个; 的 ID否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="de95a-237">If there are multiple methods specified as connection points, you must specify an ID for each one; otherwise, an exception will be thrown.</span></span> <span data-ttu-id="de95a-238">通过为每个连接点分配一个 ID，您还可指定哪些声明在网页中的连接或在代码中创建它们时要使用的连接点。</span><span class="sxs-lookup"><span data-stu-id="de95a-238">By assigning an ID to each connection point, you also make it possible to specify which connection point to use when you declare connections in Web pages or create them in code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de95a-239">下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>属性上都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-239">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="de95a-240">此代码示例显示了仅包含网页的代码来访问您的属性。运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类概述。</span><span class="sxs-lookup"><span data-stu-id="de95a-240">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="de95a-241">中的代码`Button2_Click`方法的 Web 页面访问<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>属性上每个连接点对象，并将每个值写入到一个标签。</span><span class="sxs-lookup"><span data-stu-id="de95a-241">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="de95a-242">通过单击执行代码**连接点的详细信息**按钮后在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="de95a-242">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
          <span data-ttu-id="de95a-243">ASP.NET Web 部件页</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-243">ASP.NET Web Parts Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de95a-244">获取连接点所使用的接口的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-244">Gets the type of the interface used by a connection point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de95a-245">与控件所提供或使用的接口类型相对应的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-245">A <see cref="T:System.Type" /> that corresponds to the interface type provided or consumed by a control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de95a-246"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>属性指示连接点所使用的接口类型。</span><span class="sxs-lookup"><span data-stu-id="de95a-246">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface a connection point uses.</span></span> <span data-ttu-id="de95a-247">这可以帮助确定两个控件都兼容，并能够形成连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-247">This can help to determine whether two controls are compatible and able to form a connection.</span></span> <span data-ttu-id="de95a-248">如果提供者连接点<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>不同于使用者连接点<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>，则两个控件是不兼容 （这意味着，它们不能直接连接而无需转换器），和一个<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>对象必须用于建立连接。</span><span class="sxs-lookup"><span data-stu-id="de95a-248">If the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> is different from the consumer connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, then the two controls are incompatible (meaning that they cannot be directly connected without a transformer), and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de95a-249">下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>属性上都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象。</span><span class="sxs-lookup"><span data-stu-id="de95a-249">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="de95a-250">此代码示例显示了仅包含网页的代码来访问您的属性。运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类概述。</span><span class="sxs-lookup"><span data-stu-id="de95a-250">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="de95a-251">中的代码`Button2_Click`方法的 Web 页面访问<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>属性上每个连接点对象，并将每个值写入到一个标签。</span><span class="sxs-lookup"><span data-stu-id="de95a-251">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="de95a-252">通过单击执行代码**连接点的详细信息**按钮后在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="de95a-252">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
          <span data-ttu-id="de95a-253">ASP.NET Web 部件页</span>
          <span class="sxs-lookup">
            <span data-stu-id="de95a-253">ASP.NET Web Parts Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>