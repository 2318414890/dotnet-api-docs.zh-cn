<Type Name="WebPartZone" FullName="System.Web.UI.WebControls.WebParts.WebPartZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c372d279c3f6bff55086f61b39fdf8a6b1d8d22" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37743042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebPartZone : System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartZone extends System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartZone&#xA;Inherits WebPartZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartZone : System::Web::UI::WebControls::WebParts::WebPartZoneBase" />
  <TypeSignature Language="F#" Value="type WebPartZone = class&#xA;    inherit WebPartZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPartZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作 Web 部件控件集内的主控件，用于在网页中承载 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Web 部件功能区域是包含 Web 部件控件的网页上定义的区域。 区域的主要功能是它包含的控件进行布局，并为这些控件提供常见的用户界面 (UI)。 有关区域和如何在 Web 部件应用程序中使用的常规信息，请参阅基的参考文档<xref:System.Web.UI.WebControls.WebParts.WebZone>并<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>类和主题标题为[Web 部件控件集概述](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668)。  
  
 特殊的函数<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件将包含<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，后者构成主 UI 的 Web 部件应用程序。 一个<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件可以在网页上，使开发人员将其用作模板并将添加在其他服务器控件声明中的持久性格式`<asp:webpartzone>`元素。 任何类型的服务器控件，如果添加到<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域，客户端可作为<xref:System.Web.UI.WebControls.WebParts.WebPart>控件在运行时。 不管添加的控件是否是<xref:System.Web.UI.WebControls.WebParts.WebPart>控件、 用户控件、 自定义控件或 ASP.NET 控件。 有关详细信息，请参阅主题<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>类。  
  
 除了包含<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件还提供了一个通用的 UI，它包含的控件。 此公共用户界面，统称为 chrome 中，包含外围 UI 元素上所有控件，如边框、 标题、 页眉和页脚、 样式特征和谓词 （即用户可以在控件上执行，例如关闭或最小化 UI 操作）。  
  
> [!NOTE]
>  Internet Explorer 可能会呈现的高度<xref:System.Web.UI.WebControls.WebParts.WebPartZone>或其包含的控件以意外方式，具体取决于区域的方向。 有关详细信息，请参阅的文档<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A>或<xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>属性。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>类从基类派生的大多数行为<xref:System.Web.UI.WebControls.WebParts.WebZone>并<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>类; 它将添加一个唯一的成员，<xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>属性。 此属性引用<xref:System.Web.UI.ITemplate>对象，它是一个模板，允许页面开发人员定义的控件在某个区域中以静态方式使用`<zonetemplate>`.aspx 页的声明性标记中的元素。  
  
## <a name="accessibility"></a>可访问性  
 默认情况下，此控件呈现的标记可能不符合可访问性标准，如 Web 内容辅助功能准则 1.0 (WCAG) 优先级为 1 指导原则。 有关此控件的辅助功能支持的详细信息，请参阅[ASP.NET 控件和可访问性](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.WebPartZone>Web 部件页中的控件。 若要运行的代码示例，必须编译此源代码。 可以显式对其进行编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在你网站的 App_Code 文件夹中，其中它将被动态编译在运行时。 有关演示这两种方法编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 该示例的第一部分演示继承的自定义类<xref:System.Web.UI.WebControls.WebParts.WebPartZone>类，以及设置基区域属性的两个构造函数中。  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 该示例的第二部分显示了一个包含自定义的页面<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件。 请注意，该网页要求特殊`Register`指令要引用程序集包含自定义区域的页的顶部附近。 此页还包含`<asp:webpartmanager>`元素，每个 Web 部件页必需的。 `<cc1:MyWebPartZone>`元素，它表示自定义<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，包含标准 ASP.NET<xref:System.Web.UI.WebControls.Calendar>控件。 由于包含在<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域中，<xref:System.Web.UI.WebControls.Calendar>控件将与包装<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控件在运行时，使其能够充当<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#1)]  
  
 检查自定义的声明性标记<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件。 下面的代码示例中所示，请注意，您可以在标记中，设置区域级别的各种属性。  
  
> [!NOTE]
>  它是非常重要，请注意使用`<zonetemplate>`元素。 此元素，如备注部分中描述是必需的内<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域来包装静态<xref:System.Web.UI.WebControls.WebParts.WebPart>页中声明的控件。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.%23ctor%2A>方法是默认构造函数，并且未设置任何值。 但是，派生的类可以使用构造函数来设置基本区域属性，若要创建标准的行为和自定义区域控件的外观。  
  
   
  
## Examples  
 下面的代码示例演示了上一个自定义的构造函数使用<xref:System.Web.UI.WebControls.WebParts.WebPartZone>类来设置此区域的多个基本属性。 此方法可能会很有用，如果你想要创建自定义<xref:System.Web.UI.WebControls.WebParts.WebPartZone>具有特定的行为和外观的控件。 在的示例部分中找到的示例中，包括自定义类和一个.aspx 页，以承载该控件的完整代码<xref:System.Web.UI.WebControls.WebParts.WebPartZone>类概述主题。  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialWebParts">
      <MemberSignature Language="C#" Value="protected internal override System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetInitialWebParts () As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartCollection ^ GetInitialWebParts();" />
      <MemberSignature Language="F#" Value="override this.GetInitialWebParts : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="webPartZone.GetInitialWebParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写抽象基方法，并获取区域模板中初始的静态 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件集。</summary>
        <returns>包含区域模板中的所有 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> 控件或其他服务器控件的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>方法提供的抽象基实现<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts%2A>方法。 基方法不提供任何实现，但声明的方法，以便派生的类可以自定义如何他们将获取属于的控件的初始集在区域中，无需考虑的个性化设置更改。  
  
 在区域中，找到每个服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>调用方法。 如果直接从控件继承<xref:System.Web.UI.WebControls.WebParts.WebPart>类，它只需添加到该区域<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>集合 (和类似集合的<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件)。 如果控件不会直接从继承<xref:System.Web.UI.WebControls.WebParts.WebPart>，Web 部件控件集包装与控件<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象，使得控件可以将用作<xref:System.Web.UI.WebControls.WebParts.WebPart>控件在运行时。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>类实现的基方法通过返回的控件的集合 （如果有） 中的一组静态声明`<zonetemplate>`中 Web 部件页的标记的标记。 如果<xref:System.Web.UI.WebControls.PlaceHolder>控件声明在某个区域中，子控件的控件添加，而不是控件本身。 此实现允许您以，例如，创建<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域中主页面，然后再声明单个<xref:System.Web.UI.WebControls.WebParts.WebPart>或内容页面中的服务器控件。 如果声明<xref:System.Web.UI.WebControls.Literal>中的控件<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域，它们将被忽略。  
  
> [!NOTE]
>  返回控件的初始集合<xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>个性化设置发生之后，方法可能与不同的区域中的控件的实际运行时集合。 例如，假设有一个包含两个网页<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件和第一个包含用户控件名为`User1`中以静态方式声明的`<zonetemplate>`标记。 如果用户加载页面和拖动`User1`到第二个区域，然后`User1`仍是通过调用返回的集合的一部分<xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>方法的第一个区域，因为它被声明为该区域中。 但在运行时，当<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件加载个性化设置数据`User1`实际显示在其中用户拖动它的第二个区域中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartZone.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>重写基方法，以指示区域已向 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件进行了成功的注册。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对 <see cref="T:System.Web.UI.ITemplate" /> 实例的引用，该实例包含网页标记中声明的控件。</summary>
        <value>包含区域中 <see cref="T:System.Web.UI.ITemplate" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>属性是指<xref:System.Web.UI.ITemplate>实例中<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件。 该模板包含可以声明中的静态服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制，包括<xref:System.Web.UI.WebControls.WebParts.WebPart>控件、 用户控件、 自定义控件和 ASP.NET 控件。  
  
 当您添加静态<xref:System.Web.UI.WebControls.WebParts.WebPart>或其他服务器控件添加到<xref:System.Web.UI.WebControls.WebParts.WebPartZone>网页上的声明性标记，则必须将一对中的控件的标记放置`<zonetemplate>`标记。 如果不声明内的控件`<zonetemplate>`标记，将引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>Web 部件页的声明性标记中的属性。 在示例部分中找到有关示例，包括自定义类和一个.aspx 页，以承载该控件的完整代码<xref:System.Web.UI.WebControls.WebParts.WebPartZone>类概述主题。  
  
 请注意，标记中<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，没有`<zonetemplate>`元素，其中包含对日历控件的引用。 如果你想要添加其他<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或其他服务器控件添加到该区域，您还可以添加在`<zonetemplate>`标记。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">区域中 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的注册工作已完成。</exception>
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
  </Members>
</Type>