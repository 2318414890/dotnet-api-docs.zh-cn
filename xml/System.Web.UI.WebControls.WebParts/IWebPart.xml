<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76213fd44dfa378c39c2c2b5a9ed4c1e0b8c6827" /><Meta Name="ms.sourcegitcommit" Value="2982b8c4cce02c2542285fcaf172f7544d6b80bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/09/2019" /><Meta Name="ms.locfileid" Value="59348229" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义由 ASP.NET <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件使用的公共用户界面 (UI) 属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart>接口提供了多个面向 UI 的属性可增强用户体验的使用<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 当创建派生自基控件<xref:System.Web.UI.WebControls.WebParts.WebPart>类，您获取中的所有属性的实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口，因为<xref:System.Web.UI.WebControls.WebParts.WebPart>基类实现此接口。  
  
 您可以使用现有的用户控件、 ASP.NET 控件或不是继承的自定义服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPart>类作为一部分的 Web 部件应用程序，他们还可以使用来声明这些面向 UI 的属性和<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口。 如果将放置在现有服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域，在运行时与它们的包装<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象。 因为<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>类继承自<xref:System.Web.UI.WebControls.WebParts.WebPart>基类，它使现有的服务器控件能够处理为 true，则<xref:System.Web.UI.WebControls.WebParts.WebPart>控件并已将添加到它们的属性<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口。  
  
 如果将服务器控件不<xref:System.Web.UI.WebControls.WebParts.WebPart>区域中的控件，它们可以使用<xref:System.Web.UI.WebControls.WebParts.IWebPart>属性在运行的时，并且您还可以声明这些属性的值 （以页持久性格式） 页的标记中的服务器控件上。 但是，因为在运行时，这些属性是仅提供给服务器控件，设计时间用于编码功能，如 IntelliSense 不能识别<xref:System.Web.UI.WebControls.WebParts.IWebPart>服务器控件声明的属性。 这些控件上的声明的属性仍正常工作时加载的页面，但 Microsoft Visual Studio 无法识别属性为有效在设计时。 如果你想要添加<xref:System.Web.UI.WebControls.WebParts.IWebPart>现有的服务器和用户控件来增强的设计时用户体验的属性，可以实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>服务器控件中的接口。  
  
 可能是实现的主要原因<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口是不支持使用 expando （自定义） 属性的控件。 Expando 属性是字符串，可以添加到类动态属性，通过<xref:System.Web.UI.IAttributeAccessor>接口。 实现此接口的控件包括<xref:System.Web.UI.WebControls.WebControl>类及其子项中，可以使用 expando 属性。 因此，所有 ASP.NET 服务器控件、 自定义控件都派生自这些 Web 用户控件和<xref:System.Web.UI.WebControls.WebParts.WebPart>控件支持 expando 属性的用法。 直接从基类继承的但自定义控件<xref:System.Web.UI.Control>类不支持 expando 属性。 因此，如果声明中的这些控件<xref:System.Web.UI.WebControls.WebParts.WebPartZone>，你将不能声明通用<xref:System.Web.UI.WebControls.WebParts.IWebPart>属性上的控件属性，如<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>和<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>。 如果你想要使用这些属性与这些控件，则必须实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>用户控件中的接口。 这是按最小方式演示如何实现属性的简单实现。  
  
 代码示例的第一部分显示了用户控件。 用户控件实现的所有属性<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口，以及另外两个公共属性绑定到控件中的用户界面。 两个自定义属性都使用`Personalizable`属性，使跨浏览器会话保存这些属性中的值。 请注意，在基<xref:System.Web.UI.WebControls.WebParts.WebPart>类的实现; 的所有属性<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口实现为可个性化，但它们不在此代码示例。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 代码示例的第二部分显示了承载用户控件的网页。 页具有<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，该用户控件引用。 请注意，多个<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口的属性值用户控制，使其行为和外观类似于在标记中以声明方式设置<xref:System.Web.UI.WebControls.WebParts.WebPart>控制在设计时和运行时。 如果在浏览器页面加载时，可用于 UI 页面上演示的功能以编程方式更改的实现值<xref:System.Web.UI.WebControls.WebParts.IWebPart>属性在运行时。 某些属性值更改时，所做的更改不可见的页面上，但是会显示在页面源文件 (<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>属性)，或在应用程序的状态数据存储 (<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>属性)。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>通常情况下不需要实现<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" />接口，或者在自定义<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />控件或服务器控件，因为基<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />类已经实现了接口。 自定义<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />控件，并放置在其他服务器控件<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />区域，可以使用所有<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" />属性。  
  
若要实现的主要原因<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" />接口，无论是在自定义<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />控件或其他服务器控件，是你想要更改的默认实现。 例如，你可能想要提供的某些属性的默认值。 实现接口中的用户或服务器控件的另一个原因是，以便使用这些属性在控件上的设计时体验将得到加强。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像在控件目录中表示一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
        <value>表示图像的 URL 的字符串，该图像用于在目录中表示控件。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 部件应用程序通常提供的用户可以添加到页面的控件的一个目录 （或列表）。 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>控件上的属性包含在目录中出现时表示控件的图像的 URL。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>属性。 在示例部分中找到该示例的完整源代码<xref:System.Web.UI.WebControls.WebParts.IWebPart>类概述。  
  
 代码示例的第一部分演示如何实现用户控件<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>属性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 代码示例的第二部分演示如何以编程方式设置的值的用户控件中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>当用户从单选按钮的页上，选择相应的属性名称的属性中的文本框中，设置新值和然后单击**更新**按钮。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 代码示例的第三部分显示了用户如何控制实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>中引用接口<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>在控件上以声明方式设置属性。 请注意，由于没有与此示例中提供的 Web 部件控件没有目录，不能看到设置此属性的实际效果。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一条短语，该短语在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的工具提示和目录中用来概述该控件的作用。</summary>
        <value>字符串，简要概述控件的功能。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>属性值通常用作提供的列表的目录中的控件的描述性字符串<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，并为工具提示控件的标题栏中。 该属性的内容的用户将鼠标指针定位控件的标题栏中的标题文本上时显示工具提示中。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>属性。 在示例部分中找到该示例的完整源代码<xref:System.Web.UI.WebControls.WebParts.IWebPart>类概述。  
  
 代码示例的第一部分演示如何实现用户控件<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>属性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 代码示例的第二部分演示如何以编程方式设置的值的用户控件中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>当用户从单选按钮的页上，选择相应的属性名称的属性中的文本框中，设置新值和然后单击**更新**按钮。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 代码示例的第三部分显示了用户如何控制实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>中引用接口<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>在控件上以声明方式设置属性。 请注意，您可以通过将鼠标指针置于控件的标题栏中的标题文本后已加载页在浏览器中看到此属性的值。 您还可以尝试更改的属性值以编程方式在运行时加载 Web 页，然后使用提供的用户界面 (UI) 更改的属性值。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字符串，该字符串与 <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> 属性值连接即形成 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的完整标题。</summary>
        <value>作为控件副标题的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>属性用于返回的默认副标题字符串<xref:System.Web.UI.WebControls.WebParts.WebPart>追加到标题栏中的控件的标题的控件。  
  
 如果提供的默认值<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>实现的控件中的属性<xref:System.Web.UI.WebControls.WebParts.IWebPart>接口，Web 部件控件集自动将其追加到的值<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>在运行时控件的属性。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>属性。 在示例部分中找到该示例的完整源代码<xref:System.Web.UI.WebControls.WebParts.IWebPart>类概述。  
  
 代码示例的第一部分演示如何实现用户控件<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>属性。 请注意，该属性是只读的旨在用于提供默认副标题追加到主控件的标题。  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 代码示例的第二部分显示了用户如何控制实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>中引用接口<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，以及如何从可写属性<xref:System.Web.UI.WebControls.WebParts.IWebPart>在控件上以声明方式设置。 加载浏览器中的页面后，请注意，默认值的<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>属性，用于设置用户控件的实现代码中，追加到控件的标题栏中的标题。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的标题。</summary>
        <value>包含控件标题的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过设置控件的标题栏中的可见标题文本<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>属性。  
  
 如果未提供控件的标题的 Web 部件控件集自动计算要使用的标题的默认字符串。 有关详情，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>。 此外，就可以提供默认副标题追加到标题字符串。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>属性。 在示例部分中找到该示例的完整源代码<xref:System.Web.UI.WebControls.WebParts.IWebPart>类概述。  
  
 代码示例的第一部分演示如何实现用户控件<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>属性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 代码示例的第二部分演示如何以编程方式设置的值的用户控件中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>当用户从单选按钮的页上，选择相应的属性名称的属性中的文本框中，设置新值和然后单击**更新**按钮。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 代码示例的第三部分显示了用户如何控制实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>中引用接口<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>在控件上以声明方式设置属性。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像用于在控件自身的标题栏中表示 Web 部件控件。</summary>
        <value>表示图像的 URL 的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>属性使您能够将与图标关联<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 控件的标题栏中显示图标。 为了确保主题保持一致，应用程序开发人员可能想要使此图标类似于表示 Web 部件控件目录中的控件的图像 (中引用的映像<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>属性)。  
  
 在 Web 部件控件集，实现<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>属性可以由最终用户能够更改控件的标题栏中显示的图标的图像进行个性化处理。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>属性。 在示例部分中找到该示例的完整源代码<xref:System.Web.UI.WebControls.WebParts.IWebPart>类概述。  
  
 代码示例的第一部分演示如何实现用户控件<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>属性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 代码示例的第二部分演示如何以编程方式设置的值的用户控件中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>当用户从单选按钮的页上，选择相应的属性名称的属性中的文本框中，设置新值和然后单击**更新**按钮。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 代码示例的第三部分显示了用户如何控制实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>中引用接口<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>在控件上以声明方式设置属性。 请注意，是否未提供实际图像的 URL，该图标的占位符会出现在标题栏中。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置有关 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件补充信息的 URL。</summary>
        <value>一个字符串，表示有关 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件更多信息的 URL。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在分配到的 URL<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>属性，该控件的标题将成为一个链接。 此属性的用途是提供最终用户可以访问有关控件的其他信息的简便方法。 其他信息可以提供版权数据、 联系人数据，有关该控件的创建者或控件的用途的摘要详细信息。  
  
> [!NOTE]
>  通常情况下，不会使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>属性链接到帮助内容。 帮助提供的链接控件是使用的最佳方式<xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>属性。 在示例部分中找到该示例的完整源代码<xref:System.Web.UI.WebControls.WebParts.IWebPart>类概述。  
  
 代码示例的第一部分演示如何实现用户控件<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>属性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 代码示例的第二部分演示如何以编程方式设置的值的用户控件中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>当用户从单选按钮的页上，选择相应的属性名称的属性中的文本框中，设置新值和然后单击**更新**按钮。  
  
> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 代码示例的第三部分显示了用户如何控制实现<xref:System.Web.UI.WebControls.WebParts.IWebPart>中引用接口<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控件，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>在控件上以声明方式设置属性。 请注意，是否您不提供指向实际页面的 URL，然后用户单击标题栏中的链接，就会出现一条错误消息。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>