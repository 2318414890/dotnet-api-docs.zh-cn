<Type Name="EditorZoneBase" FullName="System.Web.UI.WebControls.WebParts.EditorZoneBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80d6ac7d5bcbffdea3a3f854e9a56c3ad973e8ed" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585432" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorZoneBase&#xA;Inherits ToolZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone" />
  <TypeSignature Language="F#" Value="type EditorZoneBase = class&#xA;    inherit ToolZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>用作充当 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的容器的所有区域控件的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类是继承自一个专用的区域类<xref:System.Web.UI.WebControls.WebParts.ToolZone>类，并提供一组基本的行为的派生区域包含<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 有几个其他类型的<xref:System.Web.UI.WebControls.WebParts.ToolZone>类; 有关详细信息，请参阅概述主题面向<xref:System.Web.UI.WebControls.WebParts.ToolZone>类。 其他工具和区域一样，<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>页处于正常浏览模式时，区域不可见; 仅当页面处于编辑显示模式时才它们是可见的。 也喜欢其他工具区域，<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域只能包含它们被设计为包含的控件的特殊类型 (在这种情况下，<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件)。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域为它们包含的编辑控件提供一个特殊的用户界面。 许多这些 UI 元素是通用的 Web 部件控件集内的所有区域。 Web 部件区域中的常见 UI 元素的详细讨论，请参阅类概述主题面向<xref:System.Web.UI.WebControls.WebParts.WebZone>类。  
  
 因为<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类为抽象类，不能直接在网页上使用它。 相反，你必须使用继承自的控件<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类并实现其行为。 你可以使用 Web 部件控件集中, 提供的派生的区域<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件，或者可以派生自己的自定义<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类提供的常见用户界面 (UI) 来包含特殊的控件，使最终用户能够编辑属性、 布局和外观和的其他特性<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 某些属性应用于 UI 指的谓词，如<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>，和<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>属性。 谓词是由用户在页面上，执行的常见操作和由按钮、 链接、 菜单项或其他元素表示用户界面中。 例如，当用户编辑控件上的属性时则可以单击应用谓词来保存所做的更改。  
  
 多个其他属性会影响显示在编辑 UI 中的各个点的文本。 其中包括<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A>，和<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A>属性。  
  
 两个重要属性提供对相关控件的引用。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性是集合的<xref:System.Web.UI.WebControls.WebParts.EditorPart>该区域中包含的控件。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A>属性是对控件中包含的对象引用<xref:System.Web.UI.WebControls.WebParts.WebPartZone>-这可能有点<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或任何其他 ASP.NET 服务器控件、 用户控件或当前正在编辑的自定义控件。  
  
 最后，<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A>属性引用的实例<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>对象与该区域，该键相关联且包含的外围 UI 元素 （称为 chrome） 例如标题和边框样式的样式特征<xref:System.Web.UI.WebControls.WebParts.EditorPart>该区域中的控件。  
  
 大量的方法<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类专门用于处理其他控件的编辑。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A>方法可更改编辑显示模式回正常浏览视图的页。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>方法对于创建 chrome （即外围 UI 元素，如边框、 谓词、 图标和标题） 环绕每个是<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域中的控件。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>方法是一个抽象方法; 派生的类重写它创建的所有实例<xref:System.Web.UI.WebControls.WebParts.EditorPart>该区域中包含的控件。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>如果，可以由派生类调用方法的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>中某种编程的原因，标志的 Web 部件控件集可以重新创建和更新的集合的区域更改控件<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>方法用于设置的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到`null`时编辑模式中的显示模式更改回浏览模式。 最后，<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A>方法用于处理事件时<xref:System.Web.UI.WebControls.WebParts.WebPart>控制进入或离开编辑模式。 例如，此方法是同步的属性值的方便位置<xref:System.Web.UI.WebControls.WebParts.WebPart>中关联的可编辑值的控件<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。  
  
   
  
## Examples  
 下面的代码示例演示几个声明性和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。 因为类为抽象类，这些代码示例使用派生<xref:System.Web.UI.WebControls.WebParts.EditorZone>附带 Web 部件控件集，演示的属性和方法，它继承自的类<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。  
  
 下面的代码示例包含四个部分：  
  
-   使你能够更改用户控件在网页上显示模式。  
  
-   网页包含<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件。  
  
-   自定义<xref:System.Web.UI.WebControls.WebParts.EditorZone>类，该类演示的一些<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类成员。  
  
-   该示例在浏览器中的工作原理说明。  
  
 用户控件的源代码来自于另一个主题。 对于此代码示例正常工作，你需要获取该用户控件从.ascx 文件[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)主题，并在此代码示例的.aspx 页所在的文件夹中的文件的位置。  
  
 下面的代码示例的第二部分是一个网页包含对的声明性引用<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件。 页面顶部附近是`Register`指令用户控件。 用户控件标记声明中包含的页面`<uc1:DisplayModeMenu>`元素。 请注意，下面的`<asp:WebPartZone>`元素是`<asp:EditorZone>`包含的元素<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，并具有各种标记和设置属性，以确定其外观和行为。 大部分页中的代码演示的各种编程用法<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>属性和方法。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#1)]  
  
 下面的代码示例的第三部分是一个自定义<xref:System.Web.UI.WebControls.WebParts.EditorZone>类，用于说明如何使用大量的<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类成员。 自定义的类派生自<xref:System.Web.UI.WebControls.WebParts.EditorZone>，以便它可以用于区域模板中的声明性 Web 页的标记。 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 此代码示例使用动态编译;因此，你将注意到， `Register` Web 页面顶部附近的指令不引用程序集文件。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#12)]
 [!code-vb[WebParts_EditorZoneBase_Common#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#12)]  
  
 当加载浏览器中时，你可以选择**编辑模式**从下拉列表，以切换到编辑模式。 可以在这两个控件之一的标题栏中单击谓词菜单 （向下箭头），还可以单击**编辑**编辑该控件。 当可见编辑 UI，你可以看到各种声明性的效果，以编程方式使用的<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类成员。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>如果你想要开发一个自定义区域，以便承载<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />控件，你必须确定你是否想要提供区域模板支持。通过实现的类型创建了一个区域模板<see cref="T:System.Web.UI.ITemplate" />接口，并且如果你想要启用使用自定义区域以引用的页开发人员是必需的<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />网页的声明性标记该区域内的控件。如果您需要区域模板支持，你应继承自<see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />类。与此相反，如果你自定义的区域并将其<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />控件会成为自包含，并将不使用任何页开发人员在区域模板中，以声明方式指定控件的选项以编程方式创建它们，然后你可以直接继承从<see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />类。如果这样做，是关键是要实现<see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />方法，以便你的自定义时区将起作用。</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化该类供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数，由继承的类，调用时将传递<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>对象传递给<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件，显示的编辑的用户界面 (UI) 的页。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplyVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ApplyVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使最终用户能够在编辑模式下应用对控件所做的编辑更改。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 允许最终用户应用对控件所做的更改。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用谓词引用的<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>控件上的属性派生自<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。 应用谓词保存到服务器控件当前正在编辑的编辑最终用户已编辑的用户界面 (UI) 中的更改。 默认情况下，应用谓词将出现在 UI 作为<xref:System.Web.UI.WebControls.Button>控件。 按钮的类型可以是图像、 一个链接或实际的按钮;你可以设置这谓词的所有按钮在区域中 （而不是为各个按钮） 通过设置继承<xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>在区域级别的属性。  
  
 应用谓词是区域级别的控件，这意味着尽管可能存在多个<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，每个编辑处于编辑模式的服务器控件的一个或多个属性应用谓词发挥普遍从所有应用所有更改<xref:System.Web.UI.WebControls.WebParts.EditorPart>到服务器控件区域中的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>属性同时以声明方式和以编程方式。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 下面的代码示例的第一部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>以声明方式在网页中的属性。 此示例自定义谓词的文本。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>属性以编程方式，通过使用切换按钮来启用或禁用它。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#4)]
 [!code-vb[WebParts_EditorZoneBase_Common#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#4)]  
  
 当加载浏览器中时，你可以选择**编辑模式**下拉列表控件，以切换到编辑模式中。 可以单击其中一个控件，标题栏中的谓词菜单 （向下箭头），还可以单击**编辑**编辑所选的控件。 当<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件和编辑 UI 可见时，你会看到表示该应用谓词，然后单击的按钮**切换应用谓词启用**按钮以启用或禁用它。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CancelVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CancelVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使最终用户能够取消在编辑模式下对控件所做的编辑更改。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 允许最终用户取消对控件所做的编辑更改。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取消谓词引用的<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>控件上的属性派生自<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。 取消谓词取消编辑最终用户对编辑的用户界面 (UI) 中的服务器控件所做的更改。 默认情况下，取消谓词将出现在 UI 作为<xref:System.Web.UI.WebControls.Button>控件。 按钮的类型可以是图像、 一个链接或实际的按钮;你可以设置这谓词的所有按钮在区域中 （而不是为各个按钮） 通过设置继承<xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>在区域级别的属性。  
  
 当用户取消编辑更改，无中的更改<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制应用于正在编辑的服务器控件。 此外，页面仍然处于编辑显示模式，但<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件将被隐藏和<xref:System.Web.UI.WebControls.WebParts.WebPart>已正在编辑的控件不再处于选中状态。 这允许最终用户可以选择其他<xref:System.Web.UI.WebControls.WebParts.WebPart>而无需更改编辑控件再次显示模式。  
  
 取消谓词是区域级别的控件，含义： 尽管可能存在多个<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，每个编辑处于编辑模式的服务器控件的一个或多个属性的取消谓词发挥普遍若要取消所有更改从所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域中的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>属性同时以声明方式和以编程方式。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 下面的代码示例的第一部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>以声明方式在网页中的属性。 此示例自定义谓词的文本。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>属性以编程方式，通过使用切换按钮来启用或禁用它。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#5)]
 [!code-vb[WebParts_EditorZoneBase_Common#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#5)]  
  
 当加载浏览器中时，你可以选择**编辑模式**下拉列表控件，以切换到编辑模式中。 可以单击其中一个控件，标题栏中的谓词菜单 （向下箭头），还可以单击**编辑**编辑所选的控件。 当<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件和编辑 UI 可见时，你会看到表示取消谓词，然后单击的按钮**切换 CancelVerb 启用**按钮以启用或禁用它。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="editorZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用户在区域的页眉中单击关闭谓词便可以调用此方法，此方法一经调用，就会结束编辑 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的过程，并使 Web 部件页的显示模式返回到浏览模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A>方法提供一个实现声明中的基方法<xref:System.Web.UI.WebControls.WebParts.ToolZone>类。 实现只需调用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>方法，执行结束编辑进程所需的步骤。  
  
 调用<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A>方法返回页后，可以浏览模式，并取消对任何进行任何编辑更改<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="editorZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建与 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 区域关联的子控件集。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateEditorPartChrome () As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::EditorPartChrome ^ CreateEditorPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome&#xA;override this.CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="editorZoneBase.CreateEditorPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取对新的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 对象的引用，该对象用于呈现 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 区域周围的外围用户界面 (UI) 元素。</summary>
        <returns>为区域呈现外围 UI 元素的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>方法返回一个新<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>对象。 Chrome 包括环绕每个单独的以下外围 UI 元素<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域中的控件： 边框; 标题栏显示在标题栏中，包括可选的图标、 标题文本和谓词菜单; 和呈的项目中的项控件的页脚区域。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>方法使用返回<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>对象以创建解决每个 chrome<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />可以提供不同的实现派生类中重写方法。例如，你可能创建一个自定义<see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" />类来为你提供更好地控制的呈现和编辑的用户界面的外观。如果你重写<see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />派生区域中的方法，你可以创建自定义<see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" />中重写方法的对象。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZoneBase.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供一个基方法声明，派生的区域可以重写该声明，以便处理创建 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的详细信息，这些控件包含在某个区域中。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件集合的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />，这些控件与区域关联。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>方法不提供任何实现。 它旨在实现在派生类中，并应该用于创建的集合的实例<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件包含在区域中，每当承载网页进入编辑模式。 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=nameWithType>方法提供的实现的一个示例<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 控件当前是否正在显示。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 当前正在显示，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EditorPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorPartChrome As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartChrome ^ EditorPartChrome { System::Web::UI::WebControls::WebParts::EditorPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorPartChrome : System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 类的实例的引用，该类与 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 区域关联。</summary>
        <value>对于某个区域中 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 控件的 chrome 元素，包含其样式属性的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A>属性提供对的引用<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>与区域相关的对象。 当<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>方法被调用时，它创建的实例<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>类与此实例用于所有呈现外围设备的用户界面 (UI) 元素 （也称为 chrome）<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域中的控件。  
  
 个人的 chrome 元素<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件将其边框和其他项包含在其标题区域，如谓词、 图标和标题文本，以及其页脚区域和其包含的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="EditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorParts As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartCollection ^ EditorParts { System::Web::UI::WebControls::WebParts::EditorPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorParts : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 区域中包含的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 控件的集合。</summary>
        <value>包含某个区域中所有单个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性提供对所有的集合的引用<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域中的控件。 它引用同时<xref:System.Web.UI.WebControls.WebParts.EditorPart>附带 Web 部件控件集，以及任何自定义控件<xref:System.Web.UI.WebControls.WebParts.EditorPart>添加到的区域的控件。 因为集合是只读的开发人员希望创建自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件的常规编辑并将它们添加到集合应重写<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>方法。  
  
 如果您设计自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件来编辑特定<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，则应重写的成员<xref:System.Web.UI.WebControls.WebParts.IWebEditable>界面--<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>方法和<xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>属性--在<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 若要重写这些成员的原因是为了启用您<xref:System.Web.UI.WebControls.WebParts.WebPart>控件创建自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件并将其添加到<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>集合时正在编辑控件，并为编辑控件提供一个对象引用到<xref:System.Web.UI.WebControls.WebParts.WebPart>他们正在编辑的控件。 如果你想要添加自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件编辑一个不是继承自的服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPart>类，则必须实现<xref:System.Web.UI.WebControls.WebParts.IWebEditable>接口的类中，正如的一样<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
> [!NOTE]
>  请注意对任何<xref:System.Web.UI.WebControls.WebParts.EditorPart>，它将添加到的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>的实现中的控件<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>方法必须具有分配给其 ID 属性的值，否则将集合分配给时引发异常<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性以编程方式。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 下面的代码示例的第一部分演示<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性包含对所有的引用<xref:System.Web.UI.WebControls.WebParts.EditorPart>网页中以声明方式引用的控件。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 以编程方式访问的代码示例的第二部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性，并在每个控件的 ID 列出<xref:System.Web.UI.WebControls.Label>控件。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#6)]
 [!code-vb[WebParts_EditorZoneBase_Common#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#6)]  
  
 如果加载浏览器中，你可以单击**显示编辑器部件集合**按钮以列出的所有 Id<xref:System.Web.UI.WebControls.WebParts.EditorPart>中引用的控件<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要添加到集合的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 的 ID 属性尚未赋值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当区域不包含任何控件时显示的消息。</summary>
        <value>一个字符串，其中包含在空区域中显示的消息。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public virtual string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在编辑用户界面 (UI) 顶部显示的区域级错误消息的文本。</summary>
        <value>包含错误消息的本地化字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>属性包含如果呈现控件派生自过程中发生错误，可以在 UI 中显示的错误消息文本<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。 如果中的任何单个发生错误，错误消息显示在该区域的顶部<xref:System.Web.UI.WebControls.WebParts.EditorPart>该区域中包含的控件。 此外，单个<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件可以显示在接收到错误时该控件旁边自己错误消息。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域的页眉区的文本。</summary>
        <value>一个字符串，包含区域的页眉文本。 默认值为空字符串("")。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 控件中为最终用户提供说明的文本。</summary>
        <value>一个字符串，其中包含为最终用户提供的说明。 适合特定工具区域的默认值由派生的 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 类提供。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateEditorParts">
      <MemberSignature Language="C#" Value="protected void InvalidateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateEditorParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateEditorParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateEditorParts : unit -&gt; unit" Usage="editorZoneBase.InvalidateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将与 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 控件集合设置为 <see langword="null" />，从而调用 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> 方法重新创建集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>可以由派生类调用方法，如果列表<xref:System.Web.UI.WebControls.WebParts.EditorPart>与关联的控件<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>由于某种原因，更改区域，并且派生的类需要获取更新的列表<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 派生的类应调用<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>，该设置的当前集合`null`。 下一次<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>访问集合时，将自动设置的 Web 部件控件时，将调用<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>方法来创建已更新的收集。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="editorZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前保存的状态。</param>
        <summary>为某个区域加载以前保存的状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState%2A>方法重写基方法，以检查是否因为 OK 谓词、 取消谓词或应用谓词被单击的区域中正在加载页。 如果是这样，该方法将处理与每个各自方案关联的状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> 对象的大小与当前视图状态对象的大小不相等。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OKVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OKVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ OKVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OKVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象将应用在编辑模式下对控件所做的编辑更改，并隐藏编辑用户界面 (UI)。</summary>
        <value>应用对控件所做的编辑更改，并隐藏编辑 UI 的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OK 谓词引用的<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>控件上的属性派生自<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。 它等同于应用谓词，因为当用户单击它，它将应用编辑用户对服务器控件所做的更改。 此外，编辑控件将被隐藏，<xref:System.Web.UI.WebControls.WebParts.WebPart>已正在编辑的控件不再处于选中状态 （它允许用户编辑另一个控件），并且页面仍然处于编辑模式。  
  
 默认情况下，OK 谓词将出现在 UI 作为<xref:System.Web.UI.WebControls.Button>控件。 按钮的类型可以是图像、 一个链接或实际的按钮;你可以设置这谓词的所有按钮在区域中 （而不是为各个按钮） 通过设置继承<xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>在区域级别的属性。  
  
 OK 谓词是区域级别的控件，含义： 尽管可能存在多个<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，每个编辑处于编辑模式的服务器控件的一个或多个属性的确定谓词发挥普遍从所有应用的所有更改<xref:System.Web.UI.WebControls.WebParts.EditorPart>在该区域，以及隐藏除外的区域本身当中的所有控件的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>属性同时以声明方式和以编程方式。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 下面的代码示例的第一部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>以声明方式在网页中的属性。 此示例自定义谓词的文本。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何访问<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>以编程方式，通过使用切换按钮来启用或禁用它。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#7)]
 [!code-vb[WebParts_EditorZoneBase_Common#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#7)]  
  
 当加载浏览器中时，你可以选择**编辑模式**下拉列表控件，以切换到编辑模式中。 可以单击其中一个控件，标题栏中的谓词菜单 （向下箭头），还可以单击**编辑**编辑所选的控件。 当<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件和编辑 UI 可见时，你会看到表示 OK 谓词，然后单击的按钮**切换 ok 谓词启用**按钮以启用或禁用它。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayModeChanged (sender As Object, e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayModeChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayModeChanged : obj * System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="editorZoneBase.OnDisplayModeChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引发 <see cref="T:System.Object" /> 事件的 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> 事件并破坏区域中的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 和子控件，以便为网页进入或退出编辑显示模式作准备。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>方法提供中的基方法的实现<xref:System.Web.UI.WebControls.WebParts.ToolZone>类。  
  
 主要用途<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>方法是准备 Web 页后，可以进入或退出编辑显示模式。 该方法销毁该区域中包含的所有控件，然后调用基方法，将引发<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>中的事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>派生类中的方法。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 自定义编辑器区域派生自<xref:System.Web.UI.WebControls.WebParts.EditorZone>类，以便它可以用于区域模板中的声明性 Web 页的标记。 自定义类替代<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>方法，将该区域的背景色设置为指定的颜色，然后调用基方法，从而破坏所有子和<xref:System.Web.UI.WebControls.WebParts.EditorPart>中准备进入或退出编辑控件显示模式。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#13](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#13)]
 [!code-vb[WebParts_EditorZoneBase_Common#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#13)]  
  
 当加载浏览器中时，你可以选择**编辑模式**下拉列表控件，以切换到编辑模式中。 可以单击其中一个控件，标题栏中的谓词菜单 （向下箭头），还可以单击**编辑**编辑所选的控件。 当<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件和编辑用户界面 (UI) 可见时，你可以看到该区域具有代码中指定的背景色。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />方法可以重写或继承的自定义编辑器区域控件中以编程方式调用<see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />类或<see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />类。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="editorZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件，并调用 <see cref="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender" /> 方法来处理 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的 chrome 元素。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedWebPartChanged (sender As Object, e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedWebPartChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedWebPartChanged : obj * System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="editorZoneBase.OnSelectedWebPartChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引发 <see cref="T:System.Object" /> 事件的 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> 事件，并在区域中将 <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" /> 集合设置为 <see langword="null" />，以便为 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件进入或退出编辑模式作准备。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A>方法使你可以提供当个人时发生的事件的自定义处理<xref:System.Web.UI.WebControls.WebParts.WebPart>控制进入或退出编辑模式。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A>派生类中的方法。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 自定义编辑器区域派生自<xref:System.Web.UI.WebControls.WebParts.EditorZone>类，以便它可以用于区域模板中的声明性 Web 页的标记。 自定义类替代<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A>方法，设置特定的控件的背景色正在编辑的并随后调用基方法。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#14)]
 [!code-vb[WebParts_EditorZoneBase_Common#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#14)]  
  
 当加载浏览器中时，你可以选择**编辑模式**下拉列表控件，以切换到编辑模式中。 可以单击其中一个控件，标题栏中的谓词菜单 （向下箭头），还可以单击**编辑**编辑所选的控件。 当<xref:System.Web.UI.WebControls.WebParts.EditorZone>和编辑用户界面 (UI) 可见时，你可以看到所选的控件具有在代码中指定的背景色。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />方法可以重写或继承的自定义编辑器区域控件中以编程方式调用<see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />类或<see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />类。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="editorZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含该事件参数的 <see cref="T:System.String" />。</param>
        <summary>执行与某一区域谓词关联的操作，或引发发布回服务器的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent%2A>如果这些谓词之一已在用户界面 (UI) 中单击确定谓词、 取消谓词中，或应用谓词中，与关联的相应操作执行方法。 否则，它会发出回发到服务器的事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将区域呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>方法重写基方法从<xref:System.Web.UI.WebControls.WebControl>类来调用<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>方法，验证是否在运行时以 HTML 形式呈现为区域控件。 验证之后，该方法然后调用基方法，以呈现该区域的完整内容。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>重写基方法，以便呈现某个区域的正文区，该区域从 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 类派生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A>方法将呈现的正文区，<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域，也不能是页眉和页脚区域之间的主要内容区域包含<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A>方法重写中的基方法<xref:System.Web.UI.WebControls.WebParts.WebZone>类以提供地址布局和样式的专用的呈现属性仅适用于<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域。 该方法将呈现表包含的正文的整个内容，并在该表中，设置不同的属性值，具体取决于各种条件，包括页面的当前显示模式。 如果有不包含任何控件，它就会呈现的值<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A>派生类中的方法。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 自定义编辑器区域派生自<xref:System.Web.UI.WebControls.WebParts.EditorZone>类，以便它可以用于区域模板中的声明性 Web 页的标记。 自定义类替代<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A>方法，添加 HTML`<hr />`元素创建的标头和正文的区域之间的连线。 然后，它调用基方法，以呈现区域的正文内容的其余部分。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#15](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#15)]
 [!code-vb[WebParts_EditorZoneBase_Common#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#15)]  
  
 当加载浏览器中时，你可以选择**编辑模式**下拉列表控件，以切换到编辑模式中。 可以单击其中一个控件，标题栏中的谓词菜单 （向下箭头），还可以单击**编辑**编辑所选的控件。 当<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件和编辑用户界面 (UI) 可见时，你可以看到创建的标头和正文的编辑器区域之间的行。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现在区域级应用的谓词。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A>方法呈现谓词其操作应用于整个区域: 确定谓词、 取消谓词中，和应用谓词。 中引用这些谓词<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>，和<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A>派生类中的方法。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类概述主题。  
  
 自定义编辑器区域派生自<xref:System.Web.UI.WebControls.WebParts.EditorZone>类，以便它可以用于区域模板中的声明性 Web 页的标记。 自定义类替代<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A>方法，将一些文本添加到的现有值<xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Text%2A>属性为每个区域级别的谓词。 然后，它调用基方法，以呈现所有谓词。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#16](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#16)]
 [!code-vb[WebParts_EditorZoneBase_Common#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#16)]  
  
 当加载浏览器中时，你可以选择**编辑模式**下拉列表控件，以切换到编辑模式中。 可以单击其中一个控件，标题栏中的谓词菜单 （向下箭头），还可以单击**编辑**编辑所选的控件。 当<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件和编辑用户界面 (UI) 可见时，你可以看到文本已更改为该区域底部的区域级别谓词按钮上。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="editorZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将页面发布回服务器之后，保存已发生的所有视图状态的更改。</summary>
        <returns>返回区域控件的当前视图状态。 如果没有与区域关联的视图状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState%2A>方法调用基方法，以将视图状态保存并应用、 取消和确定谓词带来的任何视图状态，还将保存。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="editorZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>曲目更改为区域控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState%2A>方法首先调用基方法，以跟踪与关联的视图状态<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域，，然后将开始跟踪应用、 取消和 OK 谓词的视图状态。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToEdit : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对当前正在编辑的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的引用。</summary>
        <value>当前处于编辑模式中的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有一个<xref:System.Web.UI.WebControls.WebParts.WebPart>可一次，以及当控件处于编辑模式，编辑控件<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A>属性提供对该控件的引用。 所引用的控件是由引用的控件相同<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>属性。 因此，当前正在编辑的控件始终是当前选定。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>受保护<see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />属性是仅在派生类，可以在基本调用此属性可访问<see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />类，以获取对当前正在编辑的控件的对象引用。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      </Docs>
    </Member>
  </Members>
</Type>