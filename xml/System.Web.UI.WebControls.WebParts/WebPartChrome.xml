<Type Name="WebPartChrome" FullName="System.Web.UI.WebControls.WebParts.WebPartChrome">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85a134919631b10ab0a28eeb73f0438692a4bb89" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebPartChrome" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartChrome extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartChrome" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartChrome" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>允许开发人员仅重写 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 区域中 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 或服务器控件的选定部分的呈现。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 部件 chrome 指帧每的外围设备的用户界面 (UI) 元素<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或服务器控件中包含<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。 控件的镶边包括其边框时，其标题栏和图标、 标题文本和谓词菜单标题栏中显示。 Chrome 的外观设置在区域级别和适用于该区域中的所有服务器控件。  
  
 Web 部件控件集使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类来呈现的镶边<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 此外，此类提供了开发人员自定义的任何单个部分 （如页眉或页脚中） 的呈现方式<xref:System.Web.UI.WebControls.WebParts.WebPart>中控制<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>而无需处理这些控件的所有呈现的区域。 例如，你可以重写<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A>方法以自定义某些特定样式特性应用于<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域，但您可以依赖于默认呈现来处理其余工作。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类包含当你想要重写的呈现时非常有用的几个重要方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 其中一个是<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A>方法，使你能够更改的样式特性<xref:System.Web.UI.WebControls.Style>与关联的对象<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>用于呈现控件的对象。 另一种是<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.%23ctor%2A>构造函数，则重写时，你使用<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A>在自定义的方法<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>类来创建自定义实例<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象。 另一个有用方法是<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A>方法，你可以使用来控制的内容区域的区域 （而不是 chrome 元素，如页眉、 页脚和标题栏） 中的控件的呈现。 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A>方法使你能够从呈现，排除某些谓词，如果出于某些原因你不希望用户看到这些 UI 中的谓词。 最后，如果你希望的呈现的所有方面的完全编程控制<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，可以重写<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart%2A>方法。  
  
 几个属性<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类也很有用。 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A>属性提供对与关联的区域的引用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象和当前<xref:System.Web.UI.WebControls.WebParts.WebPartManager>实例，分别。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类重写的默认呈现<xref:System.Web.UI.WebControls.WebParts.WebPart>中控制<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。  
  
 下面的代码示例包含四个部分：  
  
-   一个用户控件，使你能够更改 Web 部件页面上的显示模式。  
  
-   承载在示例中的所有控件的网页。  
  
-   包含自定义的源代码的类<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域和<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类。  
  
-   该示例的工作原理的说明。  
  
 下面的代码示例的第一部分是用户控件。 用户控件的源代码来自于另一个主题。 对于此代码示例正常工作，你需要获取该用户控件从.ascx 文件[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)主题，并在此代码示例的.aspx 页所在的文件夹中的文件的位置。  
  
 该示例的第二部分是网页。 请注意，没有`Register`指令文件用于注册已编译的组件和标记前缀顶部附近。 此外请注意，页面引用使用元素的自定义区域`<aspSample:MyZone>`和包括在此区域中多个标准的 ASP.NET 服务器控件。 服务器控件不会实现任何实际的功能;他们此处仅用于阐释如何<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类功能将应用于呈现区域。 请注意，这些服务器控件，但它们不是实际<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，每个自动换行 （由 ASP.NET 中) 使用的是<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象在运行时，这样它们将具有与相同的功能<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
 [!code-aspx-csharp[WebParts_WebPartChrome_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/webpartchromecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartChrome_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/webpartchromevb.aspx#1)]  
  
 下面的代码示例的第三个部分是自定义的源<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域和<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类。 在自定义区域类的构造函数，则代码将检查`MyZone.RenderVerbsInMenu`属性。 如果值为`true`，谓词呈现菜单中的每个<xref:System.Web.UI.WebControls.WebParts.WebPart>区域中的控件。 这是 Web 部件控件集内的正常，默认行为。 如果`MyZone.RenderVerbsInMenu`属性值是`false`此自定义的区域中的默认值时，谓词呈现单独为每个控件的标题栏中的链接。 请注意，在 Web 页的代码在何处`<aspSample:MyZone>`元素进行声明、 没有`RenderVerbsInMenu`属性设置为`true`，以便在控件上的菜单中将显示谓词。 若要体验此功能，你可以设置的声明性`RenderVerbsInMenu`属性设为`false`，并记下谓词为链接的呈现方式。  
  
 自定义<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类重写在几种方法上, 呈现和自定义的区域创建的实例`MyWebPartChrome`类在其<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A>方法。 这适用于页的自定义的呈现。 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#2)]
 [!code-vb[WebParts_WebPartChrome_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#2)]  
  
 当你加载网页的浏览器中时，你可以查看各种样式和其他呈现自定义项中的源代码中的所做`MyWebPartChrome`类显示在<xref:System.Web.UI.WebControls.WebParts.WebPart>在区域中呈现的控件。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>继承自<see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />类在你想要重写的某些部分的默认呈现<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />或服务器控件。 你可以选择重写<see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.PartChromeType)" />方法，<see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart)" />方法，特别是<see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />或<see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />方法，以自定义的呈现。 若要使用您的自定义<see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />类<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />在区域中，控件开发派生自一个自定义区域<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />类，并重写其<see cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome" />方法。 有关如何使用子级的详细信息<see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />对象在区域中，请参阅示例部分。</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartChrome (System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, System.Web.UI.WebControls.WebParts.WebPartManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, class System.Web.UI.WebControls.WebParts.WebPartManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.#ctor(System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Web.UI.WebControls.WebParts.WebPartManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (zone As WebPartZoneBase, manager As WebPartManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartChrome(System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, System::Web::UI::WebControls::WebParts::WebPartManager ^ manager);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="manager" Type="System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Parameters>
      <Docs>
        <param name="zone">关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 控件。</param>
        <param name="manager">当前页中的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件。</param>
        <summary>初始化控件的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.%23ctor%2A>初始化的新实例<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类。 它主要由<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域在其<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A>方法创建的实例<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>处理 chrome 呈现和任何自定义呈现的对象<xref:System.Web.UI.WebControls.WebParts.WebPart>区域中的控件。  
  
   
  
## Examples  
 下面的代码示例演示两种情况。 首先，创建自定义类的新实例`MyWebPartChrome`通过重写<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A>方法在派生<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域调用`MyZone`。 第二个的构造函数中`MyWebPartChrome`类，它可以在类中使用的私有字段到分配的构造函数参数中的对象。 此示例从而为您提供用于访问关联的区域的方法和<xref:System.Web.UI.WebControls.WebParts.WebPartManager>之前对象构造函数中，即使在<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A>和<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A>属性是可访问。 最后，请注意，若要构造函数，基构造函数必须还调用的方法声明的一部分。  
  
 下面的代码包含两个自定义类。 所需要运行该示例的完整代码，包括 Web 页后，可以承载这些控件，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类概述主题。  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#2)]
 [!code-vb[WebParts_WebPartChrome_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="zone" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPartChromeStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateWebPartChromeStyle (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.PartChromeType chromeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateWebPartChromeStyle(class System.Web.UI.WebControls.WebParts.WebPart webPart, valuetype System.Web.UI.WebControls.WebParts.PartChromeType chromeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.PartChromeType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateWebPartChromeStyle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::PartChromeType chromeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="chromeType" Type="System.Web.UI.WebControls.WebParts.PartChromeType" />
      </Parameters>
      <Docs>
        <param name="webPart">当前正在呈现的控件。</param>
        <param name="chromeType">特定控件的 chrome 类型；<see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 枚举值之一。</param>
        <summary>创建样式对象，该对象为 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 对象呈现的每个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 控件提供样式特性。</summary>
        <returns>包含 <paramref name="webPart" /> 的样式特性的 <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A>方法创建<xref:System.Web.UI.WebControls.Style>对象，由用于<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象用于呈现<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 默认方法创建基于的样式特性<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>属性值<xref:System.Web.UI.WebControls.WebParts.WebPart>中引用的控件`webPart`参数。  
  
 一种特殊情况发生时<xref:System.Web.UI.WebControls.WebParts.WebPart>控件被选定。 如果该页是中的页面显示模式，其中可以选择控件，并且实际上选择当前的控件，默认值<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A>方法还将合并用的样式信息的控件的样式信息<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A>属性。  
  
   
  
## Examples  
 此代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A>方法。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类概述主题。  
  
 以下部分中的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A>方法。 请注意，它首先检索由基方法，创建的样式信息，然后修改通过更改使用的字体的样式信息<xref:System.Web.UI.WebControls.WebParts.WebPart>控制呈现。  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#5)]
 [!code-vb[WebParts_WebPartChrome_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#5)]  
  
 如果你加载网页的浏览器中，你可以看到中使用的字体<xref:System.Web.UI.WebControls.WebParts.WebPart>控件是在重写指定<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="chromeType" /> 不是 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 枚举值之一。</exception>
        <block subset="none" type="overrides">
          <para>如果从继承<see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />类，可以选择替代<see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.PartChromeType)" />方法，并从具有自定义样式的基方法的样式信息属性你想要添加的合并。 有关演示，请参阅示例部分中的代码。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle" />
      </Docs>
    </Member>
    <Member MemberName="DragDropEnabled">
      <MemberSignature Language="C#" Value="protected bool DragDropEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DragDropEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartChrome.DragDropEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DragDropEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool DragDropEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示是否可以将控件拖入和拖出区域的值。</summary>
        <value>一个指示是否可以拖动控件的布尔值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.DragDropEnabled%2A>属性的值确定<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterWebPartVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection FilterWebPartVerbs (System.Web.UI.WebControls.WebParts.WebPartVerbCollection verbs, System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection FilterWebPartVerbs(class System.Web.UI.WebControls.WebParts.WebPartVerbCollection verbs, class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbCollection,System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ FilterWebPartVerbs(System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ verbs, System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbs" Type="System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="verbs">与控件关联的所有谓词的集合，<c>webPart</c> 参数中引用了该控件。</param>
        <param name="webPart">当前正在呈现的控件。</param>
        <summary>基于开发人员提供的条件，从呈现中排除特定谓词。</summary>
        <returns>包含与 <paramref name="webPart" /> 关联的所有谓词的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs%2A>方法使您能够自动筛选与关联的谓词的集合从某些谓词<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，并防止呈现已筛选的谓词。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="verbs" /> 集合为 <see langword="null" />。  
  
 \- 或 -<see langword="" /><paramref name="webPart" /> 为 <see langword="null" />。</exception>
        <block subset="none" type="overrides">
          <para>如果创建自定义<see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />类，可以选择替代<see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbCollection,System.Web.UI.WebControls.WebParts.WebPart)" />方法筛选出特定谓词呈现。 若要执行此操作的最常见方法是创建私有方法中检查谓词<see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />集合<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />控件，并确定是否每个谓词应呈现好，根据你选择的条件。 请注意，该基方法提供了大量的默认筛选条件，将会很难重现如果完全重写方法;如果你只有几种特殊情况，你可能想要首先调用基方法，，然后将生成的集合传递通过你自己的其他方法以应用你自定义的筛选条件。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPartChromeClientID">
      <MemberSignature Language="C#" Value="protected string GetWebPartChromeClientID (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetWebPartChromeClientID(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartChromeClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetWebPartChromeClientID(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">当前正在呈现的控件。</param>
        <summary>获取网页中呈现的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 对象的客户端 ID。</summary>
        <returns>一个包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 对象的客户端 ID 的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartChromeClientID%2A>方法获取包含的表的客户端 ID`webPart`呈现。 表是直接对应的呈现的输出<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象，并用作容器来应用样式并创建控件的模块化布局。  
  
 可用于获取的客户端 ID<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>客户端编写脚本的目的，如果你想要更改的镶边中的某些内容而无需将此页回发到服务器对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPartTitleClientID">
      <MemberSignature Language="C#" Value="protected string GetWebPartTitleClientID (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetWebPartTitleClientID(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetWebPartTitleClientID(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">当前正在呈现的控件。</param>
        <summary>获取表单元格的客户端 ID，该表单元格包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的标题。</summary>
        <returns>一个包含 <paramref name="webPart" /> 标题的客户端 ID 的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID%2A>方法检索的表格单元格包含标题的客户端 ID 值`webPart`呈现。  
  
 在其中的重要方案<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID%2A>方法用于获取的标题单元格的客户端 ID`webPart`为 Web 部件拖放功能。 该方法也是有用的其他客户端编写脚本的目的。 例如，你无法更改的标题或具有客户端脚本，而不必将页面回发到服务器的单元格的样式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartChromeClientID(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPartVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection GetWebPartVerbs (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection GetWebPartVerbs(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ GetWebPartVerbs(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">当前正在呈现的控件。</param>
        <summary>获取应使用 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件呈现的谓词的集合。</summary>
        <returns>包含应使用 <paramref name="webPart" /> 呈现的所有谓词的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A>方法提供的机会的开发人员能够重写该方法并呈现中排除某些谓词。 它类似于<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs%2A>方法，还可以排除呈现的谓词。  
  
 但是，<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A>方法不适合你想要检查某些条件来决定是否呈现谓词的情况。 相反，此方法很有用，当您事先知道你始终想要排除某个谓词。 例如，如果开发一个自定义<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类，你可能决定要始终在排除关闭谓词<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，以便用户可以永远不会关闭的控件。 而不是设置<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>属性`false`可以上所有控件，你只需重写<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A>方法和排除关闭任何上呈现的谓词<xref:System.Web.UI.WebControls.WebParts.WebPart>呈现与您的自定义控件<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象。  
  
   
  
## Examples  
 下面的代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A>方法。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类概述主题。  
  
 以下部分中的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs%2A>方法。 重写的方法使用基方法来检索中的所有谓词`webPart`控制，然后循环访问添加到关闭谓词除外的所有谓词的谓词集合<xref:System.Collections.ArrayList>对象。 这减少的一组谓词然后分配给一个新<xref:System.Web.UI.WebControls.WebParts.WebPartVerbCollection>，在返回到调用方。  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#4)]
 [!code-vb[WebParts_WebPartChrome_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#4)]  
  
 如果您加载浏览器中的 Web 页并单击每个谓词菜单 （显示具有标题栏中的向下箭头）<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，你可以看到关闭谓词不呈现任何控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="PerformPreRender">
      <MemberSignature Language="C#" Value="public virtual void PerformPreRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformPreRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.PerformPreRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformPreRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformPreRender();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>执行在呈现 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件之前必须完成的任务。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderPartContents">
      <MemberSignature Language="C#" Value="protected virtual void RenderPartContents (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPartContents(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPartContents(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="writer">接收 <c>webPart</c> 内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="webPart">当前正在呈现的控件。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的主要内容区域，不包括页眉和页脚。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A>方法使你能够重写的正文区的呈现`webPart`，同时保持为默认呈现呈现页眉和页脚。  
  
   
  
## Examples  
 下面的代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A>方法。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类概述主题。  
  
 以下部分中的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents%2A>方法。 重写的方法执行两项操作的正文呈现进行自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 首先，它检查，以确定是否当前选定控件，以及如果是这样，写出的字符串并不会呈现内容。 第二个，如果未选择控件，以及如果该控件的区域的类型是`MyZone`，该方法将呈现的控件。 如果你想要确保自定义，则无法使用此后一种检查<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类可以仅用于呈现<xref:System.Web.UI.WebControls.WebParts.WebPart>中特定类型的控件<xref:System.Web.UI.WebControls.WebParts.WebPartZone>设计为包含的区域<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象。  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#6)]
 [!code-vb[WebParts_WebPartChrome_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#6)]  
  
 如果你加载网页的浏览器中，你可以看到通常会呈现每个控件的内容。 如果将页切换到设计模式 (通过选择**设计**中**显示模式**下拉列表控件)，将每个控件拖入标有空白区域**WebPartZone2**，控件的内容呈现方式不同，因为自定义<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象不用于标准区域中呈现。 这是您所获得的如果你尝试使用自定义的相同效果<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类除了以外的任何其他区域`MyZone`类，由于前面的源代码。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以选择重写<see cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />方法。 因此，只需执行任何呈现自定义项所需的<paramref name="webPart" />，然后调用其<see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />方法。 如果还想要依赖于发生连接错误时的默认呈现，则应首先，调用基方法，然后自定义<paramref name="writer" />从基方法返回。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RenderWebPart">
      <MemberSignature Language="C#" Value="public virtual void RenderWebPart (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderWebPart(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderWebPart(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="writer">接收 <c>webPart</c> 内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="webPart">当前正在呈现的控件。</param>
        <summary>呈现完整的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件及其所有部分。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart%2A>方法呈现完整<xref:System.Web.UI.WebControls.WebParts.WebPart>具有标头、 内容和页脚的控件。 重写此方法提供的开发人员可以完全对呈现的所有方面进行编程控制`webPart`，并为此，重写此方法是很复杂。 中的某些其他方法与<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>开发人员可以重写，如果你重写此方法，一个常见和有用的方法是首先，调用基方法的类需要<xref:System.Web.UI.WebControls.WebParts.WebPart>返回，且它的一些属性，自定义控件而不处理完成呈现自己。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> 引用的控件为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对当前 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 实例的引用。</summary>
        <value>对网页上当前 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A>属性提供对当前的引用<xref:System.Web.UI.WebControls.WebParts.WebPartManager>页上的实例。  
  
   
  
## Examples  
 此代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A>属性。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类概述主题。  
  
 下面的代码示例使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager%2A>属性来确定是否当前<xref:System.Web.UI.WebControls.WebParts.WebPart>呈现的控件是所选的控件，在此示例中这意味着，该页是在编辑视图中，并且当前正在编辑控件。 如果这些条件都成立，无法呈现控件的正文，并在其位置写入一个字符串。  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#6)]
 [!code-vb[WebParts_WebPartChrome_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#6)]  
  
 如果你加载网页的浏览器中，你可以通过将页切换置于编辑模式下选择**编辑**中**显示模式**下拉列表控件。 你可以单击任何一个控件; 的谓词菜单中的编辑谓词当呈现页时，则不会呈现编辑所选控件的正文。 但是，如果你将控件拖到标有空白区域**WebPartZone2**，呈现的控件的正文。 这是因为第二个区域是一种标准<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域，并且它不使用自定义<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>在此示例中呈现的类<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Zone As WebPartZoneBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 区域的引用。</summary>
        <value>对与 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A>属性提供对的引用<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>为其包含的控件的区域<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象提供呈现。  
  
   
  
## Examples  
 此代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A>属性。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类概述主题。  
  
 下面的代码示例使用<xref:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone%2A>属性来确定该区域是否当前与关联<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象是类型的区域中`MyZone`。 如果是这样，呈现控件的内容。 此代码将使自定义<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>中使用任何其他区域除了旨在创建它的实例的一个对象。  
  
 [!code-csharp[WebParts_WebPartChrome_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/CS/MyChrome.cs#6)]
 [!code-vb[WebParts_WebPartChrome_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartChrome_Overview/VB/MyChrome.vb#6)]  
  
 如果你加载网页的浏览器中，通常呈现每个控件的内容。 你可以通过选择将页切换到设计模式下**设计**中**显示模式**下拉列表控件。 如果在拖动其中一个控件到标有空白区域**WebPartZone2**，其内容呈现方式不同，因为自定义<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>对象不用于呈现。 这是您所获得的如果你尝试使用自定义的相同效果<xref:System.Web.UI.WebControls.WebParts.WebPartChrome>类除了以外的任何其他区域`MyZone`类，由于前面的源代码。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
  </Members>
</Type>