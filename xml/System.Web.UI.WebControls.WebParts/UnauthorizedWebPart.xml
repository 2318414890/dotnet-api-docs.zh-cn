<Type Name="UnauthorizedWebPart" FullName="System.Web.UI.WebControls.WebParts.UnauthorizedWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4526dae7d7f2bfb5ca178af940c7434d5e6032e7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36584799" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnauthorizedWebPart : System.Web.UI.WebControls.WebParts.ProxyWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UnauthorizedWebPart extends System.Web.UI.WebControls.WebParts.ProxyWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnauthorizedWebPart&#xA;Inherits ProxyWebPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnauthorizedWebPart sealed : System::Web::UI::WebControls::WebParts::ProxyWebPart" />
  <TypeSignature Language="F#" Value="type UnauthorizedWebPart = class&#xA;    inherit ProxyWebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ProxyWebPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在每次 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件的 <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> 方法对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件返回 <see langword="false" /> 时，用于创建一个占位符对象。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 部件控件集提供了一个授权机制，用于确定是否单个<xref:System.Web.UI.WebControls.WebParts.WebPart>可以向页面添加控件。 开发人员可以根据需要分配到一个任意字符串<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>属性<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 当<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件将控件添加到页上，它会检查根据条件设置由开发人员，使用此筛选器值<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>方法，并返回`false`如果控件未被授权。  
  
> [!NOTE]
>  此机制也适用于服务器控件和用户控件，都将置于<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域，因为这些控件进行包装<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象在运行时，而该对象继承<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>属性。  
  
 当<xref:System.Web.UI.WebControls.WebParts.WebPart>未授权控件，<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制插入<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>到在未经授权的控件的位置页上的控件树的控件。 <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控制树中的控件保留在页中，未经授权的控件的位置，并可以防止用户可能具有之前应用于任何个性化数据<xref:System.Web.UI.WebControls.WebParts.WebPart>丢失的控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件永远不会显示在页上，在其中插入该实体，也不会出现在呈现的页面的源代码。 开发人员可以通过检查来验证如果它存在于页面控件树<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>属性<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件。  
  
 下面的代码示例的第一部分是一个自定义<xref:System.Web.UI.WebControls.WebParts.WebPartManager>重写的控件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29>方法来创建自定义授权条件。 任何<xref:System.Web.UI.WebControls.WebParts.WebPart>具有的控制其<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>将授权属性设置为特定值或分配给属性，没有值的任何控件，以及未被授权控件不满足这些条件。  
  
 [!code-csharp[WebParts_UnauthorizedWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_UnauthorizedWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/VB/MyManagerAuthorize.vb#2)]  
  
 下面的代码示例的第二个部分是承载自定义程序的 Web 页<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。 有三个声明中的静态服务器控件`<asp:webpartzone>`元素。 尽管这些控件不是实际<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，它们将自动换行与<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>对象在运行时，因此你可以将它们视为<xref:System.Web.UI.WebControls.WebParts.WebPart>控制并因此将值分配给其<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>属性。 请注意，<xref:System.Web.UI.WebControls.BulletedList>控件有设置应启用它要为其授权，根据在自定义的条件的值为其筛选器<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件。 <xref:System.Web.UI.WebControls.Label>控件有一个筛选器值，应会导致其无法进行授权。 <xref:System.Web.UI.WebControls.Calendar>控件不将值分配给属性，因此默认情况下应获得授权。  
  
 [!code-aspx-csharp[WebParts_UnauthorizedWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_UnauthorizedWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/VB/IsAuthorizedVB.aspx#1)]  
  
 代码示例的第三个部分是必须在 Web.config 文件，以使导出 Web 部件描述文件中添加的设置。 确保你有此代码示例为 Web 页相同的目录中的 Web.config 文件。 在`<system.web>`部分中，请确保有`<webParts>`具有元素`enableExport`属性设置为`true`，如下所示的以下标记。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 加载在浏览器中，页，并请注意，<xref:System.Web.UI.WebControls.BulletedList>和<xref:System.Web.UI.WebControls.Calendar>按预期方式呈现控件但<xref:System.Web.UI.WebControls.Label>由于未授权，则不会呈现控件。 单击**列表 web 部件控件**按钮原因<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件列表中的所有控件的 Id 及其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>集合。 请注意，ID<xref:System.Web.UI.WebControls.Label>系统列出了控件，可证明，<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件已添加到页面控件树，若要保留它的位置，即使该标签不呈现在页中。  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" /> 控件的新实例的属性数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>构造函数，在这两个其重载调用基类构造函数<xref:System.Web.UI.WebControls.WebParts.ProxyWebPart>类。 这些构造函数初始化属性数据并创建的新实例<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件。  
  
 当<xref:System.Web.UI.WebControls.WebParts.WebPartManager>添加控件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件 （和其他服务器或用户控件） 到其集合中的控件，它会检查每个控件使用<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>方法。 如果控件实例未被授权，某些控件 （如其 ID) 的属性值被分配到属性在新<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件，与<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件然后添加到失败，在控件的位置页上的控制树授权。  
  
 <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件永远不会呈现在页中，并且用户无法知道它是否存在。 但是，<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件还可作为一个占位符，保持在控制树中，原始的控件的位置和维护原始控件的任何预先存在个性化数据。 这样一来，如果用户以前个性化控件，该站点将成为未经授权由于某种原因，并且更高版本才得到授权，可以还原该用户的个性化数据。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnauthorizedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.#ctor(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnauthorizedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" Usage="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart webPart" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">未经 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件授权的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" /> 控件的新实例，在某个静态 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件（或者服务器控件或用户控件）授权失败时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>构造函数采用静态控件`webPart`作为参数，其中`webPart`失败授权检查。 静态控件是指在 Web 页上，而不是以编程方式添加的标记中声明。 构造函数将返回的新实例<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件，添加到页面的控制树中代替`webPart`。 有关详情，请参阅<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnauthorizedWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string originalID, string originalTypeName, string originalPath, string genericWebPartID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnauthorizedWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart : string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" Usage="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart (originalID, originalTypeName, originalPath, genericWebPartID)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">包含原始服务器控件或原始用户控件的 ID 的字符串，这类控件被添加到 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 中，成为了 Web 部件应用程序的一部分。</param>
        <param name="originalTypeName">一个字符串，包含原始控件的类型的名称。</param>
        <param name="originalPath">一个字符串，包含用户控件（如果原始控件是用户控件）的相对虚拟路径。</param>
        <param name="genericWebPartID">包含 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件的 ID 的字符串，该控件包装原始服务器控件或原始用户控件。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" /> 控件的新实例，在某个动态 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件（或者服务器控件或用户控件）授权失败时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>构造函数中调用时动态<xref:System.Web.UI.WebControls.WebParts.WebPart>或其他服务器控件失败其授权检查。 动态控件是指添加到页上，以编程方式或通过从 Web 部件的目录的用户可以控制。 <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>构造函数将返回的新实例<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>控件替换身份验证失败的动态控件。 有关详情，请参阅<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
      </Docs>
    </Member>
  </Members>
</Type>