<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9f741-101">定义用于应用程序和个性化状态的提取的附加管理功能。</span><span class="sxs-lookup"><span data-stu-id="9f741-101">Defines additional management capabilities for the application and extraction of personalization state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f741-102">除了使用`Personalizable`属性上的控件属性，控件还可以实现<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>对应用程序和提取的个性化设置状态的其他管理功能。</span><span class="sxs-lookup"><span data-stu-id="9f741-102">In addition to using the `Personalizable` attribute on control properties, a control can also implement <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> for additional management capabilities for the application and extraction of personalization state.</span></span> <span data-ttu-id="9f741-103">例如，需要管理的私有状态信息的控件应实现此接口。</span><span class="sxs-lookup"><span data-stu-id="9f741-103">For example, controls that need to manage private state information should implement this interface.</span></span> <span data-ttu-id="9f741-104">复杂的机制，例如自定义缓存解决方案，数据暂留到大型机或 XML Web 服务，通过访问个性化的数据的控件还应实现此接口。</span><span class="sxs-lookup"><span data-stu-id="9f741-104">Controls that access personalized data through complex mechanisms, such as custom cache solutions, data persistence to mainframes, or XML Web services, should also implement this interface.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f741-105">不应添加基于在 App_Code 目录中定义的类的类型，并且然后依赖于默认二进制序列化机制。</span><span class="sxs-lookup"><span data-stu-id="9f741-105">You should not add types based on classes defined in the App_Code directory and then depend on the default binary serialization mechanism.</span></span> <span data-ttu-id="9f741-106">因为，它们可以及时更改随机点在其程序集名称，则不一致的二进制文件的可序列化 App_Code 基于工件。</span><span class="sxs-lookup"><span data-stu-id="9f741-106">App_Code-based artifacts are not consistently binary-serializable due to the fact that they can have their assembly names changed at random points in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f741-107">下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>接口。</span><span class="sxs-lookup"><span data-stu-id="9f741-107">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interface.</span></span> <span data-ttu-id="9f741-108">该示例包含引用一个名为的 Web 部件控件的.aspx 页`UrlListWebPart`。</span><span class="sxs-lookup"><span data-stu-id="9f741-108">The example consists of an .aspx page that references a Web Part control named `UrlListWebPart`.</span></span> <span data-ttu-id="9f741-109">下面的代码是此示例的.aspx 文件。</span><span class="sxs-lookup"><span data-stu-id="9f741-109">The following code is the .aspx file for the example.</span></span>  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 <span data-ttu-id="9f741-110">下面的代码是自定义的源<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="9f741-110">The following code is the source for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="9f741-111">应将此文件放在 App_Code 目录中。</span><span class="sxs-lookup"><span data-stu-id="9f741-111">This file should be placed in the App_Code directory.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 <span data-ttu-id="9f741-112">加载浏览器中的页。</span><span class="sxs-lookup"><span data-stu-id="9f741-112">Load the page in a browser.</span></span> <span data-ttu-id="9f741-113">在名称中的类型表示一个 URL，然后将添加实际 URL 开头`http://`，然后单击**添加**按钮以添加此 URL。</span><span class="sxs-lookup"><span data-stu-id="9f741-113">Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f741-114">获取一个值，该值指示控件管理的自定义数据是否已经更改。</span><span class="sxs-lookup"><span data-stu-id="9f741-114">Gets a value that indicates whether the custom data that a control manages has changed.</span></span></summary>
        <value>
          <span data-ttu-id="9f741-115">如果用 <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> 接口管理的自定义数据已经更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f741-115"><see langword="true" /> if the custom data managed with the <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> interface has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f741-116">时管理控件的数据已更改，控件才被视为"脏"。</span><span class="sxs-lookup"><span data-stu-id="9f741-116">When data managed by a control has changed, the control is considered "dirty."</span></span> <span data-ttu-id="9f741-117">控件应返回`true`如果自定义数据它管理通过<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>接口已更改。</span><span class="sxs-lookup"><span data-stu-id="9f741-117">A control should return `true` if the custom data that it manages through the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interface has changed.</span></span> <span data-ttu-id="9f741-118">如果控件返回`true`从该属性，该控件的<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>在属性值提取过程中调用接口方法的实现。</span><span class="sxs-lookup"><span data-stu-id="9f741-118">If a control returns `true` from this property, the control's <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> interface method implementation is called during property value extraction.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f741-119">此属性的处理 POST 请求的后期阶段，自动由个性化基础结构进行检查。</span><span class="sxs-lookup"><span data-stu-id="9f741-119">This property is checked automatically by the personalization infrastructure during the latter phases of processing a POST request.</span></span> <span data-ttu-id="9f741-120">但是，对于 GET 请求，返回的值从<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>不检查属性。</span><span class="sxs-lookup"><span data-stu-id="9f741-120">However, for GET requests, the value returned from the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property is not checked.</span></span> <span data-ttu-id="9f741-121">某些其他事件必须导致控件被视为"脏"的任何控件状态-不只是数据由<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>-要保存。</span><span class="sxs-lookup"><span data-stu-id="9f741-121">Some other event has to have caused the control to be considered "dirty" for any control state--not just data managed by <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--to be saved.</span></span> <span data-ttu-id="9f741-122">如果控件可以将自身标记为"脏"GET 请求过程，或在某些非常特定的边界条件下的个性化基础结构中将控件视为"脏"期间 GET 请求中，然后<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>将始终调用。</span><span class="sxs-lookup"><span data-stu-id="9f741-122">If a control can mark itself as "dirty" during a GET request, or if the personalization infrastructure under some very specific boundary conditions considers a control "dirty" during a GET request, then <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> will always be called.</span></span>  
  
 <span data-ttu-id="9f741-123">控件可以引用其关联<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件，并检查<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>属性来确定当前作用域。</span><span class="sxs-lookup"><span data-stu-id="9f741-123">A control can reference its associated <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control and check the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property to determine the current scope.</span></span> <span data-ttu-id="9f741-124">控件的自定义数据的"脏"状态应该适用于当前作用域。</span><span class="sxs-lookup"><span data-stu-id="9f741-124">The "dirty" state of a control's custom data should be appropriate for the current scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f741-125">下面的代码示例演示使用<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9f741-125">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property.</span></span> <span data-ttu-id="9f741-126">该示例的第一部分是承载的网页<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="9f741-126">The first part of the example is the Web page that hosts a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 <span data-ttu-id="9f741-127">该示例的第二部分是自定义的代码<xref:System.Web.UI.WebControls.WebParts.WebPart>控件称为`UrlListWebPart`。</span><span class="sxs-lookup"><span data-stu-id="9f741-127">The second part of the example is the code for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control called `UrlListWebPart`.</span></span> <span data-ttu-id="9f741-128">应将此文件放在要运行此示例的 App_Code 目录中。</span><span class="sxs-lookup"><span data-stu-id="9f741-128">This file should be placed in the App_Code directory to run the example.</span></span> <span data-ttu-id="9f741-129">请注意，源代码实现<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9f741-129">Note that the source code implements the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 <span data-ttu-id="9f741-130">加载浏览器中的页。</span><span class="sxs-lookup"><span data-stu-id="9f741-130">Load the page in a browser.</span></span> <span data-ttu-id="9f741-131">在名称中的类型表示一个 URL，然后将添加实际 URL 开头`http://`，然后单击**添加**按钮以添加此 URL。</span><span class="sxs-lookup"><span data-stu-id="9f741-131">Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="9f741-132">包含从基础数据存储区中加载的自定义范围确定数据的 <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="9f741-132">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</span></span></param>
        <summary><span data-ttu-id="9f741-133">将自定义数据加载到控件中。</span><span class="sxs-lookup"><span data-stu-id="9f741-133">Loads custom data into a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f741-134">允许它加载到其自身的自定义数据的控件上调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9f741-134">This method is called on a control to allow it to load custom data into itself.</span></span> <span data-ttu-id="9f741-135">它还可以返回一个值，该值指示是否必须重新写入控件的自定义状态到基础数据存储区，无论是否已更改的页上的任何其他个性化数据。</span><span class="sxs-lookup"><span data-stu-id="9f741-135">It can also return a value that indicates whether a control's custom state must be written back to the underlying data store, regardless of whether any other personalization data on the page has changed.</span></span> <span data-ttu-id="9f741-136">控件可以设置其自己的自定义属性，并执行其他内部逻辑基于个性化字典中包含的值。</span><span class="sxs-lookup"><span data-stu-id="9f741-136">A control can set its own custom properties and carry out additional internal logic based on the values contained in the personalization dictionary.</span></span> <span data-ttu-id="9f741-137">由 Web 部件控件集应用到控件的个性化数据时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="9f741-137">This method is called by the Web Parts control set while applying personalization data to a control.</span></span>  
  
 <span data-ttu-id="9f741-138">你还应注意的合并行为<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-与作用域<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>的作用域中包含属性<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>对象。</span><span class="sxs-lookup"><span data-stu-id="9f741-138">You should also be aware of the merge behavior of <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped versus <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-scoped properties contained in the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> object.</span></span> <span data-ttu-id="9f741-139">`state`参数包含从基础数据存储区加载的自定义数据的合并表示形式。</span><span class="sxs-lookup"><span data-stu-id="9f741-139">The `state` parameter contains a merged representation of custom data that was loaded from the underlying data store.</span></span> <span data-ttu-id="9f741-140">在<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>作用域，请在页本身时以前添加的所有值<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>作用都域将可用。</span><span class="sxs-lookup"><span data-stu-id="9f741-140">In <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope, all the values that were previously added when the page itself was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope would be available.</span></span> <span data-ttu-id="9f741-141">在<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>作用域，请与关联的值如果<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>个性化设置作用域具有一个值时在页面处于添加<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>作用域和不同的值时在页面处于<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>作用域，然后个性化基础结构将仅包括<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>的作用域值 (而非<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>确定值的范围) 内`state`参数。</span><span class="sxs-lookup"><span data-stu-id="9f741-141">In <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> scope, if a value associated with <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> personalization scope had one value added when the page was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope, and a different value when the page was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> scope, then the personalization infrastructure would only include the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped value (as opposed to the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope value) within the `state` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f741-142">下面的代码示例演示如何实现<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>在自定义的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="9f741-142">The following code example demonstrates an implementation of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="9f741-143">运行此示例中所需的完整代码，请参阅中的示例部分<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>类概述。</span><span class="sxs-lookup"><span data-stu-id="9f741-143">For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="9f741-144">包含从基础数据存储区中加载的自定义范围确定数据的 <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="9f741-144">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</span></span></param>
        <summary><span data-ttu-id="9f741-145">在控件的 <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> 对象中保存自定义属性和内部状态信息。</span><span class="sxs-lookup"><span data-stu-id="9f741-145">Saves custom properties and internal state information in the control's <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f741-146">服务器控件可以存储其自己的自定义属性和内部状态信息<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>中指定`state`参数。</span><span class="sxs-lookup"><span data-stu-id="9f741-146">A server control can store its own custom properties and internal state information the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> specified in the `state` parameter.</span></span> <span data-ttu-id="9f741-147">信息存储为一系列名称/值对。</span><span class="sxs-lookup"><span data-stu-id="9f741-147">The information is stored as a series of name/value pairs.</span></span> <span data-ttu-id="9f741-148">要使用它可以识别对通过该控件所做的后续调用的过程的名称/值对的控件负责<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9f741-148">It is the responsibility of the control to use name/value pairs that it can recognize during subsequent calls made to the control through the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method.</span></span>  
  
 <span data-ttu-id="9f741-149">控件可以引用其关联<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件，并检查<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>对象来确定当前作用域。</span><span class="sxs-lookup"><span data-stu-id="9f741-149">A control can reference its associated <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control and check the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> object to determine the current scope.</span></span> <span data-ttu-id="9f741-150">自定义状态信息应该适用于当前作用域。</span><span class="sxs-lookup"><span data-stu-id="9f741-150">Custom state information should be appropriate for the current scope.</span></span> <span data-ttu-id="9f741-151">请注意，每个<xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>值添加到<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>对象应为适当的作用域值，与关联，因为合并时，个性化基础结构依赖于此<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>和<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>的作用域自定义数据之前将其传递给<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9f741-151">Note that each <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> value that is added to the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> object should be associated with the appropriate scope value, because the personalization infrastructure depends on this when merging <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> and <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped custom data prior to passing it to the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method.</span></span>  
  
 <span data-ttu-id="9f741-152">在使用 Web 部件的标准 ASP.NET 实现时，控件必须确保放置在状态字典的对象可以进行序列化 asp.net<xref:System.Web.UI.ObjectStateFormatter>类。</span><span class="sxs-lookup"><span data-stu-id="9f741-152">When using the standard ASP.NET implementation of Web Parts, controls must ensure that objects placed in the state dictionary can be serialized by the ASP.NET <xref:System.Web.UI.ObjectStateFormatter> class.</span></span> <span data-ttu-id="9f741-153">在实践中，这意味着：</span><span class="sxs-lookup"><span data-stu-id="9f741-153">In practice, this means the following:</span></span>  
  
-   <span data-ttu-id="9f741-154">基元的.NET Framework 类型、 字符串和如数组、 数组列表、 哈希表和混合字典集合面向.NET Framework 类型都自动序列化。</span><span class="sxs-lookup"><span data-stu-id="9f741-154">Primitive .NET Framework types, strings, and collection-oriented .NET Framework types such as arrays, array lists, hash tables, and hybrid dictionaries, are automatically serializable.</span></span>  
  
-   <span data-ttu-id="9f741-155">提供其自己的自定义类型<xref:System.ComponentModel.TypeConverter>类可以为序列化和反序列化从字符串被视为可序列化。</span><span class="sxs-lookup"><span data-stu-id="9f741-155">Custom types that supply their own <xref:System.ComponentModel.TypeConverter> classes capable of serializing to and deserializing from strings are considered serializable.</span></span>  
  
-   <span data-ttu-id="9f741-156">可以通过序列化的自定义类型<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>类被视为可序列化。</span><span class="sxs-lookup"><span data-stu-id="9f741-156">Custom types that can be serialized by the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class are considered serializable.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f741-157">不应添加基于在 App_Code 目录中定义的类的类型，并且然后依赖于默认二进制序列化机制。</span><span class="sxs-lookup"><span data-stu-id="9f741-157">You should not add types based on classes defined in the App_Code directory and then depend on the default binary serialization mechanism.</span></span> <span data-ttu-id="9f741-158">因为，它们可以及时更改随机点在其程序集名称，则不一致的二进制文件的可序列化 App_Code 基于工件。</span><span class="sxs-lookup"><span data-stu-id="9f741-158">App_Code-based artifacts are not consistently binary-serializable due to the fact that they can have their assembly names changed at random points in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f741-159">下面的代码示例演示如何实现<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>在自定义的方法<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。</span><span class="sxs-lookup"><span data-stu-id="9f741-159">The following code example demonstrates implementing the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="9f741-160">运行此示例中所需的完整代码，请参阅中的示例部分<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>类概述。</span><span class="sxs-lookup"><span data-stu-id="9f741-160">For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>