<Type Name="WebPartTransformer" FullName="System.Web.UI.WebControls.WebParts.WebPartTransformer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="019b74c90292b279b58c41bf7dd847b8ca80a704" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30596461" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebPartTransformer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPartTransformer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebPartTransformer" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartTransformer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为转换器类提供基本实现，以便在两个不兼容的连接点之间转换数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 转换器用于将两个连接点不兼容的 Web 部件控件之间的数据转换。 当它们提供或使用通过不同的接口的数据时，连接点不兼容。 例如，实现提供者连接点的类型的提供<xref:System.Web.UI.WebControls.WebParts.IWebPartRow>无法直接连接到客户期望的类型提供程序连接点<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>。 相反，转换器必须用于连接两个 Web 部件控件。  
  
 Transformer 接受的提供程序连接点支持的类型的数据。 它执行必要的内部处理将该数据转换为支持通过使用者连接点的类型。  
  
 转换器可以提供用户界面 (UI)，用户可以配置在连接模式下的转换器。 通过检索配置控件<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer.CreateConfigurationControl%2A>方法并在 Web 部件连接区域中显示。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 是一个抽象类，并且必须进行扩展以提供不同类型的连接点之间的自定义的翻译。  
  
   
  
## Examples  
 下面的代码示例演示如何创建派生自的自定义的转换器<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>类。 Transformer，名为`RowToStringTransformer`，允许 Web 部件提供程序和 Web 部件连接点不兼容的使用者连接。 提供程序提供的数据类型<xref:System.Web.UI.WebControls.WebParts.IWebPartRow>，但可以使用者接受类型的数据<xref:System.String>。 `RowToStringTransformer`类执行必要的转换。  
  
 下面的代码示例不包括的提供程序或使用者的实现。 你必须创建的提供程序实现<xref:System.Web.UI.WebControls.WebParts.IWebPartRow>接口和通过名为自定义界面需要数据使用者`IString`为示例正常工作。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#5)]
 [!code-vb[WebParts_WebPartTransformer_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#5)]  
  
 下面的代码示例的第一个部分包含与提供程序和使用者 Web 部件控件和转换器的代码的代码。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#4)]
 [!code-vb[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#4)]  
  
 第二部分的代码示例演示如何包含中的声明性语法 transformer<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>对象。  
  
 [!code-aspx-csharp[WebParts_WebPartTransformer_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/Transformer.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartTransformer_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/Transformer.aspx#1)]  
  
 必须指定自定义的转换器`<transformers>`Web.config 文件才可用于在网页中使用的部分。 第三部分的代码示例演示如何将自定义的转换器添加到 Web.config 文件。  
  
```vb  
<webParts enableExport="true">  
    <transformers>  
       <add name="RowToStringTransformer"  
          type="Samples.AspNet.VB.Controls.RowToStringTransformer" />  
    </transformers>  
</webParts>  
```  
  
```csharp  
<webParts enableExport="true">  
    <transformers>  
       <add name="RowToStringTransformer"  
          type="Samples.AspNet.CS.Controls.RowToStringTransformer" />  
    </transformers>  
</webParts>  
```  
  
 代码示例中包含用户控件，使你能够更改 Web 部件页面上的显示模式。 用户控件的源代码来自于另一个主题。 你可以获取该用户控件从.ascx 文件[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)，并且它必须放置在与.aspx 页相同的文件夹。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>必须重写<see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.Transform(System.Object)" />方法。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPartTransformer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebPartTransformer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConfigurationControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control CreateConfigurationControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Control CreateConfigurationControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.CreateConfigurationControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateConfigurationControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Control ^ CreateConfigurationControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 区域中显示配置转换器的 ASP.NET 控件。</summary>
        <returns>配置转换器的 ASP.NET 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Transformer 要求用户对其进行配置时，可以显示配置控件。 配置控件提供用户界面 (UI)，用户可以选择将转换的值。 在连接区域呈现。 配置控件必须实现<xref:System.Web.UI.WebControls.WebParts.ITransformerConfigurationControl>接口。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadConfigurationState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadConfigurationState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadConfigurationState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.LoadConfigurationState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadConfigurationState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadConfigurationState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个对象，包含通过使用 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" /> 保存的配置状态。</param>
        <summary>加载通过 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" /> 方法保存的配置状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法加载到用来配置转换器的 ASP.NET 控件的已保存的配置状态。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveConfigurationState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveConfigurationState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveConfigurationState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveConfigurationState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveConfigurationState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将用户设置的配置状态保存在 ASP.NET 配置控件中。</summary>
        <returns>表示配置状态的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法用于配置 transformer ASP.NET 控件中保存配置数据集。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public abstract object Transform (object providerData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Transform(object providerData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.Transform(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Transform (providerData As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Transform(System::Object ^ providerData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerData">要转换的提供者数据。</param>
        <summary>实现后，提供一个用于转换数据的对象。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示要转换的数据。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现时，您必须重写此方法<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>类。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer.Transform%2A>中自定义方法<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>类。 它是更大的示例中找到的一部分<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>类概述。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#3)]
 [!code-vb[WebParts_WebPartTransformer_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>