<Type Name="EditorZone" FullName="System.Web.UI.WebControls.WebParts.EditorZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab062c9e4bc3a29c3c5a2c44f4a1f0fcb1d33aed" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditorZone : System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditorZone extends System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZone" />
  <TypeSignature Language="VB.NET" Value="Public Class EditorZone&#xA;Inherits EditorZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZone : System::Web::UI::WebControls::WebParts::EditorZoneBase" />
  <TypeSignature Language="F#" Value="type EditorZone = class&#xA;    inherit EditorZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.EditorZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作 Web 部件控件集内的主控件，用于在网页中承载 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 部件控件集，在区域是适用于在网页上的定义的区域，包含服务器控件的复合控件。 区域的主要功能是它包含控件进行布局，并为这些控件提供常见的用户界面 (UI)。 有关区域和 Web 部件应用程序中如何使用它们的常规信息，请参阅基的参考文档<xref:System.Web.UI.WebControls.WebParts.WebZone>类，和[Web 部件控件集概述](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668)。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone>控件是一个 Web 部件控件集内的基础控件。 Web 部件的一项重要功能是能够最终用户修改 （或个性化） 网页根据他们的首选项，并保存其个性化设置供将来的浏览器会话。 修改 Web 部件页的一个方面包括; 用户可以编辑用户可以编辑的外观、 布局、 行为和其他属性的可见<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 Web 部件控件集内的多个控件提供编辑功能，包括<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone>控件变为可见的当 Web 部件页进入编辑模式，且可提供各种<xref:System.Web.UI.WebControls.WebParts.EditorPart>可以用于自定义控件<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 <xref:System.Web.UI.WebControls.WebParts.EditorZone>控件是非常类似于其父代、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类，一个主要区别：<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件提供了一个区域模板，在中引用其<xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A>属性。 区域模板添加了声明中的页持久性格式的内容的功能。 页开发人员可以将放置<xref:System.Web.UI.WebControls.WebParts.EditorZone>控制的声明性 Web 网页、 标记中添加子`<zonetemplate>`元素，并在`<zonetemplate>`元素中，添加对的声明性引用<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone>控件还具有一种方法， <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>，这会重写中的基方法<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。 此方法是必需的以便<xref:System.Web.UI.WebControls.WebParts.EditorZone>控制可以创建区域模板将包含任何<xref:System.Web.UI.WebControls.WebParts.EditorPart>以声明方式添加到的区域的控件。  
  
> [!NOTE]
>  中的按钮<xref:System.Web.UI.WebControls.WebParts.EditorZone>UI 需要客户端脚本才能正常工作。 如果浏览器中禁用了脚本，用户将无法执行操作通过<xref:System.Web.UI.WebControls.WebParts.EditorZone>UI。  
  
## <a name="accessibility"></a>可访问性  
 默认情况下，对于此控件呈现的标记可能不符合辅助功能标准，如 Web 内容辅助功能准则 1.0 (WCAG) 优先级别 1 准则。 对于此控件的辅助功能支持的详细信息，请参阅[ASP.NET 控件和可访问性](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
   
  
## Examples  
 下面的代码示例演示几个声明性和以编程方式使用<xref:System.Web.UI.WebControls.WebParts.EditorZone>类。 该示例创建一个继承自的自定义编辑器区域<xref:System.Web.UI.WebControls.WebParts.EditorZone>类，并在 Web 部件页中使用它。  
  
 代码示例包含三个部分：  
  
-   使你能够更改用户控件在网页上显示模式。  
  
-   引用自定义网页<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件。  
  
-   该示例的工作原理的说明。  
  
 此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。 有关更多详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/displaymodevb.ascx#4)]  
  
 下面的代码示例的第二部分是一个网页。 页面顶部附近是`Register`指令用户控件。 用户控件标记声明中包含的页面`uc1:`元素的前缀。 请注意，下面的`<asp:WebPartZone>`元素是`<asp:EditorZone>`包含多个元素<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，使用某些标记和设置属性，以确定其外观和行为。 也有多种方法访问的不同成员<xref:System.Web.UI.WebControls.WebParts.EditorZone>以编程方式控制。  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#1)]  
  
 当加载浏览器中时，你可以选择**编辑模式**要切换到编辑模式下的下拉列表中。 若要显示编辑 UI，你可以在这两个控件之一的标题栏中单击谓词菜单 （向下箭头），然后单击**编辑**编辑该控件。 编辑用户界面可见时，你可以看到的声明性和以编程方式使用的效果<xref:System.Web.UI.WebControls.WebParts.EditorZone>类成员。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>如果你想要创建自定义<see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />区域以获得更好地控制的呈现编辑 UI，可以直接从继承<see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />类，只要不需要提供页开发人员将添加的区域模板支持<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />以声明方式控制到你的时区。在这种情况下，你将添加所有<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />以编程方式控制的区域。如果你想要提供区域模板支持，你应继承自<see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />类。</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZone.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建以页持久性格式在区域模板中声明的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />，它包含对区域模板中声明的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的引用。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>方法重写基方法，以创建仅<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域模板中声明的控件。 任何其他<xref:System.Web.UI.WebControls.WebParts.EditorPart>必须以编程方式添加控件添加到的区域。 进行这种，例如，通过实现<xref:System.Web.UI.WebControls.WebParts.IWebEditable>接口中<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 然后，在重写<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>方法，你可以添加自定义集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>到区域的控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件没有 ID。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.EditorZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>提供模板来以页持久性格式包含 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 控件中的子控件。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 区域模板，作为区域中子控件的容器。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A>属性之间的主要区别是<xref:System.Web.UI.WebControls.WebParts.EditorZone>类和基<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类。 通过添加区域模板，对支持<xref:System.Web.UI.WebControls.WebParts.EditorZone>类使页开发人员可以将子<xref:System.Web.UI.WebControls.WebParts.EditorPart>内控制<xref:System.Web.UI.WebControls.WebParts.EditorZone>声明性 Web 页的标记中的控件。 区域模板充当子控件的容器。  
  
> [!NOTE]
>  Set 访问器<xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A>属性调用<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>方法，这会强制的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>重新创建模板中声明的控件。 这会使模板能够识别的内容的任何更改。  
  
 若要以声明方式中使用的区域模板<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件，你可以添加一对`<zonetemplate>`标记和引用<xref:System.Web.UI.WebControls.WebParts.EditorPart>标记之间的控件。 只有一个区域模板呈现的每个实例<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件 (因此，没有无需添加多个`<zonetemplate>`元素与<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件)。 此外，区域模板的<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件可以包含派生自的部件控件<xref:System.Web.UI.WebControls.WebParts.EditorPart>类。  
  
   
  
## Examples  
 下面的代码示例演示如何声明方式使用<xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A>属性。 在示例部分中找到有关该示例的完整代码<xref:System.Web.UI.WebControls.WebParts.EditorZone>类概述。  
  
 此代码示例演示如何<xref:System.Web.UI.WebControls.WebParts.EditorPart>可以将控件放在`<zonetemplate>`中的元素<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件。  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#2)]  
  
 当加载浏览器中时，你可以选择**编辑模式**要切换到编辑模式下的下拉列表中。 若要显示的编辑的用户界面 (UI)，可以在这两个控件之一的标题栏中单击谓词菜单 （向下箭头），并单击**编辑**编辑该控件。 编辑用户界面可见时，你可以看到的几个<xref:System.Web.UI.WebControls.WebParts.EditorPart>中声明的控件`<zonetemplate>`元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      </Docs>
    </Member>
  </Members>
</Type>