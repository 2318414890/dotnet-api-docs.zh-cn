<Type Name="ConnectionsZone" FullName="System.Web.UI.WebControls.WebParts.ConnectionsZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a96ee9ff4f03c02a8ad2bbb74c54b19480651e3d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36586040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConnectionsZone : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionsZone extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
  <TypeSignature Language="VB.NET" Value="Public Class ConnectionsZone&#xA;Inherits ToolZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionsZone : System::Web::UI::WebControls::WebParts::ToolZone" />
  <TypeSignature Language="F#" Value="type ConnectionsZone = class&#xA;    inherit ToolZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供用户界面 (UI)，使用户能够在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 和驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 区域的其他服务器控件之间建立连接。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 Web 部件控件集，可以启用两个服务器控件以形成连接并共享数据，其中一个控件充当提供程序，以及另一个充当数据的使用者。 这两个控件可以是<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或任何其他类型的提供，它们旨在处理的连接，并且它们驻留在的服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域。 若要了解有关 Web 部件连接的详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>和<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类概述，以及[Web 部件连接概述](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)。  
  
 假设存在形成 Web 部件连接中必需的控件和条件，则仍然需要真正地连接控件。 有三种方法，以形成服务器控件之间的连接： 声明在网页中的连接、 在代码中，创建连接或添加<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制到页，以便用户可以连接按需控件。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件生成的用户界面可使用户能够连接或断开连接页面上任何满足形成连接所需的条件的服务器控件。 它是一个可选的控件不需要建立连接，但在你想要向用户授予的控制服务器控件的连接或断开连接的情况中非常有用。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件是一个继承自的 Web 部件工具区域控件<xref:System.Web.UI.WebControls.WebParts.ToolZone>基类。 作为一个工具区域中，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件设计为仅当其网页处于某种显示模式时才可见。 在这种情况下，名为的显示模式连接模式 (一个页是在此模式下时<xref:System.Web.UI.WebControls.WebParts.WebPartManager>页上的控件具有其<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>属性值设置为<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>)。 用户将页切换到连接模式后，它们必须单击连接谓词之一的服务器控件的谓词菜单上，然后连接 UI 变得可见。  
  
 为 Web 部件区域控件，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件是一种<xref:System.Web.UI.WebControls.WebParts.WebZone>区域 (其继承自<xref:System.Web.UI.WebControls.CompositeControl>类) 设计为包含其他控件。 一般情况下，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>区域与其他 Web 部件工具区域中具有相同的元素的大多数： 标头、 正文或内容区域中和页脚。 Web 部件区域，和区域的不同部分的完整讨论，请参阅<xref:System.Web.UI.WebControls.WebParts.WebZone>类概述。  
  
> [!IMPORTANT]
>  与大多数其他 Web 部件区域中，务必要注意<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>区域不包含与它关联的服务器控件的唯一类型。 有关区域和它们所包含的关联的控件的列表，请参阅中的图表<xref:System.Web.UI.WebControls.WebParts.WebZone>类概述。 但是<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>区域不包含<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>控件。 相反，它的作用非常有限的提供用户连接或断开连接。 在某些存在的服务器控件的 UI<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>页上的区域。 包含的控件仅<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件是标准的 ASP.NET 服务器控件，它会生成用于形成连接的用户界面的一部分。  
  
 当<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>时呈现控件，它将生成基于能够形成连接页上的服务器控件的 UI。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件将确定哪些服务器控件中<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>区域在页面为使用者，哪个连接点的提供程序为可用，以及指示的服务器控件当前是否连接或断开连接，然后相应地生成 UI。  
  
 例如，假设还有一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件可提供程序，一个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件能够作为使用者，它们在中声明<xref:System.Web.UI.WebControls.WebParts.WebPartZone>在页上，并且当前已断开连接。 当用户将页切换到连接模式，并单击在上一个控件，连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件生成一个用户界面，单击时，显示窗体中哪些用户可以选择选项以创建连接的链接。 （如果以前已连接的控件，初始视图改为向用户提供一个按钮，断开的控件）。 在创建新连接连接用户界面，用户将显示哪个控件是一个提供程序，和哪个控件是使用者。 下面列出了可用每个服务器控件将出现一个下拉列表控件<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>控件的对象。 从各自的下拉列表中，用户必须选择一个<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>的提供程序 （若要确定哪些接口和数据都将与使用者共享） 的对象和一个<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象的每个使用者 (以确定哪些接口和数据将使用使用者），将连接到提供程序。  
  
> [!NOTE]
>  在 Web 部件控件集默认实现，一个提供程序可以连接到多个使用者，但使用者可以有一个提供程序。  
  
 若要使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件，你可以将其声明中`<form>`在网站上的元素 （但不是能嵌套在另一个 Web 部件区域元素） 页上，使用`<asp:connectionszone>`元素，也可以将其添加到页面以编程方式。 如果声明在页中，与其他 Web 部件区域，不同的元素不能声明任何其他类型的服务器控件的标记之间`<asp:connectionszone>`元素。 你可以声明关联到其自己的属性和样式的详细信息，其中的元素，但它是一个独立的元素并不是控件可以声明内的另一台服务器一个模板控件。  
  
> [!NOTE]
>  若要提高可访问性，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件呈现在`<fieldset>`元素。 `<fieldset>`元素进行分组的相关用于建立连接中的控件集<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制，以及它方便了这些控件之间的这两种可视用户代理 （如普通 Web 浏览器） 的选项卡式的导航和语音面向用户 （如屏幕阅读软件） 的代理。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件具有多个属性使用来呈现连接用户界面。 属性的一个集包括多个谓词-仅与连接-执行在 UI 中的操作结合使用： <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A>，和<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A>。 属性，尤其是用于连接区域 UI 中，一大组包含在 UI 中显示在不同位置 （或在某些情况下，例如中发生错误时） 的文本字符串： <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A>，和<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A>。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类还包含大量的其他 Web 部件区域中找到的公共属性： <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Display%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A>，和<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType%2A>。 最后，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A>属性是唯一的引用启动的连接的控件的类 (这是在其用户单击菜单上，也是该控件中引用其谓词中的连接动词的控件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件的<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>属性)。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类还具有多种方法，继承和从基类重写所有这些，和其中的大多数来自 Web 部件区域基类。 有关详细信息，请参阅单个方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>在 Web 部件页面上的控件。 该示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。  
  
-   网页上承载的所有控件，演示如何声明`<asp:connectionszone>`元素，并在这些连接上的属性数目区域以声明方式和以编程方式设置。  
  
-   该示例在浏览器中的工作原理说明。  
  
 此代码示例的第一部分是使用户能够切换显示模式在网页上的用户控件。 有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 该示例的第二部分是包含接口和自定义控件的源文件。 请注意，`ZipCodeWebPart`控件实现`IZipCode`接口，添加`ConnectionProvider`属性，以便控件可以充当的提供程序连接。 `WeatherWebPart`控件具有与标记的方法`ConnectionConsumer`属性，它会占用`IZipCode`接口，所以它可以充当中连接的使用者。  
  
 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 此示例使用动态编译。 有关演示如何编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ConnectionZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/ZipCodeComponent.vb#2)]  
  
 示例代码的第三个部分是网页。 顶部附近是`Register`用户控制和连接中所使用的自定义控件的指令。 <`asp:connectionszone>`元素声明在页中使用的示例作为<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>以声明方式控制。 在元素中，以声明方式设置多个属性。 在中的连接区域上的其他属性以编程方式设置`<script>`页的部分。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载 Web 页的浏览器中。 使用**显示模式**下拉列表控件，以将页切换到连接模式。 上的谓词菜单**ZIP 代码提供程序**控件 （谓词菜单将由该控件的标题栏中的向下箭头），单击连接谓词。 A<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件的外观。 请注意，在连接用户界面，**结束连接**按钮将显示; 连接已声明中的标记的页上，因此已连接的控件。 单击**结束连接**，然后使用**显示模式**控件再次返回页后，可以浏览模式。 接下来，再次返回连接模式页上，单击连接谓词上每个控件，并记下连接用户界面现在显示超链接，可用于窗体控件之间的连接。 单击该链接，并使用连接用户界面选择连接点并建立连接。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />类可以进行扩展，如果开发人员想要更改其行为或默认用户界面，它提供用于处理连接。</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionsZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConnectionsZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此默认构造函数调用在声明时`<asp:connectionszone>`ASP.NET 页中的元素。 不需要隐式调用此构造函数，除非在其中你是将控件添加到页面以编程方式的情况下。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.%23ctor%2A>构造函数来创建的新实例<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>以编程方式添加到网页上的控件。 该示例包含仅演示了使用的构造函数; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   承载所有控件的网页，并在其`Page_Init`方法，将使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.%23ctor%2A>构造函数来创建的新实例<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件并将它添加到页面。  
  
-   该示例在浏览器中的工作原理说明。  
  
 在 Web 页上，在`Page_Init`方法时，新<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>（使用构造函数） 创建控件并将其添加到页面。 当用户将页设置连接模式为并单击连接谓词之一上的<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件的外观。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_ctor/CS/connectionZoneCtorCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_ctor/VB/connectionZoneCtorVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 连接的 UI 显示方式，并已连接的控件，因为连接中的页标记声明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CancelVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CancelVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使最终用户能够取消建立连接的过程。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使最终用户能够取消连接两个控件的过程。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取消谓词，如用于<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制，是显示在连接用户界面 (UI) 中为视图的一部分在哪些用户选择的控件的连接点的区域级别动词。 当用户单击取消谓词时，它将取消选择连接点的过程，并与超链接，用户可以单击来建立新连接返回连接区域视图。  
  
 使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A>属性来获取对相应的引用<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>在 UI 中的对象。 尽管在属性本身是只读的具有对该谓词的引用后，你可以根据需要更改它的属性值。  
  
 你可以通过声明以声明方式，设置取消谓词的属性值`<cancelverb>`元素的标记中`<asp:connectionszone>`元素。 可以在窗体中以声明方式设置谓词的属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>对象 (例如， `CancelVerb-Text`)。 你还可以设置属性以编程方式在窗体中`Property.Subproperty`(例如， `CancelVerb.Text`)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以声明方式和以编程方式使用的属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在元素中，它声明`<cancelverb>`元素和设置某些使用属性的属性。 此外，在`Page_PreRender`方法，则代码会将某些属性设置上的取消谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 单击**结束连接**按钮以断开的控件的已连接由于页上的声明性连接。 单击**选择要使用连接的提供程序的使用者**超链接，并请注意设置的各种属性的效果。 如果将鼠标指针放置上**终止**按钮，将自定义的说明文本显示在工具提示。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="connectionsZone.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭由 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Close%2A>用户单击连接用户界面中的区域级别关闭谓词时调用方法。 执行方法时，将隐藏 UI，连接后<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A>属性值是`null`，和页面仍然处于连接的显示模式。 此时用户可以通过单击连接谓词在控件的谓词菜单上，选择一个控件或将页面切换到另一个显示模式。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，最终用户可使用该对象关闭由 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI)。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使最终用户可以关闭连接用户界面。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 关闭谓词，作为用于<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制，是将出现在连接用户界面 （页脚） 底部区域级别谓词。 当用户单击关闭谓词时，它取消连接过程并关闭连接用户界面，但使连接中的页面显示模式。 此时，用户也可以返回页后，可以浏览模式，或单击另一个服务器控件，以重新打开连接的用户界面上的连接谓词。  
  
 关闭谓词应有别于标头关闭谓词 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.ToolZone.HeaderCloseVerb%2A>属性)。 这两个谓词执行相同操作关闭连接 UI 中，但标头关闭谓词 UI 顶部会显示，并且由表示超链接默认情况下，而关闭谓词 UI 中的底部将显示，默认情况下由一个按钮。  
  
 使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A>属性来获取对相应的引用<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>在 UI 中的对象。 尽管在属性本身是只读的具有对该谓词的引用后，你可以根据需要更改它的属性值。  
  
 你可以通过声明以声明方式，设置关闭谓词的属性值`<closeverb>`元素的标记中`<asp:connectionszone>`元素。 可以在窗体中以声明方式设置谓词的属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>对象 (例如， `CloseVerb-Text`)。 你还可以设置属性以编程方式在窗体中`Property.Subproperty`(例如， `CloseVerb.Text`)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以声明方式和以编程方式使用的属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在元素中，它声明`<closeverb>`元素和属性使用属性的集。 此外，在`Page_PreRender`方法，则代码会将属性设置为关闭的动词的<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 单击**结束连接**按钮以断开的控件的已连接由于页上的声明性连接。 单击**选择要使用连接的提供程序的使用者**超链接，并请注意设置的各种属性的效果。 如果将鼠标指针放置上**关闭区域**按钮底部的连接用户界面，将自定义的说明文本显示在工具提示。 请注意，在连接区域的顶部的标头关闭谓词由一个超链接，并关闭谓词的属性赋值不起作用标头关闭动词的。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureConnectionTitle">
      <MemberSignature Language="C#" Value="public virtual string ConfigureConnectionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigureConnectionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConfigureConnectionTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConfigureConnectionTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigureConnectionTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本，该文本显示为 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI) 的子部分的标题。</summary>
        <value>一个字符串，包含“配置连接”部分的标题。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A>属性，以使用自定义值标题的此部分的连接用户界面。 当用户已显示连接用户界面使用现有的连接，并单击配置谓词时，会出现 UI 的配置连接部分 (默认情况下，这由**配置**连接 UI 中的按钮)。  
  
 你可以通过将分配到一个字符串以声明方式，设置属性值`configureconnectiontitle`属性`<asp:connectionszone>`网页中的标记。 或者，可以以编程方式将字符串分配给属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 因为连接已存在，现在，你看到**结束连接**按钮，和一个**配置**按钮，表示配置谓词。 如果你的连接是可配置 （它不在此代码示例），**配置**按钮，将启用; 你可以单击它以打开配置连接部分中，和标题将值分配给的代码<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConfigureVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConfigureVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConfigureVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ConfigureVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConfigureVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象用于打开连接用户界面 (UI) 中的配置视图。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，用于打开连接用户界面中的“配置连接”部分。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 连接已存在且用户已打开连接的用户界面时，配置谓词将显示在连接 UI 中，管理连接部分。 UI 显示与用户**结束连接**按钮终止连接，和一个**配置**用于配置连接 （它表示配置谓词） 按钮。 如果用户单击**配置**按钮，会出现用户界面的配置连接部分，使用户能够配置连接。 此选项以配置连接 (并因此**配置**按钮) 连接使用转换器，且转换器包含配置向导控件时，才启用 (<xref:System.Web.UI.WebControls.Wizard>)，使其成为由用户配置。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>类。  
  
 使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A>属性来获取对相应的引用<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>在 UI 中的对象。 尽管在属性本身是只读的具有对该谓词的引用后，你可以根据需要更改它的属性值。  
  
 你可以通过声明以声明方式设置配置谓词的属性值`<configureverb>`元素的标记中`<asp:connectionszone>`元素。 可以在窗体中以声明方式设置谓词的属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>对象 (例如， `ConfigureVerb-Text`)。 你还可以设置属性以编程方式在窗体中`Property.Subproperty`(例如， `ConfigureVerb.Text`)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以声明方式和以编程方式使用的属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在元素中，它声明`<configureverb>`元素和属性使用属性的集。 此外，在`Page_PreRender`方法，则代码会将属性设置上的配置谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 请注意，没有**结束连接**断开连接的控件的已连接按钮和已禁用**配置**按钮。 如果您的代码示例使用包含配置向导，transformer**配置**按钮，将启用，并且用户可以单击该配置的连接。 如果将鼠标指针放置上**配置**按钮在 UI 中，连接中的自定义的 description 文本将显示在工具提示。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToConsumerInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToConsumerInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToConsumerInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该文本会显示在用户在其中选择提供者将连接到的使用者连接点的那部分连接用户界面 (UI) 中。</summary>
        <value>一个字符串，包含关于创建到提供者的使用者连接的说明。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>属性在特定的连接方案中才会生效。 当用户单击一个提供程序的连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示的连接，使用户能够选择使用者的用户界面的一部分。 如果用户单击上使用者的连接谓词，然后连接 UI 将反过来，并显示有关连接到提供程序的信息。  
  
 中的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>属性显示正上方的下拉列表控件包含一个提供程序可以连接到可用的使用者连接点。  
  
 你可以通过使用以声明方式设置此属性`ConnectToConsumerInstructionText`中的开始标记属性`<asp:connectionszone>`元素页上，或者您可以以编程方式设置此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 单击**结束连接**按钮终止的连接，然后单击**选择要使用连接的提供程序的使用者**超链接。 使用者连接的 UI 显示方式，并自定义的文本分配给<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>属性将显示与该控件，您可以选择用于与提供程序进行连接的连接点上使用者的区域上方。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToConsumerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToConsumerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToConsumerText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置超链接的文本，单击该超链接可以打开一个视图，用户可以在其中为连接选择使用者控件。</summary>
        <value>一个作为超链接文本显示的字符串，通过该超链接可以打开用户在其中选择使用者的视图。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词提供程序控件，并且不存在连接，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件将显示带有文本的超链接**选择使用连接的提供程序的使用者**。 当用户单击该超链接时，它将打开在其中他们可以选择可用的消费型与提供程序连接的视图。  
  
 你可以通过使用以声明方式设置此属性`ConnectToConsumerText`中的开始标记属性`<asp:connectionszone>`元素页上，或者您可以以编程方式设置此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 单击**结束连接**按钮终止的连接，然后请注意，超链接将显示与分配给的自定义文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerTitle">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToConsumerTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToConsumerTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToConsumerTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置连接用户界面 (UI) 中用户可以在其中选择要连接的特定使用者的那个部分的标题文本。</summary>
        <value>一个字符串，用作用户在其中选择使用者的那个部分的标题。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词提供程序控件，以及存在任何连接时，它们将最终到达它们可以在其中选择使用以前选择的提供程序连接到使用者的视图。 此视图标题提供的<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>属性。  
  
 你可以通过使用以声明方式设置此属性`ConnectToConsumerTitle`中的开始标记属性`<asp:connectionszone>`元素页上，或者您可以以编程方式设置此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 单击**结束连接**按钮终止的连接，然后单击链接以选择使用者。 在选择使用者视图中，请注意，部分中的标题文本的文本的代码将分配给<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToProviderInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToProviderInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToProviderInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该文本会显示在用户在其中选择使用者将连接到的提供者连接点的那部分连接用户界面 (UI) 中。</summary>
        <value>一个字符串，包含关于创建到使用者的提供者连接的说明。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>属性在特定的连接方案中才会生效。 当用户单击使用者控件，则连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示的连接，使用户能够选择一个提供程序的用户界面的一部分。 如果用户单击了该提供程序上的连接谓词，然后连接 UI 将反过来，并显示有关连接到使用者信息。  
  
 中的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>属性显示正上方的下拉列表控件包含使用者可以连接到可用的提供程序连接点。  
  
 你可以通过使用以声明方式设置此属性`ConnectToProviderInstructionText`中的开始标记属性`<asp:connectionszone>`元素页上，或者您可以以编程方式设置此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 单击**结束连接**按钮终止的连接，然后单击**选择的提供程序的使用者连接与**超链接。 提供程序连接的 UI 显示方式，并自定义的文本分配给<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>属性将显示与该控件，您可以选择提供程序上的连接点用于与使用者进行连接的区域上方。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToProviderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToProviderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToProviderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置超链接的文本，单击该超链接可以打开一个视图，用户可以在其中为连接选择提供者控件。</summary>
        <value>一个作为超链接的文本显示的字符串，通过该超链接可以打开用户在其中选择提供者的视图。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词使用者控件，并且不存在连接，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件将显示带有文本的超链接**选择的提供程序使用连接到使用者**。 当用户单击该超链接时，它将打开在其中他们可以选择使用者连接的可用提供程序的视图。  
  
 你可以通过使用以声明方式设置此属性`ConnectToProviderText`中的开始标记属性`<asp:connectionszone>`元素页上，或者您可以以编程方式设置此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 单击**结束连接**按钮终止的连接，然后请注意，超链接将显示与分配给的自定义文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderTitle">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToProviderTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToProviderTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToProviderTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置连接用户界面 (UI) 中用户可以在其中选择要连接的特定提供者的那个部分的标题文本。</summary>
        <value>一个字符串，用作用户在其中选择提供者的那个部分的标题。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词使用者控件，以及存在任何连接时，它们将最终到达它们可以在其中选择使用以前选择的使用者连接到提供程序的视图。 此视图标题提供的<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>属性。  
  
 你可以通过使用以声明方式设置此属性`ConnectToProviderTitle`中的开始标记属性`<asp:connectionszone>`元素页上，或者您可以以编程方式设置此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 单击**结束连接**按钮终止的连接，然后单击链接以选择一个提供程序。 在视图中选择一个提供程序，请注意，部分中的标题文本的文本的代码将分配给<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      </Docs>
    </Member>
    <Member MemberName="ConnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConnectVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ConnectVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使两个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件可以建立连接。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使两个控件可以建立连接。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 连接谓词，如用于<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制，是显示在连接用户界面 (UI) 中为视图的一部分中的用户完成两个控件之间的连接的区域级别动词。 在用户可以在其中选择连接点的 UI 的部分连接谓词如果两个控件都能够连接，则启用用户界面底部附近。 用户选择的连接点后，他们可以单击要创建连接的连接谓词。  
  
> [!NOTE]
>  区域级别连接本主题中讨论的谓词实际控件之间建立连接和不同于出现的谓词菜单的谓词<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 当用户切换一个用于连接的显示模式，如果控件可以形成连接，Web 页<xref:System.Web.UI.WebControls.WebParts.WebPart>连接谓词出现在其谓词菜单。 这<xref:System.Web.UI.WebControls.WebParts.WebPart>连接谓词只是打开的连接创建的用户界面<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 与此相反，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A>在区域级别进行操作，本主题中讨论的谓词真正地创建连接。  
  
 使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A>属性来获取对相应的引用<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>在 UI 中的对象。 尽管在属性本身是只读的具有对该谓词的引用后，你可以根据需要更改它的属性值。  
  
 你可以通过声明以声明方式，设置连接谓词的属性值`<connectverb>`元素开始标记和结束标记之间`<asp:connectionszone>`元素。 该谓词的属性也可以设置以声明方式在的开始标记内`<asp:connectionszone>`元素，通过在窗体中添加属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>对象 (例如， `ConnectVerb-Text`)。 你还可以设置属性以编程方式在窗体中`Property.Subproperty`(例如， `ConnectVerb.Text`)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以声明方式和以编程方式使用的属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素和元素标记中，在声明`<connectverb>`元素和设置某些使用属性的属性。 此外，在`Page_PreRender`方法，则代码会将某些属性设置上的连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 单击**结束连接**按钮以断开的控件的已连接由于页上的声明性连接。 单击**选择要使用连接的提供程序的使用者**超链接，并请注意设置的各种属性的效果。 如果将鼠标指针放置上**连接控件**按钮，将自定义的说明文本显示在工具提示。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConsumersInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConsumersInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumersInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConsumersInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConsumersInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumersInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该说明文本在连接已存在时显示在连接用户界面 (UI) 的使用者部分中。</summary>
        <value>一个字符串，用作参与连接的使用者的说明文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词提供程序控件，并且已存在的连接，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示使用户可以断开连接的视图。 该视图还显示参与连接任何使用者。 正上方的使用者的列表是说明的使用者指令文本，它们的默认值是说明的多个使用者控件执行的操作的连接中。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`ConsumersInstructionText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 在打开的视图中的现有连接，在分配给的自定义文本的使用者部分中查找<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConsumersTitle">
      <MemberSignature Language="C#" Value="public virtual string ConsumersTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumersTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConsumersTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConsumersTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumersTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标题，该标题在连接已存在时显示在连接用户界面 (UI) 的使用者部分上方。</summary>
        <value>一个字符串，用作参与连接的使用者的标题文本。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词提供程序控件，并且已存在的连接，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示使用户可以断开连接的视图。 该视图还显示参与连接任何使用者。 正上方的使用者的列表为使用者指令文本，而上面的标题的使用者部分中，为其<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>属性提供的文本。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`ConsumersTitle`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 在打开的视图中的现有连接，在分配给的自定义文本的使用者部分中查找<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="connectionsZone.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件中包含的所有子控件，以准备回发到服务器或进行呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写基<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>方法。 准备连接所需的所有连接相关对象 （例如，它检索连接点对象从可用的使用者和提供程序控件），并创建与中的用户交互的各种用户界面 (UI) 控件连接 UI，以建立连接。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb DisconnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb DisconnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisconnectVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ DisconnectVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使用户可以使两个连接的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件断开连接。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使两个连接的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件断开连接。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 断开连接的谓词，如用于<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制，是显示在连接用户界面 (UI) 中为视图的一部分用户在其中管理现有连接两个控件之间的区域级别动词。 用户已点击后<xref:System.Web.UI.WebControls.WebParts.WebPart>连接的控件的谓词菜单上的谓词和用户界面出现，如果已存在两个控件之间的连接的连接，断开连接谓词激活状态出现在用户界面底部附近。  
  
 使用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A>属性来获取对相应的引用<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>在 UI 中的对象。 尽管在属性本身是只读的具有对该谓词的引用后，你可以根据需要更改它的属性值。  
  
 你可以通过声明以声明方式，设置断开连接的谓词的属性值`<disconnectverb>`元素开始标记和结束标记之间`<asp:connectionszone>`元素。 该谓词的属性也可以设置以声明方式在的开始标记内`<asp:connectionszone>`元素，通过在窗体中添加属性`Property-Subproperty`，其中`Subproperty`是的一个属性<xref:System.Web.UI.WebControls.WebParts.WebPartVerb>对象 (例如， `DisconnectVerb-Text`)。 你还可以设置属性以编程方式在窗体中`Property.Subproperty`(例如， `DisconnectVerb.Text`)。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以声明方式和以编程方式使用的属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素和元素标记中，在声明`<disconnectverb>`元素和设置某些使用属性的属性。 此外，在`Page_PreRender`方法，则代码会将某些属性设置为断开连接动词的<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**ZIP 代码提供程序**控件，然后单击连接谓词。 请注意在断开连接谓词设置属性值的效果。 如果将鼠标指针放置上**结束连接**按钮，将自定义的说明文本显示在工具提示。 单击**结束连接**按钮以断开的控件的已连接由于页上的声明性连接。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.Display" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 控件当前是否正在显示。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 当前正在显示，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本消息，该消息在网页上没有足够的控件建立连接时显示在一个空 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件中。</summary>
        <value>一个 <see cref="T:System.String" />，包含空区域的消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ExistingConnectionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ExistingConnectionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExistingConnectionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExistingConnectionErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExistingConnectionErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExistingConnectionErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本消息，该消息在现有连接出现错误或警告时显示在连接用户界面 (UI) 中。</summary>
        <value>
          <see cref="T:System.String" />，包含文本消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromText">
      <MemberSignature Language="C#" Value="public virtual string GetFromText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GetFromText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GetFromText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GetFromText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GetFromText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的提供者（使用者从该提供者检索数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于使用者将从其获取数据的指定提供者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>属性在特定的连接方案中才会生效。 当用户单击使用者控件，则连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示的视图，使用户能够建立与提供程序的连接。 在 UI，以指示用户选择的提供程序连接的一部分中点，有一些用户可以在其中选择使用者将其从获取数据的连接点在下拉列表控件之前的文本。 在下拉列表控件之前此文本是中的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>属性。 默认情况下，文本值是**从**。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`GetFromText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，在前面指定的提供者的文本提供程序部分中查找。 这是分配给的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GetText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GetText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GetText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GetText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的使用者（该使用者将从提供者检索数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于连接中的指定使用者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>属性在特定的连接方案中才会生效。 当用户单击使用者控件，则连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示的视图，使用户能够建立与提供程序的连接。 在 UI，以指示用户选择的提供程序连接的一部分中点，有一些之前将参与连接的指定使用者的文本。 之前使用者此文本是中的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>属性。 默认情况下，文本值是**获取**。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`GetText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，在前面指定的使用者的文本提供程序部分中查找。 这是分配给的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置页眉文本，该文本出现在由 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI) 的顶部。</summary>
        <value>一个字符串，包含连接用户界面的页眉文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中包含的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>属性是否可见时显示的连接 UI。 当用户单击的谓词菜单上的连接谓词<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，UI 显示方式的连接，并标头文本作为连接的用户界面的最顶部的标签。 默认文本将是**连接区域**。  
  
 此属性重写基<xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A>属性从<xref:System.Web.UI.WebControls.WebParts.WebZone>类，以便可以将默认连接区域标头文本分配给属性。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`HeaderText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，请注意，在连接区域的顶部的标头文本是分配给值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>的代码示例中的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于一般说明的文本，该说明描述在管理现有连接的那部分连接用户界面 (UI) 中所选择的控件。</summary>
        <value>一个字符串，包含连接用户界面的说明文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中包含的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A>属性是否可见时显示用户界面的连接和连接已存在。 正下方的标头文本 (包含在<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>属性)，位于顶部的连接用户界面，指令标题中，且正下方的说明文本。 说明文本会通知用户可以执行的操作类型上当前所选<xref:System.Web.UI.WebControls.WebParts.WebPart>（所选的控件是为其用户单击控件的谓词菜单上的连接谓词） 的控件。 默认情况下，说明文本是**管理当前的 Web 部件连接**。  
  
 此属性重写基<xref:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText%2A>属性从<xref:System.Web.UI.WebControls.WebParts.ToolZone>类，以便默认连接区域文本可以分配给属性的说明。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`InstructionText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，请注意靠近顶部的连接区域的说明文本是分配给值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A>的代码示例中的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      </Docs>
    </Member>
    <Member MemberName="InstructionTitle">
      <MemberSignature Language="C#" Value="public virtual string InstructionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InstructionTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于管理现有连接的连接用户界面 (UI) 中的一般说明的文本，该说明是关于可以对使用者或提供者控件执行的操作的说明。</summary>
        <value>一个字符串，包含连接用户界面的说明标题。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中包含的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A>属性是否可见时显示用户界面的连接和连接已存在。 指令标题文本是正下方的标头文本 (包含在<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>属性)，位于顶部的连接用户界面。 说明标题是会通知用户可以在使用者或提供程序上执行的操作类型的常规说明<xref:System.Web.UI.WebControls.WebParts.WebPart>参与现有连接的控件。 默认情况下，指令标题开头**管理的连接**，和结束的用户选择通过单击其谓词菜单上的连接谓词的使用者或提供商控件的名称。  
  
> [!NOTE]
>  当将自定义的值分配给此属性时，请记住，你不能知道在设计时用户将选择用于管理的连接，因此该自定义指令标题必须具有足够常规，以引用使用者或 pr 的提供程序或使用者控件是否ovider 控件。 与此相反，该属性的默认值被呈现的方式动态追加用户选择任何使用者或提供商控件的名称。 如果你想要提供模仿此行为属性的自定义值，则必须从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类，并重写此属性或<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody%2A>方法。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`InstructionTitle`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，请注意指令标题正下方的标头文本，靠近顶部的连接区域中，是分配给值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A>的代码示例中的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="connectionsZone.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>可从 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> 方法保存的上一个页请求还原控件状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当调用此方法时，它确定是否控件状态以前保存的控件，是否是这样，则将的控件状态设置为已保存的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> 的长度不等于由 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> 方法创建的数组的长度。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="connectionsZone.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">包含要还原的视图状态的 <see cref="T:System.Object" />。</param>
        <summary>从用 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> 方法保存的上一个页面请求还原视图状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构使用，但不可在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 当调用此方法时，它确定是否视图状态以前保存的控件，是否是这样，将视图状态设置为已保存的值。 方法重写<xref:System.Web.UI.WebControls.WebParts.ToolZone.LoadViewState%2A>方法继承自<xref:System.Web.UI.WebControls.WebParts.ToolZone>类，以便它可以将添加到基实现和还原状态中使用的多个区域级别动词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> 的长度不等于由 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> 方法创建的数组的长度。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NewConnectionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string NewConnectionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewConnectionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NewConnectionErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewConnectionErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewConnectionErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本消息，该消息在用户尝试创建的新连接出现错误或警告时显示在连接用户界面 (UI) 中。</summary>
        <value>
          <see cref="T:System.String" />，包含文本消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoExistingConnectionInstructionText">
      <MemberSignature Language="C#" Value="public virtual string NoExistingConnectionInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExistingConnectionInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NoExistingConnectionInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NoExistingConnectionInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExistingConnectionInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该文本在 Web 部件控件没有现有连接时出现在连接用户界面 (UI) 的正文中。</summary>
        <value>一个字符串，包含针对不存在现有连接的情况的文本消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中包含的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A>属性是否可见时显示用户界面的连接并且不启用连接存在。 用户将页切换为连接的显示模式，并单击的谓词菜单上的连接谓词后<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，显示用户界面的主连接。 如果没有当前连接，从文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A>属性显示区域的页脚区域中的关闭谓词的正上方的 UI，连接底部附近。 描述的事实是，没有任何现有连接和为用户提供了有关创建用户界面内的连接的基本说明的文本。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`NoExistingConnectionInstructionText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，单击**结束连接**按钮。 请注意，任何现有连接的说明文本显示在连接用户界面，该区域的页脚部分中的关闭谓词的正上方的底部附近。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      </Docs>
    </Member>
    <Member MemberName="NoExistingConnectionTitle">
      <MemberSignature Language="C#" Value="public virtual string NoExistingConnectionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExistingConnectionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NoExistingConnectionTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NoExistingConnectionTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExistingConnectionTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标题文本，该文本在 Web 部件控件没有现有连接时出现在连接用户界面 (UI) 的正文中。</summary>
        <value>一个字符串，包含针对不存在现有连接的情况的标题文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中包含的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A>属性是否可见时显示用户界面的连接并且不启用连接存在。 用户将页切换为连接的显示模式，并单击的谓词菜单上的连接谓词后<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，显示用户界面的主连接。 如果没有当前连接，从文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A>属性显示的正下方的链接，用户可以单击以创建新连接的连接用户界面，正文的顶部附近。 该标题概述事实任何连接存在，并且默认标题**没有活动连接**。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`NoExistingConnectionTitle`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，单击**结束连接**按钮。 请注意，任何现有连接的指令标题会出现正下方的链接，使用户能够创建新的连接。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayModeChanged (sender As Object, e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayModeChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayModeChanged : obj * System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="connectionsZone.OnDisplayModeChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的发送方。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将引发<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>事件并为其提供自定义处理程序。 网页上进入或退出连接的显示模式后，此方法执行几个步骤特有<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 方法用于取消任何此时处于挂起状态，确保通过设置显示的连接的用户界面 (UI) 从任何子控件的连接活动<xref:System.Web.UI.Control.ChildControlsCreated%2A>属性`false`，并设置连接用户界面到它的模式如果用户将继续创建连接的过程，可以显示有关现有连接的信息。  
  
 将专用的处理添加到中提供的处理<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnDisplayModeChanged%2A>方法，开发人员可以继承<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类并重写此方法。 作为替代方法，开发人员还可以提供的处理程序<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>上的事件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控件通过添加`OnDisplayModeChanged`属性设为`<asp:webpartmanager>`在网页上，并将对事件进行处理的自定义方法的值分配给它的元素。 在此方法，开发人员可以检查的当前值<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>属性，以及它是否<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>，它们可以执行所需的更改到<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="connectionsZone.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用了基<xref:System.Web.UI.WebControls.WebParts.ToolZone.OnInit%2A?displayProperty=nameWithType>方法，并添加自定义处理来准备要显示的 Web 页面<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnInit(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedWebPartChanged (sender As Object, e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedWebPartChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedWebPartChanged : obj * System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="connectionsZone.OnSelectedWebPartChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">指示事件的发送方的 <see cref="T:System.Object" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将替代<xref:System.Web.UI.WebControls.WebParts.ToolZone>实现为子控件将需要重新创建的事实重置连接用户界面 (UI)。 这是必需的因为当所选的控件更改时，将更改 UI，连接中的几个选项取决于所选的控件是否为使用者或提供程序，哪些连接点控件具有 （连接点在中列出下拉列表框控件），和其他详细信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PartChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PartChromeType As PartChromeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeType PartChromeType { System::Web::UI::WebControls::WebParts::PartChromeType get(); void set(System::Web::UI::WebControls::WebParts::PartChromeType value); };" />
      <MemberSignature Language="F#" Value="member this.PartChromeType : System.Web.UI.WebControls.WebParts.PartChromeType with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置构成 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件所包含的服务器控件的框架的边框类型。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />，确定构成连接区域中所包含控件的框架的边框类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ProvidersInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvidersInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProvidersInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProvidersInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProvidersInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该说明文本在连接已存在时显示在连接用户界面 (UI) 的提供者部分中。</summary>
        <value>一个字符串，用作参与连接的提供者的说明文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词使用者控件，并且已存在的连接，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示使用户可以断开连接的视图。 该视图还显示参与连接任何提供程序。 正上方的提供程序列表是说明的提供者指令文本，它们的默认值是说明的多个提供程序控件执行的操作的连接中。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`ProvidersInstructionText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，在分配给的自定义文本提供程序部分中查找<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersTitle">
      <MemberSignature Language="C#" Value="public virtual string ProvidersTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvidersTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProvidersTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProvidersTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProvidersTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标题，该标题在连接已存在时显示在连接用户界面 (UI) 的提供者部分上方。</summary>
        <value>一个字符串，用作参与连接的提供者的标题文本。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>属性在特定的连接方案中才会生效。 当用户单击连接谓词使用者控件，并且已存在的连接，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示使用户可以断开连接的视图。 该视图还显示参与连接任何提供程序。 只需提供程序的列表上面为提供程序指令文本，并上面的是提供程序部分的标题为其<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>属性提供的文本。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`ProvidersTitle`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>具有属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 该示例包含仅演示如何使用属性; Web 页的代码其他两个代码运行此示例，请参阅示例部分所必需的文件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。 下面的代码示例包含四个部分：  
  
-   用户控件，可用于在网页上切换显示模式。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   包含邮政编码接口和第二个代码的源文件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制充当提供程序和连接的使用者。 获取此代码从<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类概述。  
  
-   网页上承载的所有控件，声明`<asp:connectionszone>`元素，并演示如何以编程方式使用该属性。  
  
-   该示例在浏览器中的工作原理说明。  
  
 该网页声明`<asp:connectionszone>`元素，并在`Page_PreRender`方法，该代码将分配到的值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>属性。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 加载浏览器中的页。 切换到连接模式，使用**显示模式**控件。 单击此谓词菜单箭头**邮政编码使用者**控件，然后单击连接谓词。 在视图中打开的现有连接，在分配给的自定义文本提供程序部分中查找<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="connectionsZone.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含该事件参数数据的 <see cref="T:System.String" />。</param>
        <summary>当包含 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的窗体回发到服务器时引发该控件的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent%2A>方法可处理窗体包含时可能发生的几个可能结果<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件回发到服务器。 首先，如果值<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A>属性是`null`，则没有任何进一步与连接相关的操作若要充分，因此会取消任何挂起的连接，该方法返回。 其次，如果连接用户界面 (UI) 是实际可见，并且用户正在创建连接，该方法将处理可能的方案： 用户单击连接谓词，用户单击断开连接的谓词，UI 正在 transformer显示，正在关闭区域、 正在创建提供程序的连接，或正在创建使用者的连接。 在每个情况下，<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent%2A>方法采用`eventArgument`传递参数和更新<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>相应地控制。 最后，如果任何上述情况下将不应用，该方法调用基方法<xref:System.Web.UI.WebControls.WebParts.ToolZone>类。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="connectionsZone.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收 Web 部件控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的内容呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Render%2A>方法自创建的子控件发生的任何更改，或在预呈现的阶段中，更新连接用户界面 (UI)，然后调用基<xref:System.Web.UI.WebControls.CompositeControl.Render%2A?displayProperty=nameWithType>方法，该区域的内容写入到 Web 页.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CompositeControl.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="connectionsZone.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收控件的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>可将 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的正文区的内容发送到将该内容写入网页的指定 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 部件控件的主体是其页眉和页脚区域之间的部分。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody%2A>方法重写的可通过基的正文区域呈现<xref:System.Web.UI.WebControls.WebParts.WebZone.RenderBody%2A?displayProperty=nameWithType>方法。  
  
 此方法将添加到基呈现应用于的唯一样式属性<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件，并还会呈现以及合适的内容的子控件在连接用户界面 (UI)，基于以前选择的 UI 中的用户。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="connectionsZone.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收要在连接区域中呈现的谓词内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>可为 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件呈现区域级别的谓词。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法呈现附带的多个区域级别谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。 作为此方法的一部分<xref:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb%2A?displayProperty=nameWithType>方法也称为呈现的每个谓词的详细信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPartVerb)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="connectionsZone.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>可保存自页面上次回发到服务器以来发生的任何 Web 部件控件状态更改。</summary>
        <returns>返回 Web 部件控件的当前状态。 如果没有与控件关联的状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件是在任何模式除外显示现有的连接详细信息的模式中可见，并且如果它有与之关联的连接详细信息有关的控件状态数据<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState%2A>方法将数据保存，以便能保持在向服务器的往返行程。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="connectionsZone.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页面上次回发到服务器以来发生的 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的视图状态更改。</summary>
        <returns>返回包含控件的当前视图状态的 <see cref="T:System.Object" />。 如果没有与控件关联的视图状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视图状态是 Web 部件控件的属性的值的累计。 这些值会自动放置在该控件的<xref:System.Web.UI.Control.ViewState%2A>属性，它是实例的<xref:System.Web.UI.StateBag>类。 保存状态的控件的生命周期阶段后，此属性的值随后会保存到一个字符串对象。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState%2A>方法将添加到基实现的功能，用于保存视图状态中的各种谓词的<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SendText">
      <MemberSignature Language="C#" Value="public virtual string SendText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SendText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SendText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SendText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SendText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的提供者（该提供者将向使用者发送数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于连接中的指定提供者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A>属性在特定的连接方案中才会生效。 当用户单击一个提供程序的连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示的视图，使用户能够建立与使用者的连接。 在 UI，以指示用户可以选择使用者连接的一部分中点，还有之前将参与连接的命名的提供一些文本。 此文本前面提供程序是中的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A>属性。 默认情况下，文本值是**发送**。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`SendText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      </Docs>
    </Member>
    <Member MemberName="SendToText">
      <MemberSignature Language="C#" Value="public virtual string SendToText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SendToText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SendToText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SendToText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SendToText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的使用者（提供者向该使用者发送数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于提供者将向其发送数据的指定使用者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A>属性在特定的连接方案中才会生效。 当用户单击一个提供程序的连接谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件显示的视图，使用户能够建立与使用者的连接。 在 UI，以指示用户可以选择使用者连接的一部分中点，有一些用户可以在其中选择提供程序将发送到其数据的连接点在下拉列表控件之前的文本。 在下拉列表控件之前此文本是中的文本<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A>属性。 默认情况下，文本值是**到**。  
  
 你可以设置此属性以声明方式在的开始标记内的值`<asp:connectionszone>`元素，通过添加一个名为特性`SendToText`并将其分配一个值。 你还可以以编程方式设置的属性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="connectionsZone.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>可跟踪 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的视图状态更改，以便更改可以存储在控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用基方法<xref:System.Web.UI.WebControls.WebParts.ToolZone>类以及触发器视图状态跟踪与关联的谓词<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="WebPartToConnect">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToConnect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToConnect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToConnect As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToConnect { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToConnect : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前选择的要连接的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户将网页切换到连接的显示模式，并单击的谓词菜单上的连接谓词<xref:System.Web.UI.WebControls.WebParts.WebPart>连接、 连接的用户界面 (UI) 将打开，以及控制启用的控件现在按引用<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A>属性。  
  
> [!NOTE]
>  所引用的控件<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A>属性获取其值从<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>属性的当前<xref:System.Web.UI.WebControls.WebParts.WebPartManager>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      </Docs>
    </Member>
  </Members>
</Type>