<Type Name="EditorPartCollection" FullName="System.Web.UI.WebControls.WebParts.EditorPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83d5058902f4a7c8b4323a967de19a46e5b200bf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EditorPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EditorPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EditorPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含一个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件集合，这些控件用于编辑 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的属性、布局、外观和行为。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类是只读集合的<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，通常由<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域用来跟踪的一套<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域包含的控件。  
  
 当 Web 部件页进入编辑模式，且用户选择要编辑的控件时，开始编辑过程。 区域创建一个新<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象组成<xref:System.Web.UI.WebControls.WebParts.EditorPart>区域包含的控件。 在编辑进程中的各个阶段，该区域访问<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象保存或检索属性值之间<xref:System.Web.UI.WebControls.WebParts.EditorPart>集合中的控件和<xref:System.Web.UI.WebControls.WebParts.WebPart>控制当前正在编辑。  
  
 你可以创建<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>的为你自己的编程使用，例如，你需要执行大量操作的一组时的控件集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 即使<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象是只读的你可以以编程方式更改属性的集合中引用的基础控件。  
  
   
  
## Examples  
 下面的代码示例演示的几种用法<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类。 有于此代码示例的四个部分：  
  
-   一个用户控件，使你能够更改 Web 部件页面上的显示模式。  
  
-   自定义的类<xref:System.Web.UI.WebControls.WebParts.WebPart>控件名为`TextDisplayWebPart`，该引用 Web 页中，通过编辑<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。  
  
-   引用的网页`TextDisplayWebPart`控件，则包含<xref:System.Web.UI.WebControls.WebParts.EditorZone>具有多个控件<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件从 Web 部件控件设置声明在区域中，并包含一些事件驱动的代码，来创建和操作<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
-   在浏览器中加载时的代码示例的工作原理的说明。  
  
 此代码示例的第一部分是使用户能够更改在网页上的显示模式的用户控件。 有关详细信息显示在此控件模式和源代码的说明，请参见[演练： 在 Web 部件页面上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/displaymodevb.ascx#4)]  
  
 下面的代码示例的第二个部分是`TextDisplayWebPart`控件。 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 请注意该控件具有名为的属性`ContentText`; 此属性保留用户在文本框中输入的值。 可以编辑此自定义属性，当控件处于编辑模式，以及标准<xref:System.Web.UI.WebControls.WebParts.WebPart>控件属性。  
  
 [!code-csharp[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 下面的代码示例的第三部分是网页。 请注意，`<asp:editorzone>`页元素包含三个声明<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 两个这些控件成为自定义的一部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>时创建的对象`Button1_Click`方法执行。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#1)]  
  
 当加载浏览器中时，你可以将页切换到编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 你可以单击的标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，，然后单击**编辑**编辑该控件。 当可见的编辑的用户界面 (UI) 时，你可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 你单击**创建 EditorPartCollection**按钮以查看效果<xref:System.Web.UI.WebControls.WebParts.EditorPart>操作的代码创建的控件<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。 此外，请注意，<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>控件允许你编辑自定义`TextDisplayWebPart.ContentText`属性。 这是可能的因为该属性标记为`WebBrowsable`控件的源代码中的属性。 如果你更新编辑 UI 中的属性值，必须将页返回到正常浏览模式，以查看更新的效果`TextDisplayWebPart.ContentText`属性。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 类的空的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数初始化的空实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类。 内部使用此构造函数重载<xref:System.Web.UI.WebControls.WebParts.EditorZone>类在其<xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>方法来创建一个空集合对象。 然后，区域创建的所有实例<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件在子区域模板中，声明和使用内部方法以将它们添加到集合。  
  
 不能使用此重载<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数来创建的新实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>并添加<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到它。 你必须使用的其他重载之一<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数相反。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Collections::ICollection ^ editorParts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="editorParts">
          <see cref="T:System.Collections.ICollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <summary>通过传入 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件的 <see cref="T:System.Collections.ICollection" /> 集合，初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数初始化的实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类，并传入的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 这是一个重载<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>可用于创建一个新的构造函数<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，并添加<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到它。  
  
 即使<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>该构造函数创建的实例为只读，则仍可以访问个人<xref:System.Web.UI.WebControls.WebParts.EditorPart>以编程方式控制集合中并调用其属性和方法。  
  
 使用一种常见情况<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数将是你想要执行批处理操作时的整个集<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，如更改内容、 外观或一组相关的它们的位置。  
  
 使用另一个常用方案<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数正在开发自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>你想要将与一个服务器控件相关联，以便用户可以编辑对控件的自定义属性的控件。 在此方案中，你的服务器控件必须实现<xref:System.Web.UI.WebControls.WebParts.IWebEditable>接口，并为该任务的一部分，它必须实现<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>方法。 在该方法中，以使自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件编辑服务器控件，必须添加<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到<xref:System.Collections.ICollection>实例，如<xref:System.Collections.ArrayList>对象。 然后你可以将集合传递的<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数来创建一个新<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，其中<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域用于将所有控件都设置和开始编辑过程。  
  
   
  
## Examples  
 下面的代码示例演示如何创建自定义<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>，即使集合是只读的仍需执行批处理操作，若要更改单个<xref:System.Web.UI.WebControls.WebParts.EditorPart>集合中的控件。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件创建<xref:System.Collections.ArrayList>对象，添加两个的三个<xref:System.Web.UI.WebControls.WebParts.EditorPart>网页中的对象，控制，然后创建一个新<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数。 它还演示了对基础，你就可以进行更改<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，即使集合是只读的也是如此。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 你可以加载浏览器中的页和页切换到编辑模式，通过选择**编辑**中**显示模式**下拉列表控件。 你可以单击的标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，，然后单击**编辑**编辑该控件。 当可见的编辑的用户界面 (UI) 时，你可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 你单击**创建 EditorPartCollection**按钮以便查看对两个影响<xref:System.Web.UI.WebControls.WebParts.EditorPart>添加到控件<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingEditorParts As EditorPartCollection, editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Web::UI::WebControls::WebParts::EditorPartCollection ^ existingEditorParts, System::Collections::ICollection ^ editorParts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingEditorParts" Type="System.Web.UI.WebControls.WebParts.EditorPartCollection" />
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingEditorParts">某个区域中现有 <see cref="T:System.Collections.ICollection" /> 控件的一个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <param name="editorParts">不在区域中、但以编程方式创建的 <see cref="T:System.Collections.ICollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <summary>通过传入 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 集合和其他 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的 <see cref="T:System.Collections.ICollection" /> 集合，初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart">要测试其是否为集合成员的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <summary>返回一个值，该值指示集合中是否存在特定控件。</summary>
        <returns>一个布尔值，指示集合中是否存在 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A>方法确定是否特定<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件中已被<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
   
  
## Examples  
 下面的代码示例演示如何确定是否可以使用特定<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件处于<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件不会添加`LayoutEditorPart1`控制转移到<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象将添加其他控件时。 若要确认`LayoutEditorPart1`控件不在集合中，该代码使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A>方法。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 当加载浏览器中时，你可以将页切换到编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 你可以单击的标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，，然后单击**编辑**编辑该控件。 当可见的编辑的用户界面 (UI) 时，你可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 如果你单击**创建 EditorPartCollection**按钮，你将注意到的背景色`LayoutEditorPart1`控件是不同于其他控件，因为它不属于<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.EditorPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.EditorPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As EditorPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::EditorPart ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.EditorPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">要包含被复制控件集合的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <param name="index">在数组中放置集合内容的起始点。</param>
        <summary>将集合复制到 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的数组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A>方法很有用，如果你想要创建可以包含一个自定义数组<xref:System.Web.UI.WebControls.WebParts.EditorPart>中控制<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，这些控件的子集或超集这些控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A>方法用于创建自定义数组的<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件创建的数组<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制时，会添加`LayoutEditorPart1`控件添加到数组，然后使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A>方法以从控件中复制<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>到数组的对象。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 当加载浏览器中时，你可以将页切换到编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 你可以单击的标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，，然后单击**编辑**编辑该控件。 当可见的编辑的用户界面 (UI) 时，你可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 如果你单击**创建 EditorPartCollection**按钮，你将注意到，自定义数组中的所有控件的标题会列出在页面底部附近。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.EditorPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As EditorPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::EditorPartCollection ^ Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>引用集合的一个空的静态只读实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静态、 只读的、 空实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>可减少内存使用量情况下，要空集合的实例通过方法返回正确的对象类型或与另一个对象实例进行比较，但不是需要将成员添加到实例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />，它是集合的成员。</param>
        <summary>返回集合中特定成员的位置。</summary>
        <returns>一个整数，对应于集合中的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的索引。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A>方法很有用，如果你有多个<xref:System.Web.UI.WebControls.WebParts.EditorPart>上 Web 部件页，并且你的控件需要查找集合中的特定控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A>方法来查找<xref:System.Web.UI.WebControls.WebParts.EditorPart>中控制<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。 有关所需要运行该示例的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件创建<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，然后使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A>方法来查找`PropertyGridEditorPart1`控制在集合中，并设置其<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>属性。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 当加载浏览器中时，你可以将页切换到编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 你可以单击的标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，，然后单击**编辑**编辑该控件。 当可见的编辑的用户界面 (UI) 时，你可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 如果你单击**创建 EditorPartCollection**按钮，你将注意到，`PropertyGridEditorPart1`控件，位于页面底部附近，该控件具有标题但无边框。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As EditorPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPart ^ default[int] { System::Web::UI::WebControls::WebParts::EditorPart ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中特定 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 的索引。</param>
        <summary>根据唯一标识符返回集合中的特定成员。</summary>
        <value>位于集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>