<Type Name="EditorPartCollection" FullName="System.Web.UI.WebControls.WebParts.EditorPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc69a59e98fb3ef0ddcb644a0499147a0b453265" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39962824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EditorPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EditorPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EditorPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type EditorPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含一个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件集合，这些控件用于编辑 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的属性、布局、外观和行为。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类是只读的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，通常由<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域来跟踪的一套<xref:System.Web.UI.WebControls.WebParts.EditorPart>由区域所包含控件。  
  
 当 Web 部件页进入编辑模式，并且用户选择要编辑的控件时，编辑过程开始。 该区域创建一个新<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象组成<xref:System.Web.UI.WebControls.WebParts.EditorPart>由区域所包含控件。 在编辑过程中的各个阶段，在该区域访问<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象保存或检索属性值之间<xref:System.Web.UI.WebControls.WebParts.EditorPart>集合中的控件和<xref:System.Web.UI.WebControls.WebParts.WebPart>控制当前正在编辑。  
  
 您可以创建<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>为你自己的编程使用，例如，您需要执行大量操作的一组上的控件的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 即使<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象是只读的您可以以编程方式更改到基础控件集合中引用的属性。  
  
   
  
## Examples  
 下面的代码示例演示了几种用法的<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类。 有四个部分此代码示例：  
  
-   用户控件，可用于更改 Web 部件页上的显示模式。  
  
-   自定义的类<xref:System.Web.UI.WebControls.WebParts.WebPart>名为控件`TextDisplayWebPart`，这在网页中引用和由编辑<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。  
  
-   引用的网页`TextDisplayWebPart`控件，包含<xref:System.Web.UI.WebControls.WebParts.EditorZone>控件的多个<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件从该区域中设置声明的 Web 部件控件并包含一些事件驱动的代码，用于创建和操作<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
-   在浏览器中加载时的代码示例的工作原理的说明。  
  
 此代码示例的第一个部分是使用户能够更改网页上的显示模式的用户控件。 有关详细信息显示在此控件模式和对源代码的说明，请参见[演练： 在 Web 部件页上更改显示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/displaymodevb.ascx#4)]  
  
 代码示例的第二部分是`TextDisplayWebPart`控件。 若要运行的代码示例，必须编译此源代码。 可以显式对其进行编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在你网站的 App_Code 文件夹中，其中它将被动态编译在运行时。 有关演示这两种方法编译的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 请注意，该控件包含一个名为属性`ContentText`; 此属性包含用户在文本框中输入的值。 可以编辑此自定义属性，当控件处于编辑模式，以及标准<xref:System.Web.UI.WebControls.WebParts.WebPart>控件属性。  
  
 [!code-csharp[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 代码示例的第三部分是 Web 页。 请注意，`<asp:editorzone>`元素的页包含三个声明<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 两个这些控件成为自定义的一部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>时创建的对象`Button1_Click`方法执行。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#1)]  
  
 当在浏览器页面加载时，您可以切换页面置于编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 可以单击标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，然后单击**编辑**编辑该控件。 编辑用户界面 (UI) 可见时，您可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 单击**创建 EditorPartCollection**按钮以查看对影响<xref:System.Web.UI.WebControls.WebParts.EditorPart>操作的代码创建的控件<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。 另请注意，<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>控制允许您编辑自定义`TextDisplayWebPart.ContentText`属性。 这可能是因为该属性标记与`WebBrowsable`控件的源代码中的属性。 如果更新编辑 UI 中的属性值，必须将页返回到正常浏览模式以查看更新的效果`TextDisplayWebPart.ContentText`属性。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 类的空的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数初始化的空实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类。 在内部使用此构造函数的重载<xref:System.Web.UI.WebControls.WebParts.EditorZone>类在其<xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>方法来创建一个空集合对象。 然后，区域创建的所有实例<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件在子区域模板中，声明和使用内部方法来将它们添加到集合。  
  
 不能使用此重载<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数创建的新实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>并添加<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到它。 必须使用的其他重载之一<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数相反。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Collections::ICollection ^ editorParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.EditorPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="new System.Web.UI.WebControls.WebParts.EditorPartCollection editorParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="editorParts">
          <see cref="T:System.Collections.ICollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <summary>通过传入 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件的 <see cref="T:System.Collections.ICollection" /> 集合，初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数初始化的实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类，并传入的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 这是的一个重载<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>可用来创建一个新的构造函数<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，并添加<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到它。  
  
 即使<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>构造函数创建的实例是只读的你仍可以访问个人<xref:System.Web.UI.WebControls.WebParts.EditorPart>以编程方式控制集合中并调用其属性和方法。  
  
 使用的一种常见方案<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数将是你想要执行批处理操作时的整个集<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，如更改内容、 外观或集团相关的位置。  
  
 使用的另一个常见方案<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数开发自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>你想要将服务器控件，与相关联，以便用户可以编辑您的控件上的自定义属性的控件。 在此方案中，服务器控件必须实现<xref:System.Web.UI.WebControls.WebParts.IWebEditable>接口，并为该任务的一部分，它必须实现<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>方法。 在该方法中，若要启用自定义<xref:System.Web.UI.WebControls.WebParts.EditorPart>来编辑服务器控件，必须添加控件<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到<xref:System.Collections.ICollection>实例，如<xref:System.Collections.ArrayList>对象。 然后可以将传递的集合<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件添加到<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数创建一个新<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，其中<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域用于设置所有控件，并开始编辑过程。  
  
   
  
## Examples  
 下面的代码示例演示如何创建自定义<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>，即使集合是只读的仍需执行批处理操作，若要更改单个<xref:System.Web.UI.WebControls.WebParts.EditorPart>集合中的控件。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件创建<xref:System.Collections.ArrayList>对象中，添加两个三<xref:System.Web.UI.WebControls.WebParts.EditorPart>网页中的对象，控制，然后创建一个新<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A>构造函数。 它还演示了如何可以对基础进行更改<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，即使集合是只读的也是如此。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 可以在浏览器页面加载并切换到编辑模式下通过选择页面**编辑**中**显示模式**下拉列表控件。 可以单击标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，然后单击**编辑**编辑该控件。 编辑用户界面 (UI) 可见时，您可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 单击**创建 EditorPartCollection**按钮以查看对两个效果<xref:System.Web.UI.WebControls.WebParts.EditorPart>添加到控件<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingEditorParts As EditorPartCollection, editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Web::UI::WebControls::WebParts::EditorPartCollection ^ existingEditorParts, System::Collections::ICollection ^ editorParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.EditorPartCollection : System.Web.UI.WebControls.WebParts.EditorPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="new System.Web.UI.WebControls.WebParts.EditorPartCollection (existingEditorParts, editorParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingEditorParts" Type="System.Web.UI.WebControls.WebParts.EditorPartCollection" />
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingEditorParts">某个区域中现有 <see cref="T:System.Collections.ICollection" /> 控件的一个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <param name="editorParts">不在区域中、但以编程方式创建的 <see cref="T:System.Collections.ICollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <summary>通过传入 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 集合和其他 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的 <see cref="T:System.Collections.ICollection" /> 集合，初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.EditorPart -&gt; bool" Usage="editorPartCollection.Contains editorPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart">要测试其是否为集合成员的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <summary>返回一个值，该值指示集合中是否存在特定控件。</summary>
        <returns>一个布尔值，指示集合中是否存在 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A>方法确定是否特定<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件已存在于<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
   
  
## Examples  
 下面的代码示例演示如何确定某个特定<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件处于<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件不会添加`LayoutEditorPart1`控制对<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象时它将添加其他控件。 若要确认`LayoutEditorPart1`控件不在集合中，该代码使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A>方法。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 当在浏览器页面加载时，您可以切换页面置于编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 可以单击标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，然后单击**编辑**编辑该控件。 编辑用户界面 (UI) 可见时，可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 如果单击**创建 EditorPartCollection**按钮，您将注意到的背景色`LayoutEditorPart1`控件是不同于其他控件，因为它不属于<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.EditorPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.EditorPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As EditorPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::EditorPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.EditorPart[] * int -&gt; unit" Usage="editorPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.EditorPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">要包含被复制控件集合的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</param>
        <param name="index">在数组中放置集合内容的起始点。</param>
        <summary>将集合复制到 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的数组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A>方法时，你想要创建可以包含一个自定义数组<xref:System.Web.UI.WebControls.WebParts.EditorPart>中的控件<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，这些控件的子集或超集的这些控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A>方法创建的自定义数组<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件创建的数组<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件，添加`LayoutEditorPart1`为数组，然后使用控件<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A>方法以将从控件复制<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>到数组的对象。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 当在浏览器页面加载时，您可以切换页面置于编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 可以单击标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，然后单击**编辑**编辑该控件。 编辑用户界面 (UI) 可见时，您可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 如果单击**创建 EditorPartCollection**按钮，你会注意到，自定义数组中的所有控件的标题会列出页面底部附近。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.EditorPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As EditorPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::EditorPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>引用集合的一个空的静态只读实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静态、 只读的、 空实例<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>减少了要从方法返回的错误的对象类型，或要与另一个对象实例比较的空集合实例，但不需要将成员添加到的内存使用情况实例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.EditorPart -&gt; int" Usage="editorPartCollection.IndexOf editorPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />，它是集合的成员。</param>
        <summary>返回集合中特定成员的位置。</summary>
        <returns>一个整数，对应于集合中的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的索引。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A>如果您有多个方法非常有用<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件上，Web 部件页，并且需要在集合中查找特定的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A>方法来查找<xref:System.Web.UI.WebControls.WebParts.EditorPart>控制中<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象。 运行该示例所需的完整代码，请参阅示例部分<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>类概述。  
  
 中的代码`Button1_Click`事件创建<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>对象，然后使用<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A>方法来查找`PropertyGridEditorPart1`控制在集合中，并设置其<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>属性。  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 当在浏览器页面加载时，您可以切换页面置于编辑模式下通过选择**编辑**中**显示模式**下拉列表控件。 可以单击标题栏中的谓词菜单 （向下箭头）`TextDisplayWebPart`控件，然后单击**编辑**编辑该控件。 编辑用户界面 (UI) 可见时，您可以看到所有<xref:System.Web.UI.WebControls.WebParts.EditorPart>控件。 如果单击**创建 EditorPartCollection**按钮，您将注意到，`PropertyGridEditorPart1`控件，它是页面底部附近，具有一个标题，但没有边框。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As EditorPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPart ^ default[int] { System::Web::UI::WebControls::WebParts::EditorPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.EditorPart" Usage="System.Web.UI.WebControls.WebParts.EditorPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中特定 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 的索引。</param>
        <summary>根据唯一标识符返回集合中的特定成员。</summary>
        <value>位于集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>