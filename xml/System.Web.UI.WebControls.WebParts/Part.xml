<Type Name="Part" FullName="System.Web.UI.WebControls.WebParts.Part">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4418daa7cbc96ca44fa03824dcc39c8baa0b3ad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590411" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Part : System.Web.UI.WebControls.Panel, System.Web.UI.INamingContainer, System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Part extends System.Web.UI.WebControls.Panel implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Part&#xA;Inherits Panel&#xA;Implements ICompositeControlDesignerAccessor, INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class Part abstract : System::Web::UI::WebControls::Panel, System::Web::UI::INamingContainer, System::Web::UI::WebControls::ICompositeControlDesignerAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICompositeControlDesignerAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.PartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作所有“Web 部件”部件控件的基类，这些控件在 Web 窗体页上呈现模块化用户界面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.Part>类定义的一部分的所有控件都共有并使其能够在网页上具有模块化且一致外观的属性。 这些常见属性包括标题、 说明和特征的 chrome 或环绕一个部分的控件的框架。  
  
 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>属性指定的标题部分的控件。 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>属性可用于汇总部件控件的用途，并显示为控件的标题栏中的工具提示。 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>属性决定哪种类型的边框呈现围绕一个部分的控件，而<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>属性指示一个部分的控件是通常情况下，呈现还是最小化。 一个部分的控件的边框受包含它; 的区域的属性例如，<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>属性会影响区域中包含的所有部件控件的帧。  
  
 一种类型的部分的控件是<xref:System.Web.UI.WebControls.WebParts.WebPart>控件，呈现在对应的区域内的内容。 另一个类型是<xref:System.Web.UI.WebControls.WebParts.EditorPart>提供用于修改的用户界面 (UI) 控件的控件 （个性化） 各个<xref:System.Web.UI.WebControls.WebParts.WebPart>控件。 一种类型的部分的控件是<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控件，它提供一份<xref:System.Web.UI.WebControls.WebParts.WebPart>用户可以添加或删除在网页上的控件。  
  
 部件控件包含在区域，它们都派生自抽象<xref:System.Web.UI.WebControls.WebParts.WebZone>类。 区域是负责组织它包含的部件控件。 每个区域还呈现用户界面元素为其自身，包括页眉、 页脚、 标题栏和每个所包含的部件控件，如边框周围的 UI 元素。  
  
> [!NOTE]
>  尽管部件控件通常驻留在区域中，它仍可能将一个部分的控件放在区域之外如果控件在网页上的标记中以声明方式引用。 如果一个部分的控件的区域之外声明在网页上，控件将仍正常工作，但将失去其大多数 Web 部件功能。 例如，该控件不能编辑，并不能将内容拖入区域在运行时。 还有很有帮助请记住可从区域中拖动并放置到区域之外的页上，在运行时没有部分的控件。  
  
 基本部件类型的一些示例以及它们对应的区域类型，是下表中所示。  
  
|部件控件类型|区域类型|  
|-----------------------|---------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPart>|<xref:System.Web.UI.WebControls.WebParts.WebPartZone>|  
|<xref:System.Web.UI.WebControls.WebParts.EditorPart>|<xref:System.Web.UI.WebControls.WebParts.EditorZone>|  
|<xref:System.Web.UI.WebControls.WebParts.CatalogPart>|<xref:System.Web.UI.WebControls.WebParts.CatalogZone>|  
  
 各种类型的派生自的一部分控件<xref:System.Web.UI.WebControls.WebParts.Part>类以不同方式处理继承的、 面向用户界面的属性。 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件重写几个继承的 UI 属性，并将其与标记`Personalizable`属性 (有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>类文档)，从而使这些属性对于将来的浏览器会话，一项功能保存的值称为个性化设置。 例如，如果你以编程方式使用户能够更新的值<xref:System.Web.UI.WebControls.WebParts.WebPart>控件的<xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>属性在运行时，值将进行个性化设置 （假设个性化设置启用状态，这是默认设置）。 多个 UI 属性的<xref:System.Web.UI.WebControls.WebParts.WebPart>控件均继承自<xref:System.Web.UI.WebControls.WebParts.Part>类，并从<xref:System.Web.UI.WebControls.WebControl>类中，处理相同的方式。  
  
 与此相反，另一个部件控件，如<xref:System.Web.UI.WebControls.WebParts.EditorPart>和<xref:System.Web.UI.WebControls.WebParts.CatalogPart>，不能将继承的 UI 属性，以进行个性化设置。 出于此原因，以编程方式分配的属性值不会保存为将来的浏览器会话。 例如，如果你以编程方式使用户能够更新<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>控件的<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.Title%2A>属性在运行时，更新后的值是丢失后关闭该控件或浏览器会话结束。  
  
 轻松将值保存在此类继承的 UI 属性<xref:System.Web.UI.WebControls.WebParts.EditorPart>和<xref:System.Web.UI.WebControls.WebParts.CatalogPart>将来的浏览器会话的控件是声明中页持久性格式的属性值。 但是，这是一种静态方法，仍不允许用户进行个性化设置的属性值。 或者，如果你想要启用对继承的 UI 属性以编程方式更新，以便用户可以个性化其在运行时，你可以使用专用的静态变量以保存属性值。 每次的新实例<xref:System.Web.UI.WebControls.WebParts.EditorPart>或<xref:System.Web.UI.WebControls.WebParts.CatalogPart>创建控件 (例如，在处理控件的方法<xref:System.Web.UI.Control.Init>事件)，你可以重新分配给相应的属性的静态变量的值。 这种方法使用户能够对进行个性化设置的编辑 UI 和目录的 Web 部件应用程序的用户界面。  
  
   
  
## Examples  
 下面的代码示例演示的几个属性的声明方式使用<xref:System.Web.UI.WebControls.WebParts.Part>类，通过使用自定义的两个实例<xref:System.Web.UI.WebControls.WebParts.WebPart>ASP.NET 网页中所引用控件。 若要运行的代码示例，必须编译此源代码。 你可以显式编译，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以在站点的 App_Code 文件夹中，其中它将动态编译运行时将源代码。 有关演示的编译这两种方法的演练，请参阅[演练： 开发和使用自定义 Web 服务器控件](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 该示例的第一部分包含名为的自定义控件的代码`TextDisplayWebPart`。 由于控件派生自<xref:System.Web.UI.WebControls.WebParts.WebPart>，它还会继承的公共属性的<xref:System.Web.UI.WebControls.WebParts.Part>类提供，并演示如何使用此代码示例中的这些属性。  
  
 [!code-csharp[WebParts_Part_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_Part_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/textdisplaywebpart.vb#2)]  
  
 该示例的第二部分演示如何引用 ASP.NET 网页中的自定义部件控件。 请注意，各种<xref:System.Web.UI.WebControls.WebParts.Part>属性以声明方式分配给自定义控件实例。 比较，引用的页上，两个实例的声明性代码，然后加载浏览器中的页。 请注意的各种属性如何影响控件的外观。 例如，之后加载浏览器中，第二个实例中的页`TextDisplayWebPart`控件将显示最小化，因为其<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>属性值设置为<xref:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized>。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>通常情况下，你应不从直接继承<see cref="T:System.Web.UI.WebControls.WebParts.Part" />开发自定义 Web 部件控件的类。 若要提供完整的 Web 部件功能，Web 部件控件集，需要从派生的类<see cref="T:System.Web.UI.WebControls.WebParts.Part" />类，即<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />， <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />，和<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />，因此应派生自它们现在可以开发自定义控件。 但是，它是仍必须了解的基本行为<see cref="T:System.Web.UI.WebControls.WebParts.Part" />类，因为它提供了一组通用的所有其他部件类使用的属性。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="ChromeState">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeState ChromeState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChromeState As PartChromeState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeState ChromeState { System::Web::UI::WebControls::WebParts::PartChromeState get(); void set(System::Web::UI::WebControls::WebParts::PartChromeState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置部件控件是处于最小化状态还是正常状态。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个部分的控件的<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>可以正常或最小化。  
  
   
  
## Examples  
 下面的代码示例演示如何声明性使用<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>中一个部分的控件属性。 此示例需要自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件`TextDisplayWebPart`，可在示例部分中找到<xref:System.Web.UI.WebControls.WebParts.Part>类摘要。  
  
 请注意，Web 的声明性标记中页上，第二个实例`TextDisplayWebPart`控件将设置其<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>属性。 加载浏览器中后，第二个控件实例将显示最小化。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的值不是 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 值之一。</exception>
        <block subset="none" type="overrides">
          <para>派生类如<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />可以重写<see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" />启用的控件的边框状态的用户个性化设置。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChromeType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType ChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChromeType As PartChromeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeType ChromeType { System::Web::UI::WebControls::WebParts::PartChromeType get(); void set(System::Web::UI::WebControls::WebParts::PartChromeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置构成 Web 部件控件的框架的边框类型。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个部分的控件的<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>属性确定哪种类型的边框环绕控件。 选项包括显示标题、 只、 仅边框、 标题和边框，两者，或只需使用的值的默认选项<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何声明性使用<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>中一个部分的控件属性。 此示例需要自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件`TextDisplayWebPart`，可在示例部分中找到<xref:System.Web.UI.WebControls.WebParts.Part>类摘要。  
  
 在网页上，第二个实例的声明性代码`TextDisplayWebPart`控件将设置其<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>属性只具有标题，而第一个实例具有标题和边框。 加载浏览器中后，将显示最小化控件的第二个实例。 如果最大化控件时，会显示不带边框的标题。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">该值不是 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 值之一。</exception>
        <block subset="none" type="overrides">
          <para>派生类如<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />可以重写<see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />启用的框架控件的边框类型的用户个性化设置。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象包含用户界面层次结构中指定服务器控件的子控件。</summary>
        <value>指定服务器控件的子控件的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 ASP.NET 页上，在开始标记和结束标记的一个服务器控件之间以声明方式添加控件时 ASP.NET 自动将这些控件添加到包含服务器控件的<xref:System.Web.UI.ControlCollection>对象。 任何 HTML 标记或不在服务器处理的文本字符串将被视为<xref:System.Web.UI.LiteralControl>对象。 这些将添加到与其他服务器控件的集合。  
  
 <xref:System.Web.UI.Control.Controls%2A>属性允许您以编程方式访问的实例<xref:System.Web.UI.ControlCollection>任何服务器控件的类。 你可以将控件添加到集合、 从集合中，删除控件或循环访问集合中的服务器控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.Part.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将数据源绑定到调用的服务器控件及其所有子控件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一条短语，该短语在部件控件的工具提示和目录中用来概述该部件控件的作用。</summary>
        <value>一个字符串，简要概述部件控件的功能。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>属性通常是提供列表的一部分控件，以及部件控件的标题栏中的工具提示的目录中使用的字符串。 内容<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>时你的鼠标指针定位在一个部分的控件的标题栏中的标题文本工具提示中显示。 工具提示文本创建的值从<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>属性后, 接一个连字符后, 跟<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>属性值。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何声明性使用<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>中一个部分的控件属性。 此示例需要自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件`TextDisplayWebPart`，可在示例部分中找到<xref:System.Web.UI.WebControls.WebParts.Part>类摘要。  
  
 如果你的鼠标指针定位在的第一个控件实例的标题文本加载在浏览器中，页后，说明文本显示在工具提示。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生类如<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />可以重写<see cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />启用的控件的说明的用户个性化设置。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls">
      <MemberSignature Language="C#" Value="void ICompositeControlDesignerAccessor.RecreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Sub RecreateChildControls () Implements ICompositeControlDesignerAccessor.RecreateChildControls" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() = System::Web::UI::WebControls::ICompositeControlDesignerAccessor::RecreateChildControls;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>允许复合部件控件设计器的开发人员在设计图面上重新创建控件的子控件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置部件控件的标题。</summary>
        <value>一个表示部件控件的标题的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过设置部件控件的标题栏中的可见标题文本<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>属性。 标题文本也显示为工具提示文本的一部分时将鼠标指针放的标题栏<xref:System.Web.UI.WebControls.WebParts.WebPart>控件或出现在其他服务器控件<xref:System.Web.UI.WebControls.WebParts.WebPartZone>区域。  
  
 标题文本的样式由<xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A>属性包含部件控件的区域。  
  
 如果未提供控件的标题的 Web 部件控件集自动计算要用作标题的默认字符串。 有关详情，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>。 另外，还有可能提供追加到的标题字符串标准副标题。 有关详细信息，请参阅<xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>。  
  
 此属性的值设置时，可以自动保存到的资源文件通过使用设计器工具。 有关详细信息，请参阅<xref:System.ComponentModel.LocalizableAttribute>和[全球化和本地化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下面的代码示例演示如何声明性使用<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>中一个部分的控件属性。 此示例需要自定义<xref:System.Web.UI.WebControls.WebParts.WebPart>控件`TextDisplayWebPart`，可在示例部分中找到<xref:System.Web.UI.WebControls.WebParts.Part>类摘要。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生类如<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />可以重写<see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />启用的标题的用户个性化设置。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      </Docs>
    </Member>
  </Members>
</Type>