<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7bb2638ab14a3afd8e0a2317e9a757630e8fe166" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53568585" /></Metadata><TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0f1cc-101">表示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-102">X.509 结构源自国际标准化 (ISO) 的组织工作小组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="0f1cc-103">此结构可用于表示各种类型的信息，包括标识、 授权和持有者属性 （权限、 年龄、 性别、 位置、 附属关系，等）。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="0f1cc-104">虽然 ISO 规范是最有足够的结构本身，<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>类旨在模型由 Internet 工程任务组 (IETF) 公共密钥基础结构 X.509 (PKIX 颁发的规范中定义的使用方案) 处理组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="0f1cc-105">这些规范的信息是 RFC 3280"[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)。"</span><span class="sxs-lookup"><span data-stu-id="0f1cc-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-106">从开始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，则此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="0f1cc-107">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="0f1cc-108">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="0f1cc-109">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="0f1cc-110">有关详细信息，请参阅中的"使用对象实现 IDisposable"一节<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="0f1cc-111">对于面向应用[!INCLUDE[net_v452](~/includes/net-v452-md.md)]及更早版本<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>类不实现<xref:System.IDisposable>接口，并因此没有`Dispose`方法。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-112">下面的示例演示如何使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象进行加密和解密文件。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="0f1cc-113">以下示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f1cc-114">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f1cc-115">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-116">此构造函数创建一个空<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象，与其他构造函数为此类使用从字节数组、 指针或证书文件的证书信息的不同。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-117">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-118">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-119">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-120">使用来自字节数组的信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-121">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>使用字节数组中的证书信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="0f1cc-122">字节数组可以是二进制文件 (DER) 编码或 Base64 编码的 X.509 数据。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="0f1cc-123">字节数组也可以是 PKCS7 （验证码） 签名文件的文件。签名者证书用于创建对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="0f1cc-124">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储的证书`rawData`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-125">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-125">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-126">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-126">For example:</span></span> 
<span data-ttu-id="0f1cc-127">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-127">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-128">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-128">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-129">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-129">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="0f1cc-130">一个指向非托管代码中的证书上下文的指针。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="0f1cc-131">C 结构称为 <see langword="PCCERT_CONTEXT" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="0f1cc-132">使用非托管句柄初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-133">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象的 Microsoft 加密 API 证书上下文中，使用句柄`PCCERT_CONTEXT`。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="0f1cc-134">请注意，此构造函数的直接调用方需要非托管的代码权限。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-135">构造函数创建证书上下文的副本。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="0f1cc-136">不要假定上下文结构传递给构造函数是有效，则为它可能已经发布。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="0f1cc-137">可以获取当前一份`PCCERT_CONTEXT`结构，从<xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>属性，但它的生存期内只是有效<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-138">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-138">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-139">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-139">For example:</span></span> 
<span data-ttu-id="0f1cc-140">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-140">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-141">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-141">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-142">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-142">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-143">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-143">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-144">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-144">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-145">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-145">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="0f1cc-146">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="0f1cc-147">使用 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-148">此方法创建的新实例<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>类使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate>对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-149">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-149">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-150">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-150">For example:</span></span> 
<span data-ttu-id="0f1cc-151">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-151">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-152">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-152">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-153">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-153">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-154">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-154">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-155">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-156">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-157">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-157">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="0f1cc-158">使用证书文件名初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-158">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-159">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的证书文件名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-159">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="0f1cc-160">它支持二进制 (DER) 编码或 Base64 编码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-160">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="0f1cc-161">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储的证书`fileName`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-161">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-162">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-162">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-163">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-163">For example:</span></span> 
<span data-ttu-id="0f1cc-164">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-164">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-165">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-165">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-166">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-166">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-167">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-167">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-168">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-168">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f1cc-169">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-169">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-170">此构造函数用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-170">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f1cc-171">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-171">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-172">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-172">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-173">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-173">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f1cc-174">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储的证书`rawData`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-174">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-175">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-175">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-176">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-176">For example:</span></span> 
<span data-ttu-id="0f1cc-177">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-177">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-178">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-178">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-179">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-179">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-180">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-180">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-181">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-182">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-183">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-183">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-184">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-184">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f1cc-185">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-186">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的字节数组和访问证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-186">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="0f1cc-187">它用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-187">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f1cc-188">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-188">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-189">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-189">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-190">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-190">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f1cc-191">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储的证书`rawData`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-191">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-192">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-192">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-193">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-193">For example:</span></span> 
<span data-ttu-id="0f1cc-194">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-194">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-195">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-195">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-196">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-196">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-197">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-197">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-198">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-199">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0f1cc-200">反序列化新的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 所需的序列化信息。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-200">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="0f1cc-201">有关要反序列化的流的源的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-201">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="0f1cc-202">使用指定的序列化和流上下文信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-203">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-203">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-204">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-204">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-205">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-206">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-206">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-207">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-207">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f1cc-208">使用一个证书文件名和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-208">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-209">此构造函数用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-209">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f1cc-210">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-210">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-211">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-211">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-212">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-212">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f1cc-213">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储的证书`fileName`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-213">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-214">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-214">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-215">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-215">For example:</span></span> 
<span data-ttu-id="0f1cc-216">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-216">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-217">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-217">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-218">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-218">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-219">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-219">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-220">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-221">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-221">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-222">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-222">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-223">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-223">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f1cc-224">使用一个证书文件名和一个用于访问该证书的密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-224">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-225">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用一个证书文件名和访问证书所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-225">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="0f1cc-226">它用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-226">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f1cc-227">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-227">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-228">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-228">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-229">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-229">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f1cc-230">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储的证书`fileName`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-230">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-231">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-231">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-232">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-232">For example:</span></span> 
<span data-ttu-id="0f1cc-233">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-233">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-234">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-234">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-235">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-235">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-236">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-236">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-237">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-237">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-238">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-238">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-239">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-239">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-240">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-240">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-241">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-241">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-242">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-242">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-243">此构造函数用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-243">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f1cc-244">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到 Microsoft 加密 API 加密服务提供商 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-244">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-245">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-245">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-246">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-246">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f1cc-247">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储的证书`rawData`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-247">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-248">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-248">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-249">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-249">For example:</span></span> 
<span data-ttu-id="0f1cc-250">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-250">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-251">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-251">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-252">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-252">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-253">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-253">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-254">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-254">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-255">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-255">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-256">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-256">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-257">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-257">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-258">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-258">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-259">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-259">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-260">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用一个字节数组、 访问证书数据和密钥存储标志所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-260">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="0f1cc-261">它用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-261">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f1cc-262">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到 Microsoft 加密 API 加密服务提供商 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-262">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-263">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-263">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-264">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-264">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f1cc-265">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储的证书`rawData`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-265">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-266">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-266">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-267">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-267">For example:</span></span> 
<span data-ttu-id="0f1cc-268">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-268">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-269">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-269">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-270">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-270">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-271">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-271">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-272">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-272">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-273">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-274">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-274">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-275">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-275">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-276">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-276">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-277">使用一个证书文件名、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-277">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-278">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储的证书`fileName`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-278">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-279">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-279">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-280">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-280">For example:</span></span> 
<span data-ttu-id="0f1cc-281">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-281">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-282">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-282">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-283">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-283">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-284">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-284">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-285">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-285">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-286">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-286">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-287">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-287">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-288">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-288">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-289">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-289">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-290">使用一个证书文件名、一个用于访问该证书的密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-290">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-291">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的证书文件名称、 访问证书和密钥存储标记所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-291">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-292">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-292">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-293">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-293">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f1cc-294">如果您创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储的证书`fileName`，则<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>创建该存储区签名的证书而不是任何证书存储中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-294">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-295">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-295">An error with the certificate occurs.</span></span> <span data-ttu-id="0f1cc-296">例如:</span><span class="sxs-lookup"><span data-stu-id="0f1cc-296">For example:</span></span> 
<span data-ttu-id="0f1cc-297">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-297">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f1cc-298">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-298">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f1cc-299">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-299">-   The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0f1cc-300">用于访问非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-300">for accessing unmanaged code.</span></span> <span data-ttu-id="0f1cc-301">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="0f1cc-302">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-303">获取或设置一个指示是否存档 X.509 证书的值。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-303">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value><span data-ttu-id="0f1cc-304">如果存档该证书，则为 <see langword="true" />；如果不存档该证书，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-304"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-305">仅在与存储相关联的证书上设置此属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-305">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="0f1cc-306">如果该属性设置和证书添加到证书存储区，则保留该值。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-306">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="0f1cc-307">如果在从存储中检索的证书上设置该属性，则立即保留该值。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-307">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="0f1cc-308">在 X.509 存储中，已存档的证书不包括在返回<xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>对象，除非<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-308">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="0f1cc-309">没有物理存档活动发生时<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>值是设置或取消设置。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-309">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-310">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-310">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-311">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-311">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-312">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-312">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-313">获取 <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-313">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="0f1cc-314">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-314">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-315">X.509 v3 证书格式中定义的扩展允许在证书中包含其他数据。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-315">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="0f1cc-316">X.509 v3 定义中以及在 RFC 3280 PKIX 由 ISO 定义的扩展数"[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)。"</span><span class="sxs-lookup"><span data-stu-id="0f1cc-316">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="0f1cc-317">常见的扩展插件包括有关密钥用法 (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>)，密钥标识符 (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>)，证书策略、 吊销信息 （CRL 分发点扩展） 和其他用途。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-317">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-318">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-318">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-319">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-319">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-320">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-320">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-321">获取或设置证书的关联别名。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-321">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-322">证书的友好名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-322">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-323">友好名称是可以设置的 X.509 证书存储区中的属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-323">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="0f1cc-324">它们用于使用户能够将别名与证书关联，因此可以轻松识别它们。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-324">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="0f1cc-325">如果没有友好名称存在证书，一个空字符串 ("") 返回。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-325">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-326">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-326">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-327">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-327">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f1cc-328">指示字节数组或文件中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-328">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-329">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-329">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-330">指示字节数组中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-330">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="0f1cc-331">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-331">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-332">此方法，可发现的文件中的证书的类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-332">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-333">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-333">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-334">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-334">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f1cc-335"><paramref name="rawData" /> 的长度为零或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-335"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-336">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-336">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="0f1cc-337">指示文件中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-337">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="0f1cc-338">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-338">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-339">此方法，可发现的文件中的证书的类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-339">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f1cc-340"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-340"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="0f1cc-341">用于读取证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-341">for reading the certificate.</span></span> <span data-ttu-id="0f1cc-342">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-342">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="0f1cc-343">关联的枚举： <see cref="F:System.IO.FileAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="0f1cc-343">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="0f1cc-344">该主题的 <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-344">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer"><span data-ttu-id="0f1cc-345">如果包含颁发者名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-345"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f1cc-346">从证书中获取主题和颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-346">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="0f1cc-347">证书的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-347">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-348">此方法应始终使用而不是分析该证书，因为许多名称值可以位于多个位置中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-348">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="0f1cc-349">使用此方法可确保返回相应的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-349">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-350">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-350">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-351">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-351">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-352">获取一个值，该值指示 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象是否包含私钥。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-352">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value><span data-ttu-id="0f1cc-353">如果 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象包含私钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-353"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-354">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-354">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f1cc-355">使用所提供的证书信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-356">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-356">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-357">使用字节数组中的数据填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-357">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-358">此方法可用于获取 X.509 证书原始字节数组并填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>及其关联值的对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-358">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="0f1cc-359">由于此方法接受字节数组，它可以是仅用于不需要输入密码，包括一个 Base64 编码或 DER 编码的 X.509 证书或 PFX/PKCS12 证书的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-359">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="0f1cc-360">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-360">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f1cc-361">在这种情况下，使用带有私钥的密钥相关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-361">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0f1cc-362">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-362">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-363">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-363">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0f1cc-364">继承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-364">for full trust for inheritors.</span></span> <span data-ttu-id="0f1cc-365">此成员不能由部分受信任代码继承。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-365">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-366">证书的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-366">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-367">使用证书文件中的信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-368">此方法使用的证书文件，如文件扩展名为.cer，用于表示 X.509 证书并填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>与该文件包含的证书的对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-368">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="0f1cc-369">此方法可以用于多个证书类型，包括 Base64 编码或 DER 编码的 X.509 证书、 PFX/PKCS12 证书和签名者证书，如验证码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-369">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="0f1cc-370">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-370">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f1cc-371">在这种情况下，使用带有私钥的密钥相关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-371">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0f1cc-372">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-372">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-373">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-373">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0f1cc-374">继承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-374">for full trust for inheritors.</span></span> <span data-ttu-id="0f1cc-375">此成员不能由部分受信任代码继承。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-375">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-376">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-376">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-377">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-377">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-378">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-378">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-379">使用一个字节数组中的数据、一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-379">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-380">对于证书类型，如 Base64 编码或 DER 编码的 X.509 证书或 PFX/PKCS12 证书，可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-380">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="0f1cc-381">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-381">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f1cc-382">在这种情况下，使用带有私钥的密钥相关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-382">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-383">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-383">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-384">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-384">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0f1cc-385">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-385">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-386">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-386">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0f1cc-387">继承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-387">for full trust for inheritors.</span></span> <span data-ttu-id="0f1cc-388">此成员不能由部分受信任代码继承。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-388">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f1cc-389">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-389">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-390">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-390">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-391">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-391">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-392">使用一个字节数组中的数据、一个密码和用于确定如何导入私钥的标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-392">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-393">此方法可以用于填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的字节数组表示的证书的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-393">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="0f1cc-394"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值可用于控制在何处以及如何导入的私钥。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-394">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="0f1cc-395">此方法接受字节数组，并可以用于如 Base64 编码或 DER 编码的 X.509 证书或 PFX/PKCS12 证书的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-395">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="0f1cc-396">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-396">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f1cc-397">在这种情况下，使用带有私钥的密钥相关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-397">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-398">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-398">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-399">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-399">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-400">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-400">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0f1cc-401">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-401">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-402">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-402">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0f1cc-403">继承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-403">for full trust for inheritors.</span></span> <span data-ttu-id="0f1cc-404">此成员不能由部分受信任代码继承。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-404">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-405">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-405">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-406">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-406">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-407">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-407">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-408">使用一个证书文件中的信息，一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-408">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-409">**安全说明**永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-409">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-410">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-410">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0f1cc-411">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-411">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-412">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-412">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0f1cc-413">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-413">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-414">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-414">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f1cc-415">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-415">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f1cc-416">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-416">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f1cc-417">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-417">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f1cc-418">使用一个证书文件中的信息、一个密码和一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 值填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-418">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-419">可以使用此方法填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>证书文件，密码中的信息的对象和一个<xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-419">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f1cc-420">永远不会硬编码对源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-420">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f1cc-421">可以从使用程序集中检索硬编码的密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-421">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0f1cc-422">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-422">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-423">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-423">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0f1cc-424">继承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-424">for full trust for inheritors.</span></span> <span data-ttu-id="0f1cc-425">此成员不能由部分受信任代码继承。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-425">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-426">获取证书颁发者的可分辨名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-426">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="0f1cc-427">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，包含证书颁发者的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-427">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-428">此属性包含颁发证书的证书颁发机构 (CA) 的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-428">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="0f1cc-429">若要获取的证书名称，请使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-429">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="0f1cc-430">证书的可分辨名称是证书主题或颁发者的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-430">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="0f1cc-431">此表示形式包含 name 属性 (例如，"CN = MyName，OU = MyOrgUnit，C = US")。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-431">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-432">下面的代码示例创建一个命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-432">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-433">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-433">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-434">获取本地时间中的一个日期，在该日期后证书不再有效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-434">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="0f1cc-435">表示证书的到期日期的 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-435">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-436">此属性指示证书失效的过期日期。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-436">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-437">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-437">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-438">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-438">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-439">获取证书生效的本地时间中的日期。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-439">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="0f1cc-440">一个表示证书生效日期的 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-440">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-441">此属性指示证书生效的日期。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-441">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-442">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-442">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-443">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-443">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-444">获取或设置 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，该对象表示与证书关联的私钥。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-444">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-445">一个 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，表示 RSA 或 DSA 加密服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-445">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-446">当前此属性只支持 RSA 或 DSA 密钥，使其返回任一<xref:System.Security.Cryptography.RSACryptoServiceProvider>或<xref:System.Security.Cryptography.DSACryptoServiceProvider>对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-446">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="0f1cc-447">如果没有私钥与证书关联时，它将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-447">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="0f1cc-448">如果此属性设置为`null`或另一个注册表项而无需先删除它，私钥文件保留在磁盘上。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-448">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="0f1cc-449">若要正确地删除与此属性关联的私钥，请设置`PersistKeyInCsp`到`false`，然后调用<xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-449">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-450">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-450">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-451">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-451">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-452">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-452">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f1cc-453">为此属性设置的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-453">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f1cc-454">此私钥的密钥算法不受支持。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-454">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="0f1cc-455">X.509 密钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-455">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f1cc-456">加密服务提供程序密钥为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-456">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-457">获取一个与证书相关联的 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-457">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-458"><see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-458">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-459">此属性返回<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>对象，它包含的对象标识符 (<xref:System.Security.Cryptography.Oid>) 表示的公共密钥算法、 ASN.1 编码的参数和 (ASN.1） 编码的密钥值。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-459">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="0f1cc-460">你还可以获取作为键<xref:System.Security.Cryptography.AsymmetricAlgorithm>对象通过引用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-460">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="0f1cc-461">此属性只支持 RSA 或 DSA 密钥，使其返回任一<xref:System.Security.Cryptography.RSACryptoServiceProvider>或<xref:System.Security.Cryptography.DSACryptoServiceProvider>表示公钥的对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-461">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-462">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-462">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-463">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-463">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-464">获取证书的原始数据。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-464">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-465">字节数组形式的证书原始数据。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-465">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f1cc-466">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f1cc-467">重置 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象的状态。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-467">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-468">此方法可用于重置该证书的状态。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-468">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="0f1cc-469">它还释放与证书关联的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-469">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0f1cc-470">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-470">for full trust for the immediate caller.</span></span> <span data-ttu-id="0f1cc-471">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-471">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="0f1cc-472">继承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-472">for full trust for inheritors.</span></span> <span data-ttu-id="0f1cc-473">此成员不能由部分受信任代码继承。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-473">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-474">获取 big-endian 十六进制字符串形式的证书序列号。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-474">Gets the serial number of a certificate as a big-endian hexadecimal string.</span></span></summary>
        <value><span data-ttu-id="0f1cc-475">Big endian 十六进制字符串形式的证书序列号。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-475">The serial number of the certificate as a big-endian hexadecimal string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-476">证书的序列号是原始的 X.509 协议的一部分。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-476">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="0f1cc-477">序列号是由证书颁发者，这也称为证书颁发机构 (CA) 颁发的唯一编号。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-477">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-478">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-479">获取用于创建证书签名的算法。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-479">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-480">签名算法的对象标识符。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-480">The object identifier of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-481">对象标识符 (<xref:System.Security.Cryptography.Oid>) 标识的证书使用的签名算法的类型。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-481">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-482">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-482">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-483">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-483">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-484">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-484">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-485">获取证书的主题可分辨名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-485">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-486">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，用于表示证书主题的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-486">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-487">使用者可分辨的名称是用户的证书的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-487">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="0f1cc-488">使用者的文本表示形式或证书的颁发者证书的可分辨的名称。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-488">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="0f1cc-489">此表示形式的名称属性，例如，包含"CN = MyName，OU = MyOrgUnit，C = US"。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-489">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-490">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-490">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-491">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-491">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-492">获取证书的指纹。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-492">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-493">证书的指纹。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-493">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-494">指纹动态生成使用 SHA1 算法，并不实际存在的证书中。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-494">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="0f1cc-495">指纹是证书的唯一值，因为它通常用于在证书存储中查找特定证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-495">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-496">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-496">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f1cc-497">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-497">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f1cc-498">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-498">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="0f1cc-499">证书信息。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-499">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-500">与所有`ToString`方法，输出可能是不一致跨版本的.NET Framework 中，因此不应针对内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-500">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="0f1cc-501">使用上的属性<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象以获取内容的精确信息或使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>方法来获取有关证书的信息。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-501">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="0f1cc-502">此方法以文本格式显示该证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-502">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-503">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-503">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose"><span data-ttu-id="0f1cc-504">为 <see langword="true" /> 则显示公钥、私钥、扩展等；为 <see langword="false" /> 则显示类似于 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的信息，包括指纹、序列号、主题和颁发者名称等。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-504"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="0f1cc-505">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-505">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="0f1cc-506">证书信息。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-506">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-507">与所有`ToString`方法，输出可能是不一致跨版本的.NET Framework 中，因此不应针对内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-507">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="0f1cc-508">使用上的属性<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象，若要获取精确的信息。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-508">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="0f1cc-509">此方法以文本格式显示该证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-509">This method displays the certificate in text format.</span></span> <span data-ttu-id="0f1cc-510">如果`verbose`参数设置为`true`，文本显示内容包括公钥、 私钥和扩展。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-510">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="0f1cc-511">如果`verbose`设置为`false`，文本显示的内容可从 X.509 证书，包括指纹、 序列号、 主题和颁发者名称和有效日期信息获取这些字段。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-511">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-512">下面的代码示例创建一个命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-512">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f1cc-513">使用基本验证策略执行 X.509 链验证。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-513">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns><span data-ttu-id="0f1cc-514">如果验证成功，则为 <see langword="true" />；如果验证失败，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-514"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-515">此方法生成一个简单的证书链，并将基本策略应用到该链。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-515">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="0f1cc-516">如果需要有关失败的详细信息，验证证书直接使用<xref:System.Security.Cryptography.X509Certificates.X509Chain>对象。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-516">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="0f1cc-517">请注意，可以使用重写默认链接引擎<xref:System.Security.Cryptography.CryptoConfig>类。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-517">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="0f1cc-518">在 Microsoft Windows Server 2003 上的默认引擎符合 RFC3280 中, 所述的规范"[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)。"</span><span class="sxs-lookup"><span data-stu-id="0f1cc-518">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-519">下面的代码示例将打开当前用户证书存储区，选择仅活动的证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-519">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f1cc-520">该示例然后将证书信息写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-520">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-521">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-521">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f1cc-522">获取证书的 X.509 格式版本。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-522">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f1cc-523">证书格式。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-523">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f1cc-524">有几个版本的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-524">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="0f1cc-525">此属性标识哪一种格式的证书用法。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-525">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="0f1cc-526">例如，版本 3 证书返回"3"。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-526">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f1cc-527">下面的代码示例创建的命令行可执行文件以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-527">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f1cc-528">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f1cc-528">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>