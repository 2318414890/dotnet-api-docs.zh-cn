<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1828dea3b043398b7aab391aa3b060a247bd237" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5bbe7-101">表示 X.509 证书。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5bbe7-101">Represents an X.509 certificate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-102">X.509 结构可由国际标准化 (ISO) 组织中的工作组。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="5bbe7-103">此结构可以用于表示各种类型的信息包括标识、 授权和持有者属性 （权限、 年龄、 性别、 位置、 隶属关系，等）。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="5bbe7-104">虽然 ISO 规范是最有足够的结构本身，<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>类旨在模型由 Internet 工程任务组 (IETF) 公钥基础结构，X.509 （但颁发的规范中定义的使用方案) 工作组。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="5bbe7-105">这些规范最信息性是 RFC 3280"[证书和证书吊销列表 (CRL) 配置文件](http://go.microsoft.com/fwlink/?LinkId=45286)。"</span><span class="sxs-lookup"><span data-stu-id="5bbe7-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-106">从开始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，则此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="5bbe7-107">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="5bbe7-108">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="5bbe7-109">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="5bbe7-110">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="5bbe7-111">对于面向的应用[!INCLUDE[net_v452](~/includes/net-v452-md.md)]及早期版本、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>类未实现<xref:System.IDisposable>接口，并因此不具有`Dispose`方法。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-112">下面的示例演示如何使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象来加密和解密文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="5bbe7-113">下面的示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-114">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-115">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-116">此构造函数创建一个空<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象，与其他构造函数的此类使用从字节数组、 指针或证书文件的证书信息不同。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-117">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-118">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-119">一个包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-119">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-120">使用来自字节数组的信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-121">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>使用字节数组中的证书信息的对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="5bbe7-122">字节数组可以是二进制文件 (DER) 编码或 Base64 编码 X.509 数据。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="5bbe7-123">字节数组也可以是 PKCS7 （验证码） 签名文件;签名者证书用于创建对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="5bbe7-124">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储区的证书`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-125">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-125">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-126">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-126">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-127">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-127">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-128">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-128">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="5bbe7-129">一个指向非托管代码中的证书上下文的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-129">A pointer to a certificate context in unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-130">C 结构称为 <see langword="PCCERT_CONTEXT" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-130">The C structure is called <see langword="PCCERT_CONTEXT" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-131">使用非托管句柄初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-131">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-132">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象对于 Microsoft 加密 API 证书上下文，使用句柄`PCCERT_CONTEXT`。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-132">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="5bbe7-133">请注意，此构造函数的直接调用方需要托管的代码的权限。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-133">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-134">构造函数创建证书上下文的副本。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-134">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="5bbe7-135">不要假定传递给构造函数的上下文结构是有效，则为它可能已被释放。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-135">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="5bbe7-136">你可以获取一份当前`PCCERT_CONTEXT`结构<xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>仅在生存期内的属性，但它是有效<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-136">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-137">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-137">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-138">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-138">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-139">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-139">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-140">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-140">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-141">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-141">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-142">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-142">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-143">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">
          <span data-ttu-id="5bbe7-144">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-144">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-145">使用 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-145">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-146">此方法创建的新实例<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>类使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate>对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-146">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-147">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-147">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-148">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-148">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-149">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-149">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-150">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-150">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-151">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-151">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-152">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-152">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-153">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-154">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-154">The name of a certificate file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-155">使用证书文件名初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-155">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-156">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的证书文件名称。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-156">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="5bbe7-157">它支持二进制 (DER) 编码或 Base64 编码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-157">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="5bbe7-158">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储区的证书`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-158">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-159">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-159">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-160">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-160">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-161">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-161">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-162">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-162">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-163">包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-163">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-164">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-164">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-165">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-165">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-166">此构造函数用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-166">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="5bbe7-167">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-167">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-168">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-168">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-169">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-169">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="5bbe7-170">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储区的证书`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-170">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-171">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-171">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-172">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-172">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-173">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-173">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-174">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-174">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-175">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-175">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-176">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-176">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-177">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-177">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-178">一个包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-178">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-179">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-179">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-180">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-180">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-181">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的字节数组以及访问证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-181">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="5bbe7-182">它用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-182">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="5bbe7-183">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-183">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-184">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-184">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-185">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-185">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="5bbe7-186">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储区的证书`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-186">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-187">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-187">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-188">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-188">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-189">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-189">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-190">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-190">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-191">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-191">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-192">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-193">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="5bbe7-194">反序列化新的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 所需的序列化信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-194">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5bbe7-195">有关要反序列化的流的源的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-195">Contextual information about the source of the stream to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-196">使用指定的序列化和流上下文信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-196">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-197">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-197">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-198">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-199">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-200">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-200">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-201">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-201">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-202">使用一个证书文件名和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-203">此构造函数用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-203">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="5bbe7-204">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-204">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-205">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-205">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-206">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-206">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="5bbe7-207">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储区的证书`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-207">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-208">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-208">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-209">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-209">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-210">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-210">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-211">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-211">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-212">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-212">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-213">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-213">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-214">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-214">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-215">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-215">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-216">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-216">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-217">使用一个证书文件名和一个用于访问该证书的密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-217">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-218">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的证书文件名称和访问证书所需的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-218">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="5bbe7-219">它用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-219">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="5bbe7-220">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-220">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-221">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-221">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-222">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-222">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="5bbe7-223">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储区的证书`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-223">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-224">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-224">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-225">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-225">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-226">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-226">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-227">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-227">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-228">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-228">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-229">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-229">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-230">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-230">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-231">包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-231">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-232">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-232">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-233">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-233">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-234">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-234">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-235">此构造函数用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-235">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="5bbe7-236">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到 Microsoft 加密 API 加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-236">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-237">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-237">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-238">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-238">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="5bbe7-239">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储区的证书`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-239">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-240">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-240">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-241">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-241">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-242">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-242">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-243">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-243">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-244">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-244">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-245">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-245">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-246">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-247">一个包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-247">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-248">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-248">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-249">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-249">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-250">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-250">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-251">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用一个字节数组，访问证书数据和密钥存储标志所需的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-251">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="5bbe7-252">它用于包含证书的私钥的 PKCS12 (PFX) 文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-252">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="5bbe7-253">调用此构造函数使用正确的密码对私钥进行解密，并将其保存到 Microsoft 加密 API 加密服务提供程序 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-253">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-254">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-254">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-255">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-255">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="5bbe7-256">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储区的证书`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-256">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-257">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-257">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-258">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-258">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-259">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-259">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-260">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-260">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-261">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-261">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-262">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-262">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-263">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-263">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-264">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-264">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-265">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-265">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-266">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-266">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-267">使用一个证书文件名、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-267">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-268">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate>通过指定的 PKCS7 签名的文件存储区的证书`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-268">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-269">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-269">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-270">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-270">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-271">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-271">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-272">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-272">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-273">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-273">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-274">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-274">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-275">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-275">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-276">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-276">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-277">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-277">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-278">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-278">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-279">使用一个证书文件名、一个用于访问该证书的密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-279">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-280">此构造函数创建一个新<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的证书文件名称、 访问证书和密钥存储标志所需的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-280">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-281">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-281">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-282">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-282">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="5bbe7-283">如果你创建<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>通过指定的 PKCS7 签名的文件存储区的证书`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>为该存储区签名的证书而不是任何证书存储区中创建。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-283">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-284">发生了与证书有关的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-284">An error with the certificate occurs.</span>
          </span>
          <span data-ttu-id="5bbe7-285">例如：  -   证书文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-285">For example:  -   The certificate file does not exist.</span>
          </span>
          <span data-ttu-id="5bbe7-286">-   证书无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-286">-   The certificate is invalid.</span>
          </span>
          <span data-ttu-id="5bbe7-287">-   证书的密码不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-287">-   The certificate's password is incorrect.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5bbe7-288">用于访问非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-288">for accessing unmanaged code.</span>
          </span>
          <span data-ttu-id="5bbe7-289">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-289">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-290">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-290">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-291">获取或设置一个指示是否存档 X.509 证书的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-291">Gets or sets a value indicating that an X.509 certificate is archived.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-292">如果存档该证书，则为 <see langword="true" />；如果不存档该证书，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-292">
              <see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-293">仅在与存储相关联的证书上设置此属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-293">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="5bbe7-294">如果将属性设置和证书添加到证书存储，则保留该值。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-294">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="5bbe7-295">如果从存储中检索的证书设置的属性，则立即保留该值。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-295">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="5bbe7-296">X.509 存储中, 已存档的证书不包括在返回<xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>对象除非<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-296">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="5bbe7-297">没有物理存档活动发生时<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>设置或取消设置值。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-297">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-298">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-298">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-299">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-299">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-300">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-300">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]&#xA;override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-301">获取 <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-301">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-302">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-302">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-303">X.509 v3 证书格式中定义的扩展允许要包括在证书的其他数据。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-303">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="5bbe7-304">X.509 v3 定义中以及在 RFC 3280，但由 ISO 定义大量的扩展"[证书和证书吊销列表 (CRL) 配置文件](http://go.microsoft.com/fwlink/?LinkId=45286)。"</span><span class="sxs-lookup"><span data-stu-id="5bbe7-304">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="5bbe7-305">常用的扩展包括有关密钥用法的信息 (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>)，密钥标识符 (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>)，证书策略、 吊销信息 （CRL 分发点扩展） 和其他用途。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-305">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-306">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-306">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-307">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-307">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-308">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-308">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-309">获取或设置证书的关联别名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-309">Gets or sets the associated alias for a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-310">证书的友好名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-310">The certificate's friendly name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-311">友好名称是可以设置的 X.509 证书存储中的属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-311">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="5bbe7-312">它们用于使用户能够将别名与证书关联，以便他们能够轻松识别。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-312">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="5bbe7-313">如果没有友好名称存在证书，一个空字符串 ("") 返回。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-313">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-314">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-314">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-315">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-315">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-316">指示字节数组或文件中所包含的证书类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-316">Indicates the type of certificate contained in a byte array or file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-317">一个包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-317">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-318">指示字节数组中所包含的证书类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-318">Indicates the type of certificate contained in a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bbe7-319">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-319">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-320">此方法可以发现类型的文件中的证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-320">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-321">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-321">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-322">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-322">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5bbe7-323">
            <paramref name="rawData" /> 的长度为零或为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-323">
              <paramref name="rawData" /> has a zero length or is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-324">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-324">The name of a certificate file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-325">指示文件中所包含的证书类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-325">Indicates the type of certificate contained in a file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bbe7-326">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-326">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-327">此方法可以发现类型的文件中的证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-327">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5bbe7-328">
            <paramref name="fileName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-328">
              <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="5bbe7-329">用于读取证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-329">for reading the certificate.</span>
          </span>
          <span data-ttu-id="5bbe7-330">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-330">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="5bbe7-331">关联的枚举： <see cref="F:System.IO.FileAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-331">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType">
          <span data-ttu-id="5bbe7-332">该主题的 <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-332">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span>
          </span>
        </param>
        <param name="forIssuer">
          <span data-ttu-id="5bbe7-333">如果包含颁发者名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-333">
              <see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-334">从证书中获取主题和颁发者名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-334">Gets the subject and issuer names from a certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bbe7-335">证书的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-335">The name of the certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-336">此方法应始终使用而不是分析该证书，因为许多名称值可以位于多个位置中。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-336">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="5bbe7-337">使用此方法可确保返回相应的名称。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-337">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-338">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-338">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-339">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-339">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-340">获取一个值，该值指示 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象是否包含私钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-340">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-341">如果 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象包含私钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-341">
              <see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-342">证书上下文无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-342">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-343">使用所提供的证书信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-343">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="abstract member Import : byte[] -&gt; unit&#xA;override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-344">一个包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-344">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-345">使用字节数组中的数据填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-345">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-346">此方法可以用于获取 X.509 证书的原始字节数组，并填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>并用其关联值的对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-346">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="5bbe7-347">因为此方法接受字节数组，它可仅为不需要密码，包括一个 Base64 编码或 DER 编码的 X.509 证书或 PFX/PKCS12 证书的证书类型。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-347">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="5bbe7-348">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-348">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="5bbe7-349">在这种情况下，使用与私钥关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-349">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="5bbe7-350">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-350">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-351">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-351">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="5bbe7-352">对继承者的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-352">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="5bbe7-353">此成员不能由部分受信任的代码继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-353">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member Import : string -&gt; unit&#xA;override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-354">证书的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-354">The name of a certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-355">使用证书文件中的信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-356">此方法使用的证书文件，如文件扩展名为.cer，用于表示 X.509 证书并填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>使用该文件包含证书的对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-356">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="5bbe7-357">此方法可以用于多个证书类型，包括 Base64 编码或 DER 编码的 X.509 证书、 PFX/PKCS12 证书和签名者的证书，如验证码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-357">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="5bbe7-358">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-358">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="5bbe7-359">在这种情况下，使用与私钥关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-359">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="5bbe7-360">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-360">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-361">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-361">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="5bbe7-362">对继承者的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-362">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="5bbe7-363">此成员不能由部分受信任的代码继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-363">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-364">包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-364">A byte array that contains data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-365">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-365">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-366">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-366">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-367">使用一个字节数组中的数据、一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-368">你可以为如 Base64 编码或 DER 编码的 X.509 证书或 PFX/PKCS12 证书的证书类型使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-368">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="5bbe7-369">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-369">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="5bbe7-370">在这种情况下，使用与私钥关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-370">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-371">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-371">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-372">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-372">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="5bbe7-373">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-373">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-374">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-374">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="5bbe7-375">对继承者的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-375">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="5bbe7-376">此成员不能由部分受信任的代码继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-376">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">
          <span data-ttu-id="5bbe7-377">一个包含 X.509 证书数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-377">A byte array containing data from an X.509 certificate.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-378">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-378">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-379">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-379">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-380">使用一个字节数组中的数据、一个密码和用于确定如何导入私钥的标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-380">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-381">此方法可以用于填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象使用的字节数组所表示的证书的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-381">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="5bbe7-382"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值可以用于控制在何处以及如何导入私有密钥。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-382">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="5bbe7-383">此方法接受字节数组，可用于证书类型，如 Base64 编码或 DER 编码的 X.509 证书或 PFX/PKCS12 证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-383">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="5bbe7-384">请注意，PFX/PKCS12 证书可以包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-384">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="5bbe7-385">在这种情况下，使用与私钥关联的第一个证书，或如果找到没有私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-385">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-386">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-386">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-387">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-387">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-388">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-388">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="5bbe7-389">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-389">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-390">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-390">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="5bbe7-391">对继承者的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-391">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="5bbe7-392">此成员不能由部分受信任的代码继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-392">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-393">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-393">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-394">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-394">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-395">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-395">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-396">使用一个证书文件中的信息，一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-396">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-397">**安全说明**永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-397">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-398">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-398">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="5bbe7-399">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-399">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-400">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-400">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="5bbe7-401">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-401">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-402">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-402">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit&#xA;override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="5bbe7-403">一个证书文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-403">The name of a certificate file.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="5bbe7-404">访问 X.509 证书数据所需的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-404">The password required to access the X.509 certificate data.</span>
          </span>
        </param>
        <param name="keyStorageFlags">
          <span data-ttu-id="5bbe7-405">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-405">A bitwise combination of the enumeration values that control where and how to import the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-406">使用一个证书文件中的信息、一个密码和一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 值填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-406">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-407">可以使用此方法填充<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>用证书文件，密码信息的对象和<xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-407">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5bbe7-408">永远不会硬编码你的源代码中的密码。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-408">Never hard code a password within your source code.</span></span>  <span data-ttu-id="5bbe7-409">可以从使用集中检索硬编码密码[Ildasm.exe （IL 反汇编程序）](~/docs/framework/tools/ildasm-exe-il-disassembler.md)，十六进制编辑器中，或只需打开 Notepad.exe 等文本编辑器中的程序集。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-409">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="5bbe7-410">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-410">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-411">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-411">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="5bbe7-412">对继承者的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-412">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="5bbe7-413">此成员不能由部分受信任的代码继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-413">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-414">获取证书颁发者的可分辨名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-414">Gets the distinguished name of the certificate issuer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-415">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，包含证书颁发者的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-415">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-416">此属性包含颁发证书的证书颁发机构 (CA) 的名称。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-416">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="5bbe7-417">若要获取证书的名称，使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-417">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="5bbe7-418">证书的可分辨名称是证书主题或颁发者的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-418">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="5bbe7-419">此表示形式包含名称属性 (例如，"CN = MyName，OU = MyOrgUnit，C = US")。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-419">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-420">下面的代码示例创建采用作为自变量的证书文件，并输出到控制台的各种证书属性的命令行可执行文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-420">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-421">证书上下文无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-421">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-422">获取本地时间中的一个日期，在该日期后证书不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-422">Gets the date in local time after which a certificate is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-423">表示证书的到期日期的 <see cref="T:System.DateTime" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-423">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-424">此属性指示证书失效的到期日期。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-424">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-425">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-425">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-426">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-426">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-427">获取证书生效的本地时间中的日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-427">Gets the date in local time on which a certificate becomes valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-428">一个表示证书生效日期的 <see cref="T:System.DateTime" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-428">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-429">此属性指示证书生效的日期。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-429">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-430">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-430">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-431">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-431">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-432">获取或设置 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，该对象表示与证书关联的私钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-432">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-433">一个 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，表示 RSA 或 DSA 加密服务提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-433">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-434">当前此属性只支持 RSA 或 DSA 密钥，因此它返回<xref:System.Security.Cryptography.RSACryptoServiceProvider>或<xref:System.Security.Cryptography.DSACryptoServiceProvider>对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-434">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="5bbe7-435">如果没有私钥是与证书相关联，它将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-435">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="5bbe7-436">如果将此属性设置为`null`或另一个注册表项而无需首先删除它，磁盘上剩余的私钥文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-436">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="5bbe7-437">若要正确删除与此属性关联的私钥，设置`PersistKeyInCsp`到`false`，然后调用<xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-437">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-438">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-438">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-439">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-439">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-440">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-440">The key value is not an RSA or DSA key, or the key is unreadable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5bbe7-441">为此属性设置的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-441">The value being set for this property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5bbe7-442">此私钥的密钥算法不受支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-442">The key algorithm for this private key is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="5bbe7-443">X.509 密钥不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-443">The X.509 keys do not match.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5bbe7-444">加密服务提供程序密钥为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-444">The cryptographic service provider key is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-445">获取一个与证书相关联的 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-445">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-446">
            <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-446">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-447">此属性返回<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>对象，其中包含对象标识符 (<xref:System.Security.Cryptography.Oid>) 表示公钥算法、 ASN.1 编码参数和 ASN.1 编码密钥值。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-447">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="5bbe7-448">你还可以获取与密钥<xref:System.Security.Cryptography.AsymmetricAlgorithm>对象通过引用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-448">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="5bbe7-449">此属性只支持 RSA 或 DSA 密钥，因此它返回<xref:System.Security.Cryptography.RSACryptoServiceProvider>或<xref:System.Security.Cryptography.DSACryptoServiceProvider>表示的公钥的对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-449">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-450">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-450">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-451">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-451">The key value is not an RSA or DSA key, or the key is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-452">获取证书的原始数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-452">Gets the raw data of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-453">字节数组形式的证书原始数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-453">The raw data of the certificate as a byte array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5bbe7-454">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-454">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-455">重置 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-455">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-456">此方法可以用于重置的证书的状态。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-456">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="5bbe7-457">它还可以使与证书关联的任何资源。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-457">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="5bbe7-458">直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-458">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="5bbe7-459">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-459">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="5bbe7-460">对继承者的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-460">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="5bbe7-461">此成员不能由部分受信任的代码继承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-461">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-462">获取 big-endian 十六进制字符串形式的证书序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-462">Gets the serial number of a certificate as a big-endian hexadecimal string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-463">Big endian 十六进制字符串形式的证书序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-463">The serial number of the certificate as a big-endian hexadecimal string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-464">证书的序列号是原始的 X.509 协议的一部分。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-464">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="5bbe7-465">序列号是唯一的编号由证书颁发者颁发，这也称为证书颁发机构 (CA)。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-465">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-466">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-467">获取用于创建证书签名的算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-467">Gets the algorithm used to create the signature of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-468">返回签名算法的对象标识符 (<see cref="T:System.Security.Cryptography.Oid" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-468">Returns the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-469">对象标识符 (<xref:System.Security.Cryptography.Oid>) 标识用的证书的签名算法的类型。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-469">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-470">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-470">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-471">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-471">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-472">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-472">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-473">获取证书的主题可分辨名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-473">Gets the subject distinguished name from a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-474">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，用于表示证书主题的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-474">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-475">使用者可分辨的名称是证书用户的名称。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-475">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="5bbe7-476">文本表示形式的使用者或颁发者的证书，证书的可分辨的名称。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-476">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="5bbe7-477">此表示形式的名称属性，例如，包含"CN = MyName，OU = MyOrgUnit，C = US"。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-477">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-478">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-479">证书上下文无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-479">The certificate context is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-480">获取证书的指纹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-480">Gets the thumbprint of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-481">证书的指纹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-481">The thumbprint of the certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-482">指纹动态生成使用 SHA1 算法和证书中以物理方式不存在。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-482">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="5bbe7-483">指纹是证书的唯一值，因为它通常用于在证书存储中查找特定证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-483">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-484">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-484">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-485">以文本格式显示 X.509 证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-485">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-486">以文本格式显示 X.509 证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-486">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bbe7-487">证书信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-487">The certificate information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-488">正如所有`ToString`方法，输出可能不是一致各个版本.NET Framework 中，因此不应针对内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-488">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="5bbe7-489">使用上的属性<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象以获取有关内容的精确信息或使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>方法来获取有关证书的信息。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-489">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="5bbe7-490">此方法以文本格式显示的证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-490">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-491">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-491">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="abstract member ToString : bool -&gt; string&#xA;override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose">
          <span data-ttu-id="5bbe7-492">为 <see langword="true" /> 则显示公钥、私钥、扩展等；为 <see langword="false" /> 则显示类似于 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的信息，包括指纹、序列号、主题和颁发者名称等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-492">
              <see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bbe7-493">以文本格式显示 X.509 证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-493">Displays an X.509 certificate in text format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bbe7-494">证书信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-494">The certificate information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-495">正如所有`ToString`方法，输出可能不是一致各个版本.NET Framework 中，因此不应针对内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-495">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="5bbe7-496">使用上的属性<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象以获取精确的信息。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-496">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="5bbe7-497">此方法以文本格式显示的证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-497">This method displays the certificate in text format.</span></span> <span data-ttu-id="5bbe7-498">如果`verbose`参数设置为`true`，文本显示内容包括公钥、 私钥和扩展。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-498">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="5bbe7-499">如果`verbose`设置为`false`，文本显示内容包括可从 X.509 证书，包括指纹、 序列号、 使用者和颁发者名称和有效日期信息获取这些字段。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-499">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-500">下面的代码示例创建采用作为自变量的证书文件，并输出到控制台的各种证书属性命令行可执行文件。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-500">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-501">使用基本验证策略执行 X.509 链验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-501">Performs a X.509 chain validation using basic validation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bbe7-502">如果验证成功，则为 <see langword="true" />；如果验证失败，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-502">
              <see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-503">此方法生成一个简单的证书链，并将基本的策略应用到该链。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-503">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="5bbe7-504">如果你需要有关失败的详细信息，验证直接使用的证书<xref:System.Security.Cryptography.X509Certificates.X509Chain>对象。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-504">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="5bbe7-505">请注意，可以使用替代默认链接引擎<xref:System.Security.Cryptography.CryptoConfig>类。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-505">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="5bbe7-506">在 Microsoft Windows Server 2003 上的默认引擎符合 RFC3280，所述的规范"[证书和证书吊销列表 (CRL) 配置文件](http://go.microsoft.com/fwlink/?LinkId=45286)。"</span><span class="sxs-lookup"><span data-stu-id="5bbe7-506">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-507">下面的代码示例打开当前用户证书存储区，选择仅有效证书，然后允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-507">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="5bbe7-508">该示例然后将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-508">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-509">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-509">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bbe7-510">获取证书的 X.509 格式版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-510">Gets the X.509 format version of a certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bbe7-511">证书格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-511">The certificate format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bbe7-512">有多个版本的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-512">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="5bbe7-513">此属性标识哪一种格式的证书用法。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-513">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="5bbe7-514">例如，针对版本 3 证书，返回"3"。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-514">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bbe7-515">下面的代码示例创建命令行可执行文件，以作为自变量的证书文件并将输出到控制台的各种证书属性。</span><span class="sxs-lookup"><span data-stu-id="5bbe7-515">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5bbe7-516">该证书不可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bbe7-516">The certificate is unreadable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>