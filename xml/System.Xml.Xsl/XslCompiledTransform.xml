<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df35b09bb7bf6d29d6d71264fa0b9ba7fbd134ad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30721081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="47d2a-101">使用 XSLT 样式表转换 XML 数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2a-101">Transforms XML data using an XSLT style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-102"><xref:System.Xml.Xsl.XslCompiledTransform>类是支持的 XSLT 1.0 语法的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="47d2a-102">The <xref:System.Xml.Xsl.XslCompiledTransform> class is an XSLT processor that supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="47d2a-103">它是新实现，并包含性能提升与过时相比<xref:System.Xml.Xsl.XslTransform>类。</span><span class="sxs-lookup"><span data-stu-id="47d2a-103">It is a new implementation and includes performance gains when compared to the obsolete <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="47d2a-104">结构<xref:System.Xml.Xsl.XslCompiledTransform>类是非常类似于<xref:System.Xml.Xsl.XslTransform>类。</span><span class="sxs-lookup"><span data-stu-id="47d2a-104">The structure of the <xref:System.Xml.Xsl.XslCompiledTransform> class is very similar to the <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="47d2a-105"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法加载和编译样式表，而<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法执行 XSLT 转换。</span><span class="sxs-lookup"><span data-stu-id="47d2a-105">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads and compiles the style sheet, while the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method executes the XSLT transform.</span></span>  
  
 <span data-ttu-id="47d2a-106">XSLT 支持`document()`函数以及嵌入式的脚本块默认处于禁用状态。</span><span class="sxs-lookup"><span data-stu-id="47d2a-106">Support for the XSLT `document()` function and embedded script blocks are disabled by default.</span></span> <span data-ttu-id="47d2a-107">可以通过创建启用这些功能<xref:System.Xml.Xsl.XsltSettings>对象并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-107">These features can be enabled by creating an <xref:System.Xml.Xsl.XsltSettings> object and passing it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
 <span data-ttu-id="47d2a-108">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-108">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="47d2a-109">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="47d2a-109">Security Considerations</span></span>  
 <span data-ttu-id="47d2a-110">在创建使用 <xref:System.Xml.Xsl.XslCompiledTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="47d2a-110">When creating an application that uses the <xref:System.Xml.Xsl.XslCompiledTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="47d2a-111">默认情况下禁用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="47d2a-111">XSLT scripting is disabled by default.</span></span> <span data-ttu-id="47d2a-112">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="47d2a-112">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
-   <span data-ttu-id="47d2a-113">默认情况下禁用 XSLT `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="47d2a-113">The XSLT `document()` function is disabled by default.</span></span> <span data-ttu-id="47d2a-114">如果启用 `document()` 函数，通过将 <xref:System.Xml.XmlSecureResolver> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，限制可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="47d2a-114">If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
-   <span data-ttu-id="47d2a-115">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-115">Extension objects are enabled by default.</span></span> <span data-ttu-id="47d2a-116">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-116">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="47d2a-117">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="47d2a-117">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="47d2a-118">恶意用户可能会利用这一点，方法是为您提供数据或样式表，在执行时，可能会使您的系统不断进行处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="47d2a-118">A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="47d2a-119">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="47d2a-119">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="47d2a-120">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="47d2a-120">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="47d2a-121">如果不启用脚本或 `document()` 函数（除非样式表来自可信的源），或不接受来自不可信的源的 <xref:System.Xml.Xsl.XslCompiledTransform> 对象、XSLT 样式表或 XML 源数据，可以缓解这些安全问题。</span><span class="sxs-lookup"><span data-stu-id="47d2a-121">These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting <xref:System.Xml.Xsl.XslCompiledTransform> objects, XSLT style sheets, or XML source data from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-122">下面的示例执行转换，然后将输出到文件。</span><span class="sxs-lookup"><span data-stu-id="47d2a-122">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="47d2a-123">此示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="47d2a-123">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="47d2a-124">
        <see cref="T:System.Xml.Xsl.XslCompiledTransform" />对象是线程安全的已加载后。</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2a-124">The <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object is thread safe once it has been loaded.</span>
      </span>
      <span data-ttu-id="47d2a-125">换而言之之后,<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法已成功完成，<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />方法可以从多个线程同时调用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2a-125">In other words, after the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has successfully completed, the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method can be called simultaneously from multiple threads.</span>
      </span>
      <span data-ttu-id="47d2a-126">如果<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法时的一个线程中再次调用<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />另一线程中调用方法<see cref="T:System.Xml.Xsl.XslCompiledTransform" />对象完成执行<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />调用继续使用旧的状态。</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2a-126">If the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is called again in one thread while the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method is being called in another thread, the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object finishes executing the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> call by continuing to use the old state.</span>
      </span>
      <span data-ttu-id="47d2a-127">使用新的状态时<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法已成功完成。</span>
      <span class="sxs-lookup">
        <span data-stu-id="47d2a-127">The new state is used when the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method successfully completes.</span>
      </span>
      <block subset="none" type="note">
        <para>
          <span data-ttu-id="47d2a-128">
            <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法不是线程安全的同时从多个线程调用时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-128">The <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is not thread safe when called simultaneously from multiple threads.</span>
          </span>
        </para>
      </block>
    </threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2a-129">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-129">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47d2a-130">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-130">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug">
          <span data-ttu-id="47d2a-131">生成调试信息时为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-131">
              <see langword="true" /> to generate debug information; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="47d2a-132">如果将其设置为 <see langword="true" />，您就可以使用 Microsoft Visual Studio 调试器对样式表进行调试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-132">Setting this to <see langword="true" /> enables you to debug the style sheet with the Microsoft Visual Studio Debugger.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-133">使用指定的调试设置初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-133">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class with the specified debug setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-134">以单步执行代码，调试样式表，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="47d2a-134">The following conditions must be met in order to step into the code and debug the style sheet:</span></span>  
  
-   <span data-ttu-id="47d2a-135">`enableDebug` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="47d2a-135">The `enableDebug` parameter is set to `true`.</span></span>  
  
-   <span data-ttu-id="47d2a-136">样式表传递给<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法作为一个 URI 或实现<xref:System.Xml.XmlReader>类，该类实现<xref:System.Xml.IXmlLineInfo>接口。</span><span class="sxs-lookup"><span data-stu-id="47d2a-136">The style sheet is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method either as a URI, or an implementation of the <xref:System.Xml.XmlReader> class that implements the <xref:System.Xml.IXmlLineInfo> interface.</span></span> <span data-ttu-id="47d2a-137"><xref:System.Xml.IXmlLineInfo>接口实现上所有的文本分析<xref:System.Xml.XmlReader>对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-137">The <xref:System.Xml.IXmlLineInfo> interface is implemented on all text-parsing <xref:System.Xml.XmlReader> objects.</span></span>  
  
     <span data-ttu-id="47d2a-138">换而言之，如果使用加载样式表<xref:System.Xml.XPath.IXPathNavigable>对象，如<xref:System.Xml.XmlDocument>或<xref:System.Xml.XPath.XPathDocument>，或<xref:System.Xml.XmlReader>不实现的实现<xref:System.Xml.IXmlLineInfo>接口，你无法调试样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-138">In other words, if the style sheet is loaded using an <xref:System.Xml.XPath.IXPathNavigable> object, such as an <xref:System.Xml.XmlDocument> or <xref:System.Xml.XPath.XPathDocument>, or an <xref:System.Xml.XmlReader> implementation that does not implement the <xref:System.Xml.IXmlLineInfo> interface, you cannot debug the style sheet.</span></span>  
  
-   <span data-ttu-id="47d2a-139"><xref:System.Xml.XmlResolver>用于加载样式表是基于文件的<xref:System.Xml.XmlResolver>，如<xref:System.Xml.XmlUrlResolver>(这是默认<xref:System.Xml.XmlResolver>由<xref:System.Xml.Xsl.XslCompiledTransform>类)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-139">The <xref:System.Xml.XmlResolver> used to load the style sheet is a file-based <xref:System.Xml.XmlResolver>, such as the <xref:System.Xml.XmlUrlResolver> (this is the default <xref:System.Xml.XmlResolver> used by the <xref:System.Xml.Xsl.XslCompiledTransform> class).</span></span>  
  
-   <span data-ttu-id="47d2a-140">样式表是位于本地计算机上，也可以在 intranet 上。</span><span class="sxs-lookup"><span data-stu-id="47d2a-140">The style sheet is located on the local machine or on the intranet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-141">下面的示例演示如何启用 XSLT 调试。</span><span class="sxs-lookup"><span data-stu-id="47d2a-141">The following example shows how to enable XSLT debugging.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="debug" Type="System.Boolean" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="47d2a-142">一个 <see cref="T:System.Xml.XmlReader" />，位于要编译的样式表开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-142">An <see cref="T:System.Xml.XmlReader" /> positioned at the beginning of the style sheet to be compiled.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="47d2a-143">要应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-143">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to be applied to the style sheet.</span>
          </span>
          <span data-ttu-id="47d2a-144">如果为 <see langword="null" />，将应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-144">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> will be applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="47d2a-145">
            <see cref="T:System.Xml.XmlResolver" /> 用于解析 <see langword="xsl:import" /> 和 <see langword="xsl:include" /> 元素中引用的样式表模块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-145">The <see cref="T:System.Xml.XmlResolver" /> use to resolve style sheet modules referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements.</span>
          </span>
          <span data-ttu-id="47d2a-146">如果为 <see langword="null" />，将不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-146">If this is <see langword="null" />, external resources will not be resolved.</span>
          </span>
        </param>
        <param name="debug">
          <span data-ttu-id="47d2a-147">将它设置为 <see langword="true" /> 即可使用调试器调试样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-147">Setting this to <see langword="true" /> enables debugging the style sheet with a debugger.</span>
          </span>
        </param>
        <param name="typeBuilder">
          <span data-ttu-id="47d2a-148">用于样式表编译的 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-148">The <see cref="T:System.Reflection.Emit.TypeBuilder" /> used for the style sheet compilation.</span>
          </span>
          <span data-ttu-id="47d2a-149">提供的 TypeBuilder 用于生成结果类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-149">The provided TypeBuilder is used to generate the resulting type.</span>
          </span>
        </param>
        <param name="scriptAssemblyPath">
          <span data-ttu-id="47d2a-150">为 <see langword="msxsl:script" /> 元素生成的程序集的基路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-150">The base path for the assemblies generated for <see langword="msxsl:script" /> elements.</span>
          </span>
          <span data-ttu-id="47d2a-151">如果仅生成了一个脚本程序集，此参数将指定该程序集的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-151">If only one script assembly is generated, this parameter specifies the path for that assembly.</span>
          </span>
          <span data-ttu-id="47d2a-152">如果生成了多个脚本程序集，将对文件名追加特殊的后缀，以确保程序集名称的唯一性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-152">In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-153">将 XSLT 样式表编译为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-153">Compiles an XSLT style sheet to a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47d2a-154">一个 <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> 对象，包含指示编译结果的编译器错误和警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-154">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object containing compiler errors and warnings that indicate the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-155">`xsltc.exe`工具是周围的包装器<xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-155">The `xsltc.exe` tool is a wrapper around the <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method.</span></span> <span data-ttu-id="47d2a-156">编译样式表与`xsltc.exe`将满足大部分利用已编译的样式表使用的应用程序的要求。</span><span class="sxs-lookup"><span data-stu-id="47d2a-156">Compiling style sheets with the `xsltc.exe` will meet the demands of most applications that leverage the use of compiled style sheets.</span></span> <span data-ttu-id="47d2a-157"><xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>方法应构建自定义编译工具时使用。</span><span class="sxs-lookup"><span data-stu-id="47d2a-157">The <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method should be used when building custom compilation tools.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2a-158">编译样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-158">Compiles the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-159">尽管 <xref:System.Xml.Xsl.XslCompiledTransform> 类的总体性能优于 <xref:System.Xml.Xsl.XslTransform> 类，但在首次对转换调用时，<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 类的 <xref:System.Xml.Xsl.XslCompiledTransform> 方法可能比 <xref:System.Xml.Xsl.XslTransform.Load%2A> 类的 <xref:System.Xml.Xsl.XslTransform> 方法慢。</span><span class="sxs-lookup"><span data-stu-id="47d2a-159">Although the overall performance of the <xref:System.Xml.Xsl.XslCompiledTransform> class is better than the <xref:System.Xml.Xsl.XslTransform> class, the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslCompiledTransform> class might perform more slowly than the <xref:System.Xml.Xsl.XslTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslTransform> class the first time it is called on a transformation.</span></span> <span data-ttu-id="47d2a-160">这是因为必须先编译 XSLT 文件，才能加载该文件。</span><span class="sxs-lookup"><span data-stu-id="47d2a-160">This is because the XSLT file must be compiled before it is loaded.</span></span> <span data-ttu-id="47d2a-161">有关详细信息，请参阅以下博客文章：[XslCompiledTransform 比 XslTransform 慢？](http://go.microsoft.com/fwlink/?LinkId=130590)</span><span class="sxs-lookup"><span data-stu-id="47d2a-161">For more information, see the following blog post: [XslCompiledTransform Slower than XslTransform?](http://go.microsoft.com/fwlink/?LinkId=130590)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47d2a-162">以调试模式编译的 XSLT 与以发布模式编译的 XSLT 之间有一些差别。</span><span class="sxs-lookup"><span data-stu-id="47d2a-162">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="47d2a-163">在有些情况下，以调试模式编译的样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间不会引发错误，但以后在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期间会失败。</span><span class="sxs-lookup"><span data-stu-id="47d2a-163">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="47d2a-164">以发布模式编译的同一个样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间就会失败。</span><span class="sxs-lookup"><span data-stu-id="47d2a-164">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="47d2a-165">例如，当某个表达式需要节点集，而分配给该表达式的变量不是节点集类型的时，就会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="47d2a-165">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">
          <span data-ttu-id="47d2a-166">样式表的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-166">The URI of the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-167">加载和编译位于指定 URI 的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-167">Loads and compiles the style sheet located at the specified URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-168"><xref:System.Xml.Xsl.XslCompiledTransform>类支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-168">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="47d2a-169">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="47d2a-169">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="47d2a-170">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="47d2a-170">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="47d2a-171"><xref:System.Xml.XmlUrlResolver>无用户凭据用于解析样式表的 URI，并处理所有`xsl:import`或`xsl:include`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-171">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the style sheet URI, and process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="47d2a-172"><xref:System.Xml.XmlReader>使用默认设置用于加载样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-172">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="47d2a-173">在上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-173">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="47d2a-174">如果需要 DTD 处理，则创建<xref:System.Xml.XmlReader>启用了此功能后，并将其传递到<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-174">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
-   <span data-ttu-id="47d2a-175">`document()`函数处于禁用状态。</span><span class="sxs-lookup"><span data-stu-id="47d2a-175">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="47d2a-176">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="47d2a-176">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="47d2a-177">你可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>重载来指定<xref:System.Xml.XmlResolver>使用必要的身份验证的凭据，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="47d2a-177">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-178">下面的示例执行转换，然后将输出到文件。</span><span class="sxs-lookup"><span data-stu-id="47d2a-178">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-179">
            <paramref name="stylesheetUri" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-179">The <paramref name="stylesheetUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-180">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-180">The style sheet contains an error.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="47d2a-181">无法找到该样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-181">The style sheet cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="47d2a-182">
            <paramref name="stylesheetUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-182">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="47d2a-183">无法解析 <paramref name="stylesheetUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-183">The <paramref name="stylesheetUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="47d2a-184">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-184">-or-</span>
          </span>
          <span data-ttu-id="47d2a-185">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-185">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="47d2a-186">
            <paramref name="stylesheetUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-186">
              <paramref name="stylesheetUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="47d2a-187">加载样式表时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-187">There was a parsing error loading the style sheet.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet">
          <span data-ttu-id="47d2a-188">包含已编译样式表的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-188">The name of the class that contains the compiled style sheet.</span>
          </span>
          <span data-ttu-id="47d2a-189">该名称通常是样式表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-189">This is usually the name of the style sheet.</span>
          </span>
          <span data-ttu-id="47d2a-190">除非另外指定，否则，xsltc.exe 工具将样式表名称用作类和程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-190">Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-191">加载使用 [XSLT 编译器 (xsltc.exe)](~/docs/standard/data/xml/xslt-compiler-xsltc-exe.md) 创建的已编译样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-191">Loads the compiled style sheet that was created using the [XSLT Compiler (xsltc.exe)](~/docs/standard/data/xml/xslt-compiler-xsltc-exe.md).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-192">Xsltc.exe 工具用于编译样式表并从样式表生成程序集。</span><span class="sxs-lookup"><span data-stu-id="47d2a-192">The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets.</span></span> <span data-ttu-id="47d2a-193"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法加载程序集中的已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-193">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads the compiled style sheet from the assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47d2a-194">您还必须在你的应用程序中包含作为引用的 XSLT 程序集。</span><span class="sxs-lookup"><span data-stu-id="47d2a-194">You must also include the XSLT assembly as a reference in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-195">下面的示例演示如何从 XSLT 程序集加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-195">The following example shows how to load a compiled style sheet from an XSLT assembly.</span></span> <span data-ttu-id="47d2a-196">该示例假定 xsltc.exe 工具已用于创建一个名为 bookOrders 类的名为 bookOrders.dll 程序集。</span><span class="sxs-lookup"><span data-stu-id="47d2a-196">The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47d2a-197">你必须在编译代码时引用 XSLT 程序集。</span><span class="sxs-lookup"><span data-stu-id="47d2a-197">You have to reference the XSLT assembly when compiling the code.</span></span> <span data-ttu-id="47d2a-198">例如 `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`。</span><span class="sxs-lookup"><span data-stu-id="47d2a-198">For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.</span></span>  
  
```  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="47d2a-199">包含此样式表的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-199">An <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-200">编译 <see cref="T:System.Xml.XmlReader" /> 中包含的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-200">Compiles the style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-201"><xref:System.Xml.Xsl.XslCompiledTransform>类支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-201">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="47d2a-202">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="47d2a-202">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="47d2a-203">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="47d2a-203">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="47d2a-204">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="47d2a-204">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="47d2a-205">后<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法完成时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="47d2a-205">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="47d2a-206">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-206">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="47d2a-207">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="47d2a-207">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="47d2a-208"><xref:System.Xml.XmlUrlResolver>无用户凭据用于处理任何`xsl:import`或`xsl:include`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-208">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="47d2a-209">`document()`函数处于禁用状态。</span><span class="sxs-lookup"><span data-stu-id="47d2a-209">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="47d2a-210">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="47d2a-210">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="47d2a-211">你可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>重载来指定<xref:System.Xml.XmlResolver>使用必要的身份验证的凭据，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="47d2a-211">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-212">下面的示例加载样式表中包含<xref:System.Xml.XmlReader>对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-212">The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-213">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-213">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-214">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-214">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="47d2a-215">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-215">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="47d2a-216">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含该样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-216">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-217">编译 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象中包含的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-217">Compiles the style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-218"><xref:System.Xml.Xsl.XslCompiledTransform>类支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-218">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="47d2a-219">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="47d2a-219">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="47d2a-220">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="47d2a-220">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="47d2a-221"><xref:System.Xml.XmlUrlResolver>无用户凭据用于处理任何`xsl:import`或`xsl:include`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-221">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="47d2a-222">`document()`函数处于禁用状态。</span><span class="sxs-lookup"><span data-stu-id="47d2a-222">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="47d2a-223">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="47d2a-223">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="47d2a-224">你可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>重载来指定<xref:System.Xml.XmlResolver>使用必要的身份验证的凭据，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="47d2a-224">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-225">下面的示例加载样式表中包含<xref:System.Xml.XPath.XPathDocument>对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-225">The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-226">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-226">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-227">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-227">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod">
          <span data-ttu-id="47d2a-228">一个 <see cref="T:System.Reflection.MethodInfo" /> 对象，表示已编译样式表中由编译器生成的 <c>execute</c> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-228">A <see cref="T:System.Reflection.MethodInfo" /> object representing the compiler-generated <c>execute</c> method of the compiled style sheet.</span>
          </span>
        </param>
        <param name="queryData">
          <span data-ttu-id="47d2a-229">已编译样式表的 <c>staticData</c> 字段中的一个序列化数据结构字节数组，该已编译样式表由 <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> 方法生成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-229">A byte array of serialized data structures in the <c>staticData</c> field of the compiled style sheet as generated by the <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> method.</span>
          </span>
        </param>
        <param name="earlyBoundTypes">
          <span data-ttu-id="47d2a-230">一个类型数组，该数组存储在已编译样式表中由编译器生成的 <c>ebTypes</c> 字段中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-230">An array of types stored in the compiler-generated <c>ebTypes</c> field of the compiled style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-231">从使用 <see langword="XSLTC.exe" /> 实用程序编译的样式表中加载一个方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-231">Loads a method from a style sheet compiled using the <see langword="XSLTC.exe" /> utility.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-232">此方法接受形式的已编译的样式表<xref:System.Reflection.MethodInfo>对象、 字节数组和一个类型数组。</span><span class="sxs-lookup"><span data-stu-id="47d2a-232">This method accepts a compiled style sheet in the form of a <xref:System.Reflection.MethodInfo> object, a byte array, and a type array.</span></span> <span data-ttu-id="47d2a-233"><xref:System.Reflection.Emit.DynamicMethod> 对象可用于允许已编译的样式表方法要被丢弃时<xref:System.Xml.Xsl.XslCompiledTransform>回收对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-233"><xref:System.Reflection.Emit.DynamicMethod> objects may be used to allow compiled style sheet methods to be discarded when the <xref:System.Xml.Xsl.XslCompiledTransform> object is reclaimed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-234">使用下面的代码示例<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-234">The code example below uses the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> to load a compiled style sheet.</span></span> <span data-ttu-id="47d2a-235">转换可以减少的值`Price`10%的元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-235">The transformation reduces the value of the `Price` element by ten percent.</span></span>  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="47d2a-236">此示例中使用"转换"程序集是使用 xsltc.exe 实用程序生成的。</span><span class="sxs-lookup"><span data-stu-id="47d2a-236">The "Transform" assembly used in this example was built using the xsltc.exe utility.</span></span> <span data-ttu-id="47d2a-237">有关使用此命令行工具的详细信息，请参阅[如何： 通过使用程序集执行 XSLT 转换](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-237">For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md).</span></span>  
  
 <span data-ttu-id="47d2a-238">上面的代码示例使用以下转换：</span><span class="sxs-lookup"><span data-stu-id="47d2a-238">The code example above uses the following transformation:</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  
  xmlns:msxsl="urn:schemas-microsoft-com:xslt"  
  xmlns:user="urn:my-scripts">  
  <msxsl:script language="C#" implements-prefix="user">  
    <![CDATA[  
  public double modifyPrice(double price){  
    price*=0.9;  
    return price;  
  }  
  ]]]><![CDATA[]>  
  </msxsl:script>  
  <xsl:template match="Root">  
    <Root xmlns="">  
      <Price><xsl:value-of select="user:modifyPrice(Price)"/></Price>  
    </Root>  
  </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">
          <span data-ttu-id="47d2a-239">样式表的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-239">The URI of the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="47d2a-240">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-240">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="47d2a-241">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-241">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="47d2a-242">用于解析样式表 URI 的 <see cref="T:System.Xml.XmlResolver" /> 以及在 XSLT <c>import</c> 和 <c>include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-242">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the style sheet URI and any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-243">加载和编译 URI 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-243">Loads and compiles the XSLT style sheet specified by the URI.</span>
          </span>
          <span data-ttu-id="47d2a-244">
            <see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-244">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-245"><xref:System.Xml.Xsl.XslCompiledTransform>类支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-245">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="47d2a-246">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="47d2a-246">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="47d2a-247"><xref:System.Xml.XmlReader>使用默认设置用于加载样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-247">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="47d2a-248">在上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-248">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="47d2a-249">如果需要 DTD 处理，则创建<xref:System.Xml.XmlReader>启用了此功能后，并将其传递到<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-249">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-250">下面的示例加载存储在网络资源的样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-250">The following example loads a style sheet that is stored on a network resource.</span></span> <span data-ttu-id="47d2a-251"><xref:System.Xml.XmlSecureResolver> 对象指定访问该样式表所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-251">An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-252">
            <paramref name="stylesheetUri" /> 或 <paramref name="stylesheetResolver" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-252">The <paramref name="stylesheetUri" /> or <paramref name="stylesheetResolver" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-253">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-253">The style sheet contains an error.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="47d2a-254">无法找到该样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-254">The style sheet cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="47d2a-255">
            <paramref name="stylesheetUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-255">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="47d2a-256">无法解析 <paramref name="stylesheetUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-256">The <paramref name="stylesheetUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="47d2a-257">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-257">-or-</span>
          </span>
          <span data-ttu-id="47d2a-258">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-258">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="47d2a-259">
            <paramref name="stylesheetUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-259">
              <paramref name="stylesheetUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="47d2a-260">加载样式表时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-260">There was a parsing error loading the style sheet.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="47d2a-261">包含该样式表的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-261">The <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="47d2a-262">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-262">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="47d2a-263">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-263">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="47d2a-264">
            <see cref="T:System.Xml.XmlResolver" />，用于解析 XSLT <c>import</c> 和 <c>include</c> 元素中引用的所有样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-264">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
          <span data-ttu-id="47d2a-265">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-265">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-266">编译 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-266">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="47d2a-267">
            <see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-267">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-268"><xref:System.Xml.Xsl.XslCompiledTransform>类支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-268">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="47d2a-269">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="47d2a-269">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="47d2a-270">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="47d2a-270">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="47d2a-271">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="47d2a-271">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="47d2a-272">后<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法完成时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="47d2a-272">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="47d2a-273">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-273">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-274">下面的示例加载样式表，并支持的 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="47d2a-274">The following example loads a style sheet and enables support for XSLT scripting.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-275">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-275">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-276">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-276">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="47d2a-277">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-277">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="47d2a-278">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含该样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-278">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="47d2a-279">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-279">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="47d2a-280">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-280">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="47d2a-281">
            <see cref="T:System.Xml.XmlResolver" />，用于解析 XSLT <c>import</c> 和 <c>include</c> 元素中引用的所有样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-281">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
          <span data-ttu-id="47d2a-282">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-282">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-283">编译 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-283">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="47d2a-284">
            <see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-284">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-285"><xref:System.Xml.Xsl.XslCompiledTransform>类支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-285">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="47d2a-286">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="47d2a-286">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-287">下面的示例加载样式表。</span><span class="sxs-lookup"><span data-stu-id="47d2a-287">The following example loads a style sheet.</span></span> <span data-ttu-id="47d2a-288"><xref:System.Xml.XmlSecureResolver>对象包含访问任何所需的凭据`import`或`include`样式表中找到的元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-288">The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-289">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-289">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-290">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-290">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2a-291">获取一个 <see cref="T:System.Xml.XmlWriterSettings" /> 对象，该对象包含从样式表的 <c>xsl:output</c> 元素派生的输出信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-291">Gets an <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2a-292">只读<see cref="T:System.Xml.XmlWriterSettings" />包含的输出信息的对象派生自<c>xsl: output</c>样式表的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-292">A read-only <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span>
          </span>
          <span data-ttu-id="47d2a-293">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-293">This value can be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-294">在成功调用后填充此属性<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-294">This property is populated after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span> <span data-ttu-id="47d2a-295">它包含派生自的信息`xsl:output`的已编译的样式表的元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-295">It contains information derived from the `xsl:output` element of a compiled style sheet.</span></span> <span data-ttu-id="47d2a-296">这<xref:System.Xml.XmlWriterSettings>可以将对象传递给<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>方法来创建<xref:System.Xml.XmlWriter>你想要输出的对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-296">This <xref:System.Xml.XmlWriterSettings> object can be passed to the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method to create the <xref:System.Xml.XmlWriter> object to which you want to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-297">下面的示例演示如何使用<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A>属性创建<xref:System.Xml.XmlWriter>将文本写入控制台的对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-297">The following example shows how to use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.</span></span>  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 <span data-ttu-id="47d2a-298">该示例使用`books.xml`和`outputConsole.xsl`文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="47d2a-298">The example uses the `books.xml` and `outputConsole.xsl` files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47d2a-299">获取包含临时文件的 <see cref="T:System.CodeDom.Compiler.TempFileCollection" />，这些临时文件是在成功调用 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法后在磁盘上生成的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-299">Gets the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk after a successful call to the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47d2a-300">
            <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 包含在磁盘上生成的临时文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-300">The <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk.</span>
          </span>
          <span data-ttu-id="47d2a-301">如果调用 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法不成功或者尚未启用调试，则此值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-301">This value is <see langword="null" /> if the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has not been successfully called, or if debugging has not been enabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-302">此属性将标识 XSLT 期间生成的文件处理。</span><span class="sxs-lookup"><span data-stu-id="47d2a-302">This property identifies the files that were generated during XSLT processing.</span></span> <span data-ttu-id="47d2a-303">文件放置在 Temp 目录 （由 %TEMP%环境变量指定） 你可以删除这些文件，XSLT 处理完成后。</span><span class="sxs-lookup"><span data-stu-id="47d2a-303">The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-304">下面的示例将临时文件的名称写入控制台。</span><span class="sxs-lookup"><span data-stu-id="47d2a-304">The following example writes the names of temporary files to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47d2a-305">仅当与加载样式表创建临时文件\<msxsl: script > 块。</span><span class="sxs-lookup"><span data-stu-id="47d2a-305">Temporary files are created only when loading style sheets with \<msxsl:script> blocks.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47d2a-306">执行 XSLT 转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-306">Executes the XSLT transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47d2a-307">以调试模式编译的 XSLT 与以发布模式编译的 XSLT 之间有一些差别。</span><span class="sxs-lookup"><span data-stu-id="47d2a-307">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="47d2a-308">在有些情况下，以调试模式编译的样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间不会引发错误，但以后在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期间会失败。</span><span class="sxs-lookup"><span data-stu-id="47d2a-308">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="47d2a-309">以发布模式编译的同一个样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间就会失败。</span><span class="sxs-lookup"><span data-stu-id="47d2a-309">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="47d2a-310">例如，当某个表达式需要节点集，而分配给该表达式的变量不是节点集类型的时，就会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="47d2a-310">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="47d2a-311">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-311">The URI of the input document.</span>
          </span>
        </param>
        <param name="resultsFile">
          <span data-ttu-id="47d2a-312">输出文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-312">The URI of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-313">使用 URI 指定的输入文档执行转换，然后将结果输出到文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-313">Executes the transform using the input document specified by the URI and outputs the results to a file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-314">此方法使用默认<xref:System.Xml.XmlUrlResolver>若要解决的输入和输出文档没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-314">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input and output documents.</span></span> <span data-ttu-id="47d2a-315">如果任何这些资源都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-315">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-316"><xref:System.Xml.XmlReader>使用默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-316">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="47d2a-317">在上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-317">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="47d2a-318">如果需要 DTD 处理，则创建<xref:System.Xml.XmlReader>启用了此功能后，并将其传递到<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-318">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-319">下面的示例执行转换，然后将输出到文件。</span><span class="sxs-lookup"><span data-stu-id="47d2a-319">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="47d2a-320">此示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="47d2a-320">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-321">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-321">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-322">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-322">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="47d2a-323">无法找到输入文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-323">The input document cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="47d2a-324">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-324">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="47d2a-325">无法解析 <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-325">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="47d2a-326">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-326">-or-</span>
          </span>
          <span data-ttu-id="47d2a-327">处理请求时发生错误</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-327">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="47d2a-328">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 不是有效 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-328">
              <paramref name="inputUri" /> or <paramref name="resultsFile" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="47d2a-329">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-329">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="47d2a-330">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-330">The URI of the input document.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-331">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-331">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-332">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-332">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-333">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-333">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-334">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-334">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-335">此方法使用默认<xref:System.Xml.XmlUrlResolver>没有用户凭据以解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="47d2a-335">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="47d2a-336">如果任何这些资源都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-336">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-337"><xref:System.Xml.XmlReader>使用默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-337">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="47d2a-338">在上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-338">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="47d2a-339">如果需要 DTD 处理，则创建<xref:System.Xml.XmlReader>启用了此功能后，并将其传递到<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-339">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="47d2a-340">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-340">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="47d2a-341">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="47d2a-341">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-342">下面的示例执行 XSLT 转换，并输出到<xref:System.Xml.XmlWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-342">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-343">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-343">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-344">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-344">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="47d2a-345">
            <paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-345">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="47d2a-346">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-346">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="47d2a-347">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-347">-or-</span>
          </span>
          <span data-ttu-id="47d2a-348">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-348">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="47d2a-349">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-349">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="47d2a-350">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-350">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-351">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-351">The <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-352">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-352">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-353">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-353">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-354">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-354">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-355">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-355">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-356">如果 XSLT`document()`启用功能，则会得到解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-356">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-357">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-357">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-358">下面的示例转换 books.xml 文件中的第一本图书。</span><span class="sxs-lookup"><span data-stu-id="47d2a-358">The following example transforms the first book in the books.xml file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-359">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-359">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-360">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-360">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-361">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-361">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="47d2a-362">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-362">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-363">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-363">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-364">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-364">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-365">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-365">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-366">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-366">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-367">如果 XSLT`document()`启用功能，则会得到解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-367">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-368">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-368">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-369">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-369">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="47d2a-370">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="47d2a-370">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="47d2a-371"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="47d2a-371">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="47d2a-372">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="47d2a-372">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="47d2a-373"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="47d2a-373">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="47d2a-374"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="47d2a-374">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="47d2a-375"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="47d2a-375"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="47d2a-376">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="47d2a-376">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="47d2a-377">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-377">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="47d2a-378">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="47d2a-378">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="47d2a-379">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-379">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="47d2a-380">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-380">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-381">下面的示例执行 XSLT 转换，并输出到<xref:System.Xml.XmlWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="47d2a-381">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-382">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-382">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-383">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-383">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="47d2a-384">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-384">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-385">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-385">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-386">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-386">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-387">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-387">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-388">使用 URI 指定的输入文档执行转换，然后将结果输出到流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-388">Executes the transform using the input document specified by the URI and outputs the results to stream.</span>
          </span>
          <span data-ttu-id="47d2a-389">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-389">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-390">此方法使用默认<xref:System.Xml.XmlUrlResolver>没有用户凭据以解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="47d2a-390">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="47d2a-391">如果任何这些资源都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-391">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-392"><xref:System.Xml.XmlReader>使用默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-392">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="47d2a-393">在上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-393">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="47d2a-394">如果需要 DTD 处理，则创建<xref:System.Xml.XmlReader>启用了此功能后，并将其传递到<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-394">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-395">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-395">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-396">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-396">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="47d2a-397">
            <paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-397">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="47d2a-398">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-398">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="47d2a-399">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-399">-or-</span>
          </span>
          <span data-ttu-id="47d2a-400">处理请求时发生错误</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-400">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="47d2a-401">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-401">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="47d2a-402">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-402">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="47d2a-403">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-403">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-404">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-404">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-405">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-405">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-406">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-406">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-407">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-407">Executes the transform using the input document specified by the URI and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-408">此方法使用默认<xref:System.Xml.XmlUrlResolver>没有用户凭据以解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="47d2a-408">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="47d2a-409">如果任何这些资源都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-409">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-410"><xref:System.Xml.XmlReader>使用默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-410">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="47d2a-411">在上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-411">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="47d2a-412">如果需要 DTD 处理，则创建<xref:System.Xml.XmlReader>启用了此功能后，并将其传递到<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-412">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-413">下面的示例执行 XSLT 转换，然后将输出一个字符串。</span><span class="sxs-lookup"><span data-stu-id="47d2a-413">The following example executes an XSLT transformation and outputs a string.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-414">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-414">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-415">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-415">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="47d2a-416">
            <paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-416">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="47d2a-417">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-417">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="47d2a-418">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-418">-or-</span>
          </span>
          <span data-ttu-id="47d2a-419">处理请求时发生错误</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-419">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="47d2a-420">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-420">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="47d2a-421">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-421">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="47d2a-422">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-422">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-423">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-423">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-424">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-424">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-425">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-425">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-426">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-426">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-427">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-427">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-428">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-428">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="47d2a-429">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-429">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-430">此方法使用默认<xref:System.Xml.XmlUrlResolver>没有用户凭据以解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="47d2a-430">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="47d2a-431">如果任何这些资源都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-431">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-432"><xref:System.Xml.XmlReader>使用默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-432">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="47d2a-433">在上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-433">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="47d2a-434">如果需要 DTD 处理，则创建<xref:System.Xml.XmlReader>启用了此功能后，并将其传递到<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-434">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-435">下面的示例使用<xref:System.Xml.Xsl.XsltArgumentList>对象来创建参数表示的当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="47d2a-435">The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.</span></span>  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 <span data-ttu-id="47d2a-436">该示例使用以下两个数据文件</span><span class="sxs-lookup"><span data-stu-id="47d2a-436">The example uses the following two data files as input.</span></span>  
  
 <span data-ttu-id="47d2a-437">order.xml</span><span class="sxs-lookup"><span data-stu-id="47d2a-437">order.xml</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 <span data-ttu-id="47d2a-438">order.xsl</span><span class="sxs-lookup"><span data-stu-id="47d2a-438">order.xsl</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-439">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-439">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-440">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-440">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="47d2a-441">
            <paramref name="inputtUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-441">The <paramref name="inputtUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="47d2a-442">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-442">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="47d2a-443">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-443">-or-</span>
          </span>
          <span data-ttu-id="47d2a-444">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-444">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="47d2a-445">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-445">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="47d2a-446">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-446">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-447">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-447">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-448">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-448">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-449">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-449">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-450">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-450">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-451">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-451">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a stream.</span>
          </span>
          <span data-ttu-id="47d2a-452">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-452">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-453">如果样式表包含 XSLT`document()`函数，它是解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-453">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-454">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-454">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-455">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-455">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-456">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-456">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-457">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-457">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-458">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-458">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-459">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-459">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-460">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-460">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-461">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-461">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="47d2a-462">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-462">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-463">如果样式表包含 XSLT`document()`函数，它是解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-463">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-464">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-464">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-465">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-465">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-466">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-466">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-467">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-467">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-468">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-468">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-469">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-469">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-470">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-470">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-471">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-471">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-472">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-472">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-473">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-473">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="47d2a-474">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-474">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-475">如果样式表包含 XSLT`document()`函数，它是解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-475">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-476">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-476">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-477">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-477">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-478">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-478">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-479">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-479">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="47d2a-480">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-480">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-481">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-481">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-482">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-482">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-483">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-483">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-484">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-484">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to a stream.</span>
          </span>
          <span data-ttu-id="47d2a-485">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-485">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional runtime arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-486">如果 XSLT`document()`启用功能，则会得到解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-486">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-487">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-487">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-488">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-488">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="47d2a-489">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="47d2a-489">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="47d2a-490"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="47d2a-490">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="47d2a-491">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="47d2a-491">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="47d2a-492"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="47d2a-492">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="47d2a-493"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="47d2a-493">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="47d2a-494"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="47d2a-494"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="47d2a-495">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="47d2a-495">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="47d2a-496">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-496">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="47d2a-497">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="47d2a-497">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="47d2a-498">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-498">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="47d2a-499">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-499">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47d2a-500">下面的示例执行 XSLT 转换，并输出到<xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="47d2a-500">The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-501">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-501">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-502">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-502">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-503">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-503">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="47d2a-504">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-504">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-505">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-505">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-506">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-506">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-507">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-507">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-508">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-508">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="47d2a-509">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-509">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-510">如果 XSLT`document()`启用功能，则会得到解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-510">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-511">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-511">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-512">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-512">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="47d2a-513">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="47d2a-513">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="47d2a-514"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="47d2a-514">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="47d2a-515">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="47d2a-515">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="47d2a-516"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="47d2a-516">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="47d2a-517"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="47d2a-517">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="47d2a-518"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="47d2a-518"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="47d2a-519">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="47d2a-519">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="47d2a-520">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-520">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="47d2a-521">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="47d2a-521">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="47d2a-522">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-522">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="47d2a-523">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-523">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-524">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-524">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-525">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-525">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-526">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-526">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="47d2a-527">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-527">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-528">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-528">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-529">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-529">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-530">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-530">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-531">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-531">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-532">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-532">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-533">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-533">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="47d2a-534">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-534">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47d2a-535">如果 XSLT`document()`启用功能，则会得到解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-535">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="47d2a-536">如果需要身份验证的网络资源位于外部的资源，则请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="47d2a-536">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="47d2a-537">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="47d2a-537">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="47d2a-538">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="47d2a-538">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="47d2a-539"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="47d2a-539">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="47d2a-540">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="47d2a-540">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="47d2a-541"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="47d2a-541">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="47d2a-542"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="47d2a-542">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="47d2a-543"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="47d2a-543"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="47d2a-544">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="47d2a-544">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="47d2a-545">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="47d2a-545">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="47d2a-546">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="47d2a-546">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="47d2a-547">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47d2a-547">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="47d2a-548">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="47d2a-548">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-549">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-549">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-550">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-550">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-551">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-551">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-552">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-552">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="47d2a-553">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-553">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-554">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-554">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-555">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-555">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-556">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-556">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <param name="documentResolver">
          <span data-ttu-id="47d2a-557">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-557">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="47d2a-558">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-558">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-559">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-559">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="47d2a-560">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数，而 XmlResolver 解析 XSLT <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-560">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the XmlResolver resolves the XSLT <c>document()</c> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47d2a-561">下面的示例使用<xref:System.Xml.XmlSecureResolver>来解析 XSLT`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="47d2a-561">The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47d2a-562">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-562">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="47d2a-563">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-563">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="47d2a-564">由 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的要转换的文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-564">The document to transform that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="47d2a-565">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 形式的参数列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-565">Argument list as <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="47d2a-566">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-566">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="47d2a-567">如果样式表包含 <see langword="xsl:output" /> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-567">If the style sheet contains an <see langword="xsl:output" /> element, you should create the <see cref="T:System.Xml.XmlWriter" /> by using the <see cref="T:System.Xml.XmlWriterSettings" /> object that is returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="47d2a-568">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-568">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <param name="documentResolver">
          <span data-ttu-id="47d2a-569">用于解析 XSLT <see langword="document()" /> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-569">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <see langword="document()" /> function.</span>
          </span>
          <span data-ttu-id="47d2a-570">如果为 <see langword="null" />，则不解析 <see langword="document()" /> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-570">If this is <see langword="null" />, the <see langword="document()" /> function is not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47d2a-571">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-571">Executes the transform by using the input document that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="47d2a-572">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数，而 <see cref="T:System.Xml.XmlResolver" /> 解析 XSLT <see langword="document()" /> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="47d2a-572">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the <see cref="T:System.Xml.XmlResolver" /> resolves the XSLT <see langword="document()" /> function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>