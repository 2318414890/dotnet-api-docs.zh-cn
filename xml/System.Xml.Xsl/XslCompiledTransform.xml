<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f0c36a3761347dc57d94d28602e9ed1537a5ca2" />
    <Meta Name="ms.sourcegitcommit" Value="840fd2a3bbdce4224fcbae5a3cea9a7a89e685f5" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/24/2018" />
    <Meta Name="ms.locfileid" Value="49962301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <TypeSignature Language="F#" Value="type XslCompiledTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="29569-101">使用 XSLT 样式表转换 XML 数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29569-101">Transforms XML data using an XSLT style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-102"><xref:System.Xml.Xsl.XslCompiledTransform>类是支持 XSLT 1.0 语法的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="29569-102">The <xref:System.Xml.Xsl.XslCompiledTransform> class is an XSLT processor that supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="29569-103">它是新的实现，包含与已过时相比性能提升<xref:System.Xml.Xsl.XslTransform>类。</span><span class="sxs-lookup"><span data-stu-id="29569-103">It is a new implementation and includes performance gains when compared to the obsolete <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="29569-104">结构<xref:System.Xml.Xsl.XslCompiledTransform>类是非常类似于<xref:System.Xml.Xsl.XslTransform>类。</span><span class="sxs-lookup"><span data-stu-id="29569-104">The structure of the <xref:System.Xml.Xsl.XslCompiledTransform> class is very similar to the <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="29569-105"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法加载和编译样式表，而<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法执行 XSLT 转换。</span><span class="sxs-lookup"><span data-stu-id="29569-105">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads and compiles the style sheet, while the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method executes the XSLT transform.</span></span>  
  
 <span data-ttu-id="29569-106">支持 XSLT`document()`默认情况下禁用函数和嵌入式的脚本块。</span><span class="sxs-lookup"><span data-stu-id="29569-106">Support for the XSLT `document()` function and embedded script blocks are disabled by default.</span></span> <span data-ttu-id="29569-107">可以通过创建启用这些功能<xref:System.Xml.Xsl.XsltSettings>对象并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-107">These features can be enabled by creating an <xref:System.Xml.Xsl.XsltSettings> object and passing it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
 <span data-ttu-id="29569-108">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="29569-108">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="29569-109">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="29569-109">Security Considerations</span></span>  
 <span data-ttu-id="29569-110">在创建使用 <xref:System.Xml.Xsl.XslCompiledTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="29569-110">When creating an application that uses the <xref:System.Xml.Xsl.XslCompiledTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="29569-111">默认情况下禁用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="29569-111">XSLT scripting is disabled by default.</span></span> <span data-ttu-id="29569-112">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="29569-112">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
-   <span data-ttu-id="29569-113">默认情况下禁用 XSLT `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="29569-113">The XSLT `document()` function is disabled by default.</span></span> <span data-ttu-id="29569-114">如果启用 `document()` 函数，通过将 <xref:System.Xml.XmlSecureResolver> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，限制可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="29569-114">If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
-   <span data-ttu-id="29569-115">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="29569-115">Extension objects are enabled by default.</span></span> <span data-ttu-id="29569-116">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="29569-116">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="29569-117">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="29569-117">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="29569-118">恶意用户可能会利用这一点，方法是为您提供数据或样式表，在执行时，可能会使您的系统不断进行处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="29569-118">A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="29569-119">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="29569-119">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="29569-120">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="29569-120">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="29569-121">如果不启用脚本或 `document()` 函数（除非样式表来自可信的源），或不接受来自不可信的源的 <xref:System.Xml.Xsl.XslCompiledTransform> 对象、XSLT 样式表或 XML 源数据，可以缓解这些安全问题。</span><span class="sxs-lookup"><span data-stu-id="29569-121">These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting <xref:System.Xml.Xsl.XslCompiledTransform> objects, XSLT style sheets, or XML source data from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-122">下面的示例执行一个转换，然后输出到文件。</span><span class="sxs-lookup"><span data-stu-id="29569-122">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="29569-123">该示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="29569-123">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="29569-124">
        <see cref="T:System.Xml.Xsl.XslCompiledTransform" />加载后，对象是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29569-124">The <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object is thread safe once it has been loaded.</span>
      </span>
      <span data-ttu-id="29569-125">换而言之之后,<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法已成功完成，<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />从多个线程同时调用方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29569-125">In other words, after the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has successfully completed, the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method can be called simultaneously from multiple threads.</span>
      </span>
      <span data-ttu-id="29569-126">如果<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法时的一个线程中再次调用<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />另一线程中调用方法<see cref="T:System.Xml.Xsl.XslCompiledTransform" />对象完成执行<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />调用继续使用旧的状态。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29569-126">If the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is called again in one thread while the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method is being called in another thread, the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object finishes executing the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> call by continuing to use the old state.</span>
      </span>
      <span data-ttu-id="29569-127">使用新的状态，则当<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法成功完成。</span>
      <span class="sxs-lookup">
        <span data-stu-id="29569-127">The new state is used when the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method successfully completes.</span>
      </span>
      <block subset="none" type="note">
        <para>
          <span data-ttu-id="29569-128">
            <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法不是线程安全时从多个线程同时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-128">The <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is not thread safe when called simultaneously from multiple threads.</span>
          </span>
        </para>
      </block>
    </threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
    <related type="Article" href="http://msdn.microsoft.com/library/202f8820-224c-494f-b61e-cd127eac6e03">
      <span data-ttu-id="29569-129">XSLT 转换</span>
      <span class="sxs-lookup">
        <span data-stu-id="29569-129">XSLT Transformations</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/e695047f-3c0f-4045-8708-5baea91cc380">
      <span data-ttu-id="29569-130">XML 文档和数据</span>
      <span class="sxs-lookup">
        <span data-stu-id="29569-130">XML Documents and Data</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29569-131">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-131">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-132">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-132">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29569-133">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-133">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-134">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-134">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberSignature Language="F#" Value="new System.Xml.Xsl.XslCompiledTransform : bool -&gt; System.Xml.Xsl.XslCompiledTransform" Usage="new System.Xml.Xsl.XslCompiledTransform enableDebug" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug">
          <span data-ttu-id="29569-135">生成调试信息时为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-135">
              <see langword="true" /> to generate debug information; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29569-136">如果将其设置为 <see langword="true" />，您就可以使用 Microsoft Visual Studio 调试器对样式表进行调试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-136">Setting this to <see langword="true" /> enables you to debug the style sheet with the Microsoft Visual Studio Debugger.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-137">使用指定的调试设置初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-137">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class with the specified debug setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-138">若要单步执行代码，调试样式表，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="29569-138">The following conditions must be met in order to step into the code and debug the style sheet:</span></span>  
  
-   <span data-ttu-id="29569-139">`enableDebug` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="29569-139">The `enableDebug` parameter is set to `true`.</span></span>  
  
-   <span data-ttu-id="29569-140">样式表传递给<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法为一个 URI 或实现<xref:System.Xml.XmlReader>类，该类实现<xref:System.Xml.IXmlLineInfo>接口。</span><span class="sxs-lookup"><span data-stu-id="29569-140">The style sheet is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method either as a URI, or an implementation of the <xref:System.Xml.XmlReader> class that implements the <xref:System.Xml.IXmlLineInfo> interface.</span></span> <span data-ttu-id="29569-141"><xref:System.Xml.IXmlLineInfo>接口实现上所有的文本分析<xref:System.Xml.XmlReader>对象。</span><span class="sxs-lookup"><span data-stu-id="29569-141">The <xref:System.Xml.IXmlLineInfo> interface is implemented on all text-parsing <xref:System.Xml.XmlReader> objects.</span></span>  
  
     <span data-ttu-id="29569-142">换而言之，如果使用加载样式表<xref:System.Xml.XPath.IXPathNavigable>对象，例如<xref:System.Xml.XmlDocument>或<xref:System.Xml.XPath.XPathDocument>，或<xref:System.Xml.XmlReader>未实现的实现<xref:System.Xml.IXmlLineInfo>接口，则不能调试样式表。</span><span class="sxs-lookup"><span data-stu-id="29569-142">In other words, if the style sheet is loaded using an <xref:System.Xml.XPath.IXPathNavigable> object, such as an <xref:System.Xml.XmlDocument> or <xref:System.Xml.XPath.XPathDocument>, or an <xref:System.Xml.XmlReader> implementation that does not implement the <xref:System.Xml.IXmlLineInfo> interface, you cannot debug the style sheet.</span></span>  
  
-   <span data-ttu-id="29569-143"><xref:System.Xml.XmlResolver>用于加载样式表是基于文件的<xref:System.Xml.XmlResolver>，如<xref:System.Xml.XmlUrlResolver>(这是默认<xref:System.Xml.XmlResolver>由<xref:System.Xml.Xsl.XslCompiledTransform>类)。</span><span class="sxs-lookup"><span data-stu-id="29569-143">The <xref:System.Xml.XmlResolver> used to load the style sheet is a file-based <xref:System.Xml.XmlResolver>, such as the <xref:System.Xml.XmlUrlResolver> (this is the default <xref:System.Xml.XmlResolver> used by the <xref:System.Xml.Xsl.XslCompiledTransform> class).</span></span>  
  
-   <span data-ttu-id="29569-144">样式表是位于本地计算机上或在 intranet 上。</span><span class="sxs-lookup"><span data-stu-id="29569-144">The style sheet is located on the local machine or on the intranet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-145">下面的示例演示如何启用 XSLT 调试。</span><span class="sxs-lookup"><span data-stu-id="29569-145">The following example shows how to enable XSLT debugging.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-146">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-146">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberSignature Language="F#" Value="static member CompileToType : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver * bool * System.Reflection.Emit.TypeBuilder * string -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="System.Xml.Xsl.XslCompiledTransform.CompileToType (stylesheet, settings, stylesheetResolver, debug, typeBuilder, scriptAssemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="debug" Type="System.Boolean" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="29569-147">一个 <see cref="T:System.Xml.XmlReader" />，位于要编译的样式表开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-147">An <see cref="T:System.Xml.XmlReader" /> positioned at the beginning of the style sheet to be compiled.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="29569-148">要应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-148">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to be applied to the style sheet.</span>
          </span>
          <span data-ttu-id="29569-149">如果为 <see langword="null" />，将应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-149">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> will be applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="29569-150">
            <see cref="T:System.Xml.XmlResolver" /> 用于解析 <see langword="xsl:import" /> 和 <see langword="xsl:include" /> 元素中引用的样式表模块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-150">The <see cref="T:System.Xml.XmlResolver" /> use to resolve style sheet modules referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements.</span>
          </span>
          <span data-ttu-id="29569-151">如果为 <see langword="null" />，将不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-151">If this is <see langword="null" />, external resources will not be resolved.</span>
          </span>
        </param>
        <param name="debug">
          <span data-ttu-id="29569-152">将它设置为 <see langword="true" /> 即可使用调试器调试样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-152">Setting this to <see langword="true" /> enables debugging the style sheet with a debugger.</span>
          </span>
        </param>
        <param name="typeBuilder">
          <span data-ttu-id="29569-153">用于样式表编译的 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-153">The <see cref="T:System.Reflection.Emit.TypeBuilder" /> used for the style sheet compilation.</span>
          </span>
          <span data-ttu-id="29569-154">提供的 TypeBuilder 用于生成结果类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-154">The provided TypeBuilder is used to generate the resulting type.</span>
          </span>
        </param>
        <param name="scriptAssemblyPath">
          <span data-ttu-id="29569-155">为 <see langword="msxsl:script" /> 元素生成的程序集的基路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-155">The base path for the assemblies generated for <see langword="msxsl:script" /> elements.</span>
          </span>
          <span data-ttu-id="29569-156">如果仅生成了一个脚本程序集，此参数将指定该程序集的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-156">If only one script assembly is generated, this parameter specifies the path for that assembly.</span>
          </span>
          <span data-ttu-id="29569-157">如果生成了多个脚本程序集，将对文件名追加特殊的后缀，以确保程序集名称的唯一性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-157">In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-158">将 XSLT 样式表编译为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-158">Compiles an XSLT style sheet to a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29569-159">一个 <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> 对象，包含指示编译结果的编译器错误和警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-159">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object containing compiler errors and warnings that indicate the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-160">`xsltc.exe`工具是一个包装<xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-160">The `xsltc.exe` tool is a wrapper around the <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method.</span></span> <span data-ttu-id="29569-161">编译样式表与`xsltc.exe`将满足利用已编译的样式表使用的大多数应用程序的要求。</span><span class="sxs-lookup"><span data-stu-id="29569-161">Compiling style sheets with the `xsltc.exe` will meet the demands of most applications that leverage the use of compiled style sheets.</span></span> <span data-ttu-id="29569-162"><xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>构建自定义编译工具时，应使用方法。</span><span class="sxs-lookup"><span data-stu-id="29569-162">The <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method should be used when building custom compilation tools.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29569-163">编译样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-163">Compiles the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-164">尽管 <xref:System.Xml.Xsl.XslCompiledTransform> 类的总体性能优于 <xref:System.Xml.Xsl.XslTransform> 类，但在首次对转换调用时，<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 类的 <xref:System.Xml.Xsl.XslCompiledTransform> 方法可能比 <xref:System.Xml.Xsl.XslTransform.Load%2A> 类的 <xref:System.Xml.Xsl.XslTransform> 方法慢。</span><span class="sxs-lookup"><span data-stu-id="29569-164">Although the overall performance of the <xref:System.Xml.Xsl.XslCompiledTransform> class is better than the <xref:System.Xml.Xsl.XslTransform> class, the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslCompiledTransform> class might perform more slowly than the <xref:System.Xml.Xsl.XslTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslTransform> class the first time it is called on a transformation.</span></span> <span data-ttu-id="29569-165">这是因为必须先编译 XSLT 文件，才能加载该文件。</span><span class="sxs-lookup"><span data-stu-id="29569-165">This is because the XSLT file must be compiled before it is loaded.</span></span> <span data-ttu-id="29569-166">有关详细信息，请参阅以下博客文章：[XslCompiledTransform 比 XslTransform 慢？](http://go.microsoft.com/fwlink/?LinkId=130590)</span><span class="sxs-lookup"><span data-stu-id="29569-166">For more information, see the following blog post: [XslCompiledTransform Slower than XslTransform?](http://go.microsoft.com/fwlink/?LinkId=130590)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29569-167">以调试模式编译的 XSLT 与以发布模式编译的 XSLT 之间有一些差别。</span><span class="sxs-lookup"><span data-stu-id="29569-167">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="29569-168">在有些情况下，以调试模式编译的样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间不会引发错误，但以后在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期间会失败。</span><span class="sxs-lookup"><span data-stu-id="29569-168">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="29569-169">以发布模式编译的同一个样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间就会失败。</span><span class="sxs-lookup"><span data-stu-id="29569-169">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="29569-170">例如，当某个表达式需要节点集，而分配给该表达式的变量不是节点集类型的时，就会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="29569-170">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslCompiledTransform.Load stylesheetUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">
          <span data-ttu-id="29569-171">样式表的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-171">The URI of the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-172">加载和编译位于指定 URI 的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-172">Loads and compiles the style sheet located at the specified URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-173"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="29569-173">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="29569-174">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="29569-174">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="29569-175">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="29569-175">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="29569-176"><xref:System.Xml.XmlUrlResolver>无用户凭据用于解析样式表 URI，并处理任何`xsl:import`或`xsl:include`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-176">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the style sheet URI, and process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="29569-177"><xref:System.Xml.XmlReader>设置用于加载样式表，默认值。</span><span class="sxs-lookup"><span data-stu-id="29569-177">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="29569-178">上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="29569-178">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29569-179">如果需要 DTD 处理，创建<xref:System.Xml.XmlReader>启用了此功能并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-179">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
-   <span data-ttu-id="29569-180">`document()`函数被禁用。</span><span class="sxs-lookup"><span data-stu-id="29569-180">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="29569-181">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="29569-181">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="29569-182">可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>重载，指定<xref:System.Xml.XmlResolver>使用必要的身份验证的凭据，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="29569-182">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-183">下面的示例执行一个转换，然后输出到文件。</span><span class="sxs-lookup"><span data-stu-id="29569-183">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-184">
            <paramref name="stylesheetUri" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-184">The <paramref name="stylesheetUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-185">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-185">The style sheet contains an error.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="29569-186">无法找到该样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-186">The style sheet cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="29569-187">
            <paramref name="stylesheetUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-187">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="29569-188">无法解析 <paramref name="stylesheetUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-188">The <paramref name="stylesheetUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="29569-189">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-189">-or-</span>
          </span>
          <span data-ttu-id="29569-190">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-190">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="29569-191">
            <paramref name="stylesheetUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-191">
              <paramref name="stylesheetUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="29569-192">加载样式表时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-192">There was a parsing error loading the style sheet.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-193">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-193">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : Type -&gt; unit" Usage="xslCompiledTransform.Load compiledStylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet">
          <span data-ttu-id="29569-194">包含已编译样式表的类的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-194">The name of the class that contains the compiled style sheet.</span>
          </span>
          <span data-ttu-id="29569-195">该名称通常是样式表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-195">This is usually the name of the style sheet.</span>
          </span>
          <span data-ttu-id="29569-196">除非另外指定，否则，xsltc.exe 工具将样式表名称用作类和程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-196">Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-197">加载使用 <see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">XSLT 编译器 (xsltc.exe)</see> 创建的已编译样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-197">Loads the compiled style sheet that was created using the <see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">XSLT Compiler (xsltc.exe)</see>.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-198">Xsltc.exe 工具用于编译样式表并从样式表生成程序集。</span><span class="sxs-lookup"><span data-stu-id="29569-198">The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets.</span></span> <span data-ttu-id="29569-199"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法从该程序集加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="29569-199">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads the compiled style sheet from the assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29569-200">此外必须在应用程序中包含的 XSLT 程序集作为引用。</span><span class="sxs-lookup"><span data-stu-id="29569-200">You must also include the XSLT assembly as a reference in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-201">下面的示例演示如何从 XSLT 程序集加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="29569-201">The following example shows how to load a compiled style sheet from an XSLT assembly.</span></span> <span data-ttu-id="29569-202">该示例假定 xsltc.exe 工具用于创建一个名为 bookOrders 类创建名为 bookOrders.dll 程序集。</span><span class="sxs-lookup"><span data-stu-id="29569-202">The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29569-203">您必须引用 XSLT 程序集编译的代码时。</span><span class="sxs-lookup"><span data-stu-id="29569-203">You have to reference the XSLT assembly when compiling the code.</span></span> <span data-ttu-id="29569-204">例如 `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`。</span><span class="sxs-lookup"><span data-stu-id="29569-204">For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.</span></span>  
  
```csharp  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/672a5ac8-8305-4d28-ba10-11089c2c0924">
          <span data-ttu-id="29569-205">XSLT 程序集工具 (xsltc.exe)</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-205">XSLT Assembly Tool (xsltc.exe)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/76ee440b-d134-4f8f-8262-b917ad6dcbf6">
          <span data-ttu-id="29569-206">如何： 执行 XSLT 转换使用程序集</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-206">How to: Perform an XSLT Transformation Using an Assembly</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-207">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-207">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="29569-208">包含此样式表的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-208">An <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-209">编译 <see cref="T:System.Xml.XmlReader" /> 中包含的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-209">Compiles the style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-210"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="29569-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="29569-211">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="29569-211">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="29569-212">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="29569-212">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="29569-213">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="29569-213">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="29569-214">后<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法完成，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="29569-214">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="29569-215">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="29569-215">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="29569-216">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="29569-216">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="29569-217"><xref:System.Xml.XmlUrlResolver>无用户凭据用于处理任何`xsl:import`或`xsl:include`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-217">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="29569-218">`document()`函数被禁用。</span><span class="sxs-lookup"><span data-stu-id="29569-218">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="29569-219">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="29569-219">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="29569-220">可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>重载，指定<xref:System.Xml.XmlResolver>使用必要的身份验证的凭据，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="29569-220">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-221">下面的示例加载样式表中包含<xref:System.Xml.XmlReader>对象。</span><span class="sxs-lookup"><span data-stu-id="29569-221">The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-222">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-222">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-223">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-223">The style sheet contains an error.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-224">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-224">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="29569-225">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-225">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="29569-226">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含该样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-226">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-227">编译 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象中包含的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-227">Compiles the style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-228"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="29569-228">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="29569-229">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="29569-229">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="29569-230">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="29569-230">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="29569-231"><xref:System.Xml.XmlUrlResolver>无用户凭据用于处理任何`xsl:import`或`xsl:include`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-231">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="29569-232">`document()`函数被禁用。</span><span class="sxs-lookup"><span data-stu-id="29569-232">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="29569-233">不支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="29569-233">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="29569-234">可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>重载，指定<xref:System.Xml.XmlResolver>使用必要的身份验证的凭据，或指定不同的 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="29569-234">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-235">下面的示例加载样式表中包含<xref:System.Xml.XPath.XPathDocument>对象。</span><span class="sxs-lookup"><span data-stu-id="29569-235">The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-236">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-236">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-237">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-237">The style sheet contains an error.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-238">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-238">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Reflection.MethodInfo * byte[] * Type[] -&gt; unit" Usage="xslCompiledTransform.Load (executeMethod, queryData, earlyBoundTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod">
          <span data-ttu-id="29569-239">一个 <see cref="T:System.Reflection.MethodInfo" /> 对象，表示已编译样式表中由编译器生成的 <c>execute</c> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-239">A <see cref="T:System.Reflection.MethodInfo" /> object representing the compiler-generated <c>execute</c> method of the compiled style sheet.</span>
          </span>
        </param>
        <param name="queryData">
          <span data-ttu-id="29569-240">已编译样式表的 <c>staticData</c> 字段中的一个序列化数据结构字节数组，该已编译样式表由 <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> 方法生成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-240">A byte array of serialized data structures in the <c>staticData</c> field of the compiled style sheet as generated by the <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> method.</span>
          </span>
        </param>
        <param name="earlyBoundTypes">
          <span data-ttu-id="29569-241">一个类型数组，该数组存储在已编译样式表中由编译器生成的 <c>ebTypes</c> 字段中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-241">An array of types stored in the compiler-generated <c>ebTypes</c> field of the compiled style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-242">从使用 <see langword="XSLTC.exe" /> 实用程序编译的样式表中加载一个方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-242">Loads a method from a style sheet compiled using the <see langword="XSLTC.exe" /> utility.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-243">此方法接受的窗体中的已编译的样式表<xref:System.Reflection.MethodInfo>对象、 字节数组和一个类型数组。</span><span class="sxs-lookup"><span data-stu-id="29569-243">This method accepts a compiled style sheet in the form of a <xref:System.Reflection.MethodInfo> object, a byte array, and a type array.</span></span> <span data-ttu-id="29569-244"><xref:System.Reflection.Emit.DynamicMethod> 对象可用于允许已编译的样式表方法都是被丢弃时<xref:System.Xml.Xsl.XslCompiledTransform>回收对象。</span><span class="sxs-lookup"><span data-stu-id="29569-244"><xref:System.Reflection.Emit.DynamicMethod> objects may be used to allow compiled style sheet methods to be discarded when the <xref:System.Xml.Xsl.XslCompiledTransform> object is reclaimed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-245">使用下面的代码示例<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>加载已编译的样式表。</span><span class="sxs-lookup"><span data-stu-id="29569-245">The code example below uses the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> to load a compiled style sheet.</span></span> <span data-ttu-id="29569-246">该转换可减少的值`Price`10%的元素。</span><span class="sxs-lookup"><span data-stu-id="29569-246">The transformation reduces the value of the `Price` element by ten percent.</span></span>  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="29569-247">此示例中使用"转换"程序集是使用 xsltc.exe 实用程序生成的。</span><span class="sxs-lookup"><span data-stu-id="29569-247">The "Transform" assembly used in this example was built using the xsltc.exe utility.</span></span> <span data-ttu-id="29569-248">使用此命令行工具的详细信息，请参阅[如何： 通过使用程序集执行 XSLT 转换](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md)。</span><span class="sxs-lookup"><span data-stu-id="29569-248">For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md).</span></span>  
  
 <span data-ttu-id="29569-249">上面的代码示例使用以下转换：</span><span class="sxs-lookup"><span data-stu-id="29569-249">The code example above uses the following transformation:</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  
  xmlns:msxsl="urn:schemas-microsoft-com:xslt"  
  xmlns:user="urn:my-scripts">  
  <msxsl:script language="C#" implements-prefix="user">  
    <![CDATA[  
  public double modifyPrice(double price){  
    price*=0.9;  
    return price;  
  }  
  ]]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheetUri, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">
          <span data-ttu-id="29569-250">样式表的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-250">The URI of the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="29569-251">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-251">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="29569-252">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-252">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="29569-253">用于解析样式表 URI 的 <see cref="T:System.Xml.XmlResolver" /> 以及在 XSLT <c>import</c> 和 <c>include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-253">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the style sheet URI and any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-254">加载和编译 URI 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-254">Loads and compiles the XSLT style sheet specified by the URI.</span>
          </span>
          <span data-ttu-id="29569-255">
            <see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-255">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-256"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="29569-256">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="29569-257">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="29569-257">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="29569-258"><xref:System.Xml.XmlReader>设置用于加载样式表，默认值。</span><span class="sxs-lookup"><span data-stu-id="29569-258">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="29569-259">上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="29569-259">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29569-260">如果需要 DTD 处理，创建<xref:System.Xml.XmlReader>启用了此功能并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-260">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-261">下面的示例加载网络资源存储的样式表。</span><span class="sxs-lookup"><span data-stu-id="29569-261">The following example loads a style sheet that is stored on a network resource.</span></span> <span data-ttu-id="29569-262"><xref:System.Xml.XmlSecureResolver> 对象指定访问该样式表所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-262">An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-263">
            <paramref name="stylesheetUri" /> 或 <paramref name="stylesheetResolver" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-263">The <paramref name="stylesheetUri" /> or <paramref name="stylesheetResolver" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-264">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-264">The style sheet contains an error.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="29569-265">无法找到该样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-265">The style sheet cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="29569-266">
            <paramref name="stylesheetUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-266">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="29569-267">无法解析 <paramref name="stylesheetUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-267">The <paramref name="stylesheetUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="29569-268">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-268">-or-</span>
          </span>
          <span data-ttu-id="29569-269">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-269">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="29569-270">
            <paramref name="stylesheetUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-270">
              <paramref name="stylesheetUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="29569-271">加载样式表时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-271">There was a parsing error loading the style sheet.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-272">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-272">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="29569-273">包含该样式表的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-273">The <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="29569-274">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-274">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="29569-275">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-275">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="29569-276">
            <see cref="T:System.Xml.XmlResolver" />，用于解析 XSLT <c>import</c> 和 <c>include</c> 元素中引用的所有样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-276">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
          <span data-ttu-id="29569-277">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-277">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-278">编译 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-278">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="29569-279">
            <see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-279">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-280"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="29569-280">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="29569-281">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="29569-281">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="29569-282">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="29569-282">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="29569-283">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="29569-283">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="29569-284">后<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法完成，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="29569-284">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="29569-285">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="29569-285">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-286">下面的示例加载样式表，并启用对 XSLT 脚本的支持。</span><span class="sxs-lookup"><span data-stu-id="29569-286">The following example loads a style sheet and enables support for XSLT scripting.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-287">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-287">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-288">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-288">The style sheet contains an error.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-289">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-289">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="29569-290">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-290">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="29569-291">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含该样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-291">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="29569-292">应用于样式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-292">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="29569-293">如果是 <see langword="null" />，则应用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-293">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="29569-294">
            <see cref="T:System.Xml.XmlResolver" />，用于解析 XSLT <c>import</c> 和 <c>include</c> 元素中引用的所有样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-294">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
          <span data-ttu-id="29569-295">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-295">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-296">编译 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-296">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="29569-297">
            <see cref="T:System.Xml.XmlResolver" /> 可以解析任何 XSLT <c>import</c> 或 <c>include</c> 元素，而 XSLT 设置决定了样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-297">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-298"><xref:System.Xml.Xsl.XslCompiledTransform>类支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="29569-298">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="29569-299">XSLT 样式表必须使用`http://www.w3.org/1999/XSL/Transform`命名空间。</span><span class="sxs-lookup"><span data-stu-id="29569-299">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-300">下面的示例加载样式表。</span><span class="sxs-lookup"><span data-stu-id="29569-300">The following example loads a style sheet.</span></span> <span data-ttu-id="29569-301"><xref:System.Xml.XmlSecureResolver>对象包含访问任何所需的凭据`import`或`include`样式表中找到的元素。</span><span class="sxs-lookup"><span data-stu-id="29569-301">The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-302">
            <paramref name="stylesheet" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-302">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-303">样式表中有错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-303">The style sheet contains an error.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-304">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-304">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputSettings : System.Xml.XmlWriterSettings" Usage="System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29569-305">获取一个 <see cref="T:System.Xml.XmlWriterSettings" /> 对象，该对象包含从样式表的 <c>xsl:output</c> 元素派生的输出信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-305">Gets an <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29569-306">一个只读<see cref="T:System.Xml.XmlWriterSettings" />对象，其中包含的输出信息派生自<c>xsl: output</c>元素的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-306">A read-only <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span>
          </span>
          <span data-ttu-id="29569-307">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-307">This value can be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-308">此属性填充后在成功调用<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-308">This property is populated after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span> <span data-ttu-id="29569-309">它包含的相关信息`xsl:output`的已编译的样式表元素。</span><span class="sxs-lookup"><span data-stu-id="29569-309">It contains information derived from the `xsl:output` element of a compiled style sheet.</span></span> <span data-ttu-id="29569-310">这<xref:System.Xml.XmlWriterSettings>可以将对象传递给<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>方法来创建<xref:System.Xml.XmlWriter>你想要输出的对象。</span><span class="sxs-lookup"><span data-stu-id="29569-310">This <xref:System.Xml.XmlWriterSettings> object can be passed to the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method to create the <xref:System.Xml.XmlWriter> object to which you want to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-311">下面的示例演示如何使用<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A>属性以创建<xref:System.Xml.XmlWriter>将文本写入到控制台的对象。</span><span class="sxs-lookup"><span data-stu-id="29569-311">The following example shows how to use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.</span></span>  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 <span data-ttu-id="29569-312">该示例使用`books.xml`和`outputConsole.xsl`文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="29569-312">The example uses the `books.xml` and `outputConsole.xsl` files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-313">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-313">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemporaryFiles : System.CodeDom.Compiler.TempFileCollection" Usage="System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29569-314">获取包含临时文件的 <see cref="T:System.CodeDom.Compiler.TempFileCollection" />，这些临时文件是在成功调用 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法后在磁盘上生成的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-314">Gets the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk after a successful call to the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29569-315">
            <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 包含在磁盘上生成的临时文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-315">The <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk.</span>
          </span>
          <span data-ttu-id="29569-316">如果调用 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法不成功或者尚未启用调试，则此值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-316">This value is <see langword="null" /> if the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has not been successfully called, or if debugging has not been enabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-317">此属性标识期间 XSLT 生成的文件处理。</span><span class="sxs-lookup"><span data-stu-id="29569-317">This property identifies the files that were generated during XSLT processing.</span></span> <span data-ttu-id="29569-318">将文件放置在 Temp 目录 （由 %TEMP%环境变量指定） 可以删除这些文件 XSLT 处理完成后。</span><span class="sxs-lookup"><span data-stu-id="29569-318">The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-319">以下示例向控制台写入临时文件的名称。</span><span class="sxs-lookup"><span data-stu-id="29569-319">The following example writes the names of temporary files to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29569-320">仅当与加载样式表创建临时文件\<msxsl: script > 块。</span><span class="sxs-lookup"><span data-stu-id="29569-320">Temporary files are created only when loading style sheets with \<msxsl:script> blocks.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-321">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-321">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29569-322">执行 XSLT 转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-322">Executes the XSLT transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="29569-323">以调试模式编译的 XSLT 与以发布模式编译的 XSLT 之间有一些差别。</span><span class="sxs-lookup"><span data-stu-id="29569-323">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="29569-324">在有些情况下，以调试模式编译的样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间不会引发错误，但以后在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期间会失败。</span><span class="sxs-lookup"><span data-stu-id="29569-324">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="29569-325">以发布模式编译的同一个样式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期间就会失败。</span><span class="sxs-lookup"><span data-stu-id="29569-325">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="29569-326">例如，当某个表达式需要节点集，而分配给该表达式的变量不是节点集类型的时，就会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="29569-326">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-327">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-327">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, resultsFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="29569-328">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-328">The URI of the input document.</span>
          </span>
        </param>
        <param name="resultsFile">
          <span data-ttu-id="29569-329">输出文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-329">The URI of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-330">使用 URI 指定的输入文档执行转换，然后将结果输出到文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-330">Executes the transform using the input document specified by the URI and outputs the results to a file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-331">此方法使用默认值<xref:System.Xml.XmlUrlResolver>若要解决的输入和输出文档没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-331">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input and output documents.</span></span> <span data-ttu-id="29569-332">如果任何这些资源位于需要身份验证的网络资源上，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-332">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-333"><xref:System.Xml.XmlReader>具有默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="29569-333">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="29569-334">上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="29569-334">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29569-335">如果需要 DTD 处理，创建<xref:System.Xml.XmlReader>启用了此功能并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-335">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-336">下面的示例执行一个转换，然后输出到文件。</span><span class="sxs-lookup"><span data-stu-id="29569-336">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="29569-337">该示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="29569-337">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-338">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-338">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-339">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-339">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="29569-340">无法找到输入文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-340">The input document cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="29569-341">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-341">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="29569-342">无法解析 <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-342">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="29569-343">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-343">-or-</span>
          </span>
          <span data-ttu-id="29569-344">处理请求时发生错误</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-344">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="29569-345">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 不是有效 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-345">
              <paramref name="inputUri" /> or <paramref name="resultsFile" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="29569-346">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-346">There was a parsing error loading the input document.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-347">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-347">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="29569-348">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-348">The URI of the input document.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-349">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-349">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-350">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-350">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-351">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-351">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-352">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-352">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-353">此方法使用默认值<xref:System.Xml.XmlUrlResolver>没有用户凭据来解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="29569-353">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="29569-354">如果任何这些资源位于需要身份验证的网络资源上，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-354">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-355"><xref:System.Xml.XmlReader>具有默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="29569-355">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="29569-356">上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="29569-356">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29569-357">如果需要 DTD 处理，创建<xref:System.Xml.XmlReader>启用了此功能并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-357">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="29569-358">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-358">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="29569-359">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="29569-359">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-360">下面的示例执行 XSLT 转换，并将输出到<xref:System.Xml.XmlWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="29569-360">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-361">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-361">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-362">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-362">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="29569-363">
            <paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-363">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="29569-364">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-364">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="29569-365">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-365">-or-</span>
          </span>
          <span data-ttu-id="29569-366">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-366">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="29569-367">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-367">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="29569-368">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-368">There was a parsing error loading the input document.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-369">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-369">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-370">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-370">The <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-371">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-371">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-372">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-372">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-373">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-373">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-374">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-374">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-375">如果 XSLT`document()`启用函数时，它使用解析<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-375">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-376">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-376">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-377">下面的示例转换 books.xml 文件中的第一书籍。</span><span class="sxs-lookup"><span data-stu-id="29569-377">The following example transforms the first book in the books.xml file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-378">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-378">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-379">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-379">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-380">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-380">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-381">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-381">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="29569-382">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-382">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-383">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-383">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-384">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-384">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-385">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-385">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-386">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-386">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-387">如果 XSLT`document()`启用函数时，它使用解析<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-387">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-388">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-388">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-389">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-389">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="29569-390">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="29569-390">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="29569-391"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="29569-391">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="29569-392">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="29569-392">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="29569-393"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="29569-393">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="29569-394"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="29569-394">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="29569-395"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="29569-395"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="29569-396">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="29569-396">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="29569-397">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="29569-397">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="29569-398">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="29569-398">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="29569-399">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="29569-399">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="29569-400">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="29569-400">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-401">下面的示例执行 XSLT 转换，并将输出到<xref:System.Xml.XmlWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="29569-401">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-402">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-402">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-403">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-403">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-404">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-404">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="29569-405">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-405">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-406">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-406">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-407">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-407">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-408">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-408">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-409">使用 URI 指定的输入文档执行转换，然后将结果输出到流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-409">Executes the transform using the input document specified by the URI and outputs the results to stream.</span>
          </span>
          <span data-ttu-id="29569-410">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-410">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-411">此方法使用默认值<xref:System.Xml.XmlUrlResolver>没有用户凭据来解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="29569-411">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="29569-412">如果任何这些资源位于需要身份验证的网络资源上，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-412">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-413"><xref:System.Xml.XmlReader>具有默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="29569-413">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="29569-414">上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="29569-414">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29569-415">如果需要 DTD 处理，创建<xref:System.Xml.XmlReader>启用了此功能并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-415">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-416">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-416">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-417">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-417">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="29569-418">
            <paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-418">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="29569-419">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-419">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="29569-420">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-420">-or-</span>
          </span>
          <span data-ttu-id="29569-421">处理请求时发生错误</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-421">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="29569-422">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-422">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="29569-423">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-423">There was a parsing error loading the input document.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-424">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-424">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="29569-425">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-425">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-426">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-426">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-427">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-427">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-428">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-428">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-429">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-429">Executes the transform using the input document specified by the URI and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-430">此方法使用默认值<xref:System.Xml.XmlUrlResolver>没有用户凭据来解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="29569-430">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="29569-431">如果任何这些资源位于需要身份验证的网络资源上，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-431">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-432"><xref:System.Xml.XmlReader>具有默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="29569-432">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="29569-433">上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="29569-433">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29569-434">如果需要 DTD 处理，创建<xref:System.Xml.XmlReader>启用了此功能并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-434">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-435">下面的示例执行 XSLT 转换，并输出一个字符串。</span><span class="sxs-lookup"><span data-stu-id="29569-435">The following example executes an XSLT transformation and outputs a string.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-436">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-436">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-437">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-437">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="29569-438">
            <paramref name="inputUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-438">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="29569-439">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-439">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="29569-440">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-440">-or-</span>
          </span>
          <span data-ttu-id="29569-441">处理请求时发生错误</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-441">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="29569-442">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-442">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="29569-443">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-443">There was a parsing error loading the input document.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-444">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-444">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="29569-445">输入文档的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-445">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-446">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-446">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-447">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-447">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-448">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-448">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-449">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-449">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-450">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-450">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-451">使用 URI 指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-451">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="29569-452">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-452">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-453">此方法使用默认值<xref:System.Xml.XmlUrlResolver>没有用户凭据来解析输入的文档和 XSLT 的任何实例`document()`函数在样式表中找到。</span><span class="sxs-lookup"><span data-stu-id="29569-453">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="29569-454">如果任何这些资源位于需要身份验证的网络资源上，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-454">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-455"><xref:System.Xml.XmlReader>具有默认设置用于加载输入的文档。</span><span class="sxs-lookup"><span data-stu-id="29569-455">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="29569-456">上禁用 DTD 处理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="29569-456">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29569-457">如果需要 DTD 处理，创建<xref:System.Xml.XmlReader>启用了此功能并将其传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29569-457">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-458">下面的示例使用<xref:System.Xml.Xsl.XsltArgumentList>对象以创建表示当前日期和时间参数。</span><span class="sxs-lookup"><span data-stu-id="29569-458">The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.</span></span>  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 <span data-ttu-id="29569-459">该示例使用以下两个数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="29569-459">The example uses the following two data files as input.</span></span>  
  
 <span data-ttu-id="29569-460">order.xml</span><span class="sxs-lookup"><span data-stu-id="29569-460">order.xml</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 <span data-ttu-id="29569-461">order.xsl</span><span class="sxs-lookup"><span data-stu-id="29569-461">order.xsl</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-462">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-462">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-463">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-463">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="29569-464">
            <paramref name="inputtUri" /> 值包含无法找到的文件名或目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-464">The <paramref name="inputtUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="29569-465">无法解析 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-465">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="29569-466">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-466">-or-</span>
          </span>
          <span data-ttu-id="29569-467">处理请求时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-467">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="29569-468">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-468">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="29569-469">加载输入文档时出现分析错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-469">There was a parsing error loading the input document.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-470">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-470">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-471">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-471">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-472">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-472">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-473">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-473">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-474">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-474">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-475">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-475">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a stream.</span>
          </span>
          <span data-ttu-id="29569-476">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-476">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-477">如果样式表包括 XSLT`document()`函数，它是解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-477">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-478">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-478">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-479">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-479">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-480">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-480">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-481">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-481">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-482">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-482">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-483">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-483">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-484">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-484">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-485">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-485">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-486">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-486">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="29569-487">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-487">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-488">如果样式表包括 XSLT`document()`函数，它是解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-488">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-489">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-489">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-490">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-490">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-491">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-491">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-492">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-492">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-493">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-493">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-494">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-494">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-495">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-495">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-496">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-496">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-497">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-497">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-498">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-498">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-499">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-499">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="29569-500">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-500">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-501">如果样式表包括 XSLT`document()`函数，它是解决使用<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-501">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-502">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-502">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-503">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-503">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-504">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-504">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-505">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-505">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-506">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-506">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="29569-507">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-507">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-508">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-508">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-509">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-509">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-510">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-510">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-511">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-511">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to a stream.</span>
          </span>
          <span data-ttu-id="29569-512">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-512">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional runtime arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-513">如果 XSLT`document()`启用函数时，它使用解析<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-513">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-514">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-514">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-515">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-515">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="29569-516">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="29569-516">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="29569-517"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="29569-517">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="29569-518">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="29569-518">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="29569-519"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="29569-519">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="29569-520"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="29569-520">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="29569-521"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="29569-521"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="29569-522">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="29569-522">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="29569-523">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="29569-523">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="29569-524">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="29569-524">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="29569-525">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="29569-525">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="29569-526">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="29569-526">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29569-527">下面的示例执行 XSLT 转换，并将输出到<xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="29569-527">The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-528">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-528">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-529">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-529">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-530">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-530">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-531">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-531">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="29569-532">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-532">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-533">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-533">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-534">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-534">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-535">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-535">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-536">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-536">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="29569-537">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-537">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-538">如果 XSLT`document()`启用函数时，它使用解析<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-538">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-539">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-539">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-540">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-540">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="29569-541">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="29569-541">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="29569-542"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="29569-542">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="29569-543">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="29569-543">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="29569-544"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="29569-544">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="29569-545"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="29569-545">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="29569-546"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="29569-546"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="29569-547">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="29569-547">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="29569-548">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="29569-548">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="29569-549">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="29569-549">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="29569-550">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="29569-550">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="29569-551">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="29569-551">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-552">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-552">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-553">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-553">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-554">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-554">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-555">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-555">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="29569-556">在 Microsoft .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-556">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-557">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-557">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-558">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-558">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-559">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-559">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-560">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-560">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-561">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-561">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-562">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-562">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="29569-563">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-563">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29569-564">如果 XSLT`document()`启用函数时，它使用解析<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-564">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="29569-565">如果需要身份验证的网络资源位于外部的资源，则使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="29569-565">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="29569-566">此方法不支持`xsl:strip-space`元素。</span><span class="sxs-lookup"><span data-stu-id="29569-566">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="29569-567">如果你已编译的样式表包含`xsl:strip-space`元素，则必须使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>重载此方法采用<xref:System.Xml.XmlReader>作为输入参数。</span><span class="sxs-lookup"><span data-stu-id="29569-567">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="29569-568"><xref:System.Xml.XPath.IXPathNavigable> 接口在 <xref:System.Xml.XmlNode> 和 <xref:System.Xml.XPath.XPathDocument> 类中实现。</span><span class="sxs-lookup"><span data-stu-id="29569-568">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="29569-569">这两个类表示 XML 数据的内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="29569-569">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="29569-570"><xref:System.Xml.XmlNode> 类基于 W3C 文档对象模型 (DOM) 并具有编辑功能。</span><span class="sxs-lookup"><span data-stu-id="29569-570">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="29569-571"><xref:System.Xml.XPath.XPathDocument> 类是基于 XPath 数据模型的只读数据存储。</span><span class="sxs-lookup"><span data-stu-id="29569-571">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="29569-572"><xref:System.Xml.XPath.XPathDocument> 是 XSLT 处理建议使用的类。</span><span class="sxs-lookup"><span data-stu-id="29569-572"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="29569-573">与 <xref:System.Xml.XmlNode> 类相比，此类的性能更强。</span><span class="sxs-lookup"><span data-stu-id="29569-573">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="29569-574">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="29569-574">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="29569-575">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="29569-575">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="29569-576">若要转换节点片段，必须创建一个仅包含节点片段的对象，并将该对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="29569-576">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="29569-577">有关详细信息，请参阅[如何：转换节点片断](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="29569-577">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-578">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-578">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-579">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-579">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-580">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-580">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-581">包含输入文档的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-581">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-582">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-582">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="29569-583">此值可为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-583">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-584">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-584">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-585">如果样式表包含 <c>xsl:output</c> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-585">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-586">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-586">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <param name="documentResolver">
          <span data-ttu-id="29569-587">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-587">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="29569-588">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-588">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-589">使用 <see cref="T:System.Xml.XmlReader" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-589">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="29569-590">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数，而 XmlResolver 解析 XSLT <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-590">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the XmlResolver resolves the XSLT <c>document()</c> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29569-591">下面的示例使用<xref:System.Xml.XmlSecureResolver>来解析 XSLT`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="29569-591">The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29569-592">
            <paramref name="input" /> 或 <paramref name="results" /> 值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-592">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="29569-593">执行 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-593">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">
          <span data-ttu-id="29569-594">使用 XslCompiledTransform 类</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-594">Using the XslCompiledTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="29569-595">由 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的要转换的文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-595">The document to transform that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="29569-596">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 形式的参数列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-596">Argument list as <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="29569-597">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-597">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="29569-598">如果样式表包含 <see langword="xsl:output" /> 元素，则应使用由 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 属性返回的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象来创建 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-598">If the style sheet contains an <see langword="xsl:output" /> element, you should create the <see cref="T:System.Xml.XmlWriter" /> by using the <see cref="T:System.Xml.XmlWriterSettings" /> object that is returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="29569-599">这样可以确保 <see cref="T:System.Xml.XmlWriter" /> 的输出设置是正确的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-599">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <param name="documentResolver">
          <span data-ttu-id="29569-600">用于解析 XSLT <see langword="document()" /> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-600">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <see langword="document()" /> function.</span>
          </span>
          <span data-ttu-id="29569-601">如果为 <see langword="null" />，则不解析 <see langword="document()" /> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-601">If this is <see langword="null" />, the <see langword="document()" /> function is not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29569-602">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象指定的输入文档执行转换，然后将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-602">Executes the transform by using the input document that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="29569-603">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 提供附加的运行时参数，而 <see cref="T:System.Xml.XmlResolver" /> 解析 XSLT <see langword="document()" /> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29569-603">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the <see cref="T:System.Xml.XmlResolver" /> resolves the XSLT <see langword="document()" /> function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>