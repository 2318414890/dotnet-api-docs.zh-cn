<Type Name="XsltSettings" FullName="System.Xml.Xsl.XsltSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6bbe2df63daae76eb35147c9ac01742f510cf414" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39985797" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XsltSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XsltSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XsltSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XsltSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsltSettings sealed" />
  <TypeSignature Language="F#" Value="type XsltSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1e82e-101">指定执行 XSLT 样式表时要支持的 XSLT 功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e82e-101">Specifies the XSLT features to support during execution of the XSLT style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e82e-102">嵌入脚本块和 XSLT`document()`函数是可选的功能上<xref:System.Xml.Xsl.XslCompiledTransform>类。</span><span class="sxs-lookup"><span data-stu-id="1e82e-102">Embedded script blocks and the XSLT `document()` function are optional features on the <xref:System.Xml.Xsl.XslCompiledTransform> class.</span></span> <span data-ttu-id="1e82e-103">默认情况下禁用这些功能。</span><span class="sxs-lookup"><span data-stu-id="1e82e-103">These features are disabled by default.</span></span> <span data-ttu-id="1e82e-104"><xref:System.Xml.Xsl.XsltSettings>类指定哪一项可选功能来支持。</span><span class="sxs-lookup"><span data-stu-id="1e82e-104">The <xref:System.Xml.Xsl.XsltSettings> class specifies which of these optional features to support.</span></span> <span data-ttu-id="1e82e-105">启用或禁用使用类属性的功能。</span><span class="sxs-lookup"><span data-stu-id="1e82e-105">Features are enabled or disabled using the class properties.</span></span> <span data-ttu-id="1e82e-106">然后，<xref:System.Xml.Xsl.XsltSettings> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="1e82e-106">The <xref:System.Xml.Xsl.XsltSettings> object is then passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e82e-107">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="1e82e-107">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="1e82e-108">恶意用户可能会利用这一点，方法是为您提供数据或样式表，在执行时，可能会使您的系统不断进行处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="1e82e-108">A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</span></span> <span data-ttu-id="1e82e-109">未启用脚本或`document()`作用，除非样式表来自受信任的源。</span><span class="sxs-lookup"><span data-stu-id="1e82e-109">Do not enable scripting or the `document()` function unless the style sheet comes from a trusted source.</span></span> <span data-ttu-id="1e82e-110">如果您不能验证样式表的源或样式表不是来自受信任的源，则使用默认 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="1e82e-110">If you cannot verify the source of the style sheet, or if the style sheet does not come from a trusted source, use the default XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e82e-111">下面的示例加载样式表，并启用 XSLT 脚本支持。</span><span class="sxs-lookup"><span data-stu-id="1e82e-111">The following example loads a style sheet and enables XSLT script support.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Load#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e82e-112">初始化 <see cref="T:System.Xml.Xsl.XsltSettings" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-112">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltSettings" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsltSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e82e-113">使用默认设置初始化 <see cref="T:System.Xml.Xsl.XsltSettings" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-113">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltSettings" /> class with default settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e82e-114">新<xref:System.Xml.Xsl.XsltSettings>对象不支持 XSLT`document()`函数或嵌入式的脚本块。</span><span class="sxs-lookup"><span data-stu-id="1e82e-114">The new <xref:System.Xml.Xsl.XsltSettings> object does not support the XSLT `document()` function or embedded script blocks.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e82e-115">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="1e82e-115">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span> <span data-ttu-id="1e82e-116">如果启用`document()`函数，可以限制可通过访问的资源<xref:System.Xml.XmlSecureResolver>对象传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e82e-116">If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltSettings (bool enableDocumentFunction, bool enableScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDocumentFunction, bool enableScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDocumentFunction As Boolean, enableScript As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsltSettings(bool enableDocumentFunction, bool enableScript);" />
      <MemberSignature Language="F#" Value="new System.Xml.Xsl.XsltSettings : bool * bool -&gt; System.Xml.Xsl.XsltSettings" Usage="new System.Xml.Xsl.XsltSettings (enableDocumentFunction, enableScript)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableDocumentFunction" Type="System.Boolean" />
        <Parameter Name="enableScript" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDocumentFunction">
          <span data-ttu-id="1e82e-117">启用对 XSLT <c>document()</c> 函数的支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-117">
              <see langword="true" /> to enable support for the XSLT <c>document()</c> function; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="enableScript">
          <span data-ttu-id="1e82e-118">启用对嵌入式脚本块的支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-118">
              <see langword="true" /> to enable support for embedded scripts blocks; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e82e-119">使用指定的设置初始化 <see cref="T:System.Xml.Xsl.XsltSettings" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-119">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltSettings" /> class with the specified settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e82e-120">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="1e82e-120">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span> <span data-ttu-id="1e82e-121">如果启用`document()`函数，可以限制可通过访问的资源<xref:System.Xml.XmlSecureResolver>对象传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e82e-121">If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e82e-122">下面的示例加载样式表，并启用 XSLT 脚本支持。</span><span class="sxs-lookup"><span data-stu-id="1e82e-122">The following example loads a style sheet and enables XSLT script support.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Load#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Xml.Xsl.XsltSettings Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xml.Xsl.XsltSettings Default" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As XsltSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xml::Xsl::XsltSettings ^ Default { System::Xml::Xsl::XsltSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Xml.Xsl.XsltSettings" Usage="System.Xml.Xsl.XsltSettings.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e82e-123">获取一个带有默认设置的 <see cref="T:System.Xml.Xsl.XsltSettings" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-123">Gets an <see cref="T:System.Xml.Xsl.XsltSettings" /> object with default settings.</span>
          </span>
          <span data-ttu-id="1e82e-124">禁用对 XSLT <c>document()</c> 函数和嵌入脚本块的支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-124">Support for the XSLT <c>document()</c> function and embedded script blocks is disabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e82e-125">
            <see cref="T:System.Xml.Xsl.XsltSettings" /> 对象，其 <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> 和 <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> 属性设置为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-125">An <see cref="T:System.Xml.Xsl.XsltSettings" /> object with the <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> and <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> properties set to <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e82e-126">下面的示例加载样式表使用默认 XSLT 设置。</span><span class="sxs-lookup"><span data-stu-id="1e82e-126">The following example loads a style sheet with default XSLT settings.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Load#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDocumentFunction">
      <MemberSignature Language="C#" Value="public bool EnableDocumentFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDocumentFunction" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDocumentFunction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDocumentFunction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDocumentFunction : bool with get, set" Usage="System.Xml.Xsl.XsltSettings.EnableDocumentFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e82e-127">获取或设置一个值，指示是否启用对 XSLT <c>document()</c> 函数的支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-127">Gets or sets a value indicating whether to enable support for the XSLT <c>document()</c> function.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e82e-128">
            <see langword="true" /> 若要支持 XSLT <c>document （)</c>函数; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-128">
              <see langword="true" /> to support the XSLT <c>document()</c> function; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1e82e-129">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-129">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e82e-130">如果启用`document()`函数，可以限制可通过访问的资源<xref:System.Xml.XmlSecureResolver>对象传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e82e-130">If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableScript">
      <MemberSignature Language="C#" Value="public bool EnableScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScript" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.EnableScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableScript : bool with get, set" Usage="System.Xml.Xsl.XsltSettings.EnableScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e82e-131">获取或设置一个值，指示是否启用对嵌入式脚本块的支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-131">Gets or sets a value indicating whether to enable support for embedded script blocks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e82e-132">支持 XSLT 样式表中的脚本块，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-132">
              <see langword="true" /> to support script blocks in XSLT style sheets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1e82e-133">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-133">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e82e-134">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="1e82e-134">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrustedXslt">
      <MemberSignature Language="C#" Value="public static System.Xml.Xsl.XsltSettings TrustedXslt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xml.Xsl.XsltSettings TrustedXslt" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.TrustedXslt" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TrustedXslt As XsltSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xml::Xsl::XsltSettings ^ TrustedXslt { System::Xml::Xsl::XsltSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TrustedXslt : System.Xml.Xsl.XsltSettings" Usage="System.Xml.Xsl.XsltSettings.TrustedXslt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e82e-135">获取一个 <see cref="T:System.Xml.Xsl.XsltSettings" /> 对象，该对象启用对 XSLT <c>document()</c> 函数和嵌入式脚本块的支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-135">Gets an <see cref="T:System.Xml.Xsl.XsltSettings" /> object that enables support for the XSLT <c>document()</c> function and embedded script blocks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e82e-136">
            <see cref="T:System.Xml.Xsl.XsltSettings" /> 对象，其 <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> 和 <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> 属性设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e82e-136">An <see cref="T:System.Xml.Xsl.XsltSettings" /> object with the <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> and <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> properties set to <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e82e-137">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="1e82e-137">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span> <span data-ttu-id="1e82e-138">如果启用`document()`函数，可以限制可通过访问的资源<xref:System.Xml.XmlSecureResolver>对象传递给<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e82e-138">If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e82e-139">下面的示例加载具有支持的 XSLT 样式表`document()`函数和嵌入的脚本块已启用的功能。</span><span class="sxs-lookup"><span data-stu-id="1e82e-139">The following example loads a style sheet with support for the XSLT `document()` function and embedded script blocks features enabled.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Load#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>