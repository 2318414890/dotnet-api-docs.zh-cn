<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fffe3df74f84922396e53ccd8afb19f9699356f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30721421" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2b503-101">使用可扩展样式表转换语言 (XSLT) 转换 XML 数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b503-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-102"><xref:System.Xml.Xsl.XslTransform>类是在 Microsoft.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-103"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-104">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-105"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-106">XSLT 样式表必须使用命名空间`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-107">此外可以将其他参数添加到样式表使用<xref:System.Xml.Xsl.XsltArgumentList>类。</span><span class="sxs-lookup"><span data-stu-id="2b503-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="2b503-108">此类包含的样式表和扩展对象可以从样式表调用该输入的参数。</span><span class="sxs-lookup"><span data-stu-id="2b503-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="2b503-109">若要将 XML 数据转换：</span><span class="sxs-lookup"><span data-stu-id="2b503-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="2b503-110">创建<xref:System.Xml.Xsl.XslTransform>对象。</span><span class="sxs-lookup"><span data-stu-id="2b503-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="2b503-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法加载样式表转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="2b503-112">此方法具有好几个重载，并且可以加载样式表使用<xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或具有文件的位置的 URL。</span><span class="sxs-lookup"><span data-stu-id="2b503-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="2b503-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法来转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="2b503-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="2b503-114">此方法具有好几个重载，可以处理不同类型的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="2b503-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="2b503-115">你还可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在转换期间使用作为输入的其他自变量。</span><span class="sxs-lookup"><span data-stu-id="2b503-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="2b503-116">**安全注意事项**</span><span class="sxs-lookup"><span data-stu-id="2b503-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="2b503-117">在创建使用 <xref:System.Xml.Xsl.XslTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="2b503-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="2b503-118">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="2b503-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="2b503-119">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="2b503-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="2b503-120">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="2b503-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="2b503-121">恶意用户可以利用此方法为您提供数据或样式表，在执行时将导致您的系统以处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="2b503-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="2b503-122">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="2b503-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="2b503-123">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="2b503-124">可以不接受缓解这些安全问题<xref:System.Xml.Xsl.XslTransform>对象、 XSLT 样式表或来自不可信源的 XML 源数据。</span><span class="sxs-lookup"><span data-stu-id="2b503-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="2b503-125">**脚本支持**</span><span class="sxs-lookup"><span data-stu-id="2b503-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="2b503-126">此类支持嵌入的脚本使用`msxsl:script`元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="2b503-127">.NET Framework 1.1 版中，在样式表的证据确定哪些权限被授予的嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="2b503-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="2b503-128">如果样式表加载从统一资源标识符 (URI) 时，URI 用于创建证据。</span><span class="sxs-lookup"><span data-stu-id="2b503-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="2b503-129">该证据包括以及其站点和区域的 URI。</span><span class="sxs-lookup"><span data-stu-id="2b503-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="2b503-130">如果使用另一个源加载样式表，你可以通过传递提供证据<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>对象传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="2b503-131">否则，脚本程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2b503-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="2b503-132">不完全受信任的调用方：`UnmanagedCode`编译嵌入的脚本所需的权限。</span><span class="sxs-lookup"><span data-stu-id="2b503-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="2b503-133">`ControlEvidence` 提供所需的权限<xref:System.Security.Policy.Evidence>到<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="2b503-134">A<xref:System.Security.SecurityException>如果调用方没有所需的权限，则引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="2b503-135">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>和<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="2b503-136">`msxsl:script`元素具有以下要求：</span><span class="sxs-lookup"><span data-stu-id="2b503-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="2b503-137">`msxsl:script`元素属于`urn:schemas-microsoft-com:xslt`命名空间。</span><span class="sxs-lookup"><span data-stu-id="2b503-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="2b503-138">样式表必须包括命名空间声明`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="2b503-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="2b503-139">`msxsl:script`元素可以包含`language`属性，指定要使用的脚本语言。</span><span class="sxs-lookup"><span data-stu-id="2b503-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="2b503-140">值`language`特性必须是以下之一： C#、 CSharp、 VB、 VisualBasic、 JScript 中或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="2b503-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="2b503-141">因为该语言名称不区分大小写，JavaScript 和 javascript 都有效。</span><span class="sxs-lookup"><span data-stu-id="2b503-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="2b503-142">如果`language`属性未指定，则它默认为 JScript。</span><span class="sxs-lookup"><span data-stu-id="2b503-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="2b503-143">`msxsl:script`元素必须包含`implements-prefix`包含表示与脚本块关联的命名空间的前缀的属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="2b503-144">必须在样式表中定义此命名空间。</span><span class="sxs-lookup"><span data-stu-id="2b503-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="2b503-145">样式表可以包括多个脚本块，分为不同的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2b503-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="2b503-146">不能具有与在同一命名空间中的多个语言的脚本块。</span><span class="sxs-lookup"><span data-stu-id="2b503-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="2b503-147">脚本块可以调用另一个脚本块中定义的函数，提供的脚本块驻留在相同的命名空间内。</span><span class="sxs-lookup"><span data-stu-id="2b503-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="2b503-148">根据规则和语法的脚本语言分析脚本块的内容 (由提供`language`属性)。</span><span class="sxs-lookup"><span data-stu-id="2b503-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="2b503-149">例如，如果你具有 C# 脚本块，注释就会通过`//`字符。</span><span class="sxs-lookup"><span data-stu-id="2b503-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="2b503-150">注释必须为有效的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="2b503-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="2b503-151">`Note` 建议你在 CDATA 部分包装脚本块。</span><span class="sxs-lookup"><span data-stu-id="2b503-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]><![CDATA[]>  
</msxsl:script>  
```  
  
 <span data-ttu-id="2b503-152">函数可以在 `msxsl:script` 元素内声明。</span><span class="sxs-lookup"><span data-stu-id="2b503-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="2b503-153">下表显示了默认情况下支持的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2b503-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="2b503-154">支持的命名空间</span><span class="sxs-lookup"><span data-stu-id="2b503-154">Supported Namespaces</span></span>|<span data-ttu-id="2b503-155">描述</span><span class="sxs-lookup"><span data-stu-id="2b503-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="2b503-156">系统类。</span><span class="sxs-lookup"><span data-stu-id="2b503-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="2b503-157">集合类。</span><span class="sxs-lookup"><span data-stu-id="2b503-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="2b503-158">文本处理的类。</span><span class="sxs-lookup"><span data-stu-id="2b503-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="2b503-159">核心 XML 类。</span><span class="sxs-lookup"><span data-stu-id="2b503-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="2b503-160">XSLT 类。</span><span class="sxs-lookup"><span data-stu-id="2b503-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="2b503-161">XML 路径语言 (XPath) 类。</span><span class="sxs-lookup"><span data-stu-id="2b503-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="2b503-162">提供的自变量和返回值由脚本函数定义必须是下面列出 World Wide Web Consortium (W3C) 类型之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="2b503-163">下表详细说明了 W3C 类型、 XPath 或 XSLT，之间的映射和相应的.NET Framework 类。</span><span class="sxs-lookup"><span data-stu-id="2b503-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="2b503-164">W3C 类型</span><span class="sxs-lookup"><span data-stu-id="2b503-164">W3C Type</span></span>|<span data-ttu-id="2b503-165">等效的.NET 类</span><span class="sxs-lookup"><span data-stu-id="2b503-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="2b503-166">字符串 (XPath)</span><span class="sxs-lookup"><span data-stu-id="2b503-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="2b503-167">布尔值 (XPath)</span><span class="sxs-lookup"><span data-stu-id="2b503-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="2b503-168">数 (XPath)</span><span class="sxs-lookup"><span data-stu-id="2b503-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="2b503-169">结果树片段 (XSLT)</span><span class="sxs-lookup"><span data-stu-id="2b503-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="2b503-170">节点集 (XPath)</span><span class="sxs-lookup"><span data-stu-id="2b503-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="2b503-171">如果脚本函数使用下列数值类型之一： Int16、 UInt16、 Int32、 UInt32、 Int64、 UInt64、 Single 或 Decimal，这些类型将被强制为 Double，映射为 W3C XPath 类型的数字。</span><span class="sxs-lookup"><span data-stu-id="2b503-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="2b503-172">将引发异常时，调用的函数不能将自变量结果转换为所需的类型之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-173">`msxsl:script` 和`msxsl:node-list`是中的唯一函数`urn:schemas-microsoft-com:xslt`支持的命名空间<xref:System.Xml.Xsl.XslTransform>类。</span><span class="sxs-lookup"><span data-stu-id="2b503-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="2b503-174"><xref:System.Xml.Xsl.XslTransform> 能够利用作为一种扩展机制的公共语言运行时 (CLR) 代码。</span><span class="sxs-lookup"><span data-stu-id="2b503-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="2b503-175">这通过传递到类的实例实现<xref:System.Xml.Xsl.XslTransform>类并调用 XSLT 样式表中的其公共方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="2b503-176">使用定义的方法`params`关键字，它允许未指定要传递的参数数量，在此方案中无法正常工作。</span><span class="sxs-lookup"><span data-stu-id="2b503-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="2b503-177">请参阅[params](~/docs/csharp/language-reference/keywords/params.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="2b503-178">有关详细信息请参阅[XslTransform 类的 XSLT 转换](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-179">以下示例转换指定的 XML 文档，并将结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="2b503-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2b503-180">
        <see cref="T:System.Xml.Xsl.XslTransform" /> 对象是唯一将线程安全的转换操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b503-180">
          <see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span>
      </span>
      <span data-ttu-id="2b503-181">不保证其他操作都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b503-181">Other operations are not guaranteed to be thread-safe.</span>
      </span>
      <span data-ttu-id="2b503-182">你必须确保对任何其他方法的调用在对象上在加载操作期间。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b503-182">You must ensure that no other methods are called on the object during load operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b503-183">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b503-184">加载 XSLT 样式表，包括在 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 元素中引用的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-185"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-186"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-187">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="2b503-188">指定要加载的 XSLT 样式表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-188">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-189">加载由一个 URL 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-189">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-190"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-191"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-192">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-193"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-194">XSLT 样式表必须包括命名空间声明`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="2b503-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="2b503-195">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="2b503-196">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2b503-197">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2b503-198">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-199">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="2b503-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="2b503-200">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-200">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-201">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-201">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-202">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-202">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-203">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-203">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="2b503-204">它在表中显示 ISBN、 标题和的每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="2b503-204">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2b503-205">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="2b503-205">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-206">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-206">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-207">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-207">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-208">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-208">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-209">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-209">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-210"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-210">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-211"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-211">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-212">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-212">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-213"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-213"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-214">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-214">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-215">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-215">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="2b503-216">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-216">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2b503-217">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-217">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2b503-218">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="2b503-218">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="2b503-219">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="2b503-219">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="2b503-220">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-220">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="2b503-221">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="2b503-221">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="2b503-222">如果样式表包含实体，你应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="2b503-222">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="2b503-223">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="2b503-223">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="2b503-224">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-224">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-225">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2b503-225">The assembly has full trust.</span></span> <span data-ttu-id="2b503-226">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-226">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="2b503-227">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-227">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-228">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-228">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-229">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-229">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-230">下面的示例转换排序标题的所有图书的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="2b503-230">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="2b503-231">该示例使用以下数据文件</span><span class="sxs-lookup"><span data-stu-id="2b503-231">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-232">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-232">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-233">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-233">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-234">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-234">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-235">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-235">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-236">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-236">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-237"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-237">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-238"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-238">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-239">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-239">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-240"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-240"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-241">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-241">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-242">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-242">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="2b503-243">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-243">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2b503-244">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-244">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2b503-245">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-245">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-246">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2b503-246">The assembly has full trust.</span></span> <span data-ttu-id="2b503-247">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-247">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="2b503-248">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-248">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-249">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-249">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-250">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-250">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-251">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-251">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-252">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-252">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-253">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-253">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-254">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-254">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-255"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-255">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-256"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-256">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-257">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-257">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-258"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-258"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-259">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-259">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-260">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-260">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="2b503-261">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-261">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2b503-262">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-262">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2b503-263">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="2b503-263">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="2b503-264">若要使用与样式表所加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-264">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="2b503-265">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于开头的样式表 (上`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="2b503-265">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="2b503-266">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-266">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-267">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2b503-267">The assembly has full trust.</span></span> <span data-ttu-id="2b503-268">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-268">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="2b503-269">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-269">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-270">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-270">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-271">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-271">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-272">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-272">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-273">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-273">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="2b503-274">指定要加载的 XSLT 样式表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-274">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-275">
            <see cref="T:System.Xml.XmlResolver" /> 用于加载该样式表以及 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-275">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="2b503-276">如果这是 <see langword="null" />，将使用不具有用户凭据的默认 <see cref="T:System.Xml.XmlUrlResolver" /> 来打开样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-276">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span>
          </span>
          <span data-ttu-id="2b503-277">不使用默认的 <see cref="T:System.Xml.XmlUrlResolver" /> 来解析样式表中的任何外部资源，因此将不解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-277">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span>
          </span>
          <span data-ttu-id="2b503-278">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-278">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-279">加载由一个 URL 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-279">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-280"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-280">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-281"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-281">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-282">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-282">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-283"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-283"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-284">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-284">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-285">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-285">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-286">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="2b503-286">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="2b503-287">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-287">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-288">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-288">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-289">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-289">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-290">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-290">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="2b503-291">该示例加载 XSLT 样式表，其中包含`xsl:include`元素引用另一个样式表。</span><span class="sxs-lookup"><span data-stu-id="2b503-291">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="2b503-292"><xref:System.Xml.XmlUrlResolver>传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>设置的凭据访问所包含的样式表的网络资源所需的方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-292">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="2b503-293">该示例使用以下数据文件</span><span class="sxs-lookup"><span data-stu-id="2b503-293">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-294">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-294">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-295">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-295">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-296">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-296">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-297">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-297">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="2b503-298">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-298">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="2b503-299">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-299">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-300">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-300">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-301"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-301">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-302"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-302">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-303">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-303">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-304"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-304"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-305">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-305">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-306">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-306">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="2b503-307">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="2b503-307">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="2b503-308">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="2b503-308">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="2b503-309">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-309">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="2b503-310">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="2b503-310">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="2b503-311">如果样式表包含实体，你应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="2b503-311">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="2b503-312">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="2b503-312">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="2b503-313">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-313">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-314">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2b503-314">The assembly has full trust.</span></span> <span data-ttu-id="2b503-315">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-315">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="2b503-316">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅文章 Q316755 Microsoft 知识库中在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-316">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-317">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-317">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-318">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-318">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-319">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-319">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-320">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-320">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-321">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-321">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-322">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-322">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-323">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-323">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="2b503-324">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-324">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="2b503-325">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-325">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-326">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-326">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-327"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-327">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-328"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-328">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-329">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-329">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-330"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-330"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-331">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-331">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-332">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-332">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-333">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2b503-333">The assembly has full trust.</span></span> <span data-ttu-id="2b503-334">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-334">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="2b503-335">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-335">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-336">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-336">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-337">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-337">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-338">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-338">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-339">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-339">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-340">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-340">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-341">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-341">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="2b503-342">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-342">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="2b503-343">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-343">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-344">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-344">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-345"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-345">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-346"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-346">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-347">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-347">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-348"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-348"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-349">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-349">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-350">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="2b503-350">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="2b503-351">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-351">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="2b503-352">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于开头的样式表 (上`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="2b503-352">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="2b503-353">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="2b503-353">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="2b503-354">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="2b503-354">The assembly has full trust.</span></span> <span data-ttu-id="2b503-355">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="2b503-355">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span> <span data-ttu-id="2b503-356">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-356">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-357">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="2b503-357">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="2b503-358">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2b503-358">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-359">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-359">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-360">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-360">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-361">包含要加载的样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-361">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-362">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-362">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="2b503-363">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-363">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="2b503-364">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-364">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="2b503-365">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-365">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="2b503-366">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-366">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="2b503-367">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-367">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="2b503-368">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-368">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-369">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-369">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="2b503-370">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-370">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-371"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-371">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-372"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-372">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-373">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-373">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-374"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-374"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-375">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-375">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-376">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-376">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="2b503-377">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="2b503-377">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="2b503-378">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="2b503-378">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="2b503-379">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-379">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="2b503-380">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="2b503-380">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="2b503-381">如果样式表包含实体，你应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="2b503-381">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="2b503-382">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="2b503-382">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="2b503-383">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-383">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="2b503-384">有不同的方法，以便提供的证据。</span><span class="sxs-lookup"><span data-stu-id="2b503-384">There are different ways to provide evidence.</span></span> <span data-ttu-id="2b503-385">下表介绍常见的用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="2b503-385">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="2b503-386">下面的示例执行 XSLT 转换其中`xsltReader`是<xref:System.Xml.XmlReader>包含样式表和`secureURL`是可以用于创建一个受信任的 URL <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="2b503-386">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="2b503-387"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用于创建<xref:System.Security.Policy.Evidence>应用于样式表。</span><span class="sxs-lookup"><span data-stu-id="2b503-387">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-388">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-388">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-389">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-389">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="2b503-390">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-390">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2b503-391">用于提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-391">for providing evidence.</span>
          </span>
          <span data-ttu-id="2b503-392">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-392">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-393">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-393">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-394">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-394">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-395">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-395">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="2b503-396">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-396">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="2b503-397">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-397">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="2b503-398">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-398">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="2b503-399">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-399">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="2b503-400">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-400">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="2b503-401">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-401">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-402">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-402">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="2b503-403">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-403">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-404"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-404">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-405"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-405">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-406">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-406">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-407"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-407"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-408">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-408">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-409">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-409">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="2b503-410">有不同的方法，以便提供的证据。</span><span class="sxs-lookup"><span data-stu-id="2b503-410">There are different ways to provide evidence.</span></span> <span data-ttu-id="2b503-411">下表介绍常见的用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="2b503-411">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-412">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-412">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-413">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-413">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="2b503-414">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-414">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2b503-415">用于提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-415">for providing evidence.</span>
          </span>
          <span data-ttu-id="2b503-416">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-416">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2b503-417">包含要加载的样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-417">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-418">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-418">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="2b503-419">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-419">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="2b503-420">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-420">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="2b503-421">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-421">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="2b503-422">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-422">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="2b503-423">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-423">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="2b503-424">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-424">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-425">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-425">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
          <span data-ttu-id="2b503-426">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-426">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-427"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-427">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-428"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-428">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-429">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-429">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-430"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-430"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-431">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-431">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-432">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="2b503-432">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="2b503-433">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-433">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="2b503-434">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于开头的样式表 (上`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="2b503-434">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="2b503-435">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="2b503-435">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="2b503-436">有不同的方法，以便提供的证据。</span><span class="sxs-lookup"><span data-stu-id="2b503-436">There are different ways to provide evidence.</span></span> <span data-ttu-id="2b503-437">下表介绍常见的用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="2b503-437">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="2b503-438">下面的示例执行 XSLT 转换从外部源中使用的样式表。</span><span class="sxs-lookup"><span data-stu-id="2b503-438">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="2b503-439">样式表来自受信任的源，因为`resolver`和`evidence`参数设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="2b503-439">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="2b503-440">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-440">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b503-441">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-441">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="2b503-442">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-442">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2b503-443">用于提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-443">for providing evidence.</span>
          </span>
          <span data-ttu-id="2b503-444">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-444">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b503-445">使用加载的 XSLT 样式表转换 XML 数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-445">Transforms the XML data using the loaded XSLT style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-446"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-446">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-447"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-447">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-448">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-448">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="2b503-449">要转换的源文档的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-449">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="2b503-450">输出文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-450">The URL of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-451">转换输入文件中的 XML 数据并将结果输出到输出文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-451">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-452"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-452">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-453"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-453">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-454">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-454">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-455"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-455"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-456">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-456">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-457">此方法是在.NET Framework 1.1 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-457">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="2b503-458">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-458">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-459">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-459">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-460">下面的示例转换`books.xml`文件使用`output.xsl`样式表并将结果输出到`books.html`文件。</span><span class="sxs-lookup"><span data-stu-id="2b503-460">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="2b503-461">此示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="2b503-461">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-462">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-462">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-463">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-463">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-464">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-464">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-465">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-465">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b503-466">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-466">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-467"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-467">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-468"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-468">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-469">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-469">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-470"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-470"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-471">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-471">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-472">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-472">This method is now obsolete.</span></span> <span data-ttu-id="2b503-473">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-473">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-474">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-474">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="2b503-475">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-475">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-476">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="2b503-476">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="2b503-477">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-477">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="2b503-478">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-478">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="2b503-479">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-479">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-480">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-480">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-481">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-481">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-482">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-482">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="2b503-483">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-483">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-484">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-484">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-485">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-485">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-486">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-486">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b503-487">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-487">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-488"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-488">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-489"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-489">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-490">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-490">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-491"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-491"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-492">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-492">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-493">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-493">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-494">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-494">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-495">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-495">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-496">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-496">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-497">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-497">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-498">因为<xref:System.Xml.XmlReader>提供只读的输出，`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2b503-498">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="2b503-499">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-499">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="2b503-500">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-500">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-501">此方法已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-501">This method is obsolete.</span></span> <span data-ttu-id="2b503-502">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT document （） 函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-502">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="2b503-503">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-503">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-504">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-504">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-505">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-505">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-506">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-506">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="2b503-507">要转换的源文档的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-507">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="2b503-508">输出文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-508">The URL of the output file.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-509">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-509">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-510">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-510">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-511">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-511">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-512">转换输入文件中的 XML 数据并将结果输出到输出文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-512">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-513"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-513">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-514"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-514">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-515">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-515">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-516"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-516"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-517">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-517">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-518">下面的示例执行 XSLT 转换，并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="2b503-518">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="2b503-519"><xref:System.Xml.XmlUrlResolver>凭据使用具有默认解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="2b503-519">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="2b503-520">有关详细信息，请参阅<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="2b503-520">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-521">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-521">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-522">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-522">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-523">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-523">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-524">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-524">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-525">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-525">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-526"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-526">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-527"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-527">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-528">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-528">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-529"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-529"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-530">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-530">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-531">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-531">This method is now obsolete.</span></span> <span data-ttu-id="2b503-532">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-532">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-533">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-533">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="2b503-534">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-534">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="2b503-535">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-535">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-536">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-536">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-537">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-537">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-538">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-538">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="2b503-539">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-539">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-540">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-540">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-541">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-541">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-542">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-542">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-543">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-543">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-544">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-544">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-545">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-545">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-546">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-546">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-547">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-547">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-548"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-548">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-549"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-549">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-550">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-550">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-551"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-551"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-552">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-552">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-553">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-553">This method is now obsolete.</span></span> <span data-ttu-id="2b503-554">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-554">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-555">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-555">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="2b503-556">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-556">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="2b503-557">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="2b503-557">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="2b503-558">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-558">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="2b503-559">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-559">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-560">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-560">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-561">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-561">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-562">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-562">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="2b503-563">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-563">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-564">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-564">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-565">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-565">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-566">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-566">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-567">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-567">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-568">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-568">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-569">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-569">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-570">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-570">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-571">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-571">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-572">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-572">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-573">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-573">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b503-574">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-574">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-575"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-575">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-576"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-576">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-577">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-577">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-578"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-578"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-579">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-579">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-580">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-580">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-581">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="2b503-581">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="2b503-582">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-582">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="2b503-583">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-583">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="2b503-584">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-584">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-585">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-585">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-586">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-586">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-587">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-587">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="2b503-588">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-588">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="2b503-589">以下示例转换 XML 文档，并将结果输出到`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="2b503-589">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="2b503-590"><xref:System.Xml.XmlUrlResolver>与所需的凭据用于处理任何 XSLT`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="2b503-590">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-591">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-591">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-592">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-592">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-593">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-593">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-594">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-594">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-595">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-595">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-596"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-597"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-598">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-599"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-600">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-601">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-601">This method is now obsolete.</span></span> <span data-ttu-id="2b503-602">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-602">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-603">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-603">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="2b503-604">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-604">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-605">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="2b503-605">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="2b503-606">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-606">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="2b503-607">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-607">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-608">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-608">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-609">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-609">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-610">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-610">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="2b503-611">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-611">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-612">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-612">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-613">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-613">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-614">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-614">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-615">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-615">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-616">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-617">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-617">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-618">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-619"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-620"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-621">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-622"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-623">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-624">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-624">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-625">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-625">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-626">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-626">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-627">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-627">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-628">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-628">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-629">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-630">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-630">This method is now obsolete.</span></span> <span data-ttu-id="2b503-631">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-631">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-632">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-632">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-633">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-633">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-634">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-634">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-635">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-635">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-636">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-636">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-637">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-637">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-638">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-638">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-639">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-639">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-640"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-640">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-641"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-641">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-642">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-642">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-643"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-643"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-644">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-644">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-645">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-645">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-646">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-646">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-647">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-647">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-648">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-648">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-649">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-649">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-650">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="2b503-650">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="2b503-651">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-651">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-652">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-652">This method is now obsolete.</span></span> <span data-ttu-id="2b503-653">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-653">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-654">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-654">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-655">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-655">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-656">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-656">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-657">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-657">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-658">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-658">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-659">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-659">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-660">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-660">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-661">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-661">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-662">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-662">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-663">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-663">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b503-664">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-664">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-665"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-665">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-666"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-666">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-667">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-667">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-668"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-668"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-669">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-669">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-670">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-670">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-671">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-671">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-672">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-672">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-673">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-673">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-674">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-674">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-675">因为<xref:System.Xml.XmlReader>提供只读的输出，`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2b503-675">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="2b503-676">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-676">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="2b503-677">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-677">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-678">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-678">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-679">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-679">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-680">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-680">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-681">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-681">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-682">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-682">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-683">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-683">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-684">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-684">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-685"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-685">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-686"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-686">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-687">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-687">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-688"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-688"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-689">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-689">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-690">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-690">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-691">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-691">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-692">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-692">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-693">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-693">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-694">这意味着，该节点，即当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-694">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-695">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="2b503-695">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="2b503-696">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-696">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-697">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-697">This method is now obsolete.</span></span> <span data-ttu-id="2b503-698">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-698">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="2b503-699">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-699">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-700">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-700">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-701">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-701">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-702">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-702">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-703">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-703">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-704">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-704">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-705">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-705">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-706">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-706">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-707">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-707">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-708">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-708">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-709">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-709">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-710">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-710">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-711"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-711">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-712"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-712">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-713">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-713">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-714"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-714"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-715">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-715">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-716">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-716">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="2b503-717">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-717">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-718">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-718">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-719">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-719">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-720">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-720">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="2b503-721">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-721">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="2b503-722">下面的示例执行 ASP.NET 页中的转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-722">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-723">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-723">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-724">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-724">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-725">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-725">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-726">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-726">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-727">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-727">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-728">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-728">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-729">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-729">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-730">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-730">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-731">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-731">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-732">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-732">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-733">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-733">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-734"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-734">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-735"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-735">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-736">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-736">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-737"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-737"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-738">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-738">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-739">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-739">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="2b503-740">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="2b503-740">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="2b503-741">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-741">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="2b503-742">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-742">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-743">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-743">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-744">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-744">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-745">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-745">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="2b503-746">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-746">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="2b503-747">下面的示例转换 XML 文件，并将输出一个 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="2b503-747">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="2b503-748"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>使用类来读取和写入字符串。</span><span class="sxs-lookup"><span data-stu-id="2b503-748">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="2b503-749">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="2b503-749">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-750">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-750">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-751">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-751">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-752">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-752">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-753">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-753">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2b503-754">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-754">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-755">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-755">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-756">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-756">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-757">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-757">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-758">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-758">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-759">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-759">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-760">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-760">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-761"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-761">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-762"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-762">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-763">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-763">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-764"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-764"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-765">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-765">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-766">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-766">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-767">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="2b503-767">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="2b503-768">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-768">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="2b503-769">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-769">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2b503-770">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-770">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-771">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-771">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2b503-772">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="2b503-772">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="2b503-773">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="2b503-773">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="2b503-774">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-774">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="2b503-775">它在表中显示 ISBN、 标题和的每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="2b503-775">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2b503-776">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="2b503-776">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-777">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-777">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-778">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-778">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-779">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-779">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-780">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-780">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-781">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-781">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-782">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-782">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-783">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-783">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-784">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-784">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-785">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-785">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-786">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-786">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-787"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-787">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-788"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-788">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-789">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-789">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-790"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-790"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-791">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-791">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-792">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-792">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-793">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-793">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-794">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-794">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-795">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-795">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-796">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-796">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-797">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-797">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-798">下面的示例加载到 customer 表<xref:System.Xml.XmlDataDocument>并执行 XSLT 转换来将客户数据拉入 HTML 表。</span><span class="sxs-lookup"><span data-stu-id="2b503-798">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="2b503-799">该示例使用 Microsoft SQL Server 2000 Northwind 数据库。</span><span class="sxs-lookup"><span data-stu-id="2b503-799">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="2b503-800">示例使用 `customers.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="2b503-800">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-801">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-801">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-802">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-802">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-803">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-803">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-804">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-804">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-805">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-805">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-806">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-806">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-807">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-807">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-808">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-808">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-809">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-809">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-810">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-810">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-811"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-811">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-812"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-812">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-813">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-813">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-814"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-814"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-815">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-815">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-816">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-816">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-817">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-817">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-818">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-818">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-819">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-819">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-820">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-820">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-821">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="2b503-821">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="2b503-822">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-822">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-823">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-823">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-824">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-824">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-825">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-825">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2b503-826">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-826">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="2b503-827">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-827">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2b503-828">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-828">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="2b503-829">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-829">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2b503-830">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-830">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="2b503-831">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-831">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b503-832">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-832">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-833"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-833">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-834"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-834">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-835">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-835">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-836"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="2b503-836"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2b503-837">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="2b503-837">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="2b503-838">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-838">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="2b503-839">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-839">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="2b503-840">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="2b503-840">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2b503-841">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="2b503-841">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="2b503-842">这意味着，该节点，即当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2b503-842">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="2b503-843">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="2b503-843">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="2b503-844">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="2b503-844">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b503-845">下面的示例加载并执行 XSLT 转换之前编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2b503-845">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b503-846">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-846">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="2b503-847">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-847">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="2b503-848">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-848">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b503-849">设置调用 <see cref="T:System.Xml.XmlResolver" /> 方法时用于解析外部资源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-849">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b503-850">要在转换期间使用的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-850">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span>
          </span>
          <span data-ttu-id="2b503-851">如果设置为<see langword="null" />，XSLT <c>document （)</c>函数未得到解决。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b503-851">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b503-852"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-852">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="2b503-853"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="2b503-853">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="2b503-854">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2b503-854">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="2b503-855">在.NET Framework 1.1 版中，应用程序的信任级别确定的默认行为：</span><span class="sxs-lookup"><span data-stu-id="2b503-855">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="2b503-856">`Fully trusted code:` 默认<xref:System.Xml.XmlUrlResolver>无用户凭据用于解析`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="2b503-856">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="2b503-857">如果需要身份验证来访问外部资源，使用此属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="2b503-857">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2b503-858">`Semi-trusted code:` 属性设置为`null`，这意味着`document()`函数未得到解决。</span><span class="sxs-lookup"><span data-stu-id="2b503-858">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="2b503-859">因为需要使用完全信任才能指定<xref:System.Xml.XmlResolver>，也不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="2b503-859">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="2b503-860">使用此冲突解决程序时 XSLT`document()`调用函数。</span><span class="sxs-lookup"><span data-stu-id="2b503-860">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="2b503-861">它不用于解析`xsl:import`和`xsl:include`在样式表中引用的元素。</span><span class="sxs-lookup"><span data-stu-id="2b503-861">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="2b503-862">若要指定<xref:System.Xml.XmlResolver>用来解析`xsl:import`和`xsl:include`引用样式表中的元素使用<xref:System.Xml.Xsl.XslTransform.Load%2A>超负荷运转，此方法采用<xref:System.Xml.XmlResolver>作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="2b503-862">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b503-863">此属性是.NET Framework 1.1 版中过时。</span><span class="sxs-lookup"><span data-stu-id="2b503-863">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="2b503-864">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="2b503-864">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="2b503-865">在这种情况下，<xref:System.Xml.XmlResolver>后不缓存<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="2b503-865">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>