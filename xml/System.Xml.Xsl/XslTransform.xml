<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99d67fe85e45188187bd0d3e0531cd6ae3648678" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36436807" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c1d7f-101">使用可扩展样式表转换语言 (XSLT) 转换 XML 数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1d7f-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-102"><xref:System.Xml.Xsl.XslTransform>类是在 Microsoft.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-103"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-104">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-105"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-106">XSLT 样式表必须使用命名空间`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-107">此外可以将其他参数添加到样式表使用<xref:System.Xml.Xsl.XsltArgumentList>类。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="c1d7f-108">此类包含的样式表和扩展对象可以从样式表调用该输入的参数。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="c1d7f-109">若要将 XML 数据转换：</span><span class="sxs-lookup"><span data-stu-id="c1d7f-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="c1d7f-110">创建<xref:System.Xml.Xsl.XslTransform>对象。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="c1d7f-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法加载样式表转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="c1d7f-112">此方法具有好几个重载，并且可以加载样式表使用<xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或具有文件的位置的 URL。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="c1d7f-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法来转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="c1d7f-114">此方法具有好几个重载，可以处理不同类型的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="c1d7f-115">你还可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在转换期间使用作为输入的其他自变量。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="c1d7f-116">**安全注意事项**</span><span class="sxs-lookup"><span data-stu-id="c1d7f-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="c1d7f-117">在创建使用 <xref:System.Xml.Xsl.XslTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="c1d7f-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="c1d7f-118">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="c1d7f-119">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="c1d7f-120">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="c1d7f-121">恶意用户可以利用此方法为您提供数据或样式表，在执行时将导致您的系统以处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="c1d7f-122">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="c1d7f-123">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="c1d7f-124">可以不接受缓解这些安全问题<xref:System.Xml.Xsl.XslTransform>对象、 XSLT 样式表或来自不可信源的 XML 源数据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="c1d7f-125">**脚本支持**</span><span class="sxs-lookup"><span data-stu-id="c1d7f-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="c1d7f-126">此类支持嵌入的脚本使用`msxsl:script`元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="c1d7f-127">.NET Framework 1.1 版中，在样式表的证据确定哪些权限被授予的嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="c1d7f-128">如果样式表加载从统一资源标识符 (URI) 时，URI 用于创建证据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="c1d7f-129">该证据包括以及其站点和区域的 URI。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="c1d7f-130">如果使用另一个源加载样式表，你可以通过传递提供证据<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>对象传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="c1d7f-131">否则，脚本程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="c1d7f-132">不完全受信任的调用方：`UnmanagedCode`编译嵌入的脚本所需的权限。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="c1d7f-133">`ControlEvidence` 提供所需的权限<xref:System.Security.Policy.Evidence>到<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="c1d7f-134">A<xref:System.Security.SecurityException>如果调用方没有所需的权限，则引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="c1d7f-135">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>和<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="c1d7f-136">`msxsl:script`元素具有以下要求：</span><span class="sxs-lookup"><span data-stu-id="c1d7f-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="c1d7f-137">`msxsl:script`元素属于`urn:schemas-microsoft-com:xslt`命名空间。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="c1d7f-138">样式表必须包括命名空间声明`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="c1d7f-139">`msxsl:script`元素可以包含`language`属性，指定要使用的脚本语言。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="c1d7f-140">值`language`特性必须是以下之一： C#、 CSharp、 VB、 VisualBasic、 JScript 中或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="c1d7f-141">因为该语言名称不区分大小写，JavaScript 和 javascript 都有效。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="c1d7f-142">如果`language`属性未指定，则它默认为 JScript。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="c1d7f-143">`msxsl:script`元素必须包含`implements-prefix`包含表示与脚本块关联的命名空间的前缀的属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="c1d7f-144">必须在样式表中定义此命名空间。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="c1d7f-145">样式表可以包括多个脚本块，分为不同的命名空间。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="c1d7f-146">不能具有与在同一命名空间中的多个语言的脚本块。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="c1d7f-147">脚本块可以调用另一个脚本块中定义的函数，提供的脚本块驻留在相同的命名空间内。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="c1d7f-148">根据规则和语法的脚本语言分析脚本块的内容 (由提供`language`属性)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="c1d7f-149">例如，如果你具有 C# 脚本块，注释就会通过`//`字符。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="c1d7f-150">注释必须为有效的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="c1d7f-151">`Note` 建议你在 CDATA 部分包装脚本块。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="c1d7f-152">
        <see cref="T:System.Xml.Xsl.XslTransform" /> 对象是唯一将线程安全的转换操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1d7f-152">
          <see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span>
      </span>
      <span data-ttu-id="c1d7f-153">不保证其他操作都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1d7f-153">Other operations are not guaranteed to be thread-safe.</span>
      </span>
      <span data-ttu-id="c1d7f-154">你必须确保对任何其他方法的调用在对象上在加载操作期间。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1d7f-154">You must ensure that no other methods are called on the object during load operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1d7f-155">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1d7f-156">加载 XSLT 样式表，包括在 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 元素中引用的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-157"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-158"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-159">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c1d7f-160">指定要加载的 XSLT 样式表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-160">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-161">加载由一个 URL 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-161">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-162"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-163"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-164">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-165"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-166">XSLT 样式表必须包括命名空间声明`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="c1d7f-167">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c1d7f-168">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c1d7f-169">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c1d7f-170">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-171">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="c1d7f-172">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-172">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-173">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-173">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-174">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-174">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-175">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-175">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c1d7f-176">它在表中显示 ISBN、 标题和的每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-176">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c1d7f-177">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-177">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-178">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-178">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-179">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-179">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-180">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-180">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-181">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-181">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-182"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-182">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-183"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-183">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-184">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-184">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-185"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-185"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-186">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-186">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-187">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-187">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c1d7f-188">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-188">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c1d7f-189">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-189">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c1d7f-190">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-190">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c1d7f-191">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-191">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="c1d7f-192">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-192">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c1d7f-193">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-193">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c1d7f-194">如果样式表包含实体，你应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-194">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c1d7f-195">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-195">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="c1d7f-196">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-196">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-197">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-197">The assembly has full trust.</span></span> <span data-ttu-id="c1d7f-198">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-198">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="c1d7f-199">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-199">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-200">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-201">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-202">下面的示例转换排序标题的所有图书的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-202">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="c1d7f-203">该示例使用以下数据文件</span><span class="sxs-lookup"><span data-stu-id="c1d7f-203">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-204">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-204">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-205">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-205">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-206">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-206">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-207">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-207">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-208">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-209"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-210"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-211">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-212"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-213">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-214">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c1d7f-215">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c1d7f-216">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c1d7f-217">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-217">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-218">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-218">The assembly has full trust.</span></span> <span data-ttu-id="c1d7f-219">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-219">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="c1d7f-220">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-220">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-221">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-221">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-222">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-222">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-223">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-223">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-224">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-224">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-225">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-225">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-226">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-226">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-227"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-227">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-228"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-228">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-229">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-229">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-230"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-230"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-231">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-231">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-232">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-232">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c1d7f-233">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-233">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c1d7f-234">如果样式表都位于需要身份验证的网络资源，请使用采用的重载<xref:System.Xml.XmlResolver>作为其自变量之一并指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-234">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c1d7f-235">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-235">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c1d7f-236">若要使用与样式表所加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-236">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c1d7f-237">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于开头的样式表 (上`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-237">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="c1d7f-238">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-238">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-239">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-239">The assembly has full trust.</span></span> <span data-ttu-id="c1d7f-240">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-240">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="c1d7f-241">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-241">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-242">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-242">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-243">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-243">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-244">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-244">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-245">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-245">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c1d7f-246">指定要加载的 XSLT 样式表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-246">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-247">
            <see cref="T:System.Xml.XmlResolver" /> 用于加载该样式表以及 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-247">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="c1d7f-248">如果这是 <see langword="null" />，将使用不具有用户凭据的默认 <see cref="T:System.Xml.XmlUrlResolver" /> 来打开样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-248">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span>
          </span>
          <span data-ttu-id="c1d7f-249">不使用默认的 <see cref="T:System.Xml.XmlUrlResolver" /> 来解析样式表中的任何外部资源，因此将不解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-249">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-250">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-250">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-251">加载由一个 URL 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-251">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-252"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-253"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-254">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-255"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-256">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-257">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-257">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-258">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-258">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="c1d7f-259">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-259">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-260">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-260">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-261">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-261">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-262">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-262">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c1d7f-263">该示例加载 XSLT 样式表，其中包含`xsl:include`元素引用另一个样式表。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-263">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="c1d7f-264"><xref:System.Xml.XmlUrlResolver>传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>设置的凭据访问所包含的样式表的网络资源所需的方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-264">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="c1d7f-265">该示例使用以下数据文件</span><span class="sxs-lookup"><span data-stu-id="c1d7f-265">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-266">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-266">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-267">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-267">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-268">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-268">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-269">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-269">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="c1d7f-270">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-270">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-271">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-271">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-272">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-272">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-273"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-273">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-274"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-274">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-275">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-275">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-276"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-276"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-277">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-277">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-278">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-278">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c1d7f-279">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-279">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c1d7f-280">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-280">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="c1d7f-281">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-281">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c1d7f-282">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-282">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c1d7f-283">如果样式表包含实体，你应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-283">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c1d7f-284">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-284">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="c1d7f-285">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-285">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-286">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-286">The assembly has full trust.</span></span> <span data-ttu-id="c1d7f-287">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-287">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="c1d7f-288">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅文章 Q316755 Microsoft 知识库中在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-288">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-289">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-289">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-290">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-290">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-291">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-291">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-292">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-292">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-293">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-293">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-294">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-294">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-295">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-295">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="c1d7f-296">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-296">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-297">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-297">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-298">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-298">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-299"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-299">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-300"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-300">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-301">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-301">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-302"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-302"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-303">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-303">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-304">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-304">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-305">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-305">The assembly has full trust.</span></span> <span data-ttu-id="c1d7f-306">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-306">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="c1d7f-307">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-307">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-308">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-308">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-309">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-309">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-310">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-310">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-311">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-311">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-312">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-312">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-313">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-313">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="c1d7f-314">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-314">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-315">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-315">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-316">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-316">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-317"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-317">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-318"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-318">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-319">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-319">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-320"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-320"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-321">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-321">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-322">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-322">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c1d7f-323">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-323">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c1d7f-324">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于开头的样式表 (上`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-324">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="c1d7f-325">如果样式表包含嵌入的脚本，脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-325">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c1d7f-326">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-326">The assembly has full trust.</span></span> <span data-ttu-id="c1d7f-327">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-327">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span> <span data-ttu-id="c1d7f-328">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-328">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-329">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本未编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c1d7f-330">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-331">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-331">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-332">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-333">包含要加载的样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-333">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-334">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="c1d7f-335">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-335">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-336">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="c1d7f-337">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-337">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="c1d7f-338">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-338">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="c1d7f-339">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-339">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="c1d7f-340">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-340">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-341">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-341">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="c1d7f-342">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-342">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-343"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-343">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-344"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-344">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-345">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-345">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-346"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-346"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-347">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-347">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-348">此方法将 XSLT 样式表，包括任何引用中的样式表加载`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-348">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c1d7f-349">从当前节点的加载样式表<xref:System.Xml.XmlReader>通过其所有子级。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-349">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c1d7f-350">这使您要用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-350">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="c1d7f-351">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表末尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-351">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c1d7f-352">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-352">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c1d7f-353">如果样式表包含实体，你应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-353">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c1d7f-354">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-354">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="c1d7f-355">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-355">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="c1d7f-356">有不同的方法，以便提供的证据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-356">There are different ways to provide evidence.</span></span> <span data-ttu-id="c1d7f-357">下表介绍常见的用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-357">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="c1d7f-358">下面的示例执行 XSLT 转换其中`xsltReader`是<xref:System.Xml.XmlReader>包含样式表和`secureURL`是可以用于创建一个受信任的 URL <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-358">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="c1d7f-359"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用于创建<xref:System.Security.Policy.Evidence>应用于样式表。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-359">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-360">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-360">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-361">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-361">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="c1d7f-362">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-362">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c1d7f-363">用于提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-363">for providing evidence.</span>
          </span>
          <span data-ttu-id="c1d7f-364">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-364">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-365">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-365">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-366">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-366">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-367">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-367">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="c1d7f-368">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-368">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-369">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-369">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="c1d7f-370">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-370">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="c1d7f-371">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-371">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="c1d7f-372">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-372">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="c1d7f-373">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-373">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-374">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-374">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="c1d7f-375">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-375">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-376"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-376">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-377"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-377">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-378">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-378">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-379"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-379"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-380">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-380">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-381">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-381">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="c1d7f-382">有不同的方法，以便提供的证据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-382">There are different ways to provide evidence.</span></span> <span data-ttu-id="c1d7f-383">下表介绍常见的用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-383">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-384">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-384">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-385">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-385">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="c1d7f-386">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-386">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c1d7f-387">用于提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-387">for providing evidence.</span>
          </span>
          <span data-ttu-id="c1d7f-388">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-388">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="c1d7f-389">包含要加载的样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-389">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-390">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-390">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="c1d7f-391">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-391">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-392">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-392">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="c1d7f-393">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-393">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="c1d7f-394">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-394">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="c1d7f-395">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-395">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="c1d7f-396">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-396">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-397">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-397">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
          <span data-ttu-id="c1d7f-398">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-398">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-399"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-399">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-400"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-400">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-401">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-401">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-402"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-402"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-403">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-403">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-404">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-404">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c1d7f-405">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-405">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c1d7f-406">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于开头的样式表 (上`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-406">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="c1d7f-407">有关问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入的脚本，请参阅在 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-407">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="c1d7f-408">有不同的方法，以便提供的证据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-408">There are different ways to provide evidence.</span></span> <span data-ttu-id="c1d7f-409">下表介绍常见的用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-409">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="c1d7f-410">下面的示例执行 XSLT 转换从外部源中使用的样式表。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-410">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="c1d7f-411">样式表来自受信任的源，因为`resolver`和`evidence`参数设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-411">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="c1d7f-412">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-412">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c1d7f-413">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-413">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="c1d7f-414">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-414">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c1d7f-415">用于提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-415">for providing evidence.</span>
          </span>
          <span data-ttu-id="c1d7f-416">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-416">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1d7f-417">使用加载的 XSLT 样式表转换 XML 数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-417">Transforms the XML data using the loaded XSLT style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-418"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-418">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-419"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-419">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-420">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-420">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="c1d7f-421">要转换的源文档的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-421">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="c1d7f-422">输出文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-422">The URL of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-423">转换输入文件中的 XML 数据并将结果输出到输出文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-423">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-424"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-424">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-425"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-425">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-426">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-426">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-427"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-427"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-428">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-428">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-429">此方法是在.NET Framework 1.1 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-429">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="c1d7f-430">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-430">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-431">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-431">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-432">下面的示例转换`books.xml`文件使用`output.xsl`样式表并将结果输出到`books.html`文件。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-432">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="c1d7f-433">此示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="c1d7f-433">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-434">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-434">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-435">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-435">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-436">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-436">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-437">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-437">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1d7f-438">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-438">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-439"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-439">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-440"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-440">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-441">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-441">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-442"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-442"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-443">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-443">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-444">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-444">This method is now obsolete.</span></span> <span data-ttu-id="c1d7f-445">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-445">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-446">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-446">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c1d7f-447">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-447">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-448">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-448">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="c1d7f-449">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-449">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c1d7f-450">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-450">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="c1d7f-451">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-451">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-452">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-452">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-453">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-453">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-454">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-454">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c1d7f-455">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-455">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-456">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-456">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-457">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-457">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-458">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-458">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1d7f-459">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-459">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-460"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-460">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-461"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-461">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-462">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-462">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-463"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-463"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-464">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-464">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-465">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-465">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-466">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-466">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-467">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-467">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-468">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-468">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-469">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-469">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-470">因为<xref:System.Xml.XmlReader>提供只读的输出，`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-470">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="c1d7f-471">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-471">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c1d7f-472">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-472">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-473">此方法已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-473">This method is obsolete.</span></span> <span data-ttu-id="c1d7f-474">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT document （） 函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-474">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="c1d7f-475">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-475">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-476">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-476">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-477">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-477">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-478">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-478">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="c1d7f-479">要转换的源文档的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-479">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="c1d7f-480">输出文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-480">The URL of the output file.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-481">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-481">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-482">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-482">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-483">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-483">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-484">转换输入文件中的 XML 数据并将结果输出到输出文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-484">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-485"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-485">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-486"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-486">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-487">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-487">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-488"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-488"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-489">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-489">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-490">下面的示例执行 XSLT 转换，并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-490">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="c1d7f-491"><xref:System.Xml.XmlUrlResolver>凭据使用具有默认解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-491">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="c1d7f-492">有关详细信息，请参阅<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-492">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-493">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-493">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-494">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-494">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-495">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-495">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-496">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-496">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-497">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-497">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-498"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-498">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-499"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-499">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-500">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-500">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-501"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-501"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-502">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-502">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-503">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-503">This method is now obsolete.</span></span> <span data-ttu-id="c1d7f-504">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-504">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-505">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-505">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c1d7f-506">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-506">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c1d7f-507">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-507">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-508">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-508">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-509">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-509">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-510">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-510">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c1d7f-511">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-511">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-512">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-512">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-513">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-513">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-514">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-514">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-515">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-515">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-516">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-516">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-517">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-517">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-518">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-518">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-519">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-519">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-520"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-520">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-521"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-521">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-522">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-522">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-523"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-523"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-524">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-524">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-525">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-525">This method is now obsolete.</span></span> <span data-ttu-id="c1d7f-526">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-526">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-527">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-527">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c1d7f-528">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-528">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c1d7f-529">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-529">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c1d7f-530">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-530">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="c1d7f-531">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-531">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-532">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-532">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-533">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-533">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-534">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-534">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c1d7f-535">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-535">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-536">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-536">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-537">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-537">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-538">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-538">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-539">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-539">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-540">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-540">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-541">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-541">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-542">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-542">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-543">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-543">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-544">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-544">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-545">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-545">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1d7f-546">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-546">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-547"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-547">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-548"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-548">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-549">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-549">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-550"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-550"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-551">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-551">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-552">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-552">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-553">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-553">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="c1d7f-554">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-554">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c1d7f-555">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-555">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="c1d7f-556">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-556">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-557">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-557">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-558">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-558">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-559">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-559">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c1d7f-560">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-560">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-561">以下示例转换 XML 文档，并将结果输出到`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-561">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="c1d7f-562"><xref:System.Xml.XmlUrlResolver>与所需的凭据用于处理任何 XSLT`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-562">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-563">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-563">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-564">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-564">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-565">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-565">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-566">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-566">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-567">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-567">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-568"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-568">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-569"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-569">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-570">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-570">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-571"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-571"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-572">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-572">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-573">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-573">This method is now obsolete.</span></span> <span data-ttu-id="c1d7f-574">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-574">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-575">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-575">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c1d7f-576">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-576">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-577">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-577">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c1d7f-578">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-578">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c1d7f-579">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-579">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-580">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-580">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-581">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-581">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-582">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-582">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c1d7f-583">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-583">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-584">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-584">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-585">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-585">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-586">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-586">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-587">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-587">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-588">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-588">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-589">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-589">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-590">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-590">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-591"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-591">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-592"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-592">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-593">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-593">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-594"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-594"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-595">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-595">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-596">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-596">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-597">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-597">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-598">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-598">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-599">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-599">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-600">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-600">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-601">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-601">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-602">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-602">This method is now obsolete.</span></span> <span data-ttu-id="c1d7f-603">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-603">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-604">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-604">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-605">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-605">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-606">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-606">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-607">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-607">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-608">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-608">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-609">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-609">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-610">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-610">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-611">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-611">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-612"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-612">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-613"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-613">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-614">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-614">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-615"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-615"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-616">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-616">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-617">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-617">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-618">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-618">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-619">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-619">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-620">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-620">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-621">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-621">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-622">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-622">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c1d7f-623">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-623">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-624">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-624">This method is now obsolete.</span></span> <span data-ttu-id="c1d7f-625">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-625">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-626">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-626">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-627">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-627">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-628">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-628">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-629">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-629">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-630">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-630">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-631">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-631">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-632">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-632">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-633">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-633">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-634">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-634">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-635">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-635">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1d7f-636">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-636">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-637"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-637">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-638"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-638">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-639">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-639">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-640"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-640"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-641">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-641">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-642">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-642">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-643">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-643">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-644">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-644">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-645">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-645">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-646">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-646">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-647">因为<xref:System.Xml.XmlReader>提供只读的输出，`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-647">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="c1d7f-648">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-648">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c1d7f-649">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-649">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-650">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-650">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-651">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-651">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-652">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-652">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-653">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-653">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-654">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-654">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-655">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-655">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-656">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-656">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-657"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-657">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-658"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-658">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-659">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-659">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-660"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-660"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-661">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-661">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-662">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-662">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-663">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-663">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-664">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-664">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-665">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-665">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-666">这意味着，该节点，即当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-666">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-667">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-667">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c1d7f-668">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-668">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-669">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-669">This method is now obsolete.</span></span> <span data-ttu-id="c1d7f-670">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数处于已解决状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-670">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c1d7f-671">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>该方法使用<xref:System.Xml.XmlResolver>对象作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-671">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-672">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-672">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-673">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-673">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-674">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-674">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-675">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-675">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-676">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-676">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-677">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-677">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-678">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-678">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-679">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-679">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-680">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-680">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-681">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-681">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-682">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-682">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-683"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-683">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-684"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-684">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-685">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-685">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-686"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-686"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-687">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-687">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-688">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-688">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c1d7f-689">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-689">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-690">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-690">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-691">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-691">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-692">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-692">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c1d7f-693">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-693">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-694">下面的示例执行 ASP.NET 页中的转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-694">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-695">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-695">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-696">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-696">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-697">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-697">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-698">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-698">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-699">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-699">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-700">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-700">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-701">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-701">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-702">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-702">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-703">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-703">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-704">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-704">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-705">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-705">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-706"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-706">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-707"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-707">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-708">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-708">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-709"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-709"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-710">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-710">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-711">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-711">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c1d7f-712">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-712">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c1d7f-713">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-713">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="c1d7f-714">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-714">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-715">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-715">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-716">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-716">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-717">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-717">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c1d7f-718">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-718">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-719">下面的示例转换 XML 文件，并将输出一个 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-719">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="c1d7f-720"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>使用类来读取和写入字符串。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-720">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="c1d7f-721">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-721">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-722">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-722">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-723">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-723">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-724">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-724">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-725">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-725">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="c1d7f-726">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-726">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-727">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-727">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-728">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-728">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-729">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-729">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-730">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-730">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-731">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-731">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-732">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-732">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-733"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-733">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-734"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-734">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-735">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-735">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-736"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-736"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-737">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-737">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-738">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-738">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-739">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-739">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c1d7f-740">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-740">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c1d7f-741">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-741">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-742">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-742">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-743">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-743">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c1d7f-744">下面的示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-744">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c1d7f-745">该示例使用`library.xml`和`print_root.xsl`文件作为输入，并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-745">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-746">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-746">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c1d7f-747">它在表中显示 ISBN、 标题和的每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-747">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c1d7f-748">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-748">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-749">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-749">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-750">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-750">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-751">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-751">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-752">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-752">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-753">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-753">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-754">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-754">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-755">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-755">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-756">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-756">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-757">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-757">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-758">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-758">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-759"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-759">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-760"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-760">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-761">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-761">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-762"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-762"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-763">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-763">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-764">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-764">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-765">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-765">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-766">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-766">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-767">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-767">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-768">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-768">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-769">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-769">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-770">下面的示例加载到 customer 表<xref:System.Xml.XmlDataDocument>并执行 XSLT 转换来将客户数据拉入 HTML 表。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-770">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="c1d7f-771">该示例使用 Microsoft SQL Server 2000 Northwind 数据库。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-771">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="c1d7f-772">示例使用 `customers.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-772">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-773">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-773">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-774">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-774">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-775">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-775">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-776">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-776">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-777">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-777">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-778">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-778">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-779">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-779">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-780">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-780">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-781">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-781">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-782">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-782">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-783"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-783">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-784"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-784">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-785">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-785">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-786"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-786"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-787">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-787">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-788">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-788">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-789">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-789">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-790">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-790">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-791">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-791">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-792">这意味着，该节点，这是当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-792">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-793">上的编码属性`xsl:output`当你输出到不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-793">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c1d7f-794">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)获取在其上的细节`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-794">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-795">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-795">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-796">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-796">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-797">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-797">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c1d7f-798">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-798">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c1d7f-799">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-799">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="c1d7f-800">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-800">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="c1d7f-801">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-801">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="c1d7f-802">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-802">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="c1d7f-803">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-803">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1d7f-804">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-804">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-805"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-805">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-806"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-806">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-807">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-807">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-808"><xref:System.Xml.Xsl.XslTransform> 支持的 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-808"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c1d7f-809">XSLT 样式表必须包括命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-809">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c1d7f-810">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-810">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c1d7f-811">转换选择将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-811">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c1d7f-812">换而言之，如果当前节点在文档根节点以外的一个节点树上设置的则这不会阻止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-812">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c1d7f-813">在执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-813">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c1d7f-814">这意味着，该节点，即当前转换过程之前，将保持当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-814">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c1d7f-815">`xsl:output`当你输出到不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-815">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c1d7f-816">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-816">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1d7f-817">下面的示例加载并执行 XSLT 转换之前编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-817">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1d7f-818">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-818">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-819">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-819">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="c1d7f-820">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-820">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1d7f-821">设置调用 <see cref="T:System.Xml.XmlResolver" /> 方法时用于解析外部资源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-821">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1d7f-822">要在转换期间使用的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-822">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span>
          </span>
          <span data-ttu-id="c1d7f-823">如果设置为<see langword="null" />，XSLT <c>document （)</c>函数未得到解决。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1d7f-823">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-824"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-824">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c1d7f-825"><xref:System.Xml.Xsl.XslCompiledTransform>类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-825">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c1d7f-826">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[迁移从 XslTransform 类](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-826">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c1d7f-827">在.NET Framework 1.1 版中，应用程序的信任级别确定的默认行为：</span><span class="sxs-lookup"><span data-stu-id="c1d7f-827">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="c1d7f-828">`Fully trusted code:` 默认<xref:System.Xml.XmlUrlResolver>无用户凭据用于解析`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-828">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="c1d7f-829">如果需要身份验证来访问外部资源，使用此属性指定<xref:System.Xml.XmlResolver>使用必要的凭据。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-829">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c1d7f-830">`Semi-trusted code:` 属性设置为`null`，这意味着`document()`函数未得到解决。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-830">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="c1d7f-831">因为需要使用完全信任才能指定<xref:System.Xml.XmlResolver>，也不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-831">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="c1d7f-832">使用此冲突解决程序时 XSLT`document()`调用函数。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-832">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="c1d7f-833">它不用于解析`xsl:import`和`xsl:include`在样式表中引用的元素。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-833">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="c1d7f-834">若要指定<xref:System.Xml.XmlResolver>用来解析`xsl:import`和`xsl:include`引用样式表中的元素使用<xref:System.Xml.Xsl.XslTransform.Load%2A>超负荷运转，此方法采用<xref:System.Xml.XmlResolver>作为其自变量之一。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-834">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1d7f-835">此属性是.NET Framework 1.1 版中过时。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-835">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="c1d7f-836">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-836">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="c1d7f-837">在这种情况下，<xref:System.Xml.XmlResolver>后不缓存<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="c1d7f-837">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>