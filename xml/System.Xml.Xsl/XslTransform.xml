<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de9baf17edf74d4b802fb57df5af39e51c93de31" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51893784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e526b-101">使用可扩展样式表转换语言 (XSLT) 转换 XML 数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e526b-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-102"><xref:System.Xml.Xsl.XslTransform>类是 Microsoft.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-103"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-104">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-105"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-106">XSLT 样式表必须使用命名空间`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-107">其他参数还可以添加到样式表使用<xref:System.Xml.Xsl.XsltArgumentList>类。</span><span class="sxs-lookup"><span data-stu-id="e526b-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="e526b-108">此类包含的样式表和扩展对象可以从样式表调用的输入的参数。</span><span class="sxs-lookup"><span data-stu-id="e526b-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="e526b-109">若要将 XML 数据转换：</span><span class="sxs-lookup"><span data-stu-id="e526b-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="e526b-110">创建<xref:System.Xml.Xsl.XslTransform>对象。</span><span class="sxs-lookup"><span data-stu-id="e526b-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="e526b-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法以加载该转换的样式表。</span><span class="sxs-lookup"><span data-stu-id="e526b-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="e526b-112">此方法有若干重载，可以加载样式表使用<xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或具有文件的位置的 URL。</span><span class="sxs-lookup"><span data-stu-id="e526b-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="e526b-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法来转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="e526b-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="e526b-114">此方法有若干重载，可以处理不同类型的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="e526b-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="e526b-115">此外可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在转换期间使用作为输入的其他参数。</span><span class="sxs-lookup"><span data-stu-id="e526b-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="e526b-116">**安全注意事项**</span><span class="sxs-lookup"><span data-stu-id="e526b-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="e526b-117">在创建使用 <xref:System.Xml.Xsl.XslTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="e526b-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="e526b-118">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="e526b-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="e526b-119">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="e526b-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="e526b-120">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="e526b-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="e526b-121">恶意用户可以利用这一点您提供数据或样式表，在执行时将导致您的系统进行处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="e526b-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="e526b-122">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="e526b-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="e526b-123">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="e526b-124">可以通过不接受来缓解这些安全问题<xref:System.Xml.Xsl.XslTransform>对象、 XSLT 样式表或来自不可信源的 XML 源数据。</span><span class="sxs-lookup"><span data-stu-id="e526b-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="e526b-125">**脚本支持**</span><span class="sxs-lookup"><span data-stu-id="e526b-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="e526b-126">此类支持嵌入的脚本使用`msxsl:script`元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="e526b-127">在.NET Framework 1.1 版中，样式表的证据确定哪些权限授予用于嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="e526b-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="e526b-128">如果样式表加载从统一资源标识符 (URI)，使用 URI 创建证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="e526b-129">此证据包括以及站点和区域的 URI。</span><span class="sxs-lookup"><span data-stu-id="e526b-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="e526b-130">如果使用另一个源加载样式表，则可以通过传递提供证据<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>对象传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="e526b-131">否则，脚本程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e526b-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="e526b-132">不完全受信任调用方：`UnmanagedCode`编译嵌入式的脚本所需的权限。</span><span class="sxs-lookup"><span data-stu-id="e526b-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="e526b-133">`ControlEvidence` 提供所需的权限<xref:System.Security.Policy.Evidence>到<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="e526b-134">一个<xref:System.Security.SecurityException>如果调用方没有所需的权限，将引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="e526b-135">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>和<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="e526b-136">`msxsl:script`元素具有以下要求：</span><span class="sxs-lookup"><span data-stu-id="e526b-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="e526b-137">`msxsl:script`元素属于`urn:schemas-microsoft-com:xslt`命名空间。</span><span class="sxs-lookup"><span data-stu-id="e526b-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="e526b-138">样式表必须包含命名空间声明`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="e526b-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="e526b-139">`msxsl:script`元素可以包含`language`的特性，指定要使用的脚本语言。</span><span class="sxs-lookup"><span data-stu-id="e526b-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="e526b-140">值`language`属性必须是以下值之一： C#、 c#、 VB、 VisualBasic、 JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="e526b-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="e526b-141">语言名称不区分大小写，因为 JavaScript 和 javascript 都是有效。</span><span class="sxs-lookup"><span data-stu-id="e526b-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="e526b-142">如果`language`属性未指定，则默认为 JScript。</span><span class="sxs-lookup"><span data-stu-id="e526b-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="e526b-143">`msxsl:script`元素必须包括`implements-prefix`属性，其中包含表示与脚本块关联的命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="e526b-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="e526b-144">此命名空间必须定义的样式表中。</span><span class="sxs-lookup"><span data-stu-id="e526b-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="e526b-145">样式表可以包含多个脚本块的命名空间进行分组。</span><span class="sxs-lookup"><span data-stu-id="e526b-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="e526b-146">不能具有相同的命名空间内的多个语言的脚本块。</span><span class="sxs-lookup"><span data-stu-id="e526b-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="e526b-147">脚本块可以调用在另一个脚本块中定义的函数提供的脚本块驻留在相同的命名空间。</span><span class="sxs-lookup"><span data-stu-id="e526b-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="e526b-148">根据规则和脚本语言的语法的脚本块的内容进行解析 (通过提供`language`属性)。</span><span class="sxs-lookup"><span data-stu-id="e526b-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="e526b-149">例如，如果你有 C# 脚本块，注释就会通过`//`字符。</span><span class="sxs-lookup"><span data-stu-id="e526b-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="e526b-150">注释必须是有效的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="e526b-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="e526b-151">`Note` 建议将脚本块包装在 CDATA 部分。</span><span class="sxs-lookup"><span data-stu-id="e526b-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="e526b-152">
        <see cref="T:System.Xml.Xsl.XslTransform" /> 对象是用于转换操作的唯一线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e526b-152">
          <see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span>
      </span>
      <span data-ttu-id="e526b-153">其他操作不保证是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e526b-153">Other operations are not guaranteed to be thread-safe.</span>
      </span>
      <span data-ttu-id="e526b-154">您必须确保没有其他方法的调用对象上在加载操作期间。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e526b-154">You must ensure that no other methods are called on the object during load operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e526b-155">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e526b-156">加载 XSLT 样式表，包括在 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 元素中引用的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-157"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-158"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-159">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="e526b-160">指定要加载的 XSLT 样式表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-160">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-161">加载由一个 URL 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-161">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-162"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-163"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-164">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-165"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-166">XSLT 样式表必须包含命名空间声明`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="e526b-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="e526b-167">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e526b-168">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e526b-169">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e526b-170">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-171">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="e526b-172">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-172">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-173">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-173">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-174">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-174">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e526b-175">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-175">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e526b-176">它显示在表中的 ISBN、 标题和每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="e526b-176">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e526b-177">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="e526b-177">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-178">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-178">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-179">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-179">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-180">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-180">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-181">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-181">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-182"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-182">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-183"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-183">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-184">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-184">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-185"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-185"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-186">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-186">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-187">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-187">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e526b-188">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-188">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e526b-189">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-189">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e526b-190">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="e526b-190">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e526b-191">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="e526b-191">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="e526b-192">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-192">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e526b-193">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="e526b-193">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e526b-194">如果样式表将包含实体，则应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e526b-194">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e526b-195">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="e526b-195">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e526b-196">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-196">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-197">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e526b-197">The assembly has full trust.</span></span> <span data-ttu-id="e526b-198">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-198">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e526b-199">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-199">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-200">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-201">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e526b-202">下面的示例转换按标题排序所有书籍的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="e526b-202">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="e526b-203">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="e526b-203">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-204">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-204">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-205">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-205">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-206">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-206">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-207">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-207">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-208">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-209"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-210"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-211">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-212"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-213">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-214">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e526b-215">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e526b-216">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e526b-217">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-217">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-218">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e526b-218">The assembly has full trust.</span></span> <span data-ttu-id="e526b-219">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-219">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e526b-220">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-220">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-221">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-221">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-222">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-222">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-223">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-223">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-224">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-224">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-225">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-225">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-226">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-226">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-227"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-227">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-228"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-228">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-229">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-229">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-230"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-230"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-231">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-231">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-232">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-232">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e526b-233">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-233">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e526b-234">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-234">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e526b-235">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="e526b-235">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e526b-236">若要使用的样式表作为所加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-236">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e526b-237">之后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于样式表的开头 (在`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="e526b-237">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e526b-238">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-238">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-239">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e526b-239">The assembly has full trust.</span></span> <span data-ttu-id="e526b-240">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-240">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e526b-241">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-241">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-242">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-242">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-243">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-243">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-244">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-244">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-245">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-245">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="e526b-246">指定要加载的 XSLT 样式表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-246">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-247">
            <see cref="T:System.Xml.XmlResolver" /> 用于加载该样式表以及 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-247">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e526b-248">如果这是 <see langword="null" />，将使用不具有用户凭据的默认 <see cref="T:System.Xml.XmlUrlResolver" /> 来打开样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-248">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span>
          </span>
          <span data-ttu-id="e526b-249">不使用默认的 <see cref="T:System.Xml.XmlUrlResolver" /> 来解析样式表中的任何外部资源，因此将不解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-249">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span>
          </span>
          <span data-ttu-id="e526b-250">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-250">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-251">加载由一个 URL 指定的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-251">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-252"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-253"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-254">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-255"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-256">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-257">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-257">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-258">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-258">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="e526b-259">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-259">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-260">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-260">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-261">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-261">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e526b-262">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-262">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e526b-263">该示例加载 XSLT 样式表，其中包含`xsl:include`元素引用另一个样式表。</span><span class="sxs-lookup"><span data-stu-id="e526b-263">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="e526b-264"><xref:System.Xml.XmlUrlResolver>传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>设置的凭据访问包含的样式表的网络资源所需的方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-264">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="e526b-265">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="e526b-265">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-266">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-266">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-267">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-267">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-268">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-268">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-269">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-269">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e526b-270">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-270">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e526b-271">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-271">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-272">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-272">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-273"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-273">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-274"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-274">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-275">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-275">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-276"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-276"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-277">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-277">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-278">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-278">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e526b-279">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="e526b-279">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e526b-280">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="e526b-280">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="e526b-281">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-281">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e526b-282">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="e526b-282">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e526b-283">如果样式表将包含实体，则应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e526b-283">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e526b-284">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="e526b-284">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e526b-285">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-285">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-286">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e526b-286">The assembly has full trust.</span></span> <span data-ttu-id="e526b-287">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-287">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e526b-288">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>包含嵌入脚本的方法和样式表，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-288">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-289">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-289">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-290">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-290">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-291">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-291">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-292">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-292">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-293">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-293">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-294">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-294">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-295">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-295">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e526b-296">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-296">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e526b-297">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-297">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-298">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-298">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-299"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-299">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-300"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-300">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-301">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-301">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-302"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-302"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-303">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-303">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-304">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-304">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-305">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e526b-305">The assembly has full trust.</span></span> <span data-ttu-id="e526b-306">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-306">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e526b-307">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-307">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-308">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-308">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-309">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-309">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-310">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-310">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-311">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-311">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-312">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-312">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-313">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-313">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e526b-314">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-314">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e526b-315">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-315">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-316">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-316">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-317"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-317">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-318"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-318">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-319">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-319">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-320"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-320"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-321">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-321">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-322">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="e526b-322">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e526b-323">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-323">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e526b-324">之后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于样式表的开头 (在`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="e526b-324">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e526b-325">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="e526b-325">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e526b-326">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e526b-326">The assembly has full trust.</span></span> <span data-ttu-id="e526b-327">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="e526b-327">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span> <span data-ttu-id="e526b-328">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-328">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-329">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="e526b-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e526b-330">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e526b-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-331">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-331">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-332">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-333">包含要加载的样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-333">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-334">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e526b-335">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-335">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e526b-336">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="e526b-337">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-337">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="e526b-338">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-338">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="e526b-339">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-339">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="e526b-340">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-340">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-341">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-341">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="e526b-342">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-342">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-343"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-343">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-344"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-344">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-345">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-345">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-346"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-346"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-347">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-347">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-348">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-348">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e526b-349">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="e526b-349">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e526b-350">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="e526b-350">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="e526b-351">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-351">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e526b-352">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="e526b-352">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e526b-353">如果样式表将包含实体，则应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e526b-353">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e526b-354">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="e526b-354">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e526b-355">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-355">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="e526b-356">有不同的方式提供证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-356">There are different ways to provide evidence.</span></span> <span data-ttu-id="e526b-357">下表介绍常见用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="e526b-357">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="e526b-358">方案</span><span class="sxs-lookup"><span data-stu-id="e526b-358">Scenario</span></span>|<span data-ttu-id="e526b-359">若要提供的证据的类型</span><span class="sxs-lookup"><span data-stu-id="e526b-359">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="e526b-360">XSLT 样式表是自包含，或来自您信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="e526b-360">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="e526b-361">使用从您的程序集证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-361">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="e526b-362">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-362">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-363">已知源的来源，并且没有可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="e526b-363">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="e526b-364">创建使用的 URL 证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-364">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="e526b-365">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-365">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-366">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="e526b-366">The origin of the source is not known.</span></span>|<span data-ttu-id="e526b-367">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="e526b-367">Set evidence to `null`.</span></span> <span data-ttu-id="e526b-368">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="e526b-368">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="e526b-369">此外，还可以设置`resolver`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="e526b-369">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="e526b-370">这可确保`xsl:import`和`xsl:include`元素不会处理。</span><span class="sxs-lookup"><span data-stu-id="e526b-370">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="e526b-371">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-371">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-372">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="e526b-372">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="e526b-373">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-373">Request evidence from the caller.</span></span> <span data-ttu-id="e526b-374">API 调用方必须提供一种方法通常提供证据，<xref:System.Security.Policy.Evidence>类。</span><span class="sxs-lookup"><span data-stu-id="e526b-374">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="e526b-375">下面的示例执行的 XSLT 转换，其中`xsltReader`是<xref:System.Xml.XmlReader>包含样式表和`secureURL`是可用于创建一个受信任的 URL <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="e526b-375">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="e526b-376"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用于创建<xref:System.Security.Policy.Evidence>其应用于样式表。</span><span class="sxs-lookup"><span data-stu-id="e526b-376">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-377">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-377">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-378">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-378">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="e526b-379">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-379">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e526b-380">为提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-380">for providing evidence.</span>
          </span>
          <span data-ttu-id="e526b-381">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-381">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-382">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-382">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-383">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-383">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-384">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-384">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e526b-385">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-385">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e526b-386">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-386">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="e526b-387">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-387">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="e526b-388">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-388">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="e526b-389">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-389">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="e526b-390">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-390">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-391">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-391">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="e526b-392">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-392">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-393"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-393">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-394"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-394">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-395">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-395">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-396"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-396"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-397">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-397">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-398">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-398">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="e526b-399">有不同的方式提供证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-399">There are different ways to provide evidence.</span></span> <span data-ttu-id="e526b-400">下表介绍常见用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="e526b-400">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="e526b-401">方案</span><span class="sxs-lookup"><span data-stu-id="e526b-401">Scenario</span></span>|<span data-ttu-id="e526b-402">若要提供的证据的类型</span><span class="sxs-lookup"><span data-stu-id="e526b-402">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="e526b-403">XSLT 样式表是自包含，或来自您信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="e526b-403">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="e526b-404">使用从您的程序集证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-404">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="e526b-405">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-405">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-406">已知源的来源，并且没有可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="e526b-406">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="e526b-407">创建使用的 URL 证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-407">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="e526b-408">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-408">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-409">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="e526b-409">The origin of the source is not known.</span></span>|<span data-ttu-id="e526b-410">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="e526b-410">Set evidence to `null`.</span></span> <span data-ttu-id="e526b-411">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="e526b-411">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="e526b-412">此外，还可以设置`resolver`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="e526b-412">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="e526b-413">这可确保`xsl:import`和`xsl:include`元素不会处理。</span><span class="sxs-lookup"><span data-stu-id="e526b-413">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="e526b-414">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-414">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-415">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="e526b-415">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="e526b-416">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-416">Request evidence from the caller.</span></span> <span data-ttu-id="e526b-417">API 调用方必须提供一种方法通常提供证据，<xref:System.Security.Policy.Evidence>类。</span><span class="sxs-lookup"><span data-stu-id="e526b-417">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-418">加载的资源不是有效的样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-418">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-419">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-419">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="e526b-420">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-420">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e526b-421">为提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-421">for providing evidence.</span>
          </span>
          <span data-ttu-id="e526b-422">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-422">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e526b-423">包含要加载的样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-423">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-424">
            <see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-424">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e526b-425">如果这为 <see langword="null" />，则不解析外部资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-425">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e526b-426">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-426">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="e526b-427">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-427">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="e526b-428">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-428">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="e526b-429">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-429">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="e526b-430">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-430">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-431">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-431">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
          <span data-ttu-id="e526b-432">此方法允许您通过指定证据来限制样式表的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-432">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-433"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-433">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-434"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-434">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-435">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-435">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-436"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-436"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-437">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-437">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-438">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="e526b-438">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e526b-439">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-439">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e526b-440">之后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于样式表的开头 (在`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="e526b-440">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e526b-441">有关的问题<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和样式表与嵌入式脚本，请参阅在中 Microsoft 知识库的文章 Q316755 http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e526b-441">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="e526b-442">有不同的方式提供证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-442">There are different ways to provide evidence.</span></span> <span data-ttu-id="e526b-443">下表介绍常见用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="e526b-443">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="e526b-444">方案</span><span class="sxs-lookup"><span data-stu-id="e526b-444">Scenario</span></span>|<span data-ttu-id="e526b-445">若要提供的证据的类型</span><span class="sxs-lookup"><span data-stu-id="e526b-445">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="e526b-446">XSLT 样式表是自包含，或来自您信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="e526b-446">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="e526b-447">使用从您的程序集证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-447">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="e526b-448">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-448">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-449">已知源的来源，并且没有可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="e526b-449">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="e526b-450">创建使用的 URL 证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-450">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="e526b-451">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-451">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-452">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="e526b-452">The origin of the source is not known.</span></span>|<span data-ttu-id="e526b-453">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="e526b-453">Set evidence to `null`.</span></span> <span data-ttu-id="e526b-454">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="e526b-454">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="e526b-455">此外，还可以设置`resolver`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="e526b-455">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="e526b-456">这可确保`xsl:import`和`xsl:include`元素不会处理。</span><span class="sxs-lookup"><span data-stu-id="e526b-456">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="e526b-457">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="e526b-457">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e526b-458">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="e526b-458">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="e526b-459">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="e526b-459">Request evidence from the caller.</span></span> <span data-ttu-id="e526b-460">API 调用方必须提供一种方法通常提供证据，`Evidence`类。</span><span class="sxs-lookup"><span data-stu-id="e526b-460">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e526b-461">下面的示例执行 XSLT 转换使用来自外部源的样式表。</span><span class="sxs-lookup"><span data-stu-id="e526b-461">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="e526b-462">样式表来自受信任的源，因为`resolver`并`evidence`参数设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="e526b-462">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e526b-463">当前节点不符合有效样式表的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-463">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e526b-464">引用的样式表需要的功能是所提供的证据不允许的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-464">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="e526b-465">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-465">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e526b-466">为提供证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-466">for providing evidence.</span>
          </span>
          <span data-ttu-id="e526b-467">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-467">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e526b-468">使用加载的 XSLT 样式表转换 XML 数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-468">Transforms the XML data using the loaded XSLT style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-469"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-469">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-470"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-470">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-471">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-471">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="e526b-472">要转换的源文档的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-472">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="e526b-473">输出文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-473">The URL of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-474">转换输入文件中的 XML 数据并将结果输出到输出文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-474">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-475"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-475">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-476"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-476">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-477">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-477">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-478"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-478"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-479">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-479">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-480">此方法是在.NET Framework 1.1 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-480">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="e526b-481">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-481">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-482">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-482">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e526b-483">下面的示例转换`books.xml`文件中使用`output.xsl`样式表并将结果输出到`books.html`文件。</span><span class="sxs-lookup"><span data-stu-id="e526b-483">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="e526b-484">该示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="e526b-484">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-485">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-485">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-486">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-486">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-487">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-487">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-488">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-488">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-489">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-489">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-490">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-490">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e526b-491">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-491">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-492"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-492">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-493"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-493">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-494">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-494">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-495"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-495"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-496">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-496">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-497">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-497">This method is now obsolete.</span></span> <span data-ttu-id="e526b-498">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-498">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-499">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-499">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e526b-500">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-500">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-501">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e526b-501">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="e526b-502">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-502">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e526b-503">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-503">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="e526b-504">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-504">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-505">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-505">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-506">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-506">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-507">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-507">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e526b-508">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-508">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-509">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-509">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-510">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-510">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-511">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-511">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-512">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-512">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-513">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-513">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e526b-514">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-514">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-515"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-515">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-516"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-516">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-517">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-517">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-518"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-518"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-519">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-519">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-520">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-520">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-521">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-521">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-522">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-522">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-523">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-523">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-524">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-524">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-525">因为<xref:System.Xml.XmlReader>提供了只读、 只输出`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="e526b-525">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="e526b-526">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-526">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e526b-527">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-527">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-528">此方法已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-528">This method is obsolete.</span></span> <span data-ttu-id="e526b-529">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT document （） 函数已解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-529">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="e526b-530">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-530">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-531">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-531">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-532">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-532">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-533">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-533">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-534">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-534">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="e526b-535">要转换的源文档的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-535">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="e526b-536">输出文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-536">The URL of the output file.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-537">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-537">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-538">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-538">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-539">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-539">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-540">转换输入文件中的 XML 数据并将结果输出到输出文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-540">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-541"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-541">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-542"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-542">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-543">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-543">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-544"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-544"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-545">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-545">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e526b-546">下面的示例执行 XSLT 转换，并将输出到文件。</span><span class="sxs-lookup"><span data-stu-id="e526b-546">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="e526b-547"><xref:System.Xml.XmlUrlResolver>凭据使用具有默认解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="e526b-547">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="e526b-548">有关详细信息，请参阅<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="e526b-548">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-549">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-549">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-550">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-550">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-551">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-551">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-552">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-552">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-553">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-553">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-554"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-554">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-555"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-555">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-556">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-556">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-557"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-557"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-558">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-558">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-559">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-559">This method is now obsolete.</span></span> <span data-ttu-id="e526b-560">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-560">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-561">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-561">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e526b-562">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-562">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e526b-563">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-563">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-564">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-564">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-565">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-565">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-566">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-566">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e526b-567">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-567">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-568">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-568">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-569">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-569">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-570">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-570">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-571">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-571">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-572">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-572">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-573">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-573">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-574">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-574">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-575">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-575">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-576">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-576">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-577">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-577">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-578"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-578">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-579"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-579">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-580">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-580">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-581"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-581"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-582">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-582">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-583">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-583">This method is now obsolete.</span></span> <span data-ttu-id="e526b-584">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-584">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-585">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-585">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e526b-586">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-586">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e526b-587">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e526b-587">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e526b-588">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="e526b-588">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="e526b-589">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-589">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-590">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-590">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-591">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-591">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-592">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-592">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e526b-593">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-593">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-594">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-594">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-595">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-595">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-596">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-596">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-597">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-597">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-598">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-598">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-599">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-599">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-600">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-600">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-601">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-601">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-602">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-602">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-603">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-603">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-604">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-604">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-605">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-605">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e526b-606">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-606">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-607"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-607">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-608"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-608">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-609">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-609">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-610"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-610"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-611">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-611">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-612">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-612">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-613">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e526b-613">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="e526b-614">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-614">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e526b-615">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-615">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="e526b-616">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-616">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-617">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-617">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-618">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-618">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-619">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-619">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e526b-620">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-620">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e526b-621">下面的示例转换 XML 文档并将结果输出到`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="e526b-621">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="e526b-622"><xref:System.Xml.XmlUrlResolver>所需的凭据与用于处理任何 XSLT`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="e526b-622">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-623">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-623">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-624">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-624">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-625">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-625">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-626">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-626">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-627">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-627">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-628">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-628">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-629">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-629">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-630"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-630">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-631"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-631">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-632">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-632">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-633"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-633"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-634">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-634">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-635">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-635">This method is now obsolete.</span></span> <span data-ttu-id="e526b-636">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-636">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-637">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-637">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e526b-638">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-638">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-639">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e526b-639">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e526b-640">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-640">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e526b-641">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-641">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-642">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-642">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-643">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-643">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-644">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-644">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e526b-645">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-645">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-646">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-646">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-647">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-647">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-648">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-648">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-649">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-649">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-650">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-650">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-651">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-651">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-652">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-652">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-653">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-653">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-654">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-654">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-655"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-655">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-656"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-656">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-657">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-657">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-658"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-658"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-659">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-659">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-660">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-660">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-661">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-661">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-662">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-662">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-663">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-663">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-664">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-664">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-665">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="e526b-665">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-666">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-666">This method is now obsolete.</span></span> <span data-ttu-id="e526b-667">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-667">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-668">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-668">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-669">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-669">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-670">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-670">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-671">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-671">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-672">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-672">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-673">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-673">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-674">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-674">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-675">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-675">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-676">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-676">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-677"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-677">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-678"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-678">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-679">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-679">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-680"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-680"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-681">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-681">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-682">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-682">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-683">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-683">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-684">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-684">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-685">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-685">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-686">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-686">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-687">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e526b-687">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e526b-688">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="e526b-688">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-689">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-689">This method is now obsolete.</span></span> <span data-ttu-id="e526b-690">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-690">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-691">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-691">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-692">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-692">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-693">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-693">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-694">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-694">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-695">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-695">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-696">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-696">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-697">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-697">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-698">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-698">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-699">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-699">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-700">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-700">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-701">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-701">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e526b-702">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-702">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-703"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-703">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-704"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-704">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-705">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-705">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-706"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-706"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-707">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-707">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-708">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-708">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-709">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-709">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-710">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-710">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-711">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-711">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-712">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-712">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-713">因为<xref:System.Xml.XmlReader>提供了只读、 只输出`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="e526b-713">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="e526b-714">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-714">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e526b-715">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-715">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-716">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-716">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-717">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-717">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-718">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-718">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-719">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-719">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-720">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-720">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-721">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-721">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-722">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-722">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-723">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-723">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-724"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-724">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-725"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-725">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-726">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-726">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-727"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-727"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-728">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-728">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-729">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-729">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-730">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-730">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-731">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-731">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-732">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-732">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-733">这意味着，节点，即当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-733">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-734">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e526b-734">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e526b-735">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-735">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-736">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-736">This method is now obsolete.</span></span> <span data-ttu-id="e526b-737">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-737">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e526b-738">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-738">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-739">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-739">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-740">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-740">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-741">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-741">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-742">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-742">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-743">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-743">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-744">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-744">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-745">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-745">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-746">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-746">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-747">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-747">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-748">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-748">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-749">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-749">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-750">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-750">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-751"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-751">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-752"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-752">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-753">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-753">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-754"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-754"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-755">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-755">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-756">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-756">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e526b-757">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-757">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-758">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-758">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-759">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-759">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-760">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-760">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e526b-761">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-761">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e526b-762">下面的示例执行 ASP.NET 页中的转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-762">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-763">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-763">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-764">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-764">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-765">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-765">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-766">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-766">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-767">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-767">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-768">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-768">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-769">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-769">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-770">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-770">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-771">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-771">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-772">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-772">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-773">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-773">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-774">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-774">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-775">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-775">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-776"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-776">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-777"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-777">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-778">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-778">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-779"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-779"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-780">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-780">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-781">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-781">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e526b-782">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e526b-782">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e526b-783">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="e526b-783">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="e526b-784">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-784">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-785">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-785">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-786">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-786">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-787">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-787">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e526b-788">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-788">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e526b-789">下面的示例转换的 XML 文件，并输出 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="e526b-789">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="e526b-790"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>类用于读取和写入字符串。</span><span class="sxs-lookup"><span data-stu-id="e526b-790">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="e526b-791">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="e526b-791">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-792">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-792">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-793">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-793">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-794">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-794">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-795">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-795">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-796">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-796">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-797">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-797">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e526b-798">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-798">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-799">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-799">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-800">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-800">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-801">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-801">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-802">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-802">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-803">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-803">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-804">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-804">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-805"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-805">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-806"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-806">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-807">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-807">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-808"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-808"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-809">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-809">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-810">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-810">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-811">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e526b-811">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e526b-812">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-812">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e526b-813">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-813">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e526b-814">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-814">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-815">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-815">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e526b-816">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="e526b-816">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e526b-817">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="e526b-817">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e526b-818">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-818">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e526b-819">它显示在表中的 ISBN、 标题和每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="e526b-819">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e526b-820">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="e526b-820">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-821">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-821">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-822">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-822">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-823">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-823">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-824">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-824">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="e526b-825">XslTransform 的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-825">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-826">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-826">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-827">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-827">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-828">要输出到的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-828">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-829">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-829">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-830">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-830">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-831">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-831">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-832">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-832">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-833"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-833">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-834"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-834">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-835">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-835">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-836"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-836"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-837">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-837">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-838">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-838">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-839">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-839">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-840">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-840">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-841">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-841">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-842">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-842">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-843">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="e526b-843">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e526b-844">下面的示例加载到客户表<xref:System.Xml.XmlDataDocument>并执行 XSLT 转换来将客户数据提取到一个 HTML 表。</span><span class="sxs-lookup"><span data-stu-id="e526b-844">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="e526b-845">该示例使用 Microsoft SQL Server 2000 Northwind 数据库。</span><span class="sxs-lookup"><span data-stu-id="e526b-845">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="e526b-846">示例使用 `customers.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="e526b-846">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-847">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-847">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-848">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-848">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-849">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-849">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-850">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-850">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-851">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-851">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-852">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-852">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-853">要输出到的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-853">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-854">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-854">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-855">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-855">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-856">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-856">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-857">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-857">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-858"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-858">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-859"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-859">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-860">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-860">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-861"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-861"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-862">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-862">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-863">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-863">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-864">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-864">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-865">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-865">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-866">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-866">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-867">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-867">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-868">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e526b-868">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e526b-869">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="e526b-869">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-870">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-870">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-871">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-871">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-872">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-872">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-873">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-873">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e526b-874">
            <see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-874">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e526b-875">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-875">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e526b-876">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-876">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e526b-877">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-877">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e526b-878">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-878">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e526b-879">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-879">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e526b-880">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-880">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-881"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-881">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-882"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-882">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-883">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-883">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-884"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="e526b-884"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e526b-885">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e526b-885">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e526b-886">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-886">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e526b-887">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-887">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e526b-888">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="e526b-888">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e526b-889">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="e526b-889">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e526b-890">这意味着，节点，即当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="e526b-890">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e526b-891">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e526b-891">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e526b-892">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="e526b-892">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e526b-893">下面的示例加载并执行 XSLT 转换之前编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="e526b-893">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e526b-894">处理 XSLT 转换时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-894">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e526b-895">注意：这是对早期版本行为的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-895">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e526b-896">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-896">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="e526b-897">XslTransform 类中任意行为的实现</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-897">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e526b-898">设置调用 <see cref="T:System.Xml.XmlResolver" /> 方法时用于解析外部资源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-898">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e526b-899">要在转换期间使用的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-899">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span>
          </span>
          <span data-ttu-id="e526b-900">如果设置为<see langword="null" />，XSLT <c>document （)</c>函数未得到解决。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e526b-900">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e526b-901"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-901">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e526b-902"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="e526b-902">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e526b-903">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e526b-903">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e526b-904">在.NET framework 版本 1.1 中，应用程序的信任级别确定的默认行为：</span><span class="sxs-lookup"><span data-stu-id="e526b-904">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="e526b-905">`Fully trusted code:` 默认值<xref:System.Xml.XmlUrlResolver>无用户凭据用于解析`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="e526b-905">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="e526b-906">如果访问外部资源需要身份验证，使用此属性指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="e526b-906">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e526b-907">`Semi-trusted code:` 该属性设置为`null`，这意味着`document()`函数未得到解决。</span><span class="sxs-lookup"><span data-stu-id="e526b-907">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="e526b-908">因为完全信任才能指定<xref:System.Xml.XmlResolver>，也不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="e526b-908">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="e526b-909">使用此冲突解决程序时 XSLT`document()`调用函数。</span><span class="sxs-lookup"><span data-stu-id="e526b-909">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="e526b-910">它不用于解析`xsl:import`和`xsl:include`引用样式表中的元素。</span><span class="sxs-lookup"><span data-stu-id="e526b-910">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="e526b-911">若要指定<xref:System.Xml.XmlResolver>用来解析`xsl:import`并`xsl:include`引用样式表中的元素使用<xref:System.Xml.Xsl.XslTransform.Load%2A>重载，它将<xref:System.Xml.XmlResolver>作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="e526b-911">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e526b-912">此属性是在.NET Framework 1.1 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="e526b-912">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="e526b-913">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="e526b-913">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="e526b-914">在这种情况下，<xref:System.Xml.XmlResolver>后不缓存<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="e526b-914">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>