<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebc2a722279de71968689deb766ae5159cae4090" /><Meta Name="ms.sourcegitcommit" Value="9d1bf7e4c6d697123f26c810c1a049a755634634" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/10/2018" /><Meta Name="ms.locfileid" Value="52455168" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="682da-101">使用可扩展样式表转换语言 (XSLT) 转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="682da-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-102"><xref:System.Xml.Xsl.XslTransform>类是 Microsoft.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-103"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-104">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-105"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-106">XSLT 样式表必须使用命名空间`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-107">其他参数还可以添加到样式表使用<xref:System.Xml.Xsl.XsltArgumentList>类。</span><span class="sxs-lookup"><span data-stu-id="682da-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="682da-108">此类包含的样式表和扩展对象可以从样式表调用的输入的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="682da-109">若要将 XML 数据转换：</span><span class="sxs-lookup"><span data-stu-id="682da-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="682da-110">创建<xref:System.Xml.Xsl.XslTransform>对象。</span><span class="sxs-lookup"><span data-stu-id="682da-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="682da-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法以加载该转换的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="682da-112">此方法有若干重载，可以加载样式表使用<xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或具有文件的位置的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="682da-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法来转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="682da-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="682da-114">此方法有若干重载，可以处理不同类型的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="682da-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="682da-115">此外可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在转换期间使用作为输入的其他参数。</span><span class="sxs-lookup"><span data-stu-id="682da-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="682da-116">**安全注意事项**</span><span class="sxs-lookup"><span data-stu-id="682da-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="682da-117">在创建使用 <xref:System.Xml.Xsl.XslTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="682da-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="682da-118">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="682da-119">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="682da-120">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="682da-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="682da-121">恶意用户可以利用这一点您提供数据或样式表，在执行时将导致您的系统进行处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="682da-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="682da-122">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="682da-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="682da-123">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="682da-124">可以通过不接受来缓解这些安全问题<xref:System.Xml.Xsl.XslTransform>对象、 XSLT 样式表或来自不可信源的 XML 源数据。</span><span class="sxs-lookup"><span data-stu-id="682da-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="682da-125">**脚本支持**</span><span class="sxs-lookup"><span data-stu-id="682da-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="682da-126">此类支持嵌入的脚本使用`msxsl:script`元素。</span><span class="sxs-lookup"><span data-stu-id="682da-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="682da-127">在.NET Framework 1.1 版中，样式表的证据确定哪些权限授予用于嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="682da-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="682da-128">如果样式表加载从统一资源标识符 (URI)，使用 URI 创建证据。</span><span class="sxs-lookup"><span data-stu-id="682da-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="682da-129">此证据包括以及站点和区域的 URI。</span><span class="sxs-lookup"><span data-stu-id="682da-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="682da-130">如果使用另一个源加载样式表，则可以通过传递提供证据<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>对象传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="682da-131">否则，脚本程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="682da-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="682da-132">不完全受信任调用方：`UnmanagedCode`编译嵌入式的脚本所需的权限。</span><span class="sxs-lookup"><span data-stu-id="682da-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="682da-133">`ControlEvidence` 提供所需的权限<xref:System.Security.Policy.Evidence>到<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="682da-134">一个<xref:System.Security.SecurityException>如果调用方没有所需的权限，将引发。</span><span class="sxs-lookup"><span data-stu-id="682da-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="682da-135">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>和<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="682da-136">`msxsl:script`元素具有以下要求：</span><span class="sxs-lookup"><span data-stu-id="682da-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="682da-137">`msxsl:script`元素属于`urn:schemas-microsoft-com:xslt`命名空间。</span><span class="sxs-lookup"><span data-stu-id="682da-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="682da-138">样式表必须包含命名空间声明`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="682da-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="682da-139">`msxsl:script`元素可以包含`language`的特性，指定要使用的脚本语言。</span><span class="sxs-lookup"><span data-stu-id="682da-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="682da-140">值`language`属性必须是以下值之一：C#C#、 VB、 VisualBasic、 JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="682da-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="682da-141">语言名称不区分大小写，因为 JavaScript 和 javascript 都是有效。</span><span class="sxs-lookup"><span data-stu-id="682da-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="682da-142">如果`language`属性未指定，则默认为 JScript。</span><span class="sxs-lookup"><span data-stu-id="682da-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="682da-143">`msxsl:script`元素必须包括`implements-prefix`属性，其中包含表示与脚本块关联的命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="682da-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="682da-144">此命名空间必须定义的样式表中。</span><span class="sxs-lookup"><span data-stu-id="682da-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="682da-145">样式表可以包含多个脚本块的命名空间进行分组。</span><span class="sxs-lookup"><span data-stu-id="682da-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="682da-146">不能具有相同的命名空间内的多个语言的脚本块。</span><span class="sxs-lookup"><span data-stu-id="682da-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="682da-147">脚本块可以调用在另一个脚本块中定义的函数提供的脚本块驻留在相同的命名空间。</span><span class="sxs-lookup"><span data-stu-id="682da-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="682da-148">根据规则和脚本语言的语法的脚本块的内容进行解析 (通过提供`language`属性)。</span><span class="sxs-lookup"><span data-stu-id="682da-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="682da-149">例如，如果你有 C# 脚本块，注释就会通过`//`字符。</span><span class="sxs-lookup"><span data-stu-id="682da-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="682da-150">注释必须是有效的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="682da-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="682da-151">`Note` 建议将脚本块包装在 CDATA 部分。</span><span class="sxs-lookup"><span data-stu-id="682da-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="682da-152"><see cref="T:System.Xml.Xsl.XslTransform" /> 对象是用于转换操作的唯一线程安全。</span><span class="sxs-lookup"><span data-stu-id="682da-152"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="682da-153">其他操作不保证是线程安全。</span><span class="sxs-lookup"><span data-stu-id="682da-153">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="682da-154">您必须确保没有其他方法的调用对象上在加载操作期间。</span><span class="sxs-lookup"><span data-stu-id="682da-154">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="682da-155">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="682da-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="682da-156">加载 XSLT 样式表，包括在 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 元素中引用的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-157"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-158"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-159">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="682da-160">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-160">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="682da-161">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-161">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-162"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-163"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-164">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-165"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-166">XSLT 样式表必须包含命名空间声明`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="682da-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="682da-167">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="682da-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="682da-168">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="682da-169">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="682da-170">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-171">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="682da-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-172">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-172">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-173">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-173">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682da-174">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="682da-174">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="682da-175">它显示在表中的 ISBN、 标题和每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="682da-175">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="682da-176">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="682da-176">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-177">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-177">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-178">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-178">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-179">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="682da-179">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="682da-180">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-180">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-181"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-181">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-182"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-182">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-183">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-183">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-184"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-184"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-185">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-185">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-186">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="682da-186">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="682da-187">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-187">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="682da-188">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-188">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="682da-189">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="682da-189">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="682da-190">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="682da-190">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="682da-191">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="682da-191">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="682da-192">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="682da-192">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="682da-193">如果样式表将包含实体，则应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="682da-193">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="682da-194">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="682da-194">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="682da-195">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-195">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-196">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="682da-196">The assembly has full trust.</span></span> <span data-ttu-id="682da-197">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-197">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-198">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-198">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-199">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-199">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682da-200">下面的示例转换按标题排序所有书籍的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="682da-200">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="682da-201">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="682da-201">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-202">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="682da-202">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-203">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-203">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-204">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-204">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-205">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-205">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="682da-206">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-206">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-207"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-207">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-208"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-208">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-209">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-209">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-210"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-210"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-211">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-211">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-212">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="682da-212">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="682da-213">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-213">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="682da-214">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-214">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="682da-215">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-215">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-216">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="682da-216">The assembly has full trust.</span></span> <span data-ttu-id="682da-217">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-217">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-218">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-218">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-219">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-219">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-220">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-220">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-221">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-221">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-222">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="682da-222">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="682da-223">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-223">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-224"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-224">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-225"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-225">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-226">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-226">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-227"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-227"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-228">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-228">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-229">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="682da-229">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="682da-230">使用解析外部资源<xref:System.Xml.XmlUrlResolver>使用没有用户凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-230">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="682da-231">如果样式表都位于要求身份验证的网络资源，使用的重载<xref:System.Xml.XmlResolver>作为其参数之一，并指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-231">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="682da-232">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="682da-232">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="682da-233">若要使用的样式表作为所加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="682da-233">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="682da-234">之后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于样式表的开头 (在`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="682da-234">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="682da-235">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-235">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-236">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="682da-236">The assembly has full trust.</span></span> <span data-ttu-id="682da-237">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-237">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-238">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-238">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-239">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-239">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-240">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="682da-240">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-241">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-241">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="682da-242">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-242">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-243"><see cref="T:System.Xml.XmlResolver" /> 用于加载该样式表以及 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-243">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="682da-244">如果这是 <see langword="null" />，将使用不具有用户凭据的默认 <see cref="T:System.Xml.XmlUrlResolver" /> 来打开样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-244">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="682da-245">不使用默认的 <see cref="T:System.Xml.XmlUrlResolver" /> 来解析样式表中的任何外部资源，因此将不解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span><span class="sxs-lookup"><span data-stu-id="682da-245">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="682da-246">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-246">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-247">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-247">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-248"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-248">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-249"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-249">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-250">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-250">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-251"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-251"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-252">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-252">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-253">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-253">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-254">样式表的 URI 用于创建应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="682da-254">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-255">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-255">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-256">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-256">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682da-257">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="682da-257">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="682da-258">该示例加载 XSLT 样式表，其中包含`xsl:include`元素引用另一个样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-258">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="682da-259"><xref:System.Xml.XmlUrlResolver>传递给<xref:System.Xml.Xsl.XslTransform.Load%2A>设置的凭据访问包含的样式表的网络资源所需的方法。</span><span class="sxs-lookup"><span data-stu-id="682da-259">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="682da-260">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="682da-260">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-261">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-261">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-262">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-262">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-263">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="682da-263">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-264"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-264">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="682da-265">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="682da-265">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="682da-266">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-266">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-267">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-267">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-268"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-268">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-269"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-269">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-270">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-270">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-271"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-271"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-272">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-272">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-273">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="682da-273">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="682da-274">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="682da-274">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="682da-275">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="682da-275">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="682da-276">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="682da-276">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="682da-277">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="682da-277">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="682da-278">如果样式表将包含实体，则应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="682da-278">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="682da-279">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="682da-279">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="682da-280">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-280">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-281">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="682da-281">The assembly has full trust.</span></span> <span data-ttu-id="682da-282">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-282">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-283">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-284">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-285">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="682da-285">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-286">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-286">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-287">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-287">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-288">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-288">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-289"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-289">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="682da-290">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="682da-290">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="682da-291">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="682da-291">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-292">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-292">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-293"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-293">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-294"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-294">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-295">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-295">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-296"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-296"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-297">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-297">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-298">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-298">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-299">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="682da-299">The assembly has full trust.</span></span> <span data-ttu-id="682da-300">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-300">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-301">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-301">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-302">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-302">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-303">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-303">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-304">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-304">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-305">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="682da-305">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-306"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-306">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="682da-307">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="682da-307">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="682da-308">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="682da-308">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-309">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-309">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-310"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-310">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-311"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-311">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-312">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-312">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-313"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-313"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-314">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-314">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-315">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="682da-315">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="682da-316">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="682da-316">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="682da-317">之后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于样式表的开头 (在`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="682da-317">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="682da-318">如果样式表包含嵌入的脚本，该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="682da-318">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="682da-319">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="682da-319">The assembly has full trust.</span></span> <span data-ttu-id="682da-320">建议的做法是提供证据使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="682da-320">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="682da-321">如果调用方不具有`UnmanagedCode`权限，嵌入的脚本将不进行编译和<xref:System.Security.SecurityException>引发。</span><span class="sxs-lookup"><span data-stu-id="682da-321">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="682da-322">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="682da-322">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-323">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="682da-323">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-324">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-324">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-325">包含要加载的样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="682da-325">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-326"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-326">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="682da-327">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="682da-327">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="682da-328">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="682da-328">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="682da-329">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="682da-329">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="682da-330">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-330">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="682da-331">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-331">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="682da-332">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="682da-332">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="682da-333">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-333">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="682da-334">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="682da-334">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-335"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-335">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-336"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-336">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-337">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-337">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-338"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-338"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-339">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-339">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-340">此方法加载 XSLT 样式表，其中包括引用中的所有样式表`xsl:include`和`xsl:import`元素。</span><span class="sxs-lookup"><span data-stu-id="682da-340">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="682da-341">从当前节点的样式表加载<xref:System.Xml.XmlReader>通过其所有子项。</span><span class="sxs-lookup"><span data-stu-id="682da-341">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="682da-342">这可以用作样式表文档的一部分。</span><span class="sxs-lookup"><span data-stu-id="682da-342">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="682da-343">后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XmlReader>样式表的结尾后定位到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="682da-343">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="682da-344">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="682da-344">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="682da-345">如果样式表将包含实体，则应指定<xref:System.Xml.XmlReader>可以解析实体 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返回`true`)。</span><span class="sxs-lookup"><span data-stu-id="682da-345">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="682da-346">在这种情况下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="682da-346">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="682da-347">有不同的方式提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-347">There are different ways to provide evidence.</span></span> <span data-ttu-id="682da-348">下表介绍常见用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="682da-348">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="682da-349">方案</span><span class="sxs-lookup"><span data-stu-id="682da-349">Scenario</span></span>|<span data-ttu-id="682da-350">若要提供的证据的类型</span><span class="sxs-lookup"><span data-stu-id="682da-350">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="682da-351">XSLT 样式表是自包含，或来自您信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="682da-351">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="682da-352">使用从您的程序集证据。</span><span class="sxs-lookup"><span data-stu-id="682da-352">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="682da-353">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-353">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-354">已知源的来源，并且没有可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-354">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="682da-355">创建使用的 URL 证据。</span><span class="sxs-lookup"><span data-stu-id="682da-355">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="682da-356">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-356">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-357">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="682da-357">The origin of the source is not known.</span></span>|<span data-ttu-id="682da-358">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="682da-358">Set evidence to `null`.</span></span> <span data-ttu-id="682da-359">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-359">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="682da-360">此外，还可以设置`resolver`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="682da-360">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="682da-361">这可确保`xsl:import`和`xsl:include`元素不会处理。</span><span class="sxs-lookup"><span data-stu-id="682da-361">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="682da-362">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-362">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-363">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="682da-363">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="682da-364">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="682da-364">Request evidence from the caller.</span></span> <span data-ttu-id="682da-365">API 调用方必须提供一种方法通常提供证据，<xref:System.Security.Policy.Evidence>类。</span><span class="sxs-lookup"><span data-stu-id="682da-365">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="682da-366">下面的示例执行的 XSLT 转换，其中`xsltReader`是<xref:System.Xml.XmlReader>包含样式表和`secureURL`是可用于创建一个受信任的 URL <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="682da-366">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="682da-367"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用于创建<xref:System.Security.Policy.Evidence>其应用于样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-367">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-368">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="682da-368">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-369">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="682da-369">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="682da-370">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-370">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682da-371">为提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-371">for providing evidence.</span></span> <span data-ttu-id="682da-372">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="682da-372">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-373">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-373">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-374">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-374">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-375"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-375">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="682da-376">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="682da-376">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="682da-377">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="682da-377">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="682da-378">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="682da-378">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="682da-379">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-379">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="682da-380">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-380">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="682da-381">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="682da-381">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="682da-382">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-382">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="682da-383">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="682da-383">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-384"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-384">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-385"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-385">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-386">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-386">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-387"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-387"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-388">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-388">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="682da-389">有不同的方式提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-389">There are different ways to provide evidence.</span></span> <span data-ttu-id="682da-390">下表介绍常见用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="682da-390">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="682da-391">方案</span><span class="sxs-lookup"><span data-stu-id="682da-391">Scenario</span></span>|<span data-ttu-id="682da-392">若要提供的证据的类型</span><span class="sxs-lookup"><span data-stu-id="682da-392">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="682da-393">XSLT 样式表是自包含，或来自您信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="682da-393">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="682da-394">使用从您的程序集证据。</span><span class="sxs-lookup"><span data-stu-id="682da-394">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="682da-395">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-395">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-396">已知源的来源，并且没有可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-396">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="682da-397">创建使用的 URL 证据。</span><span class="sxs-lookup"><span data-stu-id="682da-397">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="682da-398">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-398">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-399">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="682da-399">The origin of the source is not known.</span></span>|<span data-ttu-id="682da-400">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="682da-400">Set evidence to `null`.</span></span> <span data-ttu-id="682da-401">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-401">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="682da-402">此外，还可以设置`resolver`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="682da-402">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="682da-403">这可确保`xsl:import`和`xsl:include`元素不会处理。</span><span class="sxs-lookup"><span data-stu-id="682da-403">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="682da-404">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-404">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-405">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="682da-405">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="682da-406">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="682da-406">Request evidence from the caller.</span></span> <span data-ttu-id="682da-407">API 调用方必须提供一种方法通常提供证据，<xref:System.Security.Policy.Evidence>类。</span><span class="sxs-lookup"><span data-stu-id="682da-407">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-408">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-408">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-409">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="682da-409">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="682da-410">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-410">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682da-411">为提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-411">for providing evidence.</span></span> <span data-ttu-id="682da-412">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="682da-412">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="682da-413">包含要加载的样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="682da-413">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-414"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-414">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="682da-415">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="682da-415">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="682da-416">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="682da-416">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="682da-417">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="682da-417">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="682da-418">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-418">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="682da-419">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-419">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="682da-420">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="682da-420">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="682da-421">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-421">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="682da-422">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="682da-422">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-423"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-423">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-424"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-424">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-425">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-425">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-426"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-426"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-427">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-427">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-428">从当前的位置加载样式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="682da-428">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="682da-429">若要使用与样式表加载文档的一部分，导航到样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="682da-429">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="682da-430">之后<xref:System.Xml.Xsl.XslTransform.Load%2A>方法返回时，<xref:System.Xml.XPath.XPathNavigator>位于样式表的开头 (在`xsl:style sheet`节点)。</span><span class="sxs-lookup"><span data-stu-id="682da-430">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="682da-431">有不同的方式提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-431">There are different ways to provide evidence.</span></span> <span data-ttu-id="682da-432">下表介绍常见用户方案提供证据的类型。</span><span class="sxs-lookup"><span data-stu-id="682da-432">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="682da-433">方案</span><span class="sxs-lookup"><span data-stu-id="682da-433">Scenario</span></span>|<span data-ttu-id="682da-434">若要提供的证据的类型</span><span class="sxs-lookup"><span data-stu-id="682da-434">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="682da-435">XSLT 样式表是自包含，或来自您信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="682da-435">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="682da-436">使用从您的程序集证据。</span><span class="sxs-lookup"><span data-stu-id="682da-436">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="682da-437">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-437">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-438">已知源的来源，并且没有可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-438">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="682da-439">创建使用的 URL 证据。</span><span class="sxs-lookup"><span data-stu-id="682da-439">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="682da-440">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-440">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-441">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="682da-441">The origin of the source is not known.</span></span>|<span data-ttu-id="682da-442">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="682da-442">Set evidence to `null`.</span></span> <span data-ttu-id="682da-443">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="682da-443">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="682da-444">此外，还可以设置`resolver`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="682da-444">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="682da-445">这可确保`xsl:import`和`xsl:include`元素不会处理。</span><span class="sxs-lookup"><span data-stu-id="682da-445">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="682da-446">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="682da-446">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="682da-447">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="682da-447">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="682da-448">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="682da-448">Request evidence from the caller.</span></span> <span data-ttu-id="682da-449">API 调用方必须提供一种方法通常提供证据，`Evidence`类。</span><span class="sxs-lookup"><span data-stu-id="682da-449">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="682da-450">下面的示例执行 XSLT 转换使用来自外部源的样式表。</span><span class="sxs-lookup"><span data-stu-id="682da-450">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="682da-451">样式表来自受信任的源，因为`resolver`并`evidence`参数设置为`null`。</span><span class="sxs-lookup"><span data-stu-id="682da-451">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="682da-452">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="682da-452">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="682da-453">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="682da-453">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="682da-454">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="682da-454">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="682da-455">为提供证据。</span><span class="sxs-lookup"><span data-stu-id="682da-455">for providing evidence.</span></span> <span data-ttu-id="682da-456">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="682da-456">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="682da-457">使用加载的 XSLT 样式表转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="682da-457">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-458"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-458">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-459"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-459">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-460">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-460">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="682da-461">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-461">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="682da-462">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-462">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="682da-463">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="682da-463">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-464"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-464">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-465"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-465">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-466">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-466">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-467"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-467"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-468">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-468">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-469">此方法是在.NET Framework 1.1 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-469">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="682da-470">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-470">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-471">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-471">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682da-472">下面的示例转换`books.xml`文件中使用`output.xsl`样式表并将结果输出到`books.html`文件。</span><span class="sxs-lookup"><span data-stu-id="682da-472">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="682da-473">该示例使用以下两个输入的文件：</span><span class="sxs-lookup"><span data-stu-id="682da-473">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-474">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-474">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-475">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-475">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-476">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-476">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-477">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-477">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-478"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-478">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="682da-479">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-479">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="682da-480">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-480">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-481"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-481">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-482"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-482">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-483">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-483">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-484"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-484"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-485">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-485">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-486">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-486">This method is now obsolete.</span></span> <span data-ttu-id="682da-487">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-487">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-488">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-488">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="682da-489">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-489">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-490">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="682da-490">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="682da-491">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-491">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="682da-492">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="682da-492">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="682da-493">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-493">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-494">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-494">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-495">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-495">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-496">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-496">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="682da-497">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-497">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-498">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-498">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-499">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-499">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-500"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-500">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-501"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-501">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="682da-502">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-502">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="682da-503">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-503">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-504"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-504">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-505"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-505">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-506">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-506">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-507"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-507"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-508">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-508">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-509">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-509">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-510">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-510">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-511">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-511">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-512">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-512">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-513">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-513">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-514">因为<xref:System.Xml.XmlReader>提供了只读、 只输出`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="682da-514">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="682da-515">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-515">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="682da-516">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="682da-516">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-517">此方法已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-517">This method is obsolete.</span></span> <span data-ttu-id="682da-518">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT document （） 函数已解决。</span><span class="sxs-lookup"><span data-stu-id="682da-518">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="682da-519">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-519">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-520">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-520">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-521">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-521">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-522">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-522">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-523">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-523">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="682da-524">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-524">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="682da-525">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="682da-525">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-526">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-526">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-527">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-527">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-528">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="682da-528">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-529">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="682da-529">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-530"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-530">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-531"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-531">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-532">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-532">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-533"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-533"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-534">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-534">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682da-535">下面的示例执行 XSLT 转换，并将输出到文件。</span><span class="sxs-lookup"><span data-stu-id="682da-535">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="682da-536"><xref:System.Xml.XmlUrlResolver>凭据使用具有默认解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="682da-536">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="682da-537">有关详细信息，请参阅<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="682da-537">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-538">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-538">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-539">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-539">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-540"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-540">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-541">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="682da-541">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="682da-542">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="682da-542">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-543"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-543">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-544"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-544">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-545">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-545">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-546"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-546"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-547">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-547">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-548">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-548">This method is now obsolete.</span></span> <span data-ttu-id="682da-549">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-549">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-550">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-550">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="682da-551">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-551">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="682da-552">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-552">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-553">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-553">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-554">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-554">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-555">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-555">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="682da-556">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-556">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-557">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-557">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-558">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-558">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-559">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-559">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-560">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-560">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-561">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-561">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-562">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-562">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-563">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-563">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-564"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-564">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-565">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-565">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="682da-566">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-566">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-567"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-567">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-568"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-568">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-569">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-569">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-570"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-570"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-571">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-571">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-572">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-572">This method is now obsolete.</span></span> <span data-ttu-id="682da-573">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-573">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-574">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-574">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="682da-575">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-575">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="682da-576">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="682da-576">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="682da-577">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="682da-577">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="682da-578">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-578">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-579">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-579">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-580">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-580">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-581">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-581">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="682da-582">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-582">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-583">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-583">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-584">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-584">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-585">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-585">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-586">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-586">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-587">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-587">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-588">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-588">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-589">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-589">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-590"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-590">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-591">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-591">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-592">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-592">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-593">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-593">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-594">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="682da-595">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-595">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-596"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-597"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-598">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-599"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-600">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-601">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-601">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-602">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlReader>(`xsl:output`元素将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="682da-602">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="682da-603">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-603">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="682da-604">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="682da-604">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="682da-605">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-605">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-606">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-606">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-607">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片段，并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-607">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-608">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-608">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="682da-609">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-609">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="682da-610">下面的示例转换 XML 文档并将结果输出到`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="682da-610">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="682da-611"><xref:System.Xml.XmlUrlResolver>所需的凭据与用于处理任何 XSLT`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="682da-611">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-612">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-612">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-613">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-613">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-614">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-614">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-615">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-615">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-616"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-617">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-617">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="682da-618">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-619"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-620"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-621">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-622"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-623">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-624">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-624">This method is now obsolete.</span></span> <span data-ttu-id="682da-625">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-625">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-626">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-626">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="682da-627">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-627">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-628">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="682da-628">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="682da-629">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="682da-630">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-630">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-631">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-631">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-632">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-632">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-633">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-633">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="682da-634">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-634">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-635">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-635">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-636">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-636">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-637">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-637">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-638">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-638">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-639">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-639">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-640"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-640">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-641"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-641">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-642">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="682da-642">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="682da-643">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="682da-643">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-644"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-644">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-645"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-645">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-646">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-646">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-647"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-647"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-648">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-648">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-649">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-650">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-650">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-651">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-651">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-652">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-652">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-653">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-653">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-654">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="682da-654">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-655">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-655">This method is now obsolete.</span></span> <span data-ttu-id="682da-656">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-656">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-657">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-657">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-658">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-658">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-659">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-659">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-660">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-660">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-661">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-661">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-662"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-663"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-664">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-664">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="682da-665">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-666"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-667"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-668">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-668">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-669"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-670">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-671">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-672">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-673">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-674">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-674">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-675">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-676">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="682da-676">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="682da-677">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="682da-677">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-678">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-678">This method is now obsolete.</span></span> <span data-ttu-id="682da-679">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-679">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-680">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-680">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-681">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-681">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-682">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-682">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-683">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-683">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-684">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-684">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-685"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-685">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-686"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-686">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-687">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-687">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-688">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-688">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-689">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-689">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-690">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-690">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="682da-691">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="682da-691">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-692"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-692">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-693"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-693">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-694">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-694">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-695"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-695"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-696">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-696">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-697">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-697">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-698">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-698">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-699">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-699">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-700">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-700">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-701">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-701">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-702">因为<xref:System.Xml.XmlReader>提供了只读、 只输出`xsl:output`元素将被忽略。</span><span class="sxs-lookup"><span data-stu-id="682da-702">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="682da-703">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-703">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="682da-704">此方法可以进行异步转换的源文档。</span><span class="sxs-lookup"><span data-stu-id="682da-704">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-705">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-705">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-706">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-706">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-707">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-707">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-708">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-708">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-709"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-709">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-710"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-710">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-711">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-711">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="682da-712">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-713"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-713">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-714"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-714">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-715">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-715">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-716"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-716"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-717">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-717">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-718">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-718">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-719">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-719">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-720">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-720">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-721">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-721">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-722">这意味着，节点，即当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-722">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-723">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="682da-723">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="682da-724">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-724">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-725">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-725">This method is now obsolete.</span></span> <span data-ttu-id="682da-726">设置<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>属性确定如何 XSLT`document()`函数得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-726">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="682da-727">建议的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法采用<xref:System.Xml.XmlResolver>对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-727">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-728">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-728">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-729">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-729">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-730">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-730">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-731">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-731">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-732">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-732">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-733">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-733">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-734"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-734">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-735">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="682da-735">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-736">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-736">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-737">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-737">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-738">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="682da-738">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-739">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="682da-739">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-740"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-740">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-741"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-741">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-742">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-742">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-743"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-743"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-744">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-744">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-745">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-745">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="682da-746">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-746">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-747">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-747">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-748">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-748">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-749">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-749">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="682da-750">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-750">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="682da-751">下面的示例执行 ASP.NET 页中的转换。</span><span class="sxs-lookup"><span data-stu-id="682da-751">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-752">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-752">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-753">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-753">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-754">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-754">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-755">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-755">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-756">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-756">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-757">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-757">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-758">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-758">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-759"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-759">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-760">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-760">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-761">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-761">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-762">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-762">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-763">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-763">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-764">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-764">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-765"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-765">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-766"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-766">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-767">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-767">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-768"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-768"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-769">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-769">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-770">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-770">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="682da-771">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="682da-771">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="682da-772">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="682da-772">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="682da-773">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-773">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-774">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-774">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-775">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-775">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-776">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-776">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="682da-777">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-777">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="682da-778">下面的示例转换的 XML 文件，并输出 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="682da-778">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="682da-779"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>类用于读取和写入字符串。</span><span class="sxs-lookup"><span data-stu-id="682da-779">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="682da-780">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="682da-780">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-781">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-781">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-782">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-782">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-783">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-783">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-784">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-784">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-785">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-785">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-786">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="682da-786">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="682da-787">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="682da-787">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-788"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-788">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-789">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-789">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-790">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-790">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-791">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-791">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-792">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-792">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-793">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-793">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-794"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-794">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-795"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-795">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-796">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-796">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-797"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-797"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-798">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-798">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-799">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-799">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-800">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="682da-800">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="682da-801">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-801">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="682da-802">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="682da-802">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="682da-803">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-803">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-804">若要转换节点片段，必须创建<xref:System.Xml.XmlDocument>包含只是在节点片断并将其传递<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="682da-804">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="682da-805">以下示例对一个节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="682da-805">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="682da-806">该示例使用`library.xml`和`print_root.xsl`文件作为输入并输出到控制台如下。</span><span class="sxs-lookup"><span data-stu-id="682da-806">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="682da-807">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="682da-807">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="682da-808">它显示在表中的 ISBN、 标题和每本书的价格。</span><span class="sxs-lookup"><span data-stu-id="682da-808">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="682da-809">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="682da-809">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-810">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-810">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-811">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-811">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-812">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-812">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-813">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-813">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="682da-814">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="682da-814">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-815"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-815">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-816"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-817">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="682da-817">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-818">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-819">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-820">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-821">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="682da-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-822"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-823"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-824">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-825"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-826">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-827">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-828">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-828">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-829">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-829">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-830">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-830">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-831">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-831">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-832">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="682da-832">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682da-833">下面的示例加载到客户表<xref:System.Xml.XmlDataDocument>并执行 XSLT 转换来将客户数据提取到一个 HTML 表。</span><span class="sxs-lookup"><span data-stu-id="682da-833">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="682da-834">该示例使用 Microsoft SQL Server 2000 Northwind 数据库。</span><span class="sxs-lookup"><span data-stu-id="682da-834">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="682da-835">示例使用 `customers.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="682da-835">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-836">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-836">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-837">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-837">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-838">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-838">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-839">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-839">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-840"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-840">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-841"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-841">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-842">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-842">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-843">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-843">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-844">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-844">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-845">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-845">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-846">使用指定的 <paramref name="args" /> 转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-846">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-847"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-847">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-848"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-848">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-849">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-849">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-850"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-850"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-851">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-851">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-852">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-852">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-853">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-853">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-854">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-854">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-855">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-855">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-856">这意味着，节点，这是当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-856">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-857">上的编码属性`xsl:output`到输出时，不支持元素<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="682da-857">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="682da-858">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息在其上`xsl:output`支持属性。</span><span class="sxs-lookup"><span data-stu-id="682da-858">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-859">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-859">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-860">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-860">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-861">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-861">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-862">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-862">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="682da-863"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="682da-863">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="682da-864"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="682da-864">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="682da-865">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-865">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="682da-866">用于解析 XSLT <c>document()</c> 函数的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-866">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="682da-867">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="682da-867">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="682da-868">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="682da-868">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="682da-869">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="682da-869">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-870"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-870">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-871"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-871">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-872">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-872">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-873"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="682da-873"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="682da-874">XSLT 样式表必须包含命名空间声明`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="682da-874">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="682da-875">`args`与匹配`xsl:param`样式表中定义的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-875">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="682da-876">转换选择作为一个整体应用到文档。</span><span class="sxs-lookup"><span data-stu-id="682da-876">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="682da-877">换而言之，如果当前节点节点树，而不是文档根节点上设置的则这不会阻止转换过程访问已加载的文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="682da-877">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="682da-878">执行转换后，<xref:System.Xml.XPath.XPathNavigator>保留为其原始状态。</span><span class="sxs-lookup"><span data-stu-id="682da-878">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="682da-879">这意味着，节点，即当前转换过程之前，将保留当前节点之后<xref:System.Xml.Xsl.XslTransform.Transform%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="682da-879">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="682da-880">`xsl:output`到输出时，不支持元素<xref:System.Xml.XmlWriter>(`xsl:output`将被忽略)。</span><span class="sxs-lookup"><span data-stu-id="682da-880">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="682da-881">请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="682da-881">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="682da-882">下面的示例加载并执行 XSLT 转换之前编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="682da-882">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="682da-883">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="682da-883">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="682da-884">注意:这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="682da-884">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="682da-885">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="682da-885">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="682da-886">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="682da-886">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="682da-887">设置调用 <see cref="T:System.Xml.XmlResolver" /> 方法时用于解析外部资源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="682da-887">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="682da-888">要在转换期间使用的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="682da-888">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="682da-889">如果设置为<see langword="null" />，XSLT <c>document （)</c>函数未得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-889">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="682da-890"><xref:System.Xml.Xsl.XslTransform>类是.NET Framework 2.0 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-890">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="682da-891"><xref:System.Xml.Xsl.XslCompiledTransform>类是新 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="682da-891">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="682da-892">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)并[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="682da-892">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="682da-893">在.NET framework 版本 1.1 中，应用程序的信任级别确定的默认行为：</span><span class="sxs-lookup"><span data-stu-id="682da-893">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="682da-894">`Fully trusted code:` 默认值<xref:System.Xml.XmlUrlResolver>无用户凭据用于解析`document()`函数。</span><span class="sxs-lookup"><span data-stu-id="682da-894">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="682da-895">如果访问外部资源需要身份验证，使用此属性指定<xref:System.Xml.XmlResolver>与所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="682da-895">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="682da-896">`Semi-trusted code:` 该属性设置为`null`，这意味着`document()`函数未得到解决。</span><span class="sxs-lookup"><span data-stu-id="682da-896">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="682da-897">因为完全信任才能指定<xref:System.Xml.XmlResolver>，也不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="682da-897">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="682da-898">使用此冲突解决程序时 XSLT`document()`调用函数。</span><span class="sxs-lookup"><span data-stu-id="682da-898">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="682da-899">它不用于解析`xsl:import`和`xsl:include`引用样式表中的元素。</span><span class="sxs-lookup"><span data-stu-id="682da-899">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="682da-900">若要指定<xref:System.Xml.XmlResolver>用来解析`xsl:import`并`xsl:include`引用样式表中的元素使用<xref:System.Xml.Xsl.XslTransform.Load%2A>重载，它将<xref:System.Xml.XmlResolver>作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="682da-900">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="682da-901">此属性是在.NET Framework 1.1 版中已过时。</span><span class="sxs-lookup"><span data-stu-id="682da-901">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="682da-902">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建议的做法。</span><span class="sxs-lookup"><span data-stu-id="682da-902">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="682da-903">在这种情况下，<xref:System.Xml.XmlResolver>后不缓存<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="682da-903">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>