<Type Name="IXsltContextFunction" FullName="System.Xml.Xsl.IXsltContextFunction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="710038c66f6286f1c9a92b1f2c9612226b93ebdc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37482435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXsltContextFunction" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXsltContextFunction" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.IXsltContextFunction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXsltContextFunction" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXsltContextFunction" />
  <TypeSignature Language="F#" Value="type IXsltContextFunction = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>为在运行时执行期间在可扩展样式表转换语言 (XSLT) 样式表中定义的给定函数提供一个接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关使用的详细信息<xref:System.Xml.Xsl.IXsltContextFunction>，请参阅文章 Q324899"如何向:: 实现和使用自定义函数时您执行 XPath 查询中 Visual Basic.NET"中在 Microsoft 知识库文章http://support.microsoft.com。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgTypes">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathResultType[] ArgTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathResultType[] ArgTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgTypes As XPathResultType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Xml::XPath::XPathResultType&gt; ^ ArgTypes { cli::array &lt;System::Xml::XPath::XPathResultType&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgTypes : System.Xml.XPath.XPathResultType[]" Usage="System.Xml.Xsl.IXsltContextFunction.ArgTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathResultType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取为函数的参数列表提供的 XML 路径语言 (XPath) 类型。 该信息可用于发现函数的签名，该签名使您能够区分重载函数。</summary>
        <value>一个 <see cref="T:System.Xml.XPath.XPathResultType" /> 数组，它表示函数的参数列表的类型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Xml.Xsl.XsltContext xsltContext, object[] args, System.Xml.XPath.XPathNavigator docContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Xml.Xsl.XsltContext xsltContext, object[] args, class System.Xml.XPath.XPathNavigator docContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Xml::Xsl::XsltContext ^ xsltContext, cli::array &lt;System::Object ^&gt; ^ args, System::Xml::XPath::XPathNavigator ^ docContext);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : System.Xml.Xsl.XsltContext * obj[] * System.Xml.XPath.XPathNavigator -&gt; obj" Usage="iXsltContextFunction.Invoke (xsltContext, args, docContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xsltContext" Type="System.Xml.Xsl.XsltContext" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="docContext" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="xsltContext">函数调用的 XSLT 上下文。</param>
        <param name="args">函数调用的参数。 每个参数都是数组中的一个元素。</param>
        <param name="docContext">函数调用的上下文节点。</param>
        <summary>提供调用带有给定上下文中给定参数的函数的方法。</summary>
        <returns>一个 <see cref="T:System.Object" />，它表示函数的返回值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `docContext`参数是必需的这需要节点集函数可以将提供当前上下文节点。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Maxargs">
      <MemberSignature Language="C#" Value="public int Maxargs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Maxargs" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.Maxargs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maxargs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Maxargs { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Maxargs : int" Usage="System.Xml.Xsl.IXsltContextFunction.Maxargs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取函数的参数的最大数目。 这使用户能够区分重载函数。</summary>
        <value>函数的参数的最大数目。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minargs">
      <MemberSignature Language="C#" Value="public int Minargs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minargs" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.Minargs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minargs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minargs { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minargs : int" Usage="System.Xml.Xsl.IXsltContextFunction.Minargs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取函数的参数的最小数目。 这使用户能够区分重载函数。</summary>
        <value>函数的参数的最小数目。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathResultType ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathResultType ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.IXsltContextFunction.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As XPathResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathResultType ReturnType { System::Xml::XPath::XPathResultType get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : System.Xml.XPath.XPathResultType" Usage="System.Xml.Xsl.IXsltContextFunction.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathResultType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Xml.XPath.XPathResultType" />，它表示函数返回的 XPath 类型。</summary>
        <value>一个 <see cref="T:System.Xml.XPath.XPathResultType" />，它表示函数返回的 XPath 类型</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>