<Type Name="EventProviderTraceListener" FullName="System.Diagnostics.Eventing.EventProviderTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8e0e01f146bafc3357be1843abdd97ae1a957a1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventProviderTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProviderTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProviderTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProviderTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3a0c0-101">用来向 ETW 子系统中写入事件的 <see cref="T:System.Diagnostics.TraceSource" /> 的侦听器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a0c0-101">A listener for <see cref="T:System.Diagnostics.TraceSource" /> that writes events to the ETW subsytem.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a0c0-102">来自源事件的所有事件数据 （跟踪或调试） 都写入到 ETW 子系统作为字符串。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-102">All event data (trace or debug) from the source event is written to the ETW subsystem as a string.</span></span> <span data-ttu-id="3a0c0-103">使用逗号分隔的数据元素。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-103">The data elements are delimited using a comma.</span></span> <span data-ttu-id="3a0c0-104">若要指定不同的分隔符，使用<xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-104">To specify a different delimiter, use the <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> property.</span></span>  
  
 <span data-ttu-id="3a0c0-105">添加到侦听器<xref:System.Diagnostics.TraceSource?displayProperty=nameWithType>注册提供程序与 ETW 子系统。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-105">Adding the listener to <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registers the provider with the ETW subsystem.</span></span> <span data-ttu-id="3a0c0-106">你必须创建一个使用 Logman.exe 可执行程序 （或类似） 事件写入日志文件的 ETW 跟踪会话。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-106">You must create an ETW trace session using the Logman.exe executable program (or something similar) to write the events to a log file.</span></span>  
  
 <span data-ttu-id="3a0c0-107">不需要使用与侦听器的事件，因为事件数据的单个字符串的清单。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-107">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="3a0c0-108">当调用<xref:System.Diagnostics.TraceSource?displayProperty=nameWithType>方法来写入事件，你将传递<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>枚举值。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-108">When you call the <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> methods to write events, you pass a <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration value.</span></span> <span data-ttu-id="3a0c0-109">该枚举包含级别和关键字的值。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-109">The enumeration contains both level and keyword values.</span></span> <span data-ttu-id="3a0c0-110">当启用 ETW 会话的跟踪侦听器提供程序时，你指定的级别值可以是下列项之一与关联的值<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>枚举值：</span><span class="sxs-lookup"><span data-stu-id="3a0c0-110">When you enable a trace listener provider from an ETW session, the level value that you specify can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="3a0c0-111">关键 （值为 1）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-111">Critical (value is 1)</span></span>  
  
-   <span data-ttu-id="3a0c0-112">错误 （值为 2）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-112">Error (value is 2)</span></span>  
  
-   <span data-ttu-id="3a0c0-113">（值为 8） 的信息</span><span class="sxs-lookup"><span data-stu-id="3a0c0-113">Information (value is 8)</span></span>  
  
-   <span data-ttu-id="3a0c0-114">详细 （值为 16）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-114">Verbose (value is 16)</span></span>  
  
-   <span data-ttu-id="3a0c0-115">警告 （值为 4）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-115">Warning (value is 4)</span></span>  
  
 <span data-ttu-id="3a0c0-116">为会话可与下列其中一项关联的值指定的关键字值<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>枚举值：</span><span class="sxs-lookup"><span data-stu-id="3a0c0-116">The keyword value that you specify for the session can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="3a0c0-117">恢复 （值为 2048）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-117">Resume (value is 2,048)</span></span>  
  
-   <span data-ttu-id="3a0c0-118">启动 （值为 256）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-118">Start (value is 256)</span></span>  
  
-   <span data-ttu-id="3a0c0-119">停止 （值为 512）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-119">Stop (value is 512)</span></span>  
  
-   <span data-ttu-id="3a0c0-120">挂起 （值为 1024）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-120">Suspend (value is 1,024)</span></span>  
  
-   <span data-ttu-id="3a0c0-121">传输 （值为 4096）</span><span class="sxs-lookup"><span data-stu-id="3a0c0-121">Transfer (value is 4,096)</span></span>  
  
   
  
## Examples  
  
```  
private static Guid providerId = new Guid("{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}");  
  
    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), "Test Listener", "::");  
  
    // You should use the All default level and control the level using the  
    // ETW session; otherwise, you may not log all the events requested by the  
    // session.  
    TraceSource source = new TraceSource("MyProvider", SourceLevels.All);  
  
    source.Listeners.Add(listener);  
  
    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { "abc", "def", true, 123 });  
  
    source.TraceEvent(TraceEventType.Warning, 12, "Provider guid: {0}", new object[] { providerId });  
  
    source.TraceInformation("string {0}, bool {1}, int {2}, ushort {3}", new object[] { "abc", false, 123, (UInt32)5 });  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a0c0-122">初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-122">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="3a0c0-123">标识该提供程序的唯一字符串 <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-123">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-124">使用指定的提供程序标识符来初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-124">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="3a0c0-125">标识该提供程序的唯一字符串 <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-125">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="3a0c0-126">侦听器的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-126">Name of the listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-127">使用指定的提供程序标识符和侦听器名称来初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-127">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier and name of the listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String, delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name, System::String ^ delimiter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="3a0c0-128">标识该提供程序的唯一字符串 <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-128">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="3a0c0-129">侦听器的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-129">Name of the listener.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="3a0c0-130">用来分隔事件数据的分隔符</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-130">Delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="3a0c0-131">（有关更多详细信息，请参见 <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> 属性）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-131">(For more details, see the <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> property.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-132">使用指定的提供程序标识符、侦听器名称和分隔符来初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier, name of the listener, and delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a0c0-133">关闭输出流，使它不再接收跟踪或调试输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-133">Closes the output stream so it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a0c0-134">获取和设置用来对写入 ETW 子系统的事件数据进行分隔的分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-134">Gets and sets the delimiter used to delimit the event data that is written to the ETW subsystem.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a0c0-135">用来分隔事件数据的分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-135">The delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="3a0c0-136">默认分隔符为逗号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-136">The default delimiter is a comma.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a0c0-137">侦听器将数据元素转换为字符串，然后将这些字符串连接在一起，使用指定的分隔符来分隔字符串中的每个数据元素。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-137">The listener converts the data elements to strings and then concatenates the strings together, using the specified delimiter to delimit each data element in the string.</span></span> <span data-ttu-id="3a0c0-138">随后将作为 ETW 子系统中的事件数据写入字符串。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-138">The string is then written as the event data in the ETW subsystem.</span></span>  
  
 <span data-ttu-id="3a0c0-139">若要成功分析字符串，使用者必须知道使用的分隔符。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-139">To successfully parse the string, the consumer must know the delimiter that was used.</span></span>  
  
 <span data-ttu-id="3a0c0-140">如果数据包含可能包含逗号的字符串，指定适当的分隔符，以便可以正确分析事件数据。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-140">If the data contains a string that may contain a comma, specify an appropriate delimiter, so that the event data can be correctly parsed.</span></span>  
  
 <span data-ttu-id="3a0c0-141">不需要使用与侦听器的事件，因为事件数据的单个字符串的清单。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-141">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="3a0c0-142">该分隔符适用于使用写入的事件数据<xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3a0c0-142">The delimiter applies to event data written using the <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3a0c0-143">要发出的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-143">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="3a0c0-144">要发出的详细消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-144">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-145">实现 <see cref="T:System.Diagnostics.TraceListener" /> 类时，向所创建的侦听器发出错误信息和详细错误信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-145">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override sealed void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a0c0-146">刷新输出缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-146">Flushes the output buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a0c0-147">获取跟踪侦听器支持的自定义特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-147">Gets the custom attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a0c0-148">为跟踪侦听器支持的自定义特性命名的字符串数组；或者如果没有自定义特性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-148">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override sealed bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadSafe { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a0c0-149">获取一个值，该值指示跟踪侦听器是否是线程安全的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-149">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a0c0-150">如果跟踪侦听器是线程安全的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-150">
              <see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3a0c0-151">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3a0c0-152">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-152">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3a0c0-153">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-153">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3a0c0-154">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-154">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3a0c0-155">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-155">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="3a0c0-156">要发出的跟踪数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-156">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-157">向特定于侦听器的输出中写入跟踪信息、数据对象和事件信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-157">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3a0c0-158">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-158">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3a0c0-159">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-159">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3a0c0-160">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-160">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3a0c0-161">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-161">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="3a0c0-162">要作为数据发出的对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-162">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-163">向特定于侦听器的输出中写入跟踪信息、数据对象和事件信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-163">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3a0c0-164">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-164">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3a0c0-165">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-165">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3a0c0-166">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-166">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3a0c0-167">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-167">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-168">向特定于侦听器的输出写入跟踪和事件信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-168">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3a0c0-169">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-169">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3a0c0-170">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-170">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3a0c0-171">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-171">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3a0c0-172">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-172">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="3a0c0-173">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-173">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-174">向特定于侦听器的输出中写入跟踪信息、消息和事件信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-174">Writes trace information, a message, and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3a0c0-175">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-175">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3a0c0-176">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-176">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="3a0c0-177">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-177">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3a0c0-178">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-178">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="3a0c0-179">一个格式字符串，其中包含零个或多个格式项，它们对应于 <c>args</c> 数组中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-179">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="3a0c0-180">包含零个或多个要格式化的对象的 <see langword="object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-180">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-181">向特定于侦听器的输出中写入跟踪信息、格式化对象数组和事件信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-181">Writes trace information, a formatted array of objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="3a0c0-182">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-182">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="3a0c0-183">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-183">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="3a0c0-184">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-184">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="3a0c0-185">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-185">A message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="3a0c0-186">
            <see cref="T:System.Guid" /> 对象标识相关活动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-186">A <see cref="T:System.Guid" /> object identifying a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-187">向侦听器特定的输出中写入跟踪信息、消息、相关活动标识和事件信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-187">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override sealed void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3a0c0-188">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-188">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-189">在派生类中被重写时，向在该派生类中所创建的侦听器写入指定消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-189">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override sealed void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3a0c0-190">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-190">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a0c0-191">在派生类中被重写时，向在该派生类中所创建的侦听器写入消息，后跟行结束符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a0c0-191">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>