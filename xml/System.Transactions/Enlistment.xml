<Type Name="Enlistment" FullName="System.Transactions.Enlistment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5dacb6e0d9a3eb1837291d29c765d3aadae3c06c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Enlistment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Enlistment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.Enlistment" />
  <TypeSignature Language="VB.NET" Value="Public Class Enlistment" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enlistment" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="18926-101">促进登记的事务参与者和事务管理器之间在事务的最后阶段中的通信。</span>
      <span class="sxs-lookup">
        <span data-stu-id="18926-101">Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18926-102">当<xref:System.Transactions.Transaction.EnlistVolatile%2A>和<xref:System.Transactions.Transaction.EnlistDurable%2A>方法<xref:System.Transactions.Transaction>对象调用来登记在事务中的参与者，它们将返回此对象，该对象描述登记。</span><span class="sxs-lookup"><span data-stu-id="18926-102">When the <xref:System.Transactions.Transaction.EnlistVolatile%2A> and <xref:System.Transactions.Transaction.EnlistDurable%2A> methods of the <xref:System.Transactions.Transaction> object are invoked to enlist a participant in a transaction, they return this object describing the enlistment.</span></span>  
  
 <span data-ttu-id="18926-103">在事务提交的最后阶段，事务管理器将此对象传递给资源管理器实现<xref:System.Transactions.IEnlistmentNotification>已登记在事务中的接口。</span><span class="sxs-lookup"><span data-stu-id="18926-103">During the final phase of the transaction commit, the transaction manager passes this object to a resource manager implementing the <xref:System.Transactions.IEnlistmentNotification> interface that has enlisted in a transaction.</span></span> <span data-ttu-id="18926-104">具体而言，事务管理器调用<xref:System.Transactions.IEnlistmentNotification.Commit%2A>或<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>的参与者，具体取决于是否后者已决定提交或回滚事务的方法。</span><span class="sxs-lookup"><span data-stu-id="18926-104">Specifically, the transaction manager calls either the <xref:System.Transactions.IEnlistmentNotification.Commit%2A> or the <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> method of the participant, depending on whether the latter has decided to commit or roll back the transaction.</span></span> <span data-ttu-id="18926-105">参与者应调用<xref:System.Transactions.Enlistment.Done%2A>的此对象，以允许事务管理器知道它已完成其工作的方法。</span><span class="sxs-lookup"><span data-stu-id="18926-105">The participant should call the <xref:System.Transactions.Enlistment.Done%2A> method of this object to let the transaction manager know that it has completed its work.</span></span>  
  
 <span data-ttu-id="18926-106">可以调用登记<xref:System.Transactions.Enlistment.Done%2A>已调用方法之前的任何时候<xref:System.Transactions.PreparingEnlistment.Prepared%2A>中准备阶段。</span><span class="sxs-lookup"><span data-stu-id="18926-106">An enlistment can call the <xref:System.Transactions.Enlistment.Done%2A> method at anytime before it has called <xref:System.Transactions.PreparingEnlistment.Prepared%2A> in the prepare phase.</span></span>  <span data-ttu-id="18926-107">通过此操作，该登记投只读的票，这意味着它投票提交的事务，但不需要接收最终结果。</span><span class="sxs-lookup"><span data-stu-id="18926-107">By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</span></span> <span data-ttu-id="18926-108">请注意之后,<xref:System.Transactions.Enlistment.Done%2A>方法调用，从事务管理器登记的参与者接收到的任何进一步的通知。</span><span class="sxs-lookup"><span data-stu-id="18926-108">Note that, after the <xref:System.Transactions.Enlistment.Done%2A> method is called, the enlisted participant receives no further notifications from the transaction manager.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18926-109">下面的示例演示如何实现<xref:System.Transactions.IEnlistmentNotification>接口，以及何时<xref:System.Transactions.Enlistment.Done%2A>应该调用方法。</span><span class="sxs-lookup"><span data-stu-id="18926-109">The following example shows an implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, and when the <xref:System.Transactions.Enlistment.Done%2A> method should be called.</span></span>  
  
 [!code-csharp[Tx_Enlist#2](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#2)]
 [!code-vb[Tx_Enlist#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="18926-110">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="18926-110">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Transactions.PreparingEnlistment" />
    <altmember cref="T:System.Transactions.IEnlistmentNotification" />
  </Docs>
  <Members>
    <Member MemberName="Done">
      <MemberSignature Language="C#" Value="public void Done ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Done() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.Enlistment.Done" />
      <MemberSignature Language="VB.NET" Value="Public Sub Done ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Done();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18926-111">指示事务参与者已完成其工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18926-111">Indicates that the transaction participant has completed its work.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18926-112">在事务提交的最后阶段，事务管理器调用参与者<xref:System.Transactions.IEnlistmentNotification.Commit%2A>，<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>或<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>的参与者，具体取决于事务是提交还是回滚的方法。</span><span class="sxs-lookup"><span data-stu-id="18926-112">During the final phase of the transaction commit, the transaction manager calls either the <xref:System.Transactions.IEnlistmentNotification.Commit%2A>, <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> or <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> method of the participant, depending on whether the transaction is to be committed or rolled back.</span></span> <span data-ttu-id="18926-113">资源管理器应执行任何工作完成事务，它已完成通过调用随后又通知事务管理器所需<xref:System.Transactions.Enlistment.Done%2A>方法`enlistment`参数。</span><span class="sxs-lookup"><span data-stu-id="18926-113">The resource manager should perform any work necessary to finish the transaction and then inform the transaction manager that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="18926-114">如果资源管理器已持久登记，但未通过调用响应<xref:System.Transactions.Enlistment.Done%2A>方法，事务管理器不确定的资源管理器已收到相应通知调用。</span><span class="sxs-lookup"><span data-stu-id="18926-114">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the respective notification call.</span></span> <span data-ttu-id="18926-115">在这种情况下，事务管理器将继续等待响应，并且保留信息与此事务。</span><span class="sxs-lookup"><span data-stu-id="18926-115">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="18926-116">如果<xref:System.Transactions.Enlistment.Done%2A>是永远不会调用，这段信息是围绕无限期保留在内存中或在系统级资源。</span><span class="sxs-lookup"><span data-stu-id="18926-116">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="18926-117">这会导致无法回收资源。</span><span class="sxs-lookup"><span data-stu-id="18926-117">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="18926-118">对于分布式事务，这可能最终填满 MSDTC 日志将停止 MSDTC 过程。</span><span class="sxs-lookup"><span data-stu-id="18926-118">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="18926-119">在由事务的情况下<xref:System.Transactions>，这会导致资源管理器的进程的内存消耗的逐步地持续增长。</span><span class="sxs-lookup"><span data-stu-id="18926-119">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="18926-120">因此，很重要，则调用<xref:System.Transactions.Enlistment.Done%2A>方法后资源管理器，可使用你准备工作。</span><span class="sxs-lookup"><span data-stu-id="18926-120">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 <span data-ttu-id="18926-121">可以调用登记<xref:System.Transactions.Enlistment.Done%2A>已调用方法之前的任何时候<xref:System.Transactions.PreparingEnlistment.Prepared%2A>中准备阶段。</span><span class="sxs-lookup"><span data-stu-id="18926-121">An enlistment can call the <xref:System.Transactions.Enlistment.Done%2A> method at anytime before it has called <xref:System.Transactions.PreparingEnlistment.Prepared%2A> in the prepare phase.</span></span> <span data-ttu-id="18926-122">通过此操作，该登记投只读的票，这意味着它投票提交的事务，但不需要接收最终结果。</span><span class="sxs-lookup"><span data-stu-id="18926-122">By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</span></span> <span data-ttu-id="18926-123">请注意，调用此方法后，登记的参与者接收到任何进一步通知从事务管理器。</span><span class="sxs-lookup"><span data-stu-id="18926-123">Note that, after this method is called, the enlisted participant receives no further notifications from the transaction manager.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Transactions.PreparingEnlistment" />
        <altmember cref="T:System.Transactions.IEnlistmentNotification" />
      </Docs>
    </Member>
  </Members>
</Type>