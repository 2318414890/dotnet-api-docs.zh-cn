<Type Name="IPromotableSinglePhaseNotification" FullName="System.Transactions.IPromotableSinglePhaseNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21c71cf561755c0ef829a04d68e564077fecfa4b" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPromotableSinglePhaseNotification : System.Transactions.ITransactionPromoter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPromotableSinglePhaseNotification implements class System.Transactions.ITransactionPromoter" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IPromotableSinglePhaseNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPromotableSinglePhaseNotification&#xA;Implements ITransactionPromoter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPromotableSinglePhaseNotification : System::Transactions::ITransactionPromoter" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Transactions.ITransactionPromoter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="45a85-101">描述作为资源管理器内部非分布式事务的提交委托的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="45a85-101">Describes an object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45a85-102">可提升登记 (PSPE) 允许某一资源，例如数据库、 才能事务的所有权，如果它是参与事务的唯一实体。</span><span class="sxs-lookup"><span data-stu-id="45a85-102">Promotable Enlistments (PSPE) allow a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction.</span></span> <span data-ttu-id="45a85-103">稍后，如果需要<xref:System.Transactions>基础结构仍然可以提升到 MSDTC 事务。</span><span class="sxs-lookup"><span data-stu-id="45a85-103">Later, if needed, the <xref:System.Transactions> infrastructure can still escalate the transaction to MSDTC.</span></span> <span data-ttu-id="45a85-104">有关详细信息，请参阅[优化使用单阶段提交和可提升单个阶段通知](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)。</span><span class="sxs-lookup"><span data-stu-id="45a85-104">For more information, see [Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb).</span></span>  
  
 <span data-ttu-id="45a85-105">实现此接口的资源管理器会将控制其内部非分布式事务登记到的提交的委托上<xref:System.Transactions>事务通过<xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A>方法<xref:System.Transactions.Transaction>类。</span><span class="sxs-lookup"><span data-stu-id="45a85-105">A resource manager that implements this interface delegates control of the commit of it's internal non-distributed transaction to an enlistment on a <xref:System.Transactions> transaction through the <xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A> method on the <xref:System.Transactions.Transaction> class.</span></span>  
  
 <span data-ttu-id="45a85-106">如果<xref:System.Transactions.ITransactionPromoter.Promote%2A?displayProperty=nameWithType>调用方法，此接口的实现必须生成传播标记，窗体中的分布式的事务，并将它返回给<xref:System.Transactions>。</span><span class="sxs-lookup"><span data-stu-id="45a85-106">If the <xref:System.Transactions.ITransactionPromoter.Promote%2A?displayProperty=nameWithType> method is called, your implementation of this interface must produce a distributed transaction in the form of a propagation token, and return it to <xref:System.Transactions>.</span></span>  
  
 <span data-ttu-id="45a85-107">登记的事务使用参与者作为实现此接口的对象后<xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A>方法，事务管理器然后通知参与者提升、 已提交，或通过调用回滚事务时<xref:System.Transactions.ITransactionPromoter.Promote%2A>方法，<xref:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit%2A>方法，或<xref:System.Transactions.IPromotableSinglePhaseNotification.Rollback%2A>对象的方法。</span><span class="sxs-lookup"><span data-stu-id="45a85-107">After you enlist an object that implements this interface as a participant of a transaction using the <xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A> method, the transaction manager then notifies the participant when the transaction is promoted, committed, or rolled back by invoking the <xref:System.Transactions.ITransactionPromoter.Promote%2A> method, the <xref:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit%2A> method, or the <xref:System.Transactions.IPromotableSinglePhaseNotification.Rollback%2A> method of the object.</span></span>  
  
 <span data-ttu-id="45a85-108">有关详细信息，请参阅[优化使用单阶段提交和可提升单个阶段通知](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)。</span><span class="sxs-lookup"><span data-stu-id="45a85-108">For more information, see [Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.Transaction" />
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45a85-109">通知事务参与者登记已成功完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45a85-109">Notifies a transaction participant that enlistment has completed successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45a85-110">如果初始化逻辑需要来准备要参与事务的登记的对象，最好是在此方法，而不是构造函数中实现该逻辑。</span><span class="sxs-lookup"><span data-stu-id="45a85-110">If initialization logic is required to prepare an enlisted object to participate in a transaction, it is preferable to implement that logic in this method instead of in a constructor.</span></span> <span data-ttu-id="45a85-111">这种方式，初始化发生仅当对象已成功为事务参与者登记。</span><span class="sxs-lookup"><span data-stu-id="45a85-111">In this way, the initialization occurs only if the object is successfully enlisted as a transaction participant.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionException">
          <span data-ttu-id="45a85-112">登记或序列化事务的尝试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45a85-112">An attempt to enlist or serialize a transaction.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::SinglePhaseEnlistment ^ singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.SinglePhaseEnlistment enlistment);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.SinglePhaseEnlistment enlistment) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (enlistment As SinglePhaseEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::SinglePhaseEnlistment ^ enlistment);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singlePhaseEnlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="enlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="singlePhaseEnlistment">To be added.</param>
        <summary>
          <span data-ttu-id="45a85-113">通知登记的对象事务正在进行回滚。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45a85-113">Notifies an enlisted object that the transaction is being rolled back.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45a85-114">收到此通知，PSPE 应始终是内部事务并使用然后答复的回滚<xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A>上的回调方法`singlePhaseEnlistment`参数。</span><span class="sxs-lookup"><span data-stu-id="45a85-114">On receiving this notification, the PSPE should always rollback it's internal transaction and then reply with the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> callback method on the `singlePhaseEnlistment` parameter.</span></span>  <span data-ttu-id="45a85-115">如果使用回复 PSPE<xref:System.Transactions.SinglePhaseEnlistment.Committed%2A>或<xref:System.Transactions.SinglePhaseEnlistment.InDoubt%2A>、<xref:System.InvalidOperationException>引发从该回调。</span><span class="sxs-lookup"><span data-stu-id="45a85-115">If the PSPE replies with  <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> or <xref:System.Transactions.SinglePhaseEnlistment.InDoubt%2A>, an <xref:System.InvalidOperationException> is thrown from the callback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SinglePhaseCommit">
      <MemberSignature Language="C#" Value="public void SinglePhaseCommit (System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SinglePhaseCommit(class System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SinglePhaseCommit(System::Transactions::SinglePhaseEnlistment ^ singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public void SinglePhaseCommit (System.Transactions.SinglePhaseEnlistment enlistment);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SinglePhaseCommit(class System.Transactions.SinglePhaseEnlistment enlistment) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SinglePhaseCommit (enlistment As SinglePhaseEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SinglePhaseCommit(System::Transactions::SinglePhaseEnlistment ^ enlistment);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singlePhaseEnlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="enlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="singlePhaseEnlistment">To be added.</param>
        <summary>
          <span data-ttu-id="45a85-116">通知登记的对象事务正在提交。</span>
          <span class="sxs-lookup">
            <span data-stu-id="45a85-116">Notifies an enlisted object that the transaction is being committed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45a85-117">此方法通知登记的事务是要提交的对象。</span><span class="sxs-lookup"><span data-stu-id="45a85-117">This method notifies an enlisted object that the transaction is to be committed.</span></span>  
  
 <span data-ttu-id="45a85-118">`singlePhaseEnlistment`参数包含允许通知事务此接口的实现管理器中的事务的结果，因为事务管理器已委派控制事务的回调。</span><span class="sxs-lookup"><span data-stu-id="45a85-118">The `singlePhaseEnlistment` parameters contain callbacks that allow the implementation of this interface to notify the transaction manager of the outcome of the transaction, since the transaction manager has delegated control of the transaction.</span></span> <span data-ttu-id="45a85-119">对于提升的事务，事务管理器侦听事务结果，并且将重写正在发送的响应。</span><span class="sxs-lookup"><span data-stu-id="45a85-119">In the case of a promoted transaction, the transaction manager listens to the transaction outcome and overrides the response being sent.</span></span>  
  
 <span data-ttu-id="45a85-120">收到此通知，资源管理器应尝试提交内部事务 （或如果它已升级的分布式的事务），并调用一个回调方法上`singlePhaseEnlistment`参数基于的结果提交的事务。</span><span class="sxs-lookup"><span data-stu-id="45a85-120">On receiving this notification, the resource manager should attempt to commit it's internal transaction (or the distributed transaction if it has been escalated), and invoke one of the callback methods on the `singlePhaseEnlistment` parameter based on the outcome of committing it's transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>