<Type Name="TransactionScope" FullName="System.Transactions.TransactionScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="867d154cb09fe9a3f2d65475772ad0363add7e98" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TransactionScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactionScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.TransactionScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactionScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionScope sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1249a-101">使代码块成为事务性代码。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1249a-101">Makes a code block transactional.</span>
      </span>
      <span data-ttu-id="1249a-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1249a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1249a-103"><xref:System.Transactions>基础结构提供这两个显式编程模型基于<xref:System.Transactions.Transaction>类，以及隐式编程模型使用<xref:System.Transactions.TransactionScope>类，在其中事务自动管理基础结构。</span><span class="sxs-lookup"><span data-stu-id="1249a-103">The <xref:System.Transactions> infrastructure provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1249a-104">我们建议你创建使用隐式事务<xref:System.Transactions.TransactionScope>类，以便为你自动管理的环境事务上下文。</span><span class="sxs-lookup"><span data-stu-id="1249a-104">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="1249a-105">你还应使用<xref:System.Transactions.TransactionScope>和<xref:System.Transactions.DependentTransaction>跨多个函数调用或多个线程调用需要在同一事务的使用的应用程序的类。</span><span class="sxs-lookup"><span data-stu-id="1249a-105">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="1249a-106">在此模型上的详细信息，请参阅[实现隐式事务使用事务范围](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主题。</span><span class="sxs-lookup"><span data-stu-id="1249a-106">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="1249a-107">编写事务应用程序的详细信息，请参阅[编写一个事务应用程序](~/docs/framework/data/transactions/writing-a-transactional-application.md)。</span><span class="sxs-lookup"><span data-stu-id="1249a-107">For more information on writing a transactional application, see [Writing A Transactional Application](~/docs/framework/data/transactions/writing-a-transactional-application.md).</span></span>  
  
 <span data-ttu-id="1249a-108">在实例化<xref:System.Transactions.TransactionScope>通过`new`语句，事务管理器确定参与的事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-108">Upon instantiating a <xref:System.Transactions.TransactionScope> by the `new` statement, the transaction manager determines which transaction to participate in.</span></span> <span data-ttu-id="1249a-109">一旦确定，该范围将始终参与该事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-109">Once determined, the scope always participates in that transaction.</span></span> <span data-ttu-id="1249a-110">此决策基于两个因素：是否存在环境事务以及构造函数中 `TransactionScopeOption` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="1249a-110">The decision is based on two factors: whether an ambient transaction is present and the value of the `TransactionScopeOption` parameter in the constructor.</span></span>  <span data-ttu-id="1249a-111">你的代码中执行的事务是在环境事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-111">The ambient transaction is the transaction your code executes in.</span></span> <span data-ttu-id="1249a-112">可通过调用 <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> 类的静态 <xref:System.Transactions.Transaction> 属性，获取对环境事务的引用。</span><span class="sxs-lookup"><span data-stu-id="1249a-112">You can obtain a reference to the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the <xref:System.Transactions.Transaction> class.</span></span> <span data-ttu-id="1249a-113">有关如何使用此参数的详细信息，请参阅的"事务流管理"部分[实现隐式事务使用事务范围](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主题。</span><span class="sxs-lookup"><span data-stu-id="1249a-113">For more information on how this parameter is used, see the "Transaction Flow Management" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="1249a-114">如果在事务范围内未不发生任何异常 (即，之间的初始化<xref:System.Transactions.TransactionScope>对象，并的调用其<xref:System.Transactions.TransactionScope.Dispose%2A>方法)，则作用域所参与的事务允许以继续。</span><span class="sxs-lookup"><span data-stu-id="1249a-114">If no exception occurs within the transaction scope (that is, between the initialization of the <xref:System.Transactions.TransactionScope> object and the calling of its <xref:System.Transactions.TransactionScope.Dispose%2A> method), then the transaction in which the scope participates is allowed to proceed.</span></span> <span data-ttu-id="1249a-115">如果异常确实发生在事务范围内，它所参与的事务将回滚。</span><span class="sxs-lookup"><span data-stu-id="1249a-115">If an exception does occur within the transaction scope, the transaction in which it participates will be rolled back.</span></span>  
  
 <span data-ttu-id="1249a-116">在你的应用程序完成所有工作时它想要在事务中执行，应调用<xref:System.Transactions.TransactionScope.Complete%2A>方法一次，以通知该事务管理器是可接受提交事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-116">When your application completes all work it wants to perform in a transaction, you should call the <xref:System.Transactions.TransactionScope.Complete%2A> method only once to inform that transaction manager that it is acceptable to commit the transaction.</span></span> <span data-ttu-id="1249a-117">无法调用此方法将中止事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-117">Failing to call this method aborts the transaction.</span></span>  
  
 <span data-ttu-id="1249a-118">调用<xref:System.Transactions.TransactionScope.Dispose%2A>方法将标记的事务范围的末尾。</span><span class="sxs-lookup"><span data-stu-id="1249a-118">A call to the <xref:System.Transactions.TransactionScope.Dispose%2A> method marks the end of the transaction scope.</span></span> <span data-ttu-id="1249a-119">在调用此方法之后所发生的异常不会影响事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-119">Exceptions that occur after calling this method may not affect the transaction.</span></span>  
  
 <span data-ttu-id="1249a-120">如果修改的值<xref:System.Transactions.Transaction.Current%2A>内一个作用域，将引发异常时<xref:System.Transactions.TransactionScope.Dispose%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="1249a-120">If you modify the value of <xref:System.Transactions.Transaction.Current%2A> inside a scope, an exception is thrown when <xref:System.Transactions.TransactionScope.Dispose%2A> is called.</span></span> <span data-ttu-id="1249a-121">但是，在作用域的结束时，以前的值将恢复。</span><span class="sxs-lookup"><span data-stu-id="1249a-121">However, at the end of the scope, the previous value is restored.</span></span> <span data-ttu-id="1249a-122">此外，如果你调用<xref:System.Transactions.TransactionScope.Dispose%2A>上<xref:System.Transactions.Transaction.Current%2A>在事务范围创建事务，事务将中止范围的末尾。</span><span class="sxs-lookup"><span data-stu-id="1249a-122">In addition, if you call <xref:System.Transactions.TransactionScope.Dispose%2A> on <xref:System.Transactions.Transaction.Current%2A> inside a transaction scope that created the transaction, the transaction aborts at the end of the scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1249a-123">下面的示例演示如何使用<xref:System.Transactions.TransactionScope>类来定义要参与事务的代码块。</span><span class="sxs-lookup"><span data-stu-id="1249a-123">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="1249a-124">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1249a-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1249a-125">初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-125">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1249a-126">初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-126">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1249a-127">此构造函数创建新的事务范围具有的事务作用域选项等于<xref:System.Transactions.TransactionScopeOption.Required>。</span><span class="sxs-lookup"><span data-stu-id="1249a-127">This constructor creates a new transaction scope with the transaction scope option equal to <xref:System.Transactions.TransactionScopeOption.Required>.</span></span> <span data-ttu-id="1249a-128">也就是说，通过新作用域需要使用事务，如果已存在使用该环境事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-128">This means that a transaction is required by the new scope and the ambient transaction is used if one already exists.</span></span> <span data-ttu-id="1249a-129">否则，在进入范围之前创建新的事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-129">Otherwise, it creates a new transaction before entering the scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction, TimeSpan timeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transaction">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="transactionToUse">To be added.</param>
        <summary>
          <span data-ttu-id="1249a-130">初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例，并将指定的事务设置为环境事务，以便该范围中进行的事务性工作使用此事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-130">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, asyncFlowOption As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="transactionToUse">
          <span data-ttu-id="1249a-131">要设置为环境事务（以便该范围中进行的事务性工作使用此事务）的事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-131">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </param>
        <param name="asyncFlowOption">
          <span data-ttu-id="1249a-132">
            <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 枚举的实例，描述了当使用 Task 或 async/await .NET 异步编程模式时，与事务范围关联的环境事务将跨线程连续任务执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-132">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1249a-133">[在 .NET Framework 4.5.1 和更高版本中受支持]</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-133">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="1249a-134">初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例，并将指定的事务设置为环境事务，以便该范围中进行的事务性工作使用此事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-134">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (asyncFlowOption As TransactionScopeAsyncFlowOption)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (asyncFlow As TransactionScopeAsyncFlowOption)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="asyncFlowOption">To be added.</param>
        <summary>
          <span data-ttu-id="1249a-135">[在 .NET Framework 4.5.1 和更高版本中受支持]</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-135">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="1249a-136">使用指定的异步流选项初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-136">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified asynchronous flow option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, TimeSpan timeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="option">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, asyncFlow As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="option">To be added.</param>
        <param name="asyncFlow">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="scopeOption">To be added.</param>
        <summary>
          <span data-ttu-id="1249a-137">以指定的要求初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-137">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction, TimeSpan timeout, System.Transactions.EnterpriseServicesInteropOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction, valuetype System.TimeSpan timeout, valuetype System.Transactions.EnterpriseServicesInteropOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction, TimeSpan timeout, System::Transactions::EnterpriseServicesInteropOption opt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="opt" Type="System.Transactions.EnterpriseServicesInteropOption" />
      </Parameters>
      <Docs>
        <param name="transaction">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="opt">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.TimeSpan scopeTimeout, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, scopeTimeout As TimeSpan, asyncFlowOption As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, TimeSpan scopeTimeout, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" />
        <Parameter Name="scopeTimeout" Type="System.TimeSpan" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="transactionToUse">
          <span data-ttu-id="1249a-138">要设置为环境事务（以便该范围中进行的事务性工作使用此事务）的事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-138">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </param>
        <param name="scopeTimeout">
          <span data-ttu-id="1249a-139">在 <see cref="T:System.TimeSpan" /> 之后，事务范围将超时并中止此事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-139">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span>
          </span>
        </param>
        <param name="asyncFlowOption">
          <span data-ttu-id="1249a-140">
            <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 枚举的实例，描述了当使用 Task 或 async/await .NET 异步编程模式时，与事务范围关联的环境事务将跨线程连续任务执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-140">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1249a-141">[在 .NET Framework 4.5.1 和更高版本中受支持]</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-141">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="1249a-142">使用指定的超时时间值初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例，并将指定的事务设置为环境事务，以便该范围中进行的事务性工作使用此事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-142">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, TimeSpan timeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.TimeSpan timeout, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, timeout As TimeSpan, asyncFlow As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, TimeSpan timeout, System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="option">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="asyncFlow">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions options, System.Transactions.EnterpriseServicesInteropOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions options, valuetype System.Transactions.EnterpriseServicesInteropOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, options As TransactionOptions, opt As EnterpriseServicesInteropOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions options, System::Transactions::EnterpriseServicesInteropOption opt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" />
        <Parameter Name="opt" Type="System.Transactions.EnterpriseServicesInteropOption" />
      </Parameters>
      <Docs>
        <param name="scopeOption">To be added.</param>
        <param name="options">To be added.</param>
        <param name="opt">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions transactionOptions, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions transactionOptions, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="transactionOptions" Type="System.Transactions.TransactionOptions" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="scopeOption">
          <span data-ttu-id="1249a-143">
            <see cref="T:System.Transactions.TransactionScopeOption" /> 枚举的实例，描述与此事务范围关联的事务要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-143">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span>
          </span>
        </param>
        <param name="transactionOptions">
          <span data-ttu-id="1249a-144">
            <see cref="T:System.Transactions.TransactionOptions" /> 结构描述要在创建新事务时使用的事务选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-144">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created.</span>
          </span>
          <span data-ttu-id="1249a-145">如果使用现有的事务，则此参数中的超时值将应用于该事务范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-145">If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</span>
          </span>
          <span data-ttu-id="1249a-146">如果该时间在范围被释放之前到期，则事务将中止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-146">If that time expires before the scope is disposed, the transaction is aborted.</span>
          </span>
        </param>
        <param name="asyncFlowOption">
          <span data-ttu-id="1249a-147">
            <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 枚举的实例，描述了当使用 Task 或 async/await .NET 异步编程模式时，与事务范围关联的环境事务将跨线程连续任务执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-147">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1249a-148">[在 .NET Framework 4.5.1 和更高版本中受支持]</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-148">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="1249a-149">以指定的要求和异步流选项初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-149">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements and asynchronous flow option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions transactionOptions) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions transactionOptions);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions options);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions options) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, options As TransactionOptions)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions options);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption)" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;xamarinandroid-7.1" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="transactionOptions" Type="System.Transactions.TransactionOptions" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" Index="2" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="scopeOption">
          <span data-ttu-id="1249a-150">
            <see cref="T:System.Transactions.TransactionScopeOption" /> 枚举的实例，描述与此事务范围关联的事务要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-150">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span>
          </span>
        </param>
        <param name="option">To be added.</param>
        <param name="transactionOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
          <span data-ttu-id="1249a-151">以指定的要求初始化 <see cref="T:System.Transactions.TransactionScope" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-151">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1249a-152">当你使用`transactionOptions`参数来指定<xref:System.Transactions.IsolationLevel>，和作用域创建一个事务更高版本、 新的事务程序与指定的隔离级别。</span><span class="sxs-lookup"><span data-stu-id="1249a-152">When you use the `transactionOptions` parameter to specify an <xref:System.Transactions.IsolationLevel>, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</span></span> <span data-ttu-id="1249a-153">如果隔离级别与事务一起传入，事务必须具有完全相同的隔离级别，或引发异常。</span><span class="sxs-lookup"><span data-stu-id="1249a-153">If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1249a-154">指示范围中的所有操作都已成功完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-154">Indicates that all operations within the scope are completed successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1249a-155">当您满意后，范围内的所有操作都已成功都完成，应调用此方法仅一次通知该事务管理器，跨所有资源的状态不一致，并且可以提交事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-155">When you are satisfied that all operations within the scope are completed successfully, you should call this method only once to inform that transaction manager that the state across all resources is consistent, and the transaction can be committed.</span></span> <span data-ttu-id="1249a-156">它是很好的做法，以将该调用的最后一个语句作为`using`块。</span><span class="sxs-lookup"><span data-stu-id="1249a-156">It is very good practice to put the call as the last statement in the `using` block.</span></span>  
  
 <span data-ttu-id="1249a-157">有关如何使用此方法的详细信息，请参阅[实现隐式事务使用事务范围](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主题。</span><span class="sxs-lookup"><span data-stu-id="1249a-157">For more information on how this method is used, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="1249a-158">无法调用此方法将中止事务，因为事务管理器将此解释为系统故障时，或在事务范围内引发的异常。</span><span class="sxs-lookup"><span data-stu-id="1249a-158">Failing to call this method aborts the transaction, because the transaction manager interprets this as a system failure, or exceptions thrown within the scope of transaction.</span></span> <span data-ttu-id="1249a-159">但是，您应该注意调用此方法不能保证提交事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-159">However, you should also note that calling this method does not guarantee a commit of the transaction.</span></span> <span data-ttu-id="1249a-160">它只是一种将状态通知给事务管理器的方式。</span><span class="sxs-lookup"><span data-stu-id="1249a-160">It is merely a way of informing the transaction manager of your status.</span></span> <span data-ttu-id="1249a-161">调用此方法后，你不能再访问环境事务通过<xref:System.Transactions.Transaction.Current%2A>属性，并尝试执行的操作是导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="1249a-161">After calling this method, you can no longer access the ambient transaction via the <xref:System.Transactions.Transaction.Current%2A> property, and trying to do so results in an exception being thrown.</span></span>  
  
 <span data-ttu-id="1249a-162">处发生之间的资源管理器提交的实际工作`End Using`语句如果<xref:System.Transactions.TransactionScope>创建事务对象。</span><span class="sxs-lookup"><span data-stu-id="1249a-162">The actual work of commit between the resources manager happens at the `End Using` statement if the <xref:System.Transactions.TransactionScope> object created the transaction.</span></span> <span data-ttu-id="1249a-163">如果该对象未创建事务，则每当 <xref:System.Transactions.CommittableTransaction.Commit%2A> 对象的所有者调用 <xref:System.Transactions.CommittableTransaction> 时都会执行提交。</span><span class="sxs-lookup"><span data-stu-id="1249a-163">If it did not create the transaction, the commit occurs whenever <xref:System.Transactions.CommittableTransaction.Commit%2A> is called by the owner of the <xref:System.Transactions.CommittableTransaction> object.</span></span> <span data-ttu-id="1249a-164">此时，事务管理器调用资源管理器，并告知用户提交或回滚，基于是否上调用了此方法<xref:System.Transactions.TransactionScope>对象。</span><span class="sxs-lookup"><span data-stu-id="1249a-164">At that point the Transaction Manager calls the resource managers and informs them to either commit or rollback, based on whether this method was called on the <xref:System.Transactions.TransactionScope> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1249a-165">下面的示例演示如何使用<xref:System.Transactions.TransactionScope>类来定义要参与事务的代码块。</span><span class="sxs-lookup"><span data-stu-id="1249a-165">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1249a-166">此方法已被调用过一次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-166">This method has already been called once.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1249a-167">结束事务范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1249a-167">Ends the transaction scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1249a-168">调用此方法将标记事务范围的末尾。</span><span class="sxs-lookup"><span data-stu-id="1249a-168">Calling this method marks the end of the transaction scope.</span></span> <span data-ttu-id="1249a-169">如果<xref:System.Transactions.TransactionScope>创建对象的事务和<xref:System.Transactions.TransactionScope.Complete%2A>的作用域中，调用了<xref:System.Transactions.TransactionScope>对象尝试提交事务，当调用此方法。</span><span class="sxs-lookup"><span data-stu-id="1249a-169">If the <xref:System.Transactions.TransactionScope> object created the transaction and <xref:System.Transactions.TransactionScope.Complete%2A> was called on the scope, the <xref:System.Transactions.TransactionScope> object attempts to commit the transaction when this method is called.</span></span>  
  
 <span data-ttu-id="1249a-170">使用 C#`using`构造可确保即使发生异常时，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="1249a-170">The use of the C# `using` construction ensures that this method is called even if an exception occurs.</span></span> <span data-ttu-id="1249a-171">在调用此方法之后所发生的异常不会影响事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-171">Exceptions that occur after calling this method may not affect the transaction.</span></span> <span data-ttu-id="1249a-172">此方法还将还原的环境事务到其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1249a-172">This method also restores the ambient transaction to it original state.</span></span> <span data-ttu-id="1249a-173">A<xref:System.Transactions.TransactionAbortedException>也不会实际提交事务时引发。</span><span class="sxs-lookup"><span data-stu-id="1249a-173">A <xref:System.Transactions.TransactionAbortedException> is thrown if the transaction is not actually committed.</span></span>  
  
 <span data-ttu-id="1249a-174">此方法是同步方法，并阻止，直到提交或中止事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-174">This method is synchronous and blocks until the transaction has been committed or aborted.</span></span> <span data-ttu-id="1249a-175">因此，你应在 Windows 窗体 (WinForm) 应用程序中，使用此方法时请格外小心，或可能出现死锁。</span><span class="sxs-lookup"><span data-stu-id="1249a-175">Because of this, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="1249a-176">如果调用中一个 WinForm 控件事件 （例如，单击的按钮），此方法，并且使用同步<xref:System.Windows.Forms.Control.Invoke%2A>方法来指示要执行中间处理事务，一些 UI 任务 （例如，不断变化的颜色） 的控件死锁将发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="1249a-176">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="1249a-177">这是因为<xref:System.Windows.Forms.Control.Invoke%2A>方法是同步方法，并阻止工作线程，直到用户界面线程完成其作业。</span><span class="sxs-lookup"><span data-stu-id="1249a-177">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="1249a-178">但是，在我们的方案，UI 线程正在还等待工作线程以提交事务。</span><span class="sxs-lookup"><span data-stu-id="1249a-178">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="1249a-179">结果是，所有线程都无法继续并且作用域将无限期等待完成的提交。</span><span class="sxs-lookup"><span data-stu-id="1249a-179">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="1249a-180">应使用<xref:System.Windows.Forms.Control.BeginInvoke%2A>而非<xref:System.Windows.Forms.Control.Invoke%2A>只要有可能，因为它是异步的因此不太容易发生死锁。</span><span class="sxs-lookup"><span data-stu-id="1249a-180">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 <span data-ttu-id="1249a-181">有关如何使用此方法的详细信息，请参阅[实现隐式事务使用事务范围](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主题。</span><span class="sxs-lookup"><span data-stu-id="1249a-181">For more information on how this method is used, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1249a-182">下面的示例演示如何使用<xref:System.Transactions.TransactionScope>类来定义要参与事务的代码块。</span><span class="sxs-lookup"><span data-stu-id="1249a-182">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>