<Type Name="ISinglePhaseNotification" FullName="System.Transactions.ISinglePhaseNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15ecfe46b934d8968a677c0e7a137a484cffd09d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51933124" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISinglePhaseNotification : System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISinglePhaseNotification implements class System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.ISinglePhaseNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISinglePhaseNotification&#xA;Implements IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISinglePhaseNotification : System::Transactions::IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type ISinglePhaseNotification = interface&#xA;    interface IEnlistmentNotification" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Transactions.IEnlistmentNotification</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>描述支持单阶段提交优化以参与事务的资源对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您应该注意，资源管理器实现此接口以支持单阶段提交优化，即使它不能保证它将接收单阶段提交。 事务管理器仍可改为发送两阶段提交通知。  
  
 若要登记在事务中的参与者作为资源管理器，请调用<xref:System.Transactions.Transaction.EnlistVolatile%2A>方法或<xref:System.Transactions.Transaction.EnlistDurable%2A>方法的<xref:System.Transactions.Transaction>类。 具体而言，`EnlistmentOptions`参数应等于<xref:System.Transactions.EnlistmentOptions.None>以确保执行单阶段提交。 如果错误地设置为<xref:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired>，任何单个阶段执行提交操作。  
  
 由于<xref:System.Transactions.ISinglePhaseNotification>接口派生<xref:System.Transactions.IEnlistmentNotification>接口，用于两阶段提交通知，资源管理器还必须实现的后一种所有方法。  它是两阶段提交的事务管理器的选择，或与此资源管理器一起使用单阶段提交优化。  但是，实现此接口可以提供资源管理器时便可充分利用优化的机会。  
  
 如果使用优化，事务管理器调用<xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A>方法的已登记的资源，资源管理器应响应此调用使用的各种方法<xref:System.Transactions.SinglePhaseEnlistment>类通知事务管理器，如果事务是提交或回滚。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.IEnlistmentNotification" />
  </Docs>
  <Members>
    <Member MemberName="SinglePhaseCommit">
      <MemberSignature Language="C#" Value="public void SinglePhaseCommit (System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SinglePhaseCommit(class System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SinglePhaseCommit(System::Transactions::SinglePhaseEnlistment ^ singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void SinglePhaseCommit (System.Transactions.SinglePhaseEnlistment enlistment);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SinglePhaseCommit(class System.Transactions.SinglePhaseEnlistment enlistment) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SinglePhaseCommit (enlistment As SinglePhaseEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SinglePhaseCommit(System::Transactions::SinglePhaseEnlistment ^ enlistment);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member SinglePhaseCommit : System.Transactions.SinglePhaseEnlistment -&gt; unit" Usage="iSinglePhaseNotification.SinglePhaseCommit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singlePhaseEnlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="enlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="singlePhaseEnlistment">一个 <see cref="T:System.Transactions.SinglePhaseEnlistment" />，它用于将响应发送到事务管理器。</param>
        <param name="enlistment">一个 <see cref="T:System.Transactions.SinglePhaseEnlistment" />，它用于将响应发送到事务管理器。</param>
        <summary>表示资源管理器的用于单阶段提交优化的回调实现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它是两阶段提交的事务管理器的选择，或与此资源管理器一起使用单阶段提交优化。  单阶段和两阶段提交的详细信息，请参阅[Committing A Transaction 转换中 Single-Phase and Multi-phase](https://msdn.microsoft.com/library/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)。  
  
 因此，在资源管理器，此登记上任一<xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A>调用方法时，或两个阶段的提交方法中还有更多定义<xref:System.Transactions.IEnlistmentNotification>称为接口。  
  
 此方法的实现应调用<xref:System.Transactions.SinglePhaseEnlistment.Committed%2A>方法或<xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A>方法的`singlePhaseEnlistment`参数以指示是否应提交或回滚事务。  
  
 只有一个可变登记支持单阶段提交时或者当有零或多个可变登记和一个持久登记，事务管理器将调用此方法。 在后一种情况下，可变登记会接收<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>双-阶段提交和唯一的持久登记的通知接收单阶段提交通知。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>