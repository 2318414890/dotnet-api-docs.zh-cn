<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8cc94d2e8fdf95496872362fe50ab41f553e0db5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="72598-101">描述一个接口，资源管理器应实现该接口以在登记参与时为事务管理器提供两阶段提交通知回调。</span>
      <span class="sxs-lookup">
        <span data-stu-id="72598-101">Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72598-102">为了让资源管理器来参与事务，它必须通过事务管理器的事务中登记。</span><span class="sxs-lookup"><span data-stu-id="72598-102">In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</span></span> <span data-ttu-id="72598-103"><xref:System.Transactions.Transaction> 类定义了一组提供此功能的方法，这些方法的名称以 `Enlist` 开头。</span><span class="sxs-lookup"><span data-stu-id="72598-103">The <xref:System.Transactions.Transaction> class defines a set of methods whose names begin with `Enlist` that provide this functionality.</span></span> <span data-ttu-id="72598-104">不同`Enlist`方法对应于不同类型的资源管理器可能具有的登记。</span><span class="sxs-lookup"><span data-stu-id="72598-104">The different `Enlist` methods correspond to the different types of enlistment that a resource maanger may have.</span></span>  
  
 <span data-ttu-id="72598-105">此类描述资源管理器应实现以在登记参与时的事务管理器提供两阶段提交通知回调的接口。</span><span class="sxs-lookup"><span data-stu-id="72598-105">This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span></span> <span data-ttu-id="72598-106">用于每个资源管理器的实现的<xref:System.Transactions.IEnlistmentNotification>接口，你应登记使用<xref:System.Transactions.Transaction.EnlistVolatile%2A>方法或<xref:System.Transactions.Transaction.EnlistDurable%2A>方法<xref:System.Transactions.Transaction>类，具体取决于所需的资源是否是可变或持久性。</span><span class="sxs-lookup"><span data-stu-id="72598-106">For each resource manager's implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, you should enlist it using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method or the <xref:System.Transactions.Transaction.EnlistDurable%2A> method of the <xref:System.Transactions.Transaction> class, depending on whether your resource is volatile or durable.</span></span> <span data-ttu-id="72598-107">登记和 2PC 的详细信息，请参阅[作为参与者在事务中登记资源](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md)和[提交单阶段和多个阶段中的事务](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md)分别。</span><span class="sxs-lookup"><span data-stu-id="72598-107">For more information on enlistment and 2PC, see [Enlisting Resources as Participants in a Transaction](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) and [Committing a Transaction in Single-Phase and Multi-Phase](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) respectively.</span></span>  
  
 <span data-ttu-id="72598-108">事务管理器在两阶段提交协议的不同阶段登记的对象通知通过以下方法。</span><span class="sxs-lookup"><span data-stu-id="72598-108">The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</span></span>  
  
|<span data-ttu-id="72598-109">方法</span><span class="sxs-lookup"><span data-stu-id="72598-109">Method</span></span>|<span data-ttu-id="72598-110">描述</span><span class="sxs-lookup"><span data-stu-id="72598-110">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|<span data-ttu-id="72598-111">当事务管理器要求参与者它们是否能够提交事务时，登记对象的此方法由事务管理器的事务的第一个阶段中用作回调。</span><span class="sxs-lookup"><span data-stu-id="72598-111">This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|<span data-ttu-id="72598-112">如果该事务被提交，登记对象的此方法由事务管理器在事务的第二个阶段中用作回调。</span><span class="sxs-lookup"><span data-stu-id="72598-112">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is commited.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|<span data-ttu-id="72598-113">如果 （即，回滚），则中止此事务，登记对象的此方法由事务管理器在事务的第二个阶段中用作回调。</span><span class="sxs-lookup"><span data-stu-id="72598-113">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|<span data-ttu-id="72598-114">如果事务的状态不明，登记对象的此方法由事务管理器在事务的第二个阶段中用作回调。</span><span class="sxs-lookup"><span data-stu-id="72598-114">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="72598-115">你应注意通知可能不会在按顺序，或按特定顺序发送。</span><span class="sxs-lookup"><span data-stu-id="72598-115">You should be aware that notifications might not be sent sequentially, or in a particular order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72598-116">下面的示例演示如何实现此接口，以及该对象登记在事务中使用参与者作为<xref:System.Transactions.Transaction.EnlistVolatile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="72598-116">The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.</span></span>  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="72598-117">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.Enlistment" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-117">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72598-118">通知登记的对象事务正在提交。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-118">Notifies an enlisted object that a transaction is being committed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72598-119">它指示所有参与者提交事务时，事务管理器做出的承诺，在第二个阶段调用登记对象的此方法。</span><span class="sxs-lookup"><span data-stu-id="72598-119">The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="72598-120">资源管理器应执行任何工作需要完成事务，随后又通知它完成通过调用 TM<xref:System.Transactions.Enlistment.Done%2A>方法`enlistment`参数。</span><span class="sxs-lookup"><span data-stu-id="72598-120">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="72598-121">如果资源管理器已持久登记，但未通过调用响应<xref:System.Transactions.Enlistment.Done%2A>方法，事务管理器不确定的资源管理器已收到<xref:System.Transactions.IEnlistmentNotification.Commit%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="72598-121">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Commit%2A> call.</span></span> <span data-ttu-id="72598-122">在这种情况下，事务管理器将继续等待响应，并且保留信息与此事务。</span><span class="sxs-lookup"><span data-stu-id="72598-122">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="72598-123">如果<xref:System.Transactions.Enlistment.Done%2A>是永远不会调用，这段信息是围绕无限期保留在内存中或在系统级资源。</span><span class="sxs-lookup"><span data-stu-id="72598-123">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="72598-124">这会导致无法回收资源。</span><span class="sxs-lookup"><span data-stu-id="72598-124">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="72598-125">对于分布式事务，这可能最终填满 MSDTC 日志将停止 MSDTC 过程。</span><span class="sxs-lookup"><span data-stu-id="72598-125">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="72598-126">在由事务的情况下<xref:System.Transactions>，这会导致资源管理器的进程的内存消耗的逐步地持续增长。</span><span class="sxs-lookup"><span data-stu-id="72598-126">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="72598-127">因此，很重要，则调用<xref:System.Transactions.Enlistment.Done%2A>方法后资源管理器，可使用你准备工作。</span><span class="sxs-lookup"><span data-stu-id="72598-127">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="72598-128">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.Enlistment" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-128">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72598-129">通知登记的对象事务的状态不确定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-129">Notifies an enlisted object that the status of a transaction is in doubt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72598-130">事务管理器在已调用单阶段提交操作单个持久资源，然后到持久的资源的连接已丢失之前得到事务结果时，将针对易失性资源调用此方法。</span><span class="sxs-lookup"><span data-stu-id="72598-130">This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</span></span> <span data-ttu-id="72598-131">此时，无法安全地确定事务结果。</span><span class="sxs-lookup"><span data-stu-id="72598-131">At that point, the transaction outcome cannot be safely determined.</span></span>  
  
 <span data-ttu-id="72598-132">作为<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>是视为事务的最终状态，你不应调用<xref:System.Transactions.IEnlistmentNotification.Commit%2A>或<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>之后调用<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>。</span><span class="sxs-lookup"><span data-stu-id="72598-132">As <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> is considered to be a final state for a transaction, you should not call <xref:System.Transactions.IEnlistmentNotification.Commit%2A> or <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> after calling <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72598-133">此方法对于易失性资源的实现应对受影响的数据执行它了解任何恢复或包含操作。</span><span class="sxs-lookup"><span data-stu-id="72598-133">Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</span></span>  <span data-ttu-id="72598-134">它还必须调用<xref:System.Transactions.Enlistment.Done%2A>方法上`enlistment`参数时它已完成其工作。</span><span class="sxs-lookup"><span data-stu-id="72598-134">It must also call the <xref:System.Transactions.Enlistment.Done%2A> method on the on the `enlistment` parameter when it has finished its work.</span></span>  
  
 <span data-ttu-id="72598-135">如果资源管理器已持久登记，但未通过调用响应<xref:System.Transactions.Enlistment.Done%2A>方法，事务管理器不确定的资源管理器已收到<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="72598-135">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> call.</span></span> <span data-ttu-id="72598-136">在这种情况下，事务管理器将继续等待响应，并且保留信息与此事务。</span><span class="sxs-lookup"><span data-stu-id="72598-136">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="72598-137">如果<xref:System.Transactions.Enlistment.Done%2A>是永远不会调用，这段信息是围绕无限期保留在内存中或在系统级资源。</span><span class="sxs-lookup"><span data-stu-id="72598-137">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="72598-138">这会导致无法回收资源。</span><span class="sxs-lookup"><span data-stu-id="72598-138">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="72598-139">对于分布式事务，这可能最终填满 MSDTC 日志将停止 MSDTC 过程。</span><span class="sxs-lookup"><span data-stu-id="72598-139">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="72598-140">在由事务的情况下<xref:System.Transactions>，这会导致资源管理器的进程的内存消耗的逐步地持续增长。</span><span class="sxs-lookup"><span data-stu-id="72598-140">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="72598-141">因此，很重要，则调用<xref:System.Transactions.Enlistment.Done%2A>方法后资源管理器，可使用你准备工作。</span><span class="sxs-lookup"><span data-stu-id="72598-141">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">
          <span data-ttu-id="72598-142">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.PreparingEnlistment" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-142">A <see cref="T:System.Transactions.PreparingEnlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72598-143">通知登记的对象事务正在为提交做准备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-143">Notifies an enlisted object that a transaction is being prepared for commitment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72598-144">事务管理器时调用此方法的登记资源管理器的阶段 1 做出的承诺，它将询问参与者它们是否能够提交事务。</span><span class="sxs-lookup"><span data-stu-id="72598-144">The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</span></span>  
  
 <span data-ttu-id="72598-145">在实现持久的资源管理器时，你应记录你准备在此阶段的记录。</span><span class="sxs-lookup"><span data-stu-id="72598-145">When you are implementing a durable resource manager, you should log your prepare record during this phase.</span></span> <span data-ttu-id="72598-146">记录应包含所有必需的信息来执行恢复。</span><span class="sxs-lookup"><span data-stu-id="72598-146">The record should contain all the necessary information to perform recovery.</span></span> <span data-ttu-id="72598-147">这包括<xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>属性，传递给事务管理器中的<xref:System.Transactions.TransactionManager.Reenlist%2A>在恢复过程的方法。</span><span class="sxs-lookup"><span data-stu-id="72598-147">This includes the <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> property, which is passed to the transaction manager in the <xref:System.Transactions.TransactionManager.Reenlist%2A> method during recovery.</span></span> <span data-ttu-id="72598-148">有关恢复的详细信息，请参阅[执行恢复](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)。</span><span class="sxs-lookup"><span data-stu-id="72598-148">For more information on recovery, see [Performing Recovery](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).</span></span>  
  
 <span data-ttu-id="72598-149">资源管理器应完成的所有工作都必须先完成，然后再调<xref:System.Transactions.PreparingEnlistment.Prepared%2A>方法`preparingEnlistment`参数以指示承诺其投票。</span><span class="sxs-lookup"><span data-stu-id="72598-149">Your resource manager should complete all work that must be finished before calling the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method of the `preparingEnlistment` parameter to indicate its vote for commitment.</span></span> <span data-ttu-id="72598-150">你应确保这在提交、 回滚或置疑接收任何第 2 阶段通知此类之前完成。</span><span class="sxs-lookup"><span data-stu-id="72598-150">You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</span></span> <span data-ttu-id="72598-151">这是因为第 2 阶段通知时才会在同一线程调用的内联<xref:System.Transactions.PreparingEnlistment.Prepared%2A>第 1 阶段中的方法。</span><span class="sxs-lookup"><span data-stu-id="72598-151">This is because phase 2 notifications can happen inline on the same thread that called the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method in phase 1.</span></span> <span data-ttu-id="72598-152">因此，在调用 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 后，您不应执行任何预计在收到第 2 阶段通知前就可完成的操作（如释放锁定）。</span><span class="sxs-lookup"><span data-stu-id="72598-152">As such, you should not do any work after the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</span></span>  
  
 <span data-ttu-id="72598-153">你还可以调用的方法`preparingEnlistment`参数以指示回滚一票。</span><span class="sxs-lookup"><span data-stu-id="72598-153">You can also call the method of the `preparingEnlistment` parameter to indicate a vote for rollback.</span></span>  
  
 <span data-ttu-id="72598-154">如果你想要只是观察并响应的事务，进度的对象没有参与它，此方法的实现应调用<xref:System.Transactions.Enlistment.Done%2A>方法`preparingEnlistment`参数时它已完成其工作。</span><span class="sxs-lookup"><span data-stu-id="72598-154">If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the <xref:System.Transactions.Enlistment.Done%2A> method of the `preparingEnlistment` parameter when it has finished its work.</span></span> <span data-ttu-id="72598-155">这样，资源管理器将不会收到任何第 2 阶段通知。</span><span class="sxs-lookup"><span data-stu-id="72598-155">By doing so, your resource manager would not receive any phase 2 notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="72598-156">用于将响应发送到事务管理器的 <see cref="T:System.Transactions.Enlistment" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-156">A <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72598-157">通知登记的对象事务正在回滚（中止）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="72598-157">Notifies an enlisted object that a transaction is being rolled back (aborted).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72598-158">当事务正在回滚 （中止） 由于一个或多个事务参与者无法提交事务时，事务管理器将调用此方法的登记的对象。</span><span class="sxs-lookup"><span data-stu-id="72598-158">The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="72598-159">资源管理器应执行任何工作需要完成事务，随后又通知它完成通过调用 TM<xref:System.Transactions.Enlistment.Done%2A>方法`enlistment`参数。</span><span class="sxs-lookup"><span data-stu-id="72598-159">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="72598-160">如果资源管理器已持久登记，但未通过调用响应<xref:System.Transactions.Enlistment.Done%2A>方法，事务管理器不确定的资源管理器已收到<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="72598-160">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> call.</span></span> <span data-ttu-id="72598-161">在这种情况下，事务管理器将继续等待响应，并且保留信息与此事务。</span><span class="sxs-lookup"><span data-stu-id="72598-161">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="72598-162">如果<xref:System.Transactions.Enlistment.Done%2A>是永远不会调用，这段信息是围绕无限期保留在内存中或在系统级资源。</span><span class="sxs-lookup"><span data-stu-id="72598-162">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="72598-163">这会导致无法回收资源。</span><span class="sxs-lookup"><span data-stu-id="72598-163">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="72598-164">对于分布式事务，这可能最终填满 MSDTC 日志将停止 MSDTC 过程。</span><span class="sxs-lookup"><span data-stu-id="72598-164">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="72598-165">在由事务的情况下<xref:System.Transactions>，这会导致资源管理器的进程的内存消耗的逐步地持续增长。</span><span class="sxs-lookup"><span data-stu-id="72598-165">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="72598-166">因此，很重要，则调用<xref:System.Transactions.Enlistment.Done%2A>方法后资源管理器，可使用你准备工作。</span><span class="sxs-lookup"><span data-stu-id="72598-166">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>