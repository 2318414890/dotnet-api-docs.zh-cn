<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowDesignerLoader.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5abb651dcc1262ec08c4e3c068d1f8918c1e21ad5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abb651dcc1262ec08c4e3c068d1f8918c1e21ad5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>Provides common designer loader functionality that can be used to implement custom workflow designer loaders.</source>
          <target state="translated">提供可用于实现自定义工作流设计器加载程序的通用设计器加载程序功能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>Designer loader classes are used to load the designer and save any changes to the state of the designer when the user so instructs.</source>
          <target state="translated">设计器加载程序类用于按照用户的指示加载设计器以及保存对设计器状态所做的任何更改。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> class can be implemented to support custom loading of a workflow designer and workflow designer components.</source>
          <target state="translated">可实现 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 类以支持工作流设计器及其组件的自定义加载。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>A workflow designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> method is called.</source>
          <target state="translated">工作流设计器加载程序还负责在调用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> 方法后，将对打开文档所做的更改写回加载程序在加载文档时所使用的存储区。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /&gt;</ph> and <ph id="ph5">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" /&gt;</ph>.</source>
          <target state="translated">当从 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 继承时，必须重写下面的成员：<ph id="ph2">&lt;see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" /&gt;</ph>、<ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" /&gt;</ph>、<ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /&gt;</ph> 和 <ph id="ph5">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> class.</source>
          <target state="translated">在派生类中实现时，初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>The following example demonstrates how to create a new instance of a <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何创建 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 对象的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>In this case, the <ph id="ph1">`WorkflowLoader`</ph> class is derived from <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>.</source>
          <target state="translated">在本例中，<ph id="ph1">`WorkflowLoader`</ph> 类是从 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 派生的。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> is created, a <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is also created and associated with the <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> using the <ph id="ph4">`BeginLoad`</ph> method.</source>
          <target state="translated">创建 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 时，还会创建 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 并使用 <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 方法将其与 <ph id="ph4">`BeginLoad`</ph> 关联。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> to add.</source>
          <target state="translated">要添加的 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Adds an activity to the designer host after it has been added to the parent activities collection.</source>
          <target state="translated">当将活动添加到父活动集合中后，即会将该活动添加到设计器宿主。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates how to add a <ph id="ph1">&lt;xref:System.Workflow.Activities.CodeActivity&gt;</ph> to the designer.</source>
          <target state="translated">下面的示例演示如何将 <ph id="ph1">&lt;xref:System.Workflow.Activities.CodeActivity&gt;</ph> 添加到设计器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Before the activity is added to the designer using the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A&gt;</ph> method, it is first added to the Activities collection of the root activity within the workflow.</source>
          <target state="translated">在使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A&gt;</ph> 方法将活动添加到设计器之前，首先将该活动添加到工作流中根活动的 Activities 集合中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> releases all services used by the designer host, but it does not write pending changes to the designer loader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> 释放设计器宿主使用的所有服务，但不将挂起的更改写入到设计器加载程序。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>If you want to save any pending changes prior to releasing all resources, call <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> before you call <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph>.</source>
          <target state="translated">如果希望在释放所有资源之前保存所有挂起的更改，请先调用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph>，然后再调用 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>The following example demonstrates an implementation of the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> 方法的实现。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>In this implementation, various services that have been added to the LoaderHost object are removed in preparation for closing the application.</source>
          <target state="translated">在本实现中，将会移除已添加到 LoaderHost 对象的各个服务，以准备关闭应用程序。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>This example is from the Tracking Profile Designer SDK sample.</source>
          <target state="translated">此示例摘自“跟踪配置文件设计器”SDK 示例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Tracking Profile Designer Sample<ept id="p1">](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>跟踪配置文件设计器示例<ept id="p1">](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
          <source>When overridden in a derived class, gets the file name of the designer to load.</source>
          <target state="translated">当在派生类中重写时，获取要加载的设计器的文件名。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
          <source>A string that contains the file name of the designer to load.</source>
          <target state="translated">一个字符串，其中包含要加载的设计器的文件名。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A&gt;</ph> property to return the path of the currently loaded workflow file used by the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何重写 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A&gt;</ph> 属性以返回 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 所使用的当前加载的工作流文件的路径。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
          <source>Writes pending changes to the location that the designer was loaded from.</source>
          <target state="translated">将挂起的更改写入设计器的加载位置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
          <source>The following example demonstrates how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> method to serialize a workflow using the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何重写 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> 方法以使用 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph> 序列化工作流。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
          <source>In this example, the overridden <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> delegates to the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> method defined in the <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> derived class.</source>
          <target state="translated">在本示例中，重写的 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> 委托 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> 派生类中定义的 <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload">
          <source>When overridden in a derived class, causes <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> to reload the designer.</source>
          <target state="translated">在派生类中重写时，将使 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 重新加载设计器。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>A string that contains a path to the file to read from.</source>
          <target state="translated">一个字符串，其中包含要从中读取的文件的路径。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>When overridden in a derived class, retrieves an object that <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> uses to read from the specified file.</source>
          <target state="translated">在派生类中重写时，将会检索 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 用于从指定文件中进行读取的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to read the specified file.</source>
          <target state="translated">用于读取指定文件的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>The following example shows how to create and return a <ph id="ph1">`TextReader`</ph> object when the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A&gt;</ph> overloaded method is called.</source>
          <target state="translated">下面的示例演示如何在调用 <ph id="ph1">`TextReader`</ph> 重载方法时创建和返回 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>A string that contains the path to the file to write to.</source>
          <target state="translated">一个字符串，其中包含要写入的文件的路径。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>When overridden in a derived class, gets an object that the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> uses to write to the specified file.</source>
          <target state="translated">在派生类中重写时，将会获取 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 用于对指定文件进行写入的对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to write to the file.</source>
          <target state="translated">用于写入文件的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>The following example shows how to create and return a <ph id="ph1">`TextWriter`</ph> object when the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A&gt;</ph> overloaded method is called.</source>
          <target state="translated">下面的示例演示如何在调用 <ph id="ph1">`TextWriter`</ph> 重载方法时创建和返回 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source>Gets a value that indicates whether the workflow should be loaded in debug mode.</source>
          <target state="translated">获取一个值，该值指示是否应在调试模式下加载工作流。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow should be loaded in debug mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应在调试模式下加载工作流，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source>The following method determines whether the workflow designer is locked by the debugger if the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A&gt;</ph> property of the current <ph id="ph2">`WorkflowDesignerLoader`</ph> returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">以下方法确定是否工作流设计器锁定由调试器中，是否<ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A&gt;</ph>属性的当前<ph id="ph2">`WorkflowDesignerLoader`</ph>返回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> with any services required by the designer loader host.</source>
          <target state="translated">使用设计器加载程序宿主所需的任何服务初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A&gt;</ph> method in a derived class to add the services needed for the designer.</source>
          <target state="translated">下面的示例演示如何在派生类中重写 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A&gt;</ph> 方法以添加设计器所需的服务。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
          <source>The services can vary based on the level of service support required by your application.</source>
          <target state="translated">根据应用程序所需的服务支持级别，这些服务会有所不同。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that is created for the serialized layout.</source>
          <target state="translated">一个为序列化布局创建的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>List of errors that occurred during the deserialization.</source>
          <target state="translated">在反序列化期间发生的错误的列表。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>Applies the serialized layout to the root designer in the current designer host.</source>
          <target state="translated">将序列化布局应用于当前设计器宿主中的根设计器。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>This example shows how to load the layout for a specific workflow definition using the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph> method.</source>
          <target state="translated">本示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph> 方法来加载特定工作流定义的布局。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object is created using the file name of a designer layout file that was created using <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph>.</source>
          <target state="translated">将使用设计器布局文件的文件名创建一个 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 对象，该文件是用 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> 创建的。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>When the layout has finished loading, any errors that might have occurred are displayed to the user.</source>
          <target state="translated">当布局加载完成后，将向用户显示可能出现的任何错误。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the resource is associated with.</source>
          <target state="translated">与资源关联的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source>Name of the resource.</source>
          <target state="translated">资源的名称。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source>Errors encountered during the call to <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph>.</source>
          <target state="translated">调用 <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph> 时遇到的错误。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source>Retrieves the specified resource and calls the <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph> method that applies the serialized layout to the root designer in the current designer host.</source>
          <target state="translated">检索指定的资源，并调用 <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph> 方法，从而将序列化布局应用于当前设计器宿主中的根设计器。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if load operation is successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果加载操作成功，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source>Contains the load errors.</source>
          <target state="translated">包含加载错误。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source>Called when loading of the designer is completed.</source>
          <target state="translated">在设计器加载完成时调用。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source>The following example demonstrates how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A&gt;</ph> method to display errors that might have occurred during the loading of a workflow.</source>
          <target state="translated">下面的示例演示如何重写 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A&gt;</ph> 方法以显示在加载工作流时可能出现的错误。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Class that implements the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> interface, which manages design-time serialization.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> 接口的类，此接口管理设计时序列化。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Writes cached changes to the location that the designer was loaded from.</source>
          <target state="translated">将缓存的更改写入设计器的加载位置。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>The following example demonstrates how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> method to serialize the workflow using the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何重写 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> 方法以使用 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph> 序列化工作流。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Class that implements the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> interface, which manages design-time serialization.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> 接口的类，此接口管理设计时序列化。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Loads the designer from a design document.</source>
          <target state="translated">从设计文档加载设计器。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>The following example shows how to override the <ph id="ph1">`PerformLoad`</ph> method to deserialize a workflow and load it in the designer using the <ph id="ph2">`AddObjectGraphToDesignerHost`</ph> helper method.</source>
          <target state="translated">下面的示例演示如何重写<ph id="ph1">`PerformLoad`</ph>方法来反序列化工作流并将其加载在设计器中使用<ph id="ph2">`AddObjectGraphToDesignerHost`</ph>帮助器方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Activity to be removed from the designer.</source>
          <target state="translated">要从设计器中移除的活动。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Removes an activity from the designer host after it has been added to the parent activities collection.</source>
          <target state="translated">当将活动添加到父活动集合中后，从设计器宿主中移除该活动。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>The following example shows how to remove an activity from the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何从 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 中移除活动。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Before the last child activity in the workflow is removed from the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>, it is first removed from the workflow <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A&gt;</ph> collection.</source>
          <target state="translated">在从 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 中移除工作流中的最后一个子活动前，首先从工作流的 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A&gt;</ph> 集合中移除该子活动。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source><ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> that is used to serialize the layout into.</source>
          <target state="translated">用于将布局序列化到其中的 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>Root activity from which you get the layout information.</source>
          <target state="translated">从中获取布局信息的根活动。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>Errors encountered during serialization.</source>
          <target state="translated">序列化时遇到的错误。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>Serializes the designer layout.</source>
          <target state="translated">序列化设计器布局。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>The following example demonstrates how to save the design layout information of a workflow using the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> 方法保存工作流的设计布局信息。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object is created, the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ph> for the <ph id="ph3">`RootComponent`</ph> of the workflow is retrieved and passed to the <ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> method.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>创建对象时，<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ph>为<ph id="ph3">`RootComponent`</ph>的工作流是检索并传递给<ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>To load the layout file that is generated by this method, see <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph>.</source>
          <target state="translated">若要加载使用此方法生成的布局文件，请参见 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> metadata of the target <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">获取目标 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> 的 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 元数据。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> metadata of the target <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">目标 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> 的 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 元数据。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>