<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameValueCollection.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53d1d6aad3c24b139bec3904a9e019b3fa0651e47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d1d6aad3c24b139bec3904a9e019b3fa0651e47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Represents a collection of associated <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> keys and <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> values that can be accessed either with the key or with the index.</source>
          <target state="translated">表示可通过键或索引访问的关联 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 键和 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 值的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>This collection is based on the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph> class.</source>
          <target state="translated">根据此集合<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>However, unlike the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>, this class stores multiple string values under a single key.</source>
          <target state="translated">但是，与不同<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase&gt;</ph>，此类存储单个项下的多个字符串值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>This class can be used for headers, query strings and form data.</source>
          <target state="translated">此类可以用于标头、 查询字符串和窗体数据。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Each element is a key/value pair.</source>
          <target state="translated">每个元素是一个键/值对。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Collections of this type do not preserve the ordering of element, and no particular ordering is guaranteed when enumerating the collection.</source>
          <target state="translated">此类型的集合不会保留排序的元素，而没有特定的顺序将保证枚举该集合时。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>是元素的数目<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配所需的方式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">默认比较器是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.</source>
          <target state="translated">在.NET Framework 1.0 版中，此类使用区分区域性的字符串比较。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>However, in .NET Framework version 1.1 and later, this class uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> when comparing strings.</source>
          <target state="translated">但是，在.NET Framework 1.1 和更高版本中，此类使用<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>比较字符串时。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>For more information about how culture affects comparisons and sorting, see <bpt id="p1">[</bpt>Performing Culture-Insensitive String Operations<ept id="p1">](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>.</source>
          <target state="translated">有关如何区域性影响比较和排序的详细信息，请参阅<bpt id="p1">[</bpt>执行不区分区域性的字符串操作<ept id="p1">](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source><ph id="ph1">`null`</ph> is allowed as a key or as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph> 允许作为键或值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%2A&gt;</ph> method does not distinguish between <ph id="ph2">`null`</ph> which is returned because the specified key is not found and <ph id="ph3">`null`</ph> which is returned because the value associated with the key is <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%2A&gt;</ph>方法之间没有区别<ph id="ph2">`null`</ph>返回这是因为找不到指定的键和<ph id="ph3">`null`</ph>因为与键关联的值返回这<ph id="ph4">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">公共静态 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph>在 Visual Basic 中) 的此类型的成员都是线程安全。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">但不保证所有实例成员都是线程安全的。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> class.</source>
          <target state="translated">此实现不提供同步 （线程安全） 包装器<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>，但是，派生的类可以创建他们自己的同步的版本<ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>使用<ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph>属性<ph id="ph4">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例，该实例为空且具有默认初始容量，并使用不区分大小写的默认哈希代码提供程序和不区分大小写的默认比较器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">默认比较器是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> 对象，用于确定两个键是否相等，并为集合中的键生成哈希代码。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例，该实例为空、具有默认的初始容量并使用指定的 <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>对象组合比较器和哈希代码提供程序。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to copy to the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated">要复制到新 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 实例的 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Copies the entries from the specified <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to a new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.</source>
          <target state="translated">将项从指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 复制到一个新的 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>，这个新集合的初始容量与复制的项数相等，并使用与源集合相同的哈希代码提供程序和比较器。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">默认比较器是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The elements of the new <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> are sorted in the same order as the source <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">新元素<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>按与源相同的顺序进行排序<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`col`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 可包含的初始项数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例，该实例为空且具有指定的初始容量，并使用不区分大小写的默认哈希代码提供程序和不区分大小写的默认比较器。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">默认比较器是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> that will supply the hash codes for all keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> 将为 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的所有键提供哈希代码。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>，用于确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the default initial capacity and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例，该实例为空且具有默认初始容量，并使用指定的哈希代码提供程序和指定的比较器。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">默认比较器是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 对象可包含的初始项数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> 对象，用于确定两个键是否相等，并为集合中的键生成哈希代码。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例，该实例为空、具有指定的初始容量并使用指定的 <ph id="ph2">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object combines the comparer and the hash code provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph>对象组合比较器和哈希代码提供程序。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>参数。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 可包含的初始项数。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to copy to the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated">要复制到新 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 实例的 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>Copies the entries from the specified <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to a new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.</source>
          <target state="translated">将项从指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 复制到一个新的 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>，这个新集合使用指定的初始容量或与具有与复制的项数相等的初始容量（两者中较大的一个），并使用不区分大小写的默认哈希代码提供程序和不区分大小写的默认比较器。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">默认比较器是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source>If the number of elements in <ph id="ph1">`col`</ph> is greater than <ph id="ph2">`capacity`</ph>, this constructor becomes an O(<ph id="ph3">`n`</ph><ph id="ph4"> + </ph><ph id="ph5">`m`</ph>) operation, where <ph id="ph6">`n`</ph> is <ph id="ph7">`capacity`</ph> and <ph id="ph8">`m`</ph> is the number of elements in <ph id="ph9">`col`</ph>.</source>
          <target state="translated">如果中的元素数<ph id="ph1">`col`</ph>大于<ph id="ph2">`capacity`</ph>，此构造函数会成为 O (<ph id="ph3">`n`</ph><ph id="ph4"> + </ph><ph id="ph5">`m`</ph>) 操作，其中<ph id="ph6">`n`</ph>是<ph id="ph7">`capacity`</ph>和<ph id="ph8">`m`</ph>是数中的元素<ph id="ph9">`col`</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象，包含序列化新 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 实例所需的信息。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 对象，包含与新 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 实例关联的序列化流的源和目标。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is serializable and uses the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例，该实例可序列化且使用指定的 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The initial number of entries that the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 可包含的初始项数。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> that will supply the hash codes for all keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IHashCodeProvider" /&gt;</ph> 将为 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的所有键提供哈希代码。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>，用于确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 类的新实例，该实例为空且具有指定的初始容量，并使用指定的哈希代码提供程序和指定的比较器。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>是元素的数目，<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The hash code provider dispenses hash codes for keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">哈希代码提供程序分配中的键的哈希代码<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default hash code provider is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>.</source>
          <target state="translated">默认哈希代码提供程序是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>The default comparer is the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>.</source>
          <target state="translated">默认比较器是<ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Adds entries to the current <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">将项添加到当前 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to copy to the current <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">要复制到当前 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>Copies the entries in the specified <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to the current <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">将指定 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的项复制到当前 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If a key in <ph id="ph1">`c`</ph> already exists in the target <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance, the associated value in <ph id="ph3">`c`</ph> is added to the existing comma-separated list of values associated with the same key in the target <ph id="ph4">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance.</source>
          <target state="translated">如果中的键<ph id="ph1">`c`</ph>目标中已存在<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>实例中的关联的值<ph id="ph3">`c`</ph>将添加到现有值与目标中相同的键关联的以逗号分隔列表<ph id="ph4">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>已经等于容量的容量<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>增加通过自动重新分配在内部数组和现有元素被复制到新数组中，在添加新的元素之前。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>小于容量，此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">如果容量需要增加以容纳新元素，此方法会成为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source>The collection is read-only.</source>
          <target state="translated">该集合是只读的。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;paramref name="c" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="c" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to add.</source>
          <target state="translated">要添加的项的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 键。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">键可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value of the entry to add.</source>
          <target state="translated">要添加的项的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>Adds an entry with the specified name and value to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">将具有指定名称和值的项添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If the specified key already exists in the target <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance, the specified value is added to the existing comma-separated list of values in the form <ph id="ph2">`"value1,value2,value3"`</ph>.</source>
          <target state="translated">如果目标中已存在指定的键<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>实例，指定的值添加到现有的表单中的值以逗号分隔列表<ph id="ph2">`"value1,value2,value3"`</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The values are associated with the same key in the target <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance.</source>
          <target state="translated">值是与目标中相同的键关联<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>已经等于容量的容量<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>增加通过自动重新分配在内部数组和现有元素被复制到新数组中，在添加新的元素之前。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>小于容量，此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">如果容量需要增加以容纳新元素，此方法会成为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
          <source>The collection is read-only.</source>
          <target state="translated">该集合是只读的。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>Gets all the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的所有键。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains all the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 数组，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的所有键。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>If the collection is empty, this method returns an empty <ph id="ph1">&lt;xref:System.String&gt;</ph> array, not <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果该集合为空，此方法将返回一个空<ph id="ph1">&lt;xref:System.String&gt;</ph>数组，而不<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>The arrays returned by <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> are cached for better performance and are automatically refreshed when the collection changes.</source>
          <target state="translated">返回的数组<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph>被缓存以提高性能，但当集合更改将自动刷新。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>A derived class can invalidate the cached version by calling <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, thereby forcing the arrays to be recreated.</source>
          <target state="translated">派生的类可以使缓存的版本失效通过调用<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>，从而强制阵列可以重新创建。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.AllKeys">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Clear">
          <source>Invalidates the cached arrays and removes all entries from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">使缓存数组无效，并将所有项从 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中移除。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Clear">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Clear">
          <source>The collection is read-only.</source>
          <target state="translated">该集合是只读的。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，它是从 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>dest<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dest<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">从目标数组的指定索引处开始将整个 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 复制到兼容的一维 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定的数组必须具有兼容类型。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">此方法使用<ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph>要复制的元素。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dest" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="dest" /&gt;</ph>.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的元素个数大于从 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目标 <ph id="ph3">&lt;paramref name="dest" /&gt;</ph> 末尾之间的可用空间。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="dest" /&gt;</ph>.</source>
          <target state="translated">无法自动将源 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 的类型转换为目标 <ph id="ph2">&lt;paramref name="dest" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Gets the values of a specified entry in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combined into one comma-separated list.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定项的值，这些值已合并为一个以逗号分隔的列表。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>The zero-based index of the entry that contains the values to get from the collection.</source>
          <target state="translated">项的从零开始的索引，该项包含要从集合中获取的值。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>Gets the values at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combined into one comma-separated list.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定索引处的值，这些值已合并为一个以逗号分隔的列表。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a comma-separated list of the values at the specified index of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，则为一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定索引处的值的列表（此列表以逗号分隔）；否则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values at the specified index.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>的指定索引处的值的数量。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 超出了集合的有效索引范围。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry that contains the values to get.</source>
          <target state="translated">项的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 键，该项包含要获取的值。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">键可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>Gets the values associated with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> combined into one comma-separated list.</source>
          <target state="translated">获取与 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的指定键关联的值，这些值已合并为一个以逗号分隔的列表。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a comma-separated list of the values associated with the specified key from the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，则为一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含与 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的指定键关联的值的列表（此列表以逗号分隔）；否则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>This method returns <ph id="ph1">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">此方法返回<ph id="ph1">`null`</ph>在以下情况： 1) 如果找不到指定的键;和 2） 如果找到指定的键，其关联的值为<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>This method does not distinguish between the two cases.</source>
          <target state="translated">此方法不区分两种情况。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values associated with the specified key.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>与指定键关联的值的数量。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>The zero-based index of the key to get from the collection.</source>
          <target state="translated">要从集合中获取的从零开始的键索引。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>Gets the key at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 的指定索引处的键。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the key at the specified index of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，则为一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定索引处的键；否则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 超出了集合的有效索引范围。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Gets the values of a specified entry in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定项的值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>The zero-based index of the entry that contains the values to get from the collection.</source>
          <target state="translated">项的从零开始的索引，该项包含要从集合中获取的值。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>Gets the values at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定索引处的值。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the values at the specified index of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，则为一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 数组，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定索引处的值；否则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values at the specified index.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>的指定索引处的值的数量。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 超出了集合的有效索引范围。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry that contains the values to get.</source>
          <target state="translated">项的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 键，该项包含要获取的值。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">键可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>Gets the values associated with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取与 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的指定键关联的值。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the values associated with the specified key from the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，则为一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 数组，包含与 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的指定键关联的值；否则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>This method returns <ph id="ph1">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">此方法返回<ph id="ph1">`null`</ph>在以下情况： 1) 如果找不到指定的键;和 2） 如果找到指定的键，其关联的值为<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>This method does not distinguish between the two cases.</source>
          <target state="translated">此方法不区分两种情况。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values associated with the specified key.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>与指定键关联的值的数量。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> contains keys that are not <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 是否包含非 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 的键。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> contains keys that are not <ph id="ph3">&lt;see langword="null" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 包含非 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 的键，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.HasKeys">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>Resets the cached arrays of the collection to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">将集合的缓存数组重置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>The arrays returned by <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph> are cached for better performance and are automatically refreshed when the collection changes.</source>
          <target state="translated">返回的数组<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A&gt;</ph>被缓存以提高性能，但当集合更改将自动刷新。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>A derived class can invalidate the cached version by calling <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>, thereby forcing the arrays to be recreated.</source>
          <target state="translated">派生的类可以使缓存的版本失效通过调用<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A&gt;</ph>，从而强制阵列可以重新创建。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.NameValueCollection">
          <source>Gets or sets the specified entry of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中的指定项。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>The zero-based index of the entry to locate in the collection.</source>
          <target state="translated">要在集合中定位的项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>Gets the entry at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中指定索引处的项。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the comma-separated list of values at the specified index of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 包含集合中指定索引处的值的列表（此列表以逗号分隔）。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">可以使用下面的语法通过此属性访问集合中的特定元素：<ph id="ph1">`myCollection[index]`</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>This property cannot be set.</source>
          <target state="translated">无法设置此属性。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>To set the value at a specified index, use <ph id="ph1">`Item[GetKey(index)]`</ph>.</source>
          <target state="translated">若要设置指定索引处的值，使用<ph id="ph1">`Item[GetKey(index)]`</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 语言使用关键字进行定义而不是实现索引器<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 将 <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> 实现为默认属性，该属性提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source>Retrieving the values at the specified index is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values.</source>
          <target state="translated">检索指定索引处的值是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>值的数量。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the valid range of indexes for the collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 超出了集合的有效索引范围。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to locate.</source>
          <target state="translated">要定位的项的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 键。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">键可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>Gets or sets the entry with the specified key in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中具有指定键的项。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the comma-separated list of values associated with the specified key, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到了，则为一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，它包含与指定键关联的值的列表（用逗号分隔）；否则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[name]`</ph>.</source>
          <target state="translated">可以使用下面的语法通过此属性访问集合中的特定元素：<ph id="ph1">`myCollection[name]`</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value.</source>
          <target state="translated">如果集合中已存在指定的键，设置此属性将使用指定的值覆盖现有值的列表。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>To append the new value to the existing list of values, use the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">若要将新值追加到现有的值列表，请使用<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>If the specified key does not exist in the collection, setting this property creates a new entry using the specified key and the specified value.</source>
          <target state="translated">如果集合中不存在指定的键，设置此属性创建一个使用指定的键与指定的值的新条目。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>This property returns <ph id="ph1">`null`</ph> in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">此属性返回<ph id="ph1">`null`</ph>在以下情况： 1) 如果找不到指定的键;和 2） 如果找到指定的键，其关联的值为<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>This property does not distinguish between the two cases.</source>
          <target state="translated">此属性不区分两种情况。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 语言使用关键字进行定义而不是实现索引器<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 将 <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Item%2A&gt;</ph> 实现为默认属性，该属性提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>Retrieving or setting the values associated with the specified key is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of values.</source>
          <target state="translated">检索或设置与指定键关联的值是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>值的数量。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
          <source>The collection is read-only and the operation attempts to modify the collection.</source>
          <target state="translated">该集合是只读的，但此操作尝试修改该集合。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to remove.</source>
          <target state="translated">要移除的项的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 键。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">键可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>Removes the entries with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /&gt;</ph> 实例中具有指定键的项。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> remains unchanged.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>不具有指定键，包含的元素<ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>保持不变。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>No exception is thrown.</source>
          <target state="translated">不引发异常。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
          <source>The collection is read-only.</source>
          <target state="translated">该集合是只读的。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> key of the entry to add the new value to.</source>
          <target state="translated">要向其添加新值的项的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 键。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The key can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">键可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the new value to add to the specified entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，表示要添加到指定项的新值。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>Sets the value of an entry in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 中某个项的值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value.</source>
          <target state="translated">如果集合中已存在指定的键，此方法将使用指定的值覆盖现有值的列表。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>To append the new value to the existing list of values, use the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">若要将新值追加到现有的值列表，请使用<ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>If the specified key does not exist in the collection, this method creates a new entry using the specified key and the specified value.</source>
          <target state="translated">如果集合中不存在指定的键，此方法将创建一个使用指定的键与指定的值的新条目。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
          <source>The collection is read-only.</source>
          <target state="translated">该集合是只读的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>