<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ListDictionary.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523c2e1a062c542dcec2f01cef58c885f0f0732b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23c2e1a062c542dcec2f01cef58c885f0f0732b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Implements <ph id="ph1">&lt;see langword="IDictionary" /&gt;</ph> using a singly linked list.</source>
          <target state="translated">使用单向链接列表实现 <ph id="ph1">&lt;see langword="IDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Recommended for collections that typically include fewer than 10 items.</source>
          <target state="translated">对于通常包含少于 10 项的集合，建议使用该实现方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This is a simple implementation of <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> using a singly linked list.</source>
          <target state="translated">这是一个简单的实现<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>使用单向链表。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>It is smaller and faster than a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> if the number of elements is 10 or less.</source>
          <target state="translated">很小，并且比快<ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>如果的元素数为 10 或更小。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This should not be used if performance is important for large numbers of elements.</source>
          <target state="translated">此值不应如果性能很重要为大量元素使用。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Items in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> are not in any guaranteed order; code should not depend on the current order.</source>
          <target state="translated">中的项<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>不在任何保证顺序; 代码不应依赖于当前的顺序。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> is implemented for fast keyed retrieval; the actual internal order of items is implementation-dependent and could change in future versions of the product.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>为实现快速键控检索; 项内部的实际顺序取决于实现，并且无法更改在将来版本的产品。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Members, such as <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Remove%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> are O(<ph id="ph5">`n`</ph>) operations, where <ph id="ph6">`n`</ph> is <ph id="ph7">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">成员，如<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Remove%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph>是 O (<ph id="ph5">`n`</ph>) 操作，其中<ph id="ph6">`n`</ph>是<ph id="ph7">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但值可以。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 返回集合中的元素的类型的对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">由于每个元素的<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>是一个键/值对，元素类型不是键的类型或值的类型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">相反，元素类型是<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>语句是枚举数，仅允许从，不写入集合读取周围的包装器。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示几个属性和方法的<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">公共静态 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph>在 Visual Basic 中) 的此类型的成员都是线程安全。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">但不保证所有实例成员都是线程安全的。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">此实现不提供同步 （线程安全） 包装器<ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>，但是，派生的类可以创建他们自己的同步的版本<ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>使用<ph id="ph3">&lt;see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the default comparer.</source>
          <target state="translated">使用默认比较器创建空白 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> must be unique.</source>
          <target state="translated">中的所有键<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>必须是唯一的。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The default comparer is the key's implementation of <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">默认比较器是密钥的实现<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示几个属性和方法的<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph>，用于确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer, which is each key's implementation of <ph id="ph2">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>，使用默认比较器，该比较器是每一个键的 <ph id="ph2">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the specified comparer.</source>
          <target state="translated">使用指定比较器创建空白 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比较器确定两个键是否相等。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> must be unique.</source>
          <target state="translated">中的所有键<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>必须是唯一的。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The default comparer is the key's implementation of <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">默认比较器是密钥的实现<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</source>
          <target state="translated">自定义比较器使这种情况下为执行使用不区分大小写的字符串的查找。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The key of the entry to add.</source>
          <target state="translated">要添加的条目的键。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The value of the entry to add.</source>
          <target state="translated">要添加的条目的值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>Adds an entry with the specified key and value into the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">将带有指定键和值的条目添加到 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">具有其状态和其哈希代码值之间没有关联的对象通常不应作为键。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>For example, String objects are better than StringBuilder objects for use as keys.</source>
          <target state="translated">例如，字符串对象作为键要优于使用 StringBuilder 对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>中不存在要添加新元素的键的值设置属性<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; 例如， <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>，则设置<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>属性将会覆盖旧值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">与此相反，<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>方法不会修改现有元素。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例将添加到和从其中移除元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>An entry with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">带有相同键的项已经存在于 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>Removes all entries from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中移除所有项。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph> 是设置为零，并且集合的元素对其他对象的引用也被释放。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例将添加到和从其中移除元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中定位的键。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> contains a specific key.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 是否包含特定键。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> contains an entry with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 包含具有指定键的项，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`key`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`key`</ph>以确定是否<ph id="ph4">`item`</ph>存在。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>参数的集合中的对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>The following code example searches for an element in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码中的某个元素的示例搜索<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，它是从 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 复制的 <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 对象的目标位置。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> entries to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> instance at the specified index.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 项复制到位于指定索引处的一维 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 实例中。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">元素被复制到<ph id="ph1">&lt;xref:System.Array&gt;</ph>枚举数循环访问的相同顺序<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>To copy only the keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, use <ph id="ph2">`ListDictionary.Keys.CopyTo`</ph>.</source>
          <target state="translated">若要复制仅在密钥<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>，使用<ph id="ph2">`ListDictionary.Keys.CopyTo`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>To copy only the values in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, use <ph id="ph2">`ListDictionary.Values.CopyTo`</ph>.</source>
          <target state="translated">若要仅中的值复制<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>，使用<ph id="ph2">`ListDictionary.Values.CopyTo`</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The following code example copies the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> to an array.</source>
          <target state="translated">下面的代码示例中的元素复制<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>到一个数组。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中的元素个数大于从 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目标 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 末尾之间的可用空间。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">无法自动将源 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 的类型转换为目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">获取包含在 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中的键/值对的数目。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">包含在 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中的键/值对的数目。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例枚举中的元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">返回循环访问 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 语言的 <ph id="ph1">`foreach`</ph> 语句（在 Visual Basic 中为 <ph id="ph2">`for each`</ph>）隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建议使用 <ph id="ph1">`foreach`</ph>，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中第一个元素的前面。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也会将枚举器放回此位置。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在此位置上，未定义 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在读取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必须调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 将枚举器向前移动到集合的第一个元素。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">在调用 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 之前，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 返回同一对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 将 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为下一个元素。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>还返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最后一次调用到<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是不确定的。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次将 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为集合的第一个元素，可以调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 并接着调用 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例枚举中的元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 是否具有固定大小。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">此属性始终返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 实现<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A&gt;</ph>属性因为它必需的<ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 是否为只读。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">此属性始终返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 实现<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A&gt;</ph>属性因为它必需的<ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">在创建只读集合后，该集合不允许添加、移除或修改元素。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 是否是同步的（线程安全）。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">此属性始终返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 实现<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A&gt;</ph>属性因为它必需的<ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">派生的类可以提供的同步的版本<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>使用<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>在整个枚举期间。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The key whose value to get or set.</source>
          <target state="translated">要获取或设置其值的键。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">获取或设置与指定的键关联的值。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The value associated with the specified key.</source>
          <target state="translated">与指定的键相关联的值。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>If the specified key is not found, attempting to get it returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>, and attempting to set it creates a new entry using the specified key.</source>
          <target state="translated">如果未找到指定的键，尝试获取它将返回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，尝试设置它将使用指定的键创建新项。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">可以使用下面的语法通过此属性访问集合中的特定元素：<ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>中不存在要添加新元素的键的值设置属性<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; 例如， <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>，则设置<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>属性将会覆盖旧值。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">与此相反，<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>方法不会修改现有元素。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但值可以。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> method to determine if the key exists in the list.</source>
          <target state="translated">来区分<ph id="ph1">`null`</ph>返回因为找不到指定的键和<ph id="ph2">`null`</ph>返回指定键的值是因为<ph id="ph3">`null`</ph>，使用<ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph>方法来确定在列表中是否存在的项。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 语言使用关键字进行定义而不是实现索引器<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 将 <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> 实现为默认属性，该属性提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例枚举中的元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">获取包含 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的键的 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的键的 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Values%2A&gt;</ph> method.</source>
          <target state="translated">中的值的顺序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>未指定，但它是中的关联值顺序相同<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>返回<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Values%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>不是静态的副本; 相反，<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>引用回原始中的键<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">因此，更改为<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>继续才会反映在<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例枚举中的元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>The key of the entry to remove.</source>
          <target state="translated">要移除的条目的键。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中移除带有指定键的项。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> remains unchanged.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>不具有指定键，包含的元素<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>保持不变。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">不引发异常。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例将添加到和从其中移除元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">获取可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">派生的类可以提供自己的同步的版本<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>使用<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">同步代码必须在执行操作<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>，而不是直接在<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这样可确保对从其他对象派生的集合正确地执行操作。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object.</source>
          <target state="translated">具体地说，这样可保持正确的同步，与可能同时对修改其他线程<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph>在整个枚举期间。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">返回循环访问 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 语言的 <ph id="ph1">`foreach`</ph> 语句（在 Visual Basic 中为 <ph id="ph2">`for each`</ph>）隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建议使用 <ph id="ph1">`foreach`</ph>，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中第一个元素的前面。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也会将枚举器放回此位置。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">在此位置，调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在读取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必须调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 将枚举器向前移动到集合的第一个元素。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">在调用 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 之前，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 返回同一对象。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 将 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为下一个元素。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>还返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">如果最后一次调用到<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph2">`false`</ph>，则调用<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次将 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为集合的第一个元素，可以调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 并接着调用 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复失效，并且下次调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>引发<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>返回到，设置的元素，即使枚举数已经无效。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例枚举中的元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，它包含 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中的值。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，它包含 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> 中的值。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Keys%2A&gt;</ph> method.</source>
          <target state="translated">中的值的顺序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>未指定，但它是中的关联键顺序相同<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>返回<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Keys%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>不是静态的副本; 相反，<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>引用回原来的值<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">因此，更改为<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>继续才会反映在<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">下面的代码示例枚举中的元素<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>