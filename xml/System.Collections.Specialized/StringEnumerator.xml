<Type Name="StringEnumerator" FullName="System.Collections.Specialized.StringEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c041a8b7314667b2cd66b4388f0771909ef8bb23" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37700208" /></Metadata><TypeSignature Language="C#" Value="public class StringEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringEnumerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.StringEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringEnumerator" />
  <TypeSignature Language="F#" Value="type StringEnumerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="84a25-101">支持对 <see cref="T:System.Collections.Specialized.StringCollection" /> 执行简单迭代。</span><span class="sxs-lookup"><span data-stu-id="84a25-101">Supports a simple iteration over a <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84a25-102">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="84a25-102">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="84a25-103">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="84a25-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="84a25-104">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="84a25-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="84a25-105">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="84a25-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="84a25-106"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="84a25-106"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="84a25-107">在此位置，调用<xref:System.Collections.Specialized.StringEnumerator.Current%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="84a25-107">At this position, calling <xref:System.Collections.Specialized.StringEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="84a25-108">因此，在读取 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="84a25-108">Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="84a25-109">在调用 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 或 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 之前，<xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="84a25-109"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="84a25-110"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 将 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="84a25-110"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="84a25-111">如果<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="84a25-111">If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="84a25-112">当枚举数位于此位置上，对后续调用<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="84a25-112">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="84a25-113">如果最后一次调用到<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>返回`false`，则调用<xref:System.Collections.Specialized.StringEnumerator.Current%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="84a25-113">If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.Specialized.StringEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="84a25-114">若要再次将 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="84a25-114">To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="84a25-115">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="84a25-115">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="84a25-116">如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>或<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="84a25-116">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="84a25-117">如果集合修改之间<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>并<xref:System.Collections.Specialized.StringEnumerator.Current%2A>，<xref:System.Collections.Specialized.StringEnumerator.Current%2A>返回设置为时，该元素，即使该枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="84a25-117">If the collection is modified between <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> and <xref:System.Collections.Specialized.StringEnumerator.Current%2A>, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="84a25-118">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="84a25-118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="84a25-119">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="84a25-119">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="84a25-120">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="84a25-120">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84a25-121">下面的代码示例演示了几个属性和方法的<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="84a25-121">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="84a25-122">公共静态 (<see langword="Shared" />在 Visual Basic 中) 的此类型的成员是线程安全。</span><span class="sxs-lookup"><span data-stu-id="84a25-122">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="84a25-123">但不保证所有实例成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="84a25-123">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="84a25-124">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="84a25-124">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="84a25-125">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="84a25-125">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="84a25-126">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="84a25-126">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Specialized.StringCollection" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public string Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Current { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : string" Usage="System.Collections.Specialized.StringEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84a25-127">获取集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="84a25-127">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="84a25-128">集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="84a25-128">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84a25-129">创建一个枚举器或<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>调用时，<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>必须调用以枚举器前进到集合，然后再读取的值的第一个元素<xref:System.Collections.Specialized.StringEnumerator.Current%2A>; 否则为<xref:System.Collections.Specialized.StringEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="84a25-129">After an enumerator is created or after a <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>; otherwise, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="84a25-130"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> 此外会引发异常，如果最后一次调用到<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>返回`false`，指示集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="84a25-130"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="84a25-131"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> 不会移动位置的枚举器，并对连续调用<xref:System.Collections.Specialized.StringEnumerator.Current%2A>直到返回同一对象<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>或<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="84a25-131"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Specialized.StringEnumerator.Current%2A> return the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="84a25-132">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="84a25-132">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="84a25-133">如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="84a25-133">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="84a25-134">如果集合修改之间<xref:System.Collections.IEnumerator.MoveNext%2A>并<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>返回设置为时，该元素，即使该枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="84a25-134">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84a25-135">下面的代码示例演示了几个属性和方法的<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="84a25-135">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84a25-136">枚举器位于集合中第一个元素之前或最后一个元素之后。</span><span class="sxs-lookup"><span data-stu-id="84a25-136">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="stringEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84a25-137">将枚举数推进到集合的下一个元素。</span><span class="sxs-lookup"><span data-stu-id="84a25-137">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="84a25-138">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="84a25-138"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84a25-139">创建一个枚举器或<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>是调用，枚举数定位在集合中，并在首次调用的第一个元素之前<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>移到第一个元素的集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="84a25-139">After an enumerator is created or after a <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called, an enumerator is positioned before the first element of the collection, and the first call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> moves the enumerator over the first element of the collection.</span></span>  
  
 <span data-ttu-id="84a25-140">如果<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="84a25-140">If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="84a25-141">当枚举数位于此位置上，对后续调用<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>也会返回`false`直到<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="84a25-141">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false` until <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="84a25-142">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="84a25-142">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="84a25-143">如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="84a25-143">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="84a25-144">如果集合修改之间<xref:System.Collections.IEnumerator.MoveNext%2A>并<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>返回设置为时，该元素，即使该枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="84a25-144">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84a25-145">下面的代码示例演示了几个属性和方法的<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="84a25-145">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84a25-146">集合在枚举器创建后被修改。</span><span class="sxs-lookup"><span data-stu-id="84a25-146">The collection was modified after the enumerator was created.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringEnumerator.Current" />
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stringEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84a25-147">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="84a25-147">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84a25-148"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 将枚举数移到集合，第一个元素之前的元素的开头。</span><span class="sxs-lookup"><span data-stu-id="84a25-148"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> moves the enumerator to the beginning of the collection, before the first element.</span></span> <span data-ttu-id="84a25-149">之后<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>，<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>必须调用以枚举器前进到集合，然后再读取的值的第一个元素<xref:System.Collections.Specialized.StringEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="84a25-149">After <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84a25-150">下面的代码示例演示了几个属性和方法的<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="84a25-150">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84a25-151">集合在枚举器创建后被修改。</span><span class="sxs-lookup"><span data-stu-id="84a25-151">The collection was modified after the enumerator was created.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.Specialized.StringEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>